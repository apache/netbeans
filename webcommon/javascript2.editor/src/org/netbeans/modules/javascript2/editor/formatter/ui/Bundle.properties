# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

LBL_TabsAndIndents=Tabs and Indents
FmtTabsIndents.AccessibleContext.accessibleName=Tabs and Indentation Form
FmtTabsIndents.AccessibleContext.accessibleDescription=Choose your indentation formatting options

FmtTabsIndents.initialIndentLabel.text=I&nitial Indentation:
FmtTabsIndents.initialIndentLabel.AccessibleContext.accessibleName=Initial Indentation
FmtTabsIndents.initialIndentLabel.AccessibleContext.accessibleDescription=Initial indentation
FmtTabsIndents.initialIndentSizeField.AccessibleContext.accessibleName=Initial indentation number
FmtTabsIndents.initialIndentSizeField.AccessibleContext.accessibleDescription=Initial indentation number

LBL_ContinuationIndentSize=Continu&ation Indentation:
FmtTabsIndents.continuationIndentSizeLabel.AccessibleContext.accessibleName=Continuation Indentation
FmtTabsIndents.continuationIndentSizeLabel.AccessibleContext.accessibleDescription=Continuation Indentation
FmtTabsIndents.continuationIndentSizeField.AccessibleContext.accessibleName=Continuation Indentation Size
FmtTabsIndents.continuationIndentSizeField.AccessibleContext.accessibleDescription=Continuation Indentation Size

LBL_Spaces=Spaces
FmtSpaces.cfgTree.AccessibleContext.accessibleName=JavaScript Formatting Options Panel for Spaces Placement
FmtSpaces.cfgTree.AccessibleContext.accessibleDescription=JavaScript Formatting Options Panel for Spaces Placement
FmtSpaces.jScrollPane1.AccessibleContext.accessibleName=Spaces formatting panel
FmtSpaces.jScrollPane1.AccessibleContext.accessibleDescription=Choose your formatting spaces panel
FmtSpaces.AccessibleContext.accessibleName=Spaces formatting form
FmtSpaces.AccessibleContext.accessibleDescription=Choose your spaces formatting

LBL_BeforeKeywords=Before Keywords
LBL_spaceBeforeWhile="while"
LBL_spaceBeforeElse="else"
LBL_spaceBeforeCatch="catch"
LBL_spaceBeforeFinally="finally"

LBL_BeforeParentheses=Before Parentheses
LBL_spaceBeforeAnonMethodDeclParen=Anonymous Function Declaration
LBL_spaceBeforeMethodDeclParen=Function Declaration
LBL_spaceBeforeMethodCallParen=Function Call
LBL_spaceBeforeIfParen="if"
LBL_spaceBeforeForParen="for"
LBL_spaceBeforeWhileParen="while"
LBL_spaceBeforeCatchParen="catch"
LBL_spaceBeforeSwitchParen="switch"
LBL_spaceBeforeWithParen="with"

LBL_AroundOperators=Around Operators
LBL_spaceAroundUnaryOps=Unary Operators
LBL_spaceAroundBinaryOps=Binary Operators
LBL_spaceAroundTernaryOps=Ternary Operators
LBL_spaceAroundAssignOps=Assignment Operators
LBL_spaceAroundArrowOps=Arrow Operator
LBL_spaceAroundKeyValueOps=Key => Value Operator
LBL_spaceAroundObjectOps=Object Operator
LBL_spaceAroundStringConcatOps=String Concatenation Operator

LBL_BeforeLeftBraces=Before Left Braces
LBL_spaceBeforeClassDeclLeftBrace=Class Declaration
LBL_spaceBeforeMethodDeclLeftBrace=Function Declaration
LBL_spaceBeforeIfLeftBrace="if"
LBL_spaceBeforeElseLeftBrace="else"
LBL_spaceBeforeWhileLeftBrace="while"
LBL_spaceBeforeForLeftBrace="for"
LBL_spaceBeforeDoLeftBrace="do"
LBL_spaceBeforeSwitchLeftBrace="switch"
LBL_spaceBeforeTryLeftBrace="try"
LBL_spaceBeforeCatchLeftBrace="catch"
LBL_spaceBeforeFinallyLeftBrace="finally"
LBL_spaceBeforeWithLeftBrace="with"
LBL_spaceBeforeSynchronizedLeftBrace="synchronized"
LBL_spaceBeforeStaticInitLeftBrace=Static Initializer
LBL_spaceBeforeArrayInitLeftBrace=Array Initializer

LBL_WithinParentheses=Within Parentheses
LBL_spaceWithinParens=Parentheses
LBL_spaceWithinMethodDeclParens=Function Declaration
LBL_spaceWithinMethodCallParens=Function Call
LBL_spaceWithinIfParens="if"
LBL_spaceWithinForParens="for"
LBL_spaceWithinWhileParens="while"
LBL_spaceWithinSwitchParens="switch"
LBL_spaceWithinCatchParens="catch"
LBL_spaceWithinWithParens="with"
LBL_spaceWithinSynchronizedParens="synchronized"
LBL_spaceWithinTypeCastParens=Type Cast
LBL_spaceWithinArrayDeclParens=Array Declaration
LBL_spaceWithinAnnotationParens=Annotation
LBL_spaceWithinBraces=Braces
LBL_spaceWithinArrayBrackets=Array Initializer Brackets

LBL_Other=Other
LBL_spaceBeforeComma=Before Comma
LBL_spaceAfterComma=After Comma
LBL_spaceBeforeSemi=Before Semicolon
LBL_spaceAfterSemi=After Semicolon
LBL_spaceBeforeColon=Before Colon
LBL_spaceAfterColon=After Colon

LBL_Wrapping=Wrapping
LBL_wrp_statement=&Statements\:
LBL_wrp_extendsImplementsList=&Variables\:
LBL_wrp_methodParameters=Function &Parameters\:
LBL_wrp_throwsKeyword=&Throws Keyword\:
LBL_wrp_throwsList=Th&rows List\:
LBL_wrp_methodCallArgs=&Function Call Arguments\:
LBL_wrp_annotationArgs=Annotation Arg&uments\:
LBL_wrp_chainedMethodCalls=C&hained Function Calls\:
LBL_wrp_arrayInit=Array Initiali&zer\:
LBL_wrp_for=&For\:
LBL_wrp_forStatement=F&or Statement\:
LBL_wrp_ifStatement=&If Statement\:
LBL_wrp_whileStatement=&While Statement\:
LBL_wrp_doWhileStatement=&Do ... While Statement:
LBL_wrp_withStatement=Wi&th Statement:
LBL_wrp_assert=&Assert\:
LBL_wrp_enumConstants=Enum C&onstants\:
LBL_wrp_annotations=
LBL_wrp_binaryOps=&Binary Operators\:
LBL_wrp_ternaryOps=Ternar&y Operators\:
LBL_wrp_assignOps=Assi&gnment Operators\:
LBL_wrp_objects=Ob&jects\:

FmtWrapping.methodParamsLabel.AccessibleContext.accessibleName=Function Parameters
FmtWrapping.methodCallArgsLabel.AccessibleContext.accessibleName=Function Call Arguments
FmtWrapping.chainedMethodCallsLabel.AccessibleContext.accessibleName=Chained Function Calls
FmtWrapping.arrayInitLabel.AccessibleContext.accessibleName=Array Initializer
FmtWrapping.forLabel.AccessibleContext.accessibleName=For
FmtWrapping.forStatementLabel.AccessibleContext.accessibleName=For Statement
FmtWrapping.ifStatementLabel.AccessibleContext.accessibleName=If Statement
FmtWrapping.whileStatementLabel.AccessibleContext.accessibleName=While Statement
FmtWrapping.doWhileStatementLabel.AccessibleContext.accessibleName=Do ... While Statement
FmtWrapping.binaryOpsLabel.AccessibleContext.accessibleName=Binary Operators
FmtWrapping.ternaryOpsLabel.AccessibleContext.accessibleName=Ternary Operators
FmtWrapping.assignOpsLabel.AccessibleContext.accessibleName=Assignment Operators
FmtWrapping.AccessibleContext.accessibleName=JavaScript Formatting Wrapping Options
FmtWrapping.assignOpsCombo.AccessibleContext.accessibleDescription=select box
FmtWrapping.assignOpsCombo.AccessibleContext.accessibleName=statements on the same line
FmtWrapping.chainedMethodCallsCombo.AccessibleContext.accessibleDescription=chained function call select box
FmtWrapping.chainedMethodCallsCombo.AccessibleContext.accessibleName=chained function calls selectbox
FmtWrapping.assignOpsLabel.AccessibleContext.accessibleDescription=Assignment operators
FmtWrapping.chainedMethodCallsLabel.AccessibleContext.accessibleDescription=Chained function calls
FmtWrapping.methodCallArgsCombo.AccessibleContext.accessibleDescription=function call arguments select box
FmtWrapping.methodCallArgsCombo.AccessibleContext.accessibleName=function call arguments select box
FmtWrapping.methodCallArgsLabel.AccessibleContext.accessibleDescription=function call arguments
FmtWrapping.methodParamsCombo.AccessibleContext.accessibleDescription=function parameters select box
FmtWrapping.methodParamsCombo.AccessibleContext.accessibleName=function parameters select box
FmtWrapping.methodParamsLabel.AccessibleContext.accessibleDescription=function parameters
FmtWrapping.doWhileStatementLabel.AccessibleContext.accessibleDescription=Do - while statement
FmtWrapping.doWhileStatementCombo.AccessibleContext.accessibleDescription=select box
FmtWrapping.doWhileStatementCombo.AccessibleContext.accessibleName=statements on the same line select box
FmtWrapping.ternaryOpsLabel.AccessibleContext.accessibleDescription=Ternary operators
FmtWrapping.ternaryOpsCombo.AccessibleContext.accessibleDescription=ternary operators select box
FmtWrapping.ternaryOpsCombo.AccessibleContext.accessibleName=ternary operators select box
FmtWrapping.binaryOpsLabel.AccessibleContext.accessibleDescription=binary operators
FmtWrapping.binaryOpsCombo.AccessibleContext.accessibleDescription=binary operators select box
FmtWrapping.binaryOpsCombo.AccessibleContext.accessibleName=binary operators select box
FmtWrapping.AccessibleContext.accessibleDescription=wrapping options panel
FmtWrapping.scrollPane.AccessibleContext.accessibleName=wrapping options panel
FmtWrapping.panel1.AccessibleContext.accessibleName=wrapping options panel
FmtWrapping.whileStatementComboBox.AccessibleContext.accessibleName=While statement combo box
FmtWrapping.scrollPane.AccessibleContext.accessibleDescription=wrapping panel
FmtWrapping.panel1.AccessibleContext.accessibleDescription=wrapping options panel
FmtWrapping.whileStatementComboBox.AccessibleContext.accessibleDescription=While statements combo box
FmtWrapping.ifStatementLabel.AccessibleContext.accessibleDescription=If statement
FmtWrapping.forStatementCombo.AccessibleContext.accessibleDescription=For statement
FmtWrapping.forStatementCombo.AccessibleContext.accessibleName=For statement
FmtWrapping.whileStatementLabel.AccessibleContext.accessibleDescription=While statement
FmtWrapping.ifStatementCombo.AccessibleContext.accessibleDescription=If statement
FmtWrapping.ifStatementCombo.AccessibleContext.accessibleName=If statement combo box
FmtWrapping.arrayInitCombo.AccessibleContext.accessibleDescription=array initializer combo box
FmtWrapping.arrayInitCombo.AccessibleContext.accessibleName=array initializer combo box
FmtWrapping.forLabel.AccessibleContext.accessibleDescription=for
FmtWrapping.forCombo.AccessibleContext.accessibleName=For combo box
FmtWrapping.forCombo.AccessibleContext.accessibleDescription=For combo box
FmtWrapping.forStatementLabel.AccessibleContext.accessibleDescription=For statement label
FmtWrapping.arrayInitLabel.AccessibleContext.accessibleDescription=array intitializer

FmtWrapping.variablesCombo.AccessibleContext.accessibleDescription=variables select box
FmtWrapping.variablesCombo.AccessibleContext.accessibleName=variables select box
FmtWrapping.variablesLabel.AccessibleContext.accessibleDescription=variables
FmtWrapping.variablesLabel.AccessibleContext.accessibleName=Variables
FmtWrapping.withLabel.AccessibleContext.accessibleDescription=With statement
FmtWrapping.withLabel.AccessibleContext.accessibleName=With statement
FmtWrapping.withStatementCombo.AccessibleContext.accessibleDescription=With statement select box
FmtWrapping.withStatementCombo.AccessibleContext.accessibleName=With statement select box
FmtWrapping.afterBinaryOpsCheckBox.text=Wrap After Binary Operators
FmtWrapping.afterBinaryOpsCheckBox.AccessibleContext.accessibleDescription=wrap after binary operators check box
FmtWrapping.afterBinaryOpsCheckBox.AccessibleContext.accessibleName=wrap after binary operators check box
FmtWrapping.afterTernaryOpsCheckBox.text=Wrap After Ternary Operators
FmtWrapping.afterTernaryOpsCheckBox.AccessibleContext.accessibleDescription=wrap after ternary operators check box
FmtWrapping.afterTernaryOpsCheckBox.AccessibleContext.accessibleName=wrap after ternary operators check box
FmtWrapping.afterDotCheckBox.text=Wrap After Dot In Chained Function Call
FmtWrapping.afterDotCheckBox.AccessibleContext.accessibleDescription=wrap after dot in chained function call check box
FmtWrapping.afterDotCheckBox.AccessibleContext.accessibleName=wrap after dot in chained function call check box
FmtWrapping.objectsLabel.AccessibleContext.accessibleDescription=Objects
FmtWrapping.objectsLabel.AccessibleContext.accessibleName=Objects
FmtWrapping.objectsCombo.AccessibleContext.accessibleDescription=objects select box
FmtWrapping.objectsCombo.AccessibleContext.accessibleName=objects select box
FmtWrapping.propertiesLabel.text=Object Prope&rties:
FmtWrapping.propertiesLabel.AccessibleContext.accessibleDescription=Object Properties
FmtWrapping.propertiesLabel.AccessibleContext.accessibleName=Object Properties
FmtWrapping.propertiesCombo.AccessibleContext.accessibleDescription=object properties select box
FmtWrapping.propertiesCombo.AccessibleContext.accessibleName=object properties select box
FmtWrapping.arrayInitItemsLabel.text=Array Ini&tializer Items:
FmtWrapping.arrayInitItemsLabel.AccessibleContext.accessibleName=Array Initializer Items
FmtWrapping.arrayInitItemsLabel.AccessibleContext.accessibleDescription=array intitializer items
FmtWrapping.arrayInitItemsCombo.AccessibleContext.accessibleDescription=array initializer items combo box
FmtWrapping.arrayInitItemsCombo.AccessibleContext.accessibleName=array initializer items combo box

LBL_Braces=Braces
LBL_bp_bracesPlacement=Braces Placement:
LBL_bp_ClassDecl=Function &Declaration:
LBL_bp_If="&if", "else", "else if":
LBL_bp_FOR="&for":
LBL_bp_WHILE="&while", "do":
LBL_bp_SWITCH="&switch":
LBL_bp_catch="&try", "catch", "finally":
LBL_bp_With="wit&h":
FmtBraces.AccessibleContext.accessibleName=PHP Formatting Options Panel for Braces Placement
FmtBraces.AccessibleContext.accessibleDescription=PHP Formatting Options Panel for Braces Placement
FmtBraces.bracesPlacementLabel.AccessibleContext.accessibleDescription=Select one of the rules below
FmtBraces.jSeparator1.AccessibleContext.accessibleName=component separator
FmtBraces.jSeparator1.AccessibleContext.accessibleDescription=component separator
FmtBraces.ifCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.ifCombo.AccessibleContext.accessibleDescription=Conditions rules - Select Box
FmtBraces.forCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.forCombo.AccessibleContext.accessibleDescription=For, Foreach loop rules - Select Box
FmtBraces.whileCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.whileCombo.AccessibleContext.accessibleDescription=While, do loop rules - Select Box
FmtBraces.switchCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.switchCombo.AccessibleContext.accessibleDescription=Switch loop rules - Select Box
FmtBraces.catchCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.catchCombo.AccessibleContext.accessibleDescription=try, catch block rules - Select Box
FmtBraces.ifLabel.AccessibleContext.accessibleName=If, else, elseif rules
FmtBraces.ifLabel.AccessibleContext.accessibleDescription=select If, else, elseif rules
FmtBraces.catchLabel.AccessibleContext.accessibleName=Try, catch block rules
FmtBraces.catchLabel.AccessibleContext.accessibleDescription=select rule for try - catch blocks
FmtBraces.switchLabel.AccessibleContext.accessibleName=Switch block rules
FmtBraces.switchLabel.AccessibleContext.accessibleDescription=select rule for switch block
FmtBraces.whileLabel.AccessibleContext.accessibleName="While-do" rule
FmtBraces.whileLabel.AccessibleContext.accessibleDescription=Select rule for a "while-do" loop
FmtBraces.forLabel.AccessibleContext.accessibleName=for, foreach rule
FmtBraces.forLabel.AccessibleContext.accessibleDescription=select rule for for - foreach blocks
FmtBraces.bracesPlacementLabel.AccessibleContext.accessibleName=Braces Placement
FmtBraces.functionDeclLabel.AccessibleContext.accessibleDescription=Select class declaration rule
FmtBraces.functionDeclLabel.AccessibleContext.accessibleName=Class Declaration
FmtBraces.functionDeclCombo.AccessibleContext.accessibleDescription=Class declaration rules - Select Box
FmtBraces.functionDeclCombo.AccessibleContext.accessibleName="New Line", "New Line Indented", "Same Line", "Preserve Existing"
FmtBraces.objectContinuationCheckbox.text=Continuation Before Object/Array Literal

LBL_Alignment=Alignment
LBL_al_newLines=New Lines
LBL_nl_Else="&else", "else if"
LBL_nl_While="w&hile"
LBL_nl_Catch="c&atch"
LBL_nl_Finally="fina&lly"
FmtAlignment.nlElseCheckBox.AccessibleContext.accessibleName="else", "else if"
FmtAlignment.nlCatchCheckBox.AccessibleContext.accessibleName="catch"
FmtAlignment.nlWhileCheckBox.AccessibleContext.accessibleName="while"
FmtAlignment.nlFinallyCheckBox.AccessibleContext.accessibleName="finally"
FmtAlignment.newLinesLabel.AccessibleContext.accessibleName=New Lines panel
FmtAlignment.newLinesLabel.AccessibleContext.accessibleDescription=New Lines panel
FmtAlignment.nlElseCheckBox.AccessibleContext.accessibleDescription=set new lines for else and else if
FmtAlignment.nlCatchCheckBox.AccessibleContext.accessibleDescription=set new lines for catch
FmtAlignment.nlWhileCheckBox.AccessibleContext.accessibleDescription=set new lines for while
FmtAlignment.nlFinallyCheckBox.AccessibleContext.accessibleDescription=set new lines for finally
FmtAlignment.AccessibleContext.accessibleDescription=Alignments and New Lines formatting settings form
FmtAlignment.AccessibleContext.accessibleName=Alignment and new lines settings form
FmtWrapping.classesLabel.text=&Classes:
FmtWrapping.elementsLabel.text=Class &Elements:
FmtBraces.classDeclLabel.text=&Class Declaration:
FmtWrapping.classExtendsLabel.text=&Extends Keyword:
FmtWrapping.arrowOpsLabel.text=Arro&w Operator:

LBL_BlankLines=Blank Lines
FmtBlankLines.maximumLabel.text=Maximum Preserved Blank Lines
FmtBlankLines.maxClassLabel.text=In Class Declarations:
FmtBlankLines.maxObjectLabel.text=In Object Declarations:
FmtBlankLines.maxArrayLabel.text=In Array Declarations:
FmtWrapping.decoratorsLabel.text=Decorator&s:
