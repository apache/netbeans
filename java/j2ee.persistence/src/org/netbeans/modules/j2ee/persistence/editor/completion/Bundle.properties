# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

scanning-in-progress=Scanning in progress...

MSG_CannotFindClass=Cannot find class {0} for persistence member {1}

LBL_ConnectToDatabase=Connect To Database

LBL_AddConnection=Add new connection

NAMED_QUERY_TEXT=Named query with name <b>{0}</b> defined  in <b>{1}</b>:<br>{2}

######################

javax.persistence.jdbc.driver_DESC=The <code>"javax.persistence.jdbc.driver"</code> property specifies the JDBC \
DriverManager class name used for internal connection pooling when a data \
source is not being used. The value must be a string which is the \
qualified class name for a valid class that implements \
<code>java.sql.Driver</code>. \
<p>\
<b>Persistence XML example:</b> <code>\
<property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />\
</code>\
<p>\
The previous value for this property <code>"eclipselink.jdbc.driver</code> is now deprecated and should \
be replaced with this new name.

javax.persistence.transactionType_DESC=The <code>"javax.persistence.transactionType"</code> property specifies the \
transaction type for the persistence unit. This property overrides the \
value specified in the persistence.xml.\
<p>\
Values: A string value of "JTA" or "RESOURCE_LOCAL" \

javax.persistence.jtaDataSource_DESC=The <code>"javax.persistence.jtaDataSource"</code> property specifies the JTA data \
source name that will look up a valid {@link javax.sql.DataSource}. This \
property is used to override the value specified in the persistence.xml. \
<p>\
Values: A well formed JNDI resource name that can locate the data source \
in the target container or an instance of {@link javax.sql.DataSource}

javax.persistence.nonJtaDataSource_DESC=The <code>"javax.persistence.nonJtaDataSource"</code> property specifies the \
non-JTA data source name that will look up a valid \
{@link javax.sql.DataSource}. This can be used to override the value \
specified in the persistence.xml. \
<p>\
Values: A well formed JNDI resource name that can locate the data source \
in the target container or an instance of {@link javax.sql.DataSource}

javax.persistence.jdbc.url_DESC=The <code>"javax.persistence.jdbc.url"</code> property specifies the JDBC URL used \
for internal connection pooling when a data source is not being used. The \
value must be a string which represents a valid URL for the specified \
JDBC driver.\
<p>\
<b>Persistence XML example:</b> <code>\
<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost/mysql" />\
</code>\
<p>\
The previous value for this property <code>"eclipselink.jdbc.url</code> is now deprecated and should \
be replaced with this new name. \

javax.persistence.jdbc.user_DESC=The <code>"javax.persistence.jdbc.user"</code> property specifies the data source \
or JDBC user name.\
<p>\
<b>Persistence XML example:</b> <code>\
<property name="javax.persistence.jdbc.user" value="user-name" />\
</code>\
<p>\
The previous value for this property <code>"eclipselink.jdbc.user</code> is now deprecated and should \
be replaced with this new name.

javax.persistence.jdbc.password_DESC=The <code>"javax.persistence.jdbc.password"</code> property specifies the data \
source or JDBC password.\
<p>\
<b>Persistence XML example:</b> <code>\
<property name="javax.persistence.jdbc.password" value="password" />\
</code> The previous value for this \
property <code>"eclipselink.jdbc.password</code> is now deprecated and should be replaced with this new \
name.

eclipselink.jdbc.native-sql_DESC=The <code>"eclipselink.jdbc.native-sql"</code> property specifies whether \
generic SQL should be used or platform specific 'native' SQL. The \
platform specific SQL customizes join syntax, date operators, sequencing, \
...\
<p>\
Allowed Values (String): \
<ul>\
<li>"true" - use database specific SQL\
<li>"false" (DEFAULT) - use generic SQL\
</ul>

eclipselink.jdbc.sql-cast_DESC=The <code>"eclipselink.jdbc.sql-cast"</code> property specifies is \
platform specific CAST SQL operations should be used. Casting is normally \
not required, and can cause issues when used. Allowed Values (String):\
<ul>\
<li>"true" - enable platform specific cast\
<li>"false" (DEFAULT) - disable platform specific cast\
</ul>


eclipselink.connection-pool._DESC=Allow configuring a <code>"eclipselink.connection-pool."</code> properties. \
The name of the connection pool must be appended to configure the pool, \
if no name is appended the default (write) pool is configured. \
The name of the property to configure must also be appended.\
<p>\
A user defined connection pool can be configured or one of the following system pools:\
<ul>\
<li> "read" - pool used for non-transactional read queries, (defaults to default pool if not specified).\
<li> "default", "write", "" - default pool used for writing and reads if no read pool configured.\
<li> "sequence" - pool used for sequencing, (default pool/write connection used if not specified).\
</ul>\
A user defined pool is only used if specified in the EntityManager properties or ClientSession ConnectionPolicy, \
or if partitioning is used.\
<p>\
The following connection pool properties can be configured:\
<ul>\
<li> "initial" - number of initial connections.\
<li> "min" - minimum number of connections.\
<li> "max" - maximum number of connections.\
<li> "wait" - amount of time to wait for a connection from the pool.\
<li> "url" - JDBC URL for the connection.\
<li> "shared" - only for the read connection pool, shares read connections across threads.\
<li> "jtaDataSource" - JTA DataSource name to use for the connection, if different than the default.\
<li> "nonJtaDataSource" - non JTA DataSource name to use for the connection, if different than the default.\
<li> "user" - user to use for the connection, if different than the default.\
<li> "password" - password to use for the connection, if different than the default.\
</ul>\
<p>\
Example:\
<pre>\
&lt;property name="eclipselink.connection-pool.node2.min" value="16"/&gt;\
&lt;property name="eclipselink.connection-pool.node2.max" value="16"/&gt;\
&lt;property name="eclipselink.connection-pool.node2.url" value="jdbc:oracle:thin:@node2:1521:orcl"/&gt;\
</pre>

eclipselink.connection-pool.read._DESC=Allow configuring the <code>"eclipselink.connection-pool.read."</code> properties. \
The read connection pool is used for non-transaction read queries. \
By default a separate read connection pool is not used, \
and the default pool is used for read queries.\
<p>

eclipselink.connection-pool.sequence._DESC=Allow configuring the <code>"eclipselink.connection-pool.sequence."</code> properties. \
The sequence connection pool is used to allocate generated Ids. \
This is only required for TABLE sequencing. \
By default a separate sequence connection pool is not used, \
and the default pool is used for sequencing.\
<p>\
    
eclipselink.jdbc.connections.wait-timeout_DESC=The <code>"eclipselink.jdbc.connections.wait-timeout"</code> property \
which specifies the timeout time in milliseconds (ms) that will be waited \
for an available connection before an exception is thrown. Ignored in \
case external connection pools are used.\
<p>\
Default: 180000 ms (3 minutes).\
<p>\
The value specified should be a string containing a positive integer \
value. A value of 0 means wait forever.

eclipselink.jdbc.connections.max_DESC=The <code>"eclipselink.jdbc.connections.max"</code> property specifies \
the maximum number of read connection in the internal connection pool. If \
the maximum size is reached, threads requiring a connection will wait \
until one is released back to the pool. By default a single shared \
(exclusive) read/write pool is used with min/max 32 connections and 1 \
initial. Ignored in case external connection pools are used.\
<p>\
The value specified should be a string containing a positive integer \
value.

eclipselink.jdbc.connections.min_DESC=The <code>"eclipselink.jdbc.connections.min"</code> property specifies \
the minimum number of connections in EclipseLink connection pool.\
<p>\
Ignored in case external connection pools are used. Connections beyond \
the minimum will be disconnected when returned to the pool, so this \
should normally be equal to the number of active threads, or server's \
thread pool size. By default a single shared (exclusive) read/write pool \
is used with min/max 32 connections and 1 initial.\
<p>\
The value specified should be a string containing a positive integer \
value.

eclipselink.jdbc.connections.initial_DESC=The <code>"eclipselink.jdbc.connections.initial"</code> property \
EclipseLink JDBC (internal) connection pools properties. Initial number \
of connections in EclipseLink connection pool. This is the number of \
connections connected at startup. By default a single shared (exclusive) \
read/write pool is used with min/max 32 connections and 1 initial. Ignored \
in case external connection pools are used.\
<p> \
The value specified should be a string containing a positive integer\
value.

eclipselink.jdbc.write-connections.max_DESC=The <code>"eclipselink.jdbc.write-connections.max"</code> property \
specifies the maximum number of connections supported in the internal \
write connection pool. Maximum number of connections in EclipseLink write \
connection pool. If the maximum size is reached, threads requiring a \
connection will wait until one is released back to the pool. By default a \
single shared (exclusive) read/write pool is used with min/max 32 \
connections and 1 initial. Ignored in case external connection pools are \
used.\
<p>\
The value specified should be a string containing a positive integer \
value.

eclipselink.jdbc.write-connections.min_DESC=The <code>"eclipselink.jdbc.write-connections.min"</code> property \
specifies the minimum number of connections in the internal write \
connection pool. Connections beyond the minimum will be disconnected when \
returned to the pool, so this should normally be equal to the number of \
active threads, or server's thread pool size. By default a single shared \
(exclusive) read/write pool is used with min/max 32 connections and 1 \
initial. Ignored in case external connection pools are used. \
<p>\
The value specified should be a string containing a positive integer \
value.

eclipselink.jdbc.write-connections.initial_DESC=The <code>"eclipselink.jdbc.write-connections.initial"</code> property \
configures the number of connections connected at startup in \
the write connection pool. By default a single shared (exclusive) \
read/write pool is used with min/max 32 connections and 1 initial. \
<p>\
This property is ignored in case external connection pools are used.\
<p>\
The value must be a string containing a zero or greater integer value.

eclipselink.jdbc.read-connections.max_DESC=The <code>"eclipselink.jdbc.read-connections.max"</code> property \
configures the maximum number of connections in the read connection pool. \
If the maximum size is reached, threads requiring a connection will wait \
until one is released back to the pool (unless shared). By default a \
separate read connection pool is not used. By default a single shared \
(exclusive) read/write pool is used with min/max 32 connections and 1 \
initial.\
<p>\
This property is ignored in case external connection pools are used.\
<p>\
The value specified should be a string containing a zero or greater \
integer value.\

eclipselink.jdbc.read-connections.min_DESC=The <code>"eclipselink.jdbc.read-connections.min"</code> property \
configures the minimum number of connections in read connection pool. \
Connections beyond the minimum will be disconnected when returned to the \
pool, so this should normally be equal to the number of active threads, \
or server's thread pool size. By default a separate read connection pool \
is not used. By default a single shared (exclusive) read/write pool is \
used with min/max 32 connections and 1 initial.\
<p>\
This property is ignored in case external connection pools are used.\
<p>\
The value specified should be a string containing a zero or greater \
integer value.

eclipselink.jdbc.read-connections.initial_DESC=The <code>"eclipselink.jdbc.read-connections.initial"</code> property \
configures the number of connections connected at startup in \
the read connection pool. By default a single shared (exclusive) \
read/write pool is used with min/max 32 connections and 1 initial.\
<p>\
This property is ignored in case external connection pools are used.\
<p>\
The value must be a string containing a zero or greater integer value.

eclipselink.jdbc.read-connections.shared_DESC=The <code>"eclipselink.jdbc.read-connections.shared"</code> property \
configures whether connections in EclipseLink read connection pool should \
be shared (not exclusive). Connection sharing means the same JDBC \
connection will be used concurrently for multiple reading threads.\
<p> \
This property is ignored in case external connection pools are used. \
<p>\
Values (case insensitive):\
<ul>\
<li>"false" (DEFAULT): indicates read connections will not be shared\
<li>"true": indicates read connections can be shared\
</ul>

eclipselink.jdbc.sequence-connection-pool.max_DESC=The <code>"eclipselink.jdbc.sequence-connection-pool.max"</code> property \
configures the maximum number of connections in the sequence connection \
pool. If the maximum size is reached, threads requiring a connection will \
wait until one is released back to the pool.\
<p>\
By default a separate sequence connection pool is not used (the sequence \
is allocated on the write connection).\
<p>\
This property is ignored in case external connection pools are used.\
<p>\
The value must be a string containing a zero or greater integer value. \
The default value is two (2).

eclipselink.jdbc.sequence-connection-pool.min_DESC=The <code>"eclipselink.jdbc.sequence-connection-pool.min"</code> property \
configures the minimum number of connections in sequence connection pool. \
Connections beyond the minimum will be disconnected when returned to the \
pool, so this should normally be equal to the maximum to avoid \
connecting/disconnecting.\
<p>\
By default a separate sequence connection pool is not used (the sequence \
is allocated on the write connection).\
<p>\
This property is ignored in case external connection pools are used.\
<p>\
The value must be a string containing a zero or greater integer value. \
The default value is two (2).

eclipselink.jdbc.sequence-connection-pool.initial_DESC=The <code>"eclipselink.jdbc.sequence-connection-pool.initial</code> property configures the initial number of connections in \
sequence connection pool. This is the number of connections connected at \
startup. \
<p>\
By default a separate sequence connection pool is not used (the sequence \
is allocated on the write connection). \
<p> \
This property is ignored in case external connection pools are used.\
<p>\
The value must be a string containing a zero or greater integer value. \
The default value is two (2).

eclipselink.jdbc.sequence-connection-pool_DESC=The <code>"eclipselink.jdbc.sequence-connection-pool"</code> property \
configures a separate connection pool should used for sequencing to \
retrieve new value(s). This improves sequence allocation by allocating \
sequencing outside the current transaction. This can be used with \
internal or external (DataSource) connection pooling, external must \
provide a non-jta-datasource resource name using \
{@link #JDBC_SEQUENCE_CONNECTION_POOL_DATASOURCE}. A sequence connection \
pool is generally only used with using TABLE sequencing to minimize \
contention on the sequence table(s).\
<p>\
Values (case-insensitive):\
<ul>\
<li>"false" (DEFAULT):\
<li>"true":\
</ul>

eclipselink.jdbc.sequence-connection-pool.non-jta-data-source_DESC=The <code>"eclipselink.jdbc.sequence-connection-pool.non-jta-data-source</code> property configures the name of the non-JTA data source that \
will be used for sequencing calls.

eclipselink.partitioning_DESC="eclipselink.partitioning"\
<p>Used to set the default PartitioningPolicy for a persistence unit. \
A PartitioningPolicy is used to partition the data for a class across multiple difference databases \
or across a database cluster such as Oracle RAC. \
Partitioning can provide improved scalability by allowing multiple database machines to service requests. \
<p>\
If multiple partitions are used to process a single transaction, JTA should be used for proper XA transaction support.\
<p>\
The value must be set to the name of an existing defined PartitioningPolicy.

eclipselink.partitioning.callback_DESC="eclipselink.partitioning.callback"\
<p>Used to integrate with an external DataSource's data affinity support, such as UCP.\
<p>\
The value must be set to the full class name of the implementor of the DataPartitioningCallback interface. \
<p>i.e. "org.eclipse.persistence.platform.database.oracle.ucp.UCPDataPartitioningCallback".

eclipselink.jdbc.bind-parameters_DESC=Property <code>"eclipselink.jdbc.bind-parameters</code> configures whether parameter binding will be used in the \
creation of JDBC prepared statements. Usage of parameter binding is \
generally a performance optimization allowing for SQL and prepared \
statement caching as well as usage of batch writing.\
<p>\
Values:\
<ul>\
<li>"true" (DEFAULT): binding will be used\
<li>"false": values will be written literally into the generated SQL\
</ul>

eclipselink.jdbc.exclusive-connection.mode_DESC=The <code>"eclipselink.jdbc.exclusive-connection.mode"</code> property \
specifies when reads are performed through the write connection. You can \
set this property while creating either an EntityManagerFactory (either \
in the map passed to the createEntityManagerFactory method, or in the \
persistence.xml file), or an EntityManager (in the map passed to the \
createEntityManager method). Note that the latter overrides the former.\
<p> \
Values: \
<ul> \
<li>"Transactional" (DEFAULT): \
<li>"Isolated" \
<li>"Always" \
</ul>

eclipselink.jdbc.exclusive-connection.is-lazy_DESC=The <code>"eclipselink.jdbc.exclusive-connection.is-lazy"</code> property \
specifies when write connection is acquired lazily.\
<p>\
Values:\
<ul>\
<li>"false"\
<li>"true" (DEFAULT)\
</ul>

eclipselink.jdbc.cache-statements.size_DESC=The <code>"eclipselink.jdbc.cache-statements.size"</code> property \
specifies the number of statements held when using internal statement \
caching. The value must be a string value containing a positive integer \
or zero.\
<p>\
Default: "50".

eclipselink.jdbc.cache-statements_DESC=The <code>"eclipselink.jdbc.cache-statements"</code> property specifies \
whether JDBC statements should be cached. This is recommended when using \
EclipseLink's internal connection pooling.\
<p>\
Valid values:\
<ul>\
<li>true - enable internal statement caching.\
<li>false - disable internal statement caching. (DEFAULT)\
</ul>\
<p>\
Example: persistence.xml file <code>\
<property name="eclipselink.jdbc.cache-statements" value="false"/>\
</code> Example: property Map <code>\
propertiesMap.put(PersistenceUnitProperties.CACHE_STATEMENTS, "false");\
</code>

javax.persistence.validation.factory_DESC=The <code>"javax.persistence.validation.factory"</code> property \
specifies an instance of <a href =\
http://download.oracle.com/javaee/6/docs/api/javax/validation/ValidatorFactory.html>javax.validation.ValidatorFactory</a> used by \
EclipseLink to perform Automatic Validation upon Lifecycle Events. If the \
propoerty is not specified, and if Bean Validation API is visible to \
Eclipselink, it will try to instantiate an insance of \
<code>javax.validation.ValidationFactory</code> by calling \
<code>Validation.buildDefaultValidatorFactory()</code>

javax.persistence.validation.mode_DESC=The <code>"javax.persistence.validation.mode"</code> property specifies \
whether the automatic lifecycle event validation is in effect.\
<p>\
Valid values for this property are "AUTO", "CALLBACK" or "NONE".

javax.persistence.validation.group.pre-persist_DESC=The <code>"javax.persistence.validation.group.pre-persist"</code>\
property specifies the name of the validator groups to execute for \
preUpdate event. The value should be a string with fully qualified \
classnames separated by a comma (','). If this value is not specified in \
both persistence.xml or using this property, the default Bean Validation \
group (the group Default) will be validated

javax.persistence.validation.group.pre-update_DESC=The <code>"javax.persistence.validation.group.pre-update"</code> property \
specifies the name of the validator groups to execute for preUpdate \
event. The value should be a string with fully qualified classnames \
separated by a comma (','). If this value is not specified in both \
persistence.xml or using this property, the default Bean Validation group \
(the group Default) will be validated

javax.persistence.validation.group.pre-remove_DESC=The <code>"javax.persistence.validation.group.pre-remove"</code> property \
specifies the name of the validator groups to execute for preRemove \
event. The value should be a string with fully qualified classnames \
separated by a comma (','). If this value is not specified in both \
persistence.xml or using this property, no validation will occur on \
remove.

eclipselink.cache.size._DESC=Property prefix <code>"eclipselink.cache.size.</code> used to specify the cache size for a specific \
entity type. The prefix must be followed by a valid entity type name. \
<p>\
Property names formed out of these prefixes by appending either entity \
name, or class name (indicating that the property values applies only to \
a particular entity) or DEFAULT suffix (indicating that the property \
value applies to all entities). For most cache types, the size is only \
the initial size, not a fixed or maximum size. For CacheType.SoftCache \
and CacheType.HardCache the size is the sub-cache size. The default cache \
size is 100.

eclipselink.logging.logger_DESC=The type of logger. By default DefaultSessionLog is used. Valid values \
are the logger class name which implements \
org.eclipse.persistence.logging.SessionLog or one of values defined in \
LoggerType.

eclipselink.logging.level_DESC=Property <code>"eclipselink.logging.level</code> allows the default logging levels to be specified. \
<p>\
<b>Java example:</b> <code>\
props.put(PersistenceUnitProperties.LOGGING_LEVEL, SessionLog.FINE_LABEL);</br>\
<p>\
<b>XML example:</b>\
<code>\
<property name="eclipselink.logging.level" value="FINE" />;</br>\
</code>\
<p>\
<b>Logging Levels:</b>\
\
@see SessionLog#OFF_LABEL_DESC=OFF" \
@see SessionLog#SEVERE_LABEL_DESC=SEVERE" \
@see SessionLog#WARNING_LABEL_DESC=WARNING" \
@see SessionLog#CONFIG_LABEL_DESC=CONFIG" \
@see SessionLog#INFO_LABEL_DESC=INFO" (DEFAULT) \
@see SessionLog#FINE_LABEL_DESC=FINE" \
@see SessionLog#FINER_LABEL_DESC=FINER" \
@see SessionLog#FINEST_LABEL_DESC=FINEST" \
@see SessionLog#ALL_LABEL_DESC=ALL"
    
eclipselink.logging.parameters_DESC=By default sql bind paramters are displayed in exceptions and logs \
when the log level is FINE or greater. To override this behavior you \
may set this property to specify that the data should or should not be \
visible. Note: this property applies only to bind parameters. When not \
using binding, the parameters are always displayed.

eclipselink.logging.timestamp_DESC=The <code>"eclipselink.logging.timestamp"</code> property configures if \
the current timestamp should be included in each log message.\
<p>\
Values:\
<ul>\
<li>"true" (Default)\
<li>"false"\
</ul>

eclipselink.tenant-id_DESC=eThe <code>"eclipselink.tenant-id"</code> property specifies the  \
default context property used to populate multitenant entities. \
 \
NOTE: This is merely a default multitenant property than can be used on  \
its own or with other properties defined by the user. Users are not  \
obligated to use this property and are free to specify their own. \
\
@see org.eclipse.persistence.annotations.Multitenant \
@see org.eclipse.persistence.annotations.TenantDiscriminatorColumn \
\
Example: persistence.xml file <code>\
<property name="eclipselink.tenant-id" value="Oracle"/>\
</code> Example: property Map <code>\
propertiesMap.put(PersistenceUnitProperties.MULTITENANT_PROPERTY_DEFAULT, "Oracle");\
</code>

eclipselink.multitenant.tenants-share-cache_DESC=Property <code>"eclipselink.multitenant.tenants-share-cache"</code> \
specifies that multitenant entities will share the L2 cache. By default \
this property is false meaning multitenant entities will have an ISOLATED \
setting. When setting it to true a PROTECTED cache setting will be used.\
\
WARNING: Queries that use the cache may return data from other tenants \
when using the PROTECTED setting.\
\
@see eclipselink.multitenant.tenants-share-emf\
\
<p>\
<b>Java example:</b> <code>\
props.put(PersistenceUnitProperties.MULTITENANT_SHARED_CACHE, true);</br>\
<p>\
<b>XML example:</b>\
<code>\
<property name="eclipselink.multitenant.tenants-share-cache" value="true" />;</br>\
</code>
    
eclipselink.multitenant.shared-emf_DESC=Property <code>"eclipselink.multitenant.shared-emf"</code> is used to \
indicate that multitenant entities will be used within a shared entity \
manager factory. This property defaults to true (and applies to \
multitenant entities only). When setting it to false, users are required  \
to provide a unique session name. \
\
@see eclipselink.session-name \
@see eclipselink.multitenant.tenants-share-cache \
\
<p>\
<b>Java example:</b> <code>\
props.put(PersistenceUnitProperties.MULTITENANT_SHARED_EMF, true);</br>\
<p>\
<b>XML example:</b>\
<code>\
<property name="eclipselink.multitenant.tenants-share-emf" value="true" />;</br>\
</code>
    
eclipselink.logging.thread_DESC=Property <code>"eclipselink.logging.thread"</code> indicating if current \
thread should have its identity included in each log message.\
<p>\
By default ("true") the thread is logged at FINE or less level. This can \
be turned off ("false") or on ("true"). Values:\
<ul>\
<li>"true" (Default)\
<li>"false"\
</ul>

eclipselink.logging.session_DESC=Property <code>"eclipselink.logging.session"</code> indicating if the \
session in use should have its identity included in each log message.\
<p>\
Values:\
<ul>\
<li>"true" (Default)\
<li>"false"\
</ul>

eclipselink.logging.connection_DESC=Property: <code>"eclipselink.logging.connection"</code>\
<p>\
Values:\
<ul>\
<li>"true" (Default)\
<li>"false"\
</ul>

eclipselink.logging.exceptions_DESC=Values:\
<ul>\
<li>"true" (Default)\
<li>"false"\
</ul>



eclipselink.logging.file_DESC=The <code>"eclipselink.logging.file"</code> property configures a file \
location where the log will be output to instead of standard out.

eclipselink.ddl.table-creation-suffix_DESC=The <code>"eclipselink.ddl.table-creation-suffix"</code> property is used in \
conjunction with DDL generation options to append a string to the end of \
generated CREATE Table statements. \
\
This value is applied to all Table creation statements through the DDL generation feature \
ie <property name="eclipselink.ddl.table-creation-suffix" value="engine=InnoDB"/>

eclipselink.target-database_DESC=The <code>"eclipselink.target-database"</code> property configures the \
database that will be used controlling custom operations and SQL \
generation for the specified database.\
<p>\
Values: Either a short string values as defined in {@link TargetDatabase} \
or a fully qualified class name for a class that extends \
{@link DatabasePlatform}. The default value is TargetDatabase.Auto which \
means EclipseLink will try to automatically determine the correct \
database platform type.\
</p>\
Note: <code>"eclipselink.target-database"</code> must be specified with a \
non-"Auto" class name or short name when <code>"eclipselink.validation-only"</code>\
is set to <code>"True"</code>.

eclipselink.exclude-eclipselink-orm_DESC=The <code>"eclipselink.exclude-eclipselink-orm"</code> property \
configures the exclusion of an EclipseLink ORM mapping file for a \
specific persistence unit. By default the first file found at the \
resource name: "META-INF/eclipselink-orm.xml" is processed and overrides \
configurations specified in annotations, and standard mapping files.

eclipselink.session-name_DESC=The <code>"eclipselink.session-name"</code> property configures a \
specific name to use when storing the singleton server session within the \
{@link SessionManager}.\
<p>\
By default a unique session name is generated by EclipseLink, but the \
user can provide a customary session name - and make sure it's unique. If \
a sessions-xml file is used this must be the name of the session in the \
sessions-xml file.

eclipselink.weaving_DESC=The <code>"eclipselink.weaving"</code> property configures whether \
weaving should be performed. Weaving is requires for lazy OneToOne, \
ManyToOne, Basic, attribute change tracking, fetch groups, and other \
optimizations.\
<p>\
Values (case insensitive):\
<ul>\
<li>Not Set - defaults to "true" in Java SE using javaagent and within \
EJB 3+ compliant containers\
<li>"true" - requires that weaving be done. Will throw an exception if \
entities are not woven\
<li>"false" - forces weaving not to be done\
<li>"static" - requires that the static weaving utility was used to weave \
the entities\
</ul>\
<i>Note: Any value specified that is not in the above list is treated as \
"static".</i>

eclipselink.weaving.internal_DESC=The <code>"eclipselink.weaving.internal"</code> property indicates \
whether internal optimizations should be enabled through weaving. \
\
Internal optimizations include caching of primary key and session, \
addition of a serialVersionUID if none exists, optimization of EclipseLink's \
cloning strategy and optimization of the way EclipseLink gets and sets values from \
fields mapped as Basic.\
<p>\
This property will only be considered if weaving is enabled.\
<p>\
Values (case insensitive):\
<ul>\
<li>"true" (DEFAULT)\
<li>"false"\
</ul>

eclipselink.weaving.lazy_DESC=The <code>"eclipselink.weaving.lazy"</code> property configures whether \
LAZY OneToOne and ManyToOne mappings should be enabled through weaving.\
<p>\
This property will only be considered if weaving is enabled.\
<p>\
Values (case insensitive):\
<ul>\
<li>"true" (DEFAULT)\
<li>"false"\
</ul>

eclipselink.weaving.eager_DESC=The <code>"eclipselink.weaving.eager"</code> property configures whether \
EAGER mapping's attributes should be woven to use indirection. \
<p>\
This property will only be considered if weaving is enabled.\
<p>\
Values (case insensitive):\
<ul>\
<li>"true"\
<li>"false" (DEFAULT)\
</ul>

eclipselink.weaving.changetracking_DESC=The <code>"eclipselink.weaving.changetracking"</code> property configures \
whether AttributeLevelChangeTracking should be enabled through weaving. \
When this is enabled, only classes with all mappings allowing change \
tracking will have change tracking enabled. Mutable basic attributes will \
prevent this.\
<p>\
This property will only be considered if weaving is enabled.\
<p>\
Values (case insensitive):\
<ul>\
<li>"true" (DEFAULT)\
<li>"false"\
</ul>

eclipselink.weaving.fetchgroups_DESC=The <code>"eclipselink.weaving.fetchgroups"</code> property configures \
whether FetchGroup support should be enabled through weaving. When this \
is enabled, lazy direct mappings will be supported as well as descriptor \
and query level FetchGroups. FetchGroups allow partial objects to be read \
and written, access to un-fetched attributes will cause the object to be \
refreshed/fully-fetched.\
<p>\
This property will only be considered if weaving is enabled.\
<p>\
Values (case insensitive):\
<ul>\
<li>"true" (DEFAULT)\
<li>"false"\
</ul>

eclipselink.target-server_DESC=The <code>"eclipselink.target-server"</code> property configures the \
{@link ServerPlatform} that will be used to enable integration with a \
host container.\
<p>\
Valid values are defined in TargetServer class - they correspond to \
server platforms currently supported. Also a custom server platform may \
be specified by supplying a full class name. Specifying a name of the \
class implementing ExternalTransactionController sets \
CustomServerPlatform with this controller. Default is TargetServer.None.

eclipselink.session.customizer_DESC=The <code>"eclipselink.session.customizer"</code> property configures a \
{@link SessionCustomizer} used to alter the runtime configuration through \
API.\
<p>\
The value is a full name for a class which implements SessionCustomizer. \
Session customizer called after all other properties have been processed.

eclipselink.descriptor.customizer._DESC=The <code>"eclipselink.descriptor.customizer."</code> is a prefix for a \
property used to configure a {@link DescriptorCustomizer}. Customization \
Prefix Property names formed out of this prefix by appending either \
entity name, or class name (indicating that the property values applies \
only to a particular entity) Allows descriptor customization. \
<p>\
The value is a full name for a class which implements \
DescriptorCustomizer. Only session customizer is called after processing \
these properties.

eclipselink.jdbc.uppercase-columns_DESC=The <code>"eclipselink.jdbc.uppercase-columns"</code> property configures \
native SQL queries are used, the JDBC meta-data may return column names \
in lower case on some platforms. If the column names are upper-case in \
the mappings (default) then they will not match. This setting allows for \
forcing the column names from the meta-data to upper-case.

eclipselink.jpa.uppercase-column-names_DESC=The <code>"eclipselink.jpa.uppercase-column-names"</code> property configures JPA processing \
to uppercase all column name definitions.  A value of true also sets the \
<code>"eclipselink.jdbc.uppercase-columns"</code> property to true, so that JDBC meta-data \
returned from the database is also returned in uppercase, ensuring fields are the same case.  This \
gets around situations where user defined fields do not match the case returned by the database for \
native queries, simulating case insensitivity. \
<p>\
Values (case insensitive):\
<ul>\
<li>"true"\
<li>"false" (DEFAULT)\
</ul>

eclipselink.jdbc.batch-writing_DESC=The <code>"eclipselink.jdbc.batch-writing"</code> property configures the \
use of batch writing to optimize transactions with multiple writes.\
<p>\
Values (case insensitive):\
<ul>\
<li>"JDBC": use JDBC batch writing.\
<li>"Buffered": do not use either JDBC batch writing nor native platform \
batch writing.\
<li>"Oracle-JDBC": use Oracle's native batch writing. This requires the \
use of an Oracle JDBC driver.\
<li>"None" (DEFAULT): do not use batch writing (turn it off).\
</ul>

eclipselink.jdbc.batch-writing.size_DESC=The <code>"eclipselink.jdbc.batch-writing.size"</code> property \
configures the batch size used for batch writing. For parameterized batch \
writing this is the number of statements to batch, default 100. For \
dynamic batch writing, this is the size of the batched SQL buffer, \
default 32k.

eclipselink.persistencexml_DESC=The <code>"eclipselink.persistencexml"</code> property specifies the full \
resource name to look for the persistence XML files in. If not specified \
the default value defined by {@link #ECLIPSELINK_PERSISTENCE_XML_DEFAULT} \
will be used.\
<p>\
IMPORTANT: For now this property is used for the canonical model \
generator but it can later be used as a system property for customizing \
weaving and application bootstrap usage.\
<p>\
This property is only used by EclipseLink when it is locating the \
configuration file. When used within an EJB/Spring container in container \
managed mode the locating and reading of this file is done by the \
container and will not use this configuration.

eclipselink.persistenceunits_DESC=This <code>"eclipselink.persistenceunits"</code> property specifies the \
set of persistence unit names that will be processed when generating the \
canonical model. By default all persistence units available in all \
persistence XML files will be used. The value of this property is a comma \
separated list. When specifying multiple persistence units it is not \
possible to have persistence units with a comma in their name.\
<p>\
Note: In the future this property can also be used to limit the \
persistence units that will be processed by the static or dynamic \
weaving.

eclipselink.exception-handler_DESC=The <code>"eclipselink.exception-handler"</code> property allows an \
{@link ExceptionHandler} to be specified. An ExceptionHandler handles \
exceptions when they are thrown so that an application might address \
address expected failures and continue.

eclipselink.session.include.descriptor.queries_DESC=The <code>"eclipselink.session.include.descriptor.queries"</code> \
property configures whether to enable the copying of all descriptor named \
queries to the session to be usable from the entity manager.\
<p>\
Default: "true".

eclipselink.session-event-listener_DESC=The <code>"eclipselink.session-event-listener"</code> property configures \
a session event listener class.

eclipselink.sessions-xml_DESC=The <code>"eclipselink.sessions-xml"</code> property configures the use \
of the specified native sessions.xml configuration file. When specified \
this file will load all of the session configuration and mapping \
information from the native XML. No JPA annotations or XML will be used.

eclipselink.temporal.mutable_DESC=The <code>"eclipselink.temporal.mutable"</code> property configures the \
default for detecting changes to temporal field (Date, Calendar). Default \
"false" (changes to date object itself are not detected). By default it \
is assumed that temporal fields are replaced, and the temporal object not \
changed directly. Enabling mutable temporal fields will cause weaving of \
attribute change tracking to be disabled.

eclipselink.jdbc.allow-native-sql-queries_DESC=The <code>"eclipselink.jdbc.allow-native-sql-queries"</code> property \
specifies whether any user defined SQL is allowed within a persistence \
unit. This is of particular importance within a multitenant to minimize \
the potential impact of revealing multi tenant information. By default \
any persistence unit containing at least one multitenant entity will \
cause this flag to be set to 'false'. \
<p>\
Allowed Values (String):\
<ul>\
<li>"true" - (DEFAULT) allow native SQL\
<li>"false" - do not allow native SQL.\
</ul>

eclipselink.allow-zero-id_DESC=The <code>"eclipselink.allow-zero-id"</code> property configures if zero \
is considered a valid id on a new entity. If the id is not considered \
valid and sequencing is enabled for the entity a new value will be \
assigned when it is persisted to the database (INSERT)By default an id \
value of 0 is assumed to be null/unassigned. This allows 0 to be a valid \
id value. This can also be set per class using the @PrimaryKey annotation \
and IdValidation.\
<p>\
Caution: This property configures the static singleton on \
{@link Helper#isZeroValidPrimaryKey} which will be shared by all \
concurrent uses of EclipseLink.

eclipselink.id-validation_DESC=The <code>"eclipselink.id-validation"</code> property defines \
which primary key components values are considered invalid. \
These values will be also overridden by sequencing. \
Note that Identity always overrides any existing id value \
and so does any sequence with shouldAlwaysOverrideExistingValue flag set to true.

eclipselink.flush-clear.cache_DESC=Defines EntityManager cache behavior after a call to flush method \
followed by a call to clear method. This property could be specified \
while creating either EntityManagerFactory (either in the map passed to \
createEntityManagerFactory method or in persistence.xml) or EntityManager \
(in the map passed to createEntityManager method); the latter overrides \
the former.

eclipselink.classloader_DESC=Specify the classloader to use to create an EntityManagerFactory in the \
property map passed to Persistence.createEntityManagerFactory.

eclipselink.orm.throw.exceptions_DESC=Configures if the first exception that occurs during deployment should be \
thrown, or if all exceptions should be caught and summary thrown at end \
of deployment attempt. "true" by default.

eclipselink.orm.validate.schema_DESC=This property set on the session is used to override orm.xml schema \
validation from its default of false.

eclipselink.deploy-on-startup_DESC=The <code>"eclipselink.deploy-on-startup"</code> property allows deployment \
to be configured to occur on startup (creation of the EntityManagerFactory), \
instead of occurring the first time an EntityManager is created. \
This may increase startup time of a JavaEE server, but will avoid the first request from hanging \
as the persistence unit is deployed. \
<p> \
Values: A boolean value of "True" or (default "False").

eclipselink.validation-only_DESC=The <code>"eclipselink.validation-only"</code> property validates deployment \
which includes initializing descriptors but does not connect (no login to the database).\
<p>\
Values: A boolean value of "True" or (default "False").\
</p>\
Note: <code>"eclipselink.target-database"</code> must be specified with a \
non-"Auto" class name or short name when <code>"eclipselink.validation-only"</code> \
is set to <code>"True"</code>.

eclipselink.ddl-generation_DESC=Allows the database schema to be generated on deployment. Valid values, \
CREATE_ONLY, DROP_AND_CREATE, NONE ("create-tables", \
"drop-and-create-tables", "none"). Default is NONE.

eclipselink.metadata-source_DESC=The <code>"eclipselink.metadata-source"</code>property configures the type of \
MetadataSource implementation to use to read Metadata \
<p>\
Values (case insensitive):\
<ul>\
<li>"XML": Use {@link XMLMetadataSource}\
<li>Custom MetadataSource - Specify a custom class name which \
implements {@link MetadataSource}\
</ul>

eclipselink.metadata-repository.xml.file_DESC=The property <code>"eclipselink.metadata-repository.xml.file"</code> \
\
<p>Specifies the name of the metadata repository xml file to read from using classloader to find the resource</p>\
\
<p>This property should be used in conjunction with the \
<code>"eclipselink.metadata-repository"</code> when an XML repository is being used.</p>

eclipselink.metadata-repository.xml.URL_DESC=The property <code>"eclipselink.metadata-repository.xml.URL"</code>\
\
<p>Specifies the name of the metadata repository xml URL to read from.</p>\
\
<p>This property should be used in conjunction with the \
<code>"eclipselink.metadata-repository"</code> when an XML repository is being used.</p>

eclipselink.application-location_DESC=The property <code>"eclipselink.application-location"</code>\
\
<p>Specifies the file system directory location where \
DDL files are written (output) to.</p>\
\
<p>This property should be used in conjunction with the \
<code>"eclipselink.ddl-generation.output-mode"</code> property, with \
a setting of <code>"sql-script"</code> (or <code>"both"</code>) for \
DDL file(s) to be written.</p>

eclipselink.create-ddl-jdbc-file-name_DESC=The property <code>"eclipselink.create-ddl-jdbc-file-name"</code>\
\
<p>Specifies the name of the DDL file which is used to create \
database tables.</p>\
\
<p>This property should be used in conjunction with the \
<code>"eclipselink.application-location"</code> property to specify a \
location on the file system for DDL file(s) to be written.</p>
    
eclipselink.drop-ddl-jdbc-file-name_DESC=The property <code>"eclipselink.drop-ddl-jdbc-file-name"</code>\
\
<p>Specifies the name of the DDL file which is used to drop \
database tables.</p>\
\
<p>This property should be used in conjunction with the \
<code>"eclipselink.application-location"</code> property to specify a \
location on the file system for DDL file(s) to be written.</p>

eclipselink.ddl-generation.output-mode_DESC=Configures if database schema should be generated on the database, to a \
file, or both. Valid values, DDL_SQL_SCRIPT_GENERATION, \
DDL_DATABASE_GENERATION, DDL_BOTH_GENERATION ("sql-script", "database", \
"both") DDL_GENERATION must also be set, for this to have an effect. \
Default is DDL_DATABASE_GENERATION.

eclipselink.validate-existence_DESC=The <code>"eclipselink.validate-existence"</code> property configures if \
the existence of an object should be verified on persist(), otherwise it \
will assume to be new if not in the persistence context. If checked and \
existing and not in the persistence context and error will be thrown. \
"false" by default.

eclipselink.order-updates_DESC=Configures if updates should be ordered by primary key. \
This can be used to avoid possible database deadlocks from concurrent \
threads updating the same objects in a different order. \
If not set to true, the order of updates is not guaranteed. \
"true" by default.

eclipselink.profiler_DESC=The <code>"eclipselink.profiler"</code>property configures the type of \
profiler used to capture runtime statistics.\
<p>\
Values (case insensitive):\
<ul>\
<li>"NoProfiler" (DEFAULT)\
<li>"PerformanceMonitor": Use {@link PerformanceMonitor}\
<li>"PerformanceProfiler": Use {@link PerformanceProfiler}\
<li>"QueryMonitor": Use {@link QueryMonitor}\
<li>Custom profiler - Specify a custom profiler class name which \
implements {@link SessionProfiler}\
</ul>

eclipselink.transaction.join-existing_DESC=The <code>"eclipselink.transaction.join-existing"</code> property Set to \
"true" this property forces persistence context to read through \
JTA-managed ("write") connection in case there is an active \
transaction.The property set in persistence.xml or passed to \
createEntityManagerFactory affects all EntityManagers created by the \
factory. Note that if the property set to "true" then objects read during \
transaction won't be placed into the shared cache unless they have been \
updated. Alternatively, to apply the property only to some \
EntityManagers pass it to createEntityManager method.\
<p>\
Values (caseinsensitive):\
<ul>\
<li>"false" (DEFAULT):\
<li>"true":\
</ul>

eclipselink.persistence-context.reference-mode_DESC=The <code>"eclipselink.persistence-context.reference-mode"</code> \
property configures whether there should be hard or soft references used \
within the Persistence Context. Default is "HARD". With soft references \
entities no longer referenced by the application may be garbage collected \
freeing resources. Any changes that have not been flushed in these \
entities will be lost. The property set in persistence.xml or passed to \
createEntityManagerFactory affects all EntityManagers created by the \
factory. Alternatively, to apply the property only to some \
SessionManagers pass it to createEntityManager method.\
<p>\
Values:<ul>\
<li>"HARD" (DEFAULT) - {@link ReferenceMode#HARD\
<li>"WEAK"  - {@link ReferenceMode#WEAK\
<li>"FORCE_WEAK" - {@link ReferenceMode#FORCE_WEAK\
</ul>

javax.persistence.lock.timeout_DESC = The <code>"javax.persistence.lock.timeout"</code> property configures the \
WAIT timeout used in pessimistic locking, if the database query exceeds \
the timeout the database will terminate the query and return an \
exception.\
<p>\
Valid values are Strings containing integers zero or greater.\

javax.persistence.query.timeout_DESC=The <code>"javax.persistence.query.timeout"</code> property configures \
the default query timeout value.\
<p>\
Valid values are strings containing integers zero or greater.

javax.persistence.schema-generation.database.action_DESC=The <code>"javax.persistence.schema-generation.database.action"</code> property \
specifies the action to be taken by the persistence provider with regard to the database artifacts. \
The values for this property are none, create, drop-and-create, drop. If this property \
is not specified, it is assumed that schema generation is not needed or will be initiated by \
other means, and, by default, no schema generation actions will be taken on the database.

javax.persistence.schema-generation.scripts.action_DESC= \
The <code>"javax.persistence.schema-generation.scripts.action"</code> property specifies \
which scripts are to be generated by the persistence provider. The values for this property \
are none, create, drop-and-create, drop. A script will only be generated if the script \
target is specified. If this property is not specified, it is assumed that script generation is not \
needed or will be initiated by other means, and, by default, no scripts will be generated.

javax.persistence.schema-generation.create-source_DESC= \
The <code>"javax.persistence.schema-generation.create-source"</code> property specifies \
whether the creation of database artifacts is to occur on the basis of the object/relational \
mapping metadata, DDL script, or a combination of the two. The values for this property are \
<code>metadata, script, metadata-then-script, script-then-metadata</code>. If this \
property is not specified, and a script is specified by the javax.persistence. \
schema-generation.create-script-source property, the script (only) \
will be used for schema generation; otherwise if this property is not specified, schema generation \
will occur on the basis of the object/relational mapping metadata (only). The metadata- \
then-script and script-then-metadata values specify that a combination \
of metadata and script is to be used and the order in which this use is to occur. If either of these \
values is specified and the resulting database actions are not disjoint, the results are undefined \
and schema generation may fail.

javax.persistence.schema-generation.drop-source_DESC= \
The <code>"javax.persistence.schema-generation.drop-source"</code> property specifies \
whether the dropping of database artifacts is to occur on the basis of the object/relational mapping \
metadata, DDL script, or a combination of the two. The values for this property are \
<code>metadata, script, metadata-then-script, script-then-metadata</code>. If this \
property is not specified, and a script is specified by the javax.persistence. \
schema-generation.drop-script-source property, the script (only) will \
be used for the dropping of database artifacts; otherwise if this property is not specified, the \
dropping of database artifacts will occur on the basis of the object/relational mapping metadata \
(only). The metadata-then-script and script-then-metadata values specify \
that a combination of metadata and script is to be used and the order in which this use is to \
occur. If either of these values is specified and the resulting database actions are not disjoint, \
the results are undefined and the dropping of database artifacts may fail.

javax.persistence.schema-generation.scripts.create-target_DESC = \
If script is to be generated, the target location for the writing of the script must be specified.\
This target is specified as string corresponding to file URL.

javax.persistence.schema-generation.scripts.drop-target_DESC = \
If script is to be generated, the target location for the writing of the script must be specified.\
This target is specified as string corresponding to file URL.

javax.persistence.sql-load-script-source_DESC = \
Name of a script packaged as part of the persistence unit or a string corresponding \
to a file URL string that designates a script.

eclipselink.persistence-context.close-on-commit_DESC=The <code>"eclipselink.persistence-context.close-on-commit"</code> \
property specifies that the EntityManager will be closed or not used \
after commit (not extended). In general this is normally always the case \
for a container managed EntityManager, and common for application \
managed. This can be used to avoid additional performance overhead of \
resuming the persistence context after a commit(). The property set in \
persistence.xml or passed to createEntityManagerFactory affects all \
EntityManagers created by the factory. Alternatively, to apply the \
property only to some EntityManagers pass it to createEntityManager \
method.\
<p>\
Values (case insensitive):\
<ul>\
<li>"false" (DEFAULT)\
<li>"true"\
</ul>

eclipselink.persistence-context.persist-on-commit_DESC=The <code>"eclipselink.persistence-context.persist-on-commit"</code> \
property specifies that the EntityManager will search all managed objects \
and persist any related non-managed new objects that are cascade persist. \
This can be used to avoid the cost of performing this search if persist \
is always used for new objects. The property set in persistence.xml or \
passed to createEntityManagerFactory affects all EntityManagers created \
by the factory. Alternatively, to apply the property only to some \
EntityManagers pass it to createEntityManager method.\
<p>\
Values (case insensitive):\
<ul>\
<li>"true" (DEFAULT)\
<li>"false"\
</ul>

eclipselink.persistence-context.commit-without-persist-rules_DESC=The \
<code>"eclipselink.persistence-context.commit-without-persist-rules"</code> \
property specifies that the EntityManager will search all managed objects \
and persist any related non-managed new objects that are found ignoring \
any absence of CascadeType.PERSIST settings. Also the Entity life-cycle \
Persist operation will not be cascaded to related entities. This setting \
replicates the traditional EclipseLink native functionality.\
<p>\
Values (case insensitive):\
<ul>\
<li>"false" (DEFAULT)\
<li>"true"\
</ul>

eclipselink.persistence-context.flush-mode_DESC=The <code>"eclipselink.persistence-context.flush-mode</code> property configures the EntityManager FlushMode to be set as a \
persistence property. This can be set to either "AUTO" or "COMMIT". By \
default the flush mode is AUTO, which requires an automatic flush before \
all query execution. This can be used to avoid any flushing until commit. \
The property set in persistence.xml or passed to \
createEntityManagerFactory affects all EntityManagers created by the \
factory. Alternatively, to apply the property only to some EntityManagers \
pass it to createEntityManager method.

eclipselink.oracle.proxy-type_DESC=The <code>"eclipselink.oracle.proxy-type"</code> property is used to \
specify proxy type that should be passed to \
OracleConnection.openProxySession method. Requires Oracle JDBC version \
10.1.0.2 or later. Requires Oracle9Platform or later as a database \
platform (TARGET_DATABASE property value should be TargetDatabase.Oracle9 \
or later).\
<p>\
Values:\
<ul>\
<li>oracle.jdbc.OracleConnection.PROXYTYPE_USER_NAME,\
<li>oracle.jdbc.OracleConnection.PROXYTYPE_DISTINGUISHED_NAME,\
<li>oracle.jdbc.OracleConnection.PROXYTYPE_CERTIFICATE.\
</ul>\
<p>\
Property values corresponding to the specified type should be also \
provided:\
<ul>\
<li>oracle.jdbc.OracleConnection.PROXY_USER_NAME, \
<li>oracle.jdbc.OracleConnection.PROXY_DISTINGUISHED_NAME, \
<li>oracle.jdbc.OracleConnection.PROXY_CERTIFICATE. \
<p>\
Typically these properties should be set into EntityManager (either \
through createEntityManager method or using proprietary setProperties \
method on EntityManagerImpl) - that causes EntityManager to use proxy \
connection for writing and reading inside transaction. If proxy-type and \
the corresponding proxy property set into EntityManagerFactory then all \
connections created by the factory will be proxy connections.

eclipselink.cache.coordination.protocol_DESC=The <code>"eclipselink.cache.coordination.protocol"</code> property \
configures cache coordination for a clustered environment. This needs to \
be set on every persistence unit/session in the cluster. Depending on the \
cache configuration for each descriptor, this will broadcast cache \
updates or inserts to the cluster to update or invalidate each session's \
cache.\
<p>\
Values:\
<ul>\
<li>"jms"\
<li>"jms-publishing"\
<li>"rmi"\
<li>"rmi-iiop"\
<li>a <package.class> name of a subclass implementation of the TransportManager abstract class.\
</ul>\
by default the cache is not coordinated.

eclipselink.cache.coordination.jms.host_DESC=The <code>"eclipselink.cache.coordination.jms.host"</code> property \
configures cache coordination for a clustered environment. Only used for \
JMS coordination. Sets the URL for the JMS server hosting the topic. \
This is not required in the topic is distributed across the cluster (can be looked up in local JNDI).

eclipselink.cache.coordination.jms.topic_DESC=The <code>"eclipselink.cache.coordination.jms.topic"</code> property \
configures cache coordination for a clustered environment. Only used for \
JMS coordination. Sets the JMS topic name. \
The default topic JNDI name is "jms/EclipseLinkTopic".

eclipselink.cache.coordination.jms.factory_DESC=The <code>"eclipselink.cache.coordination.jms.factory"</code> property \
configures cache coordination for a clustered environment. Only used for \
JMS coordination. Sets the JMS topic connection factory name. \
The default topic connection factory JNDI name is "jms/EclipseLinkTopicConnectionFactory".
 
eclipselink.cache.coordination.jms.reuse-topic-publisher_DESC=The <code>"eclipselink.cache.coordination.jms.reuse-topic-publisher"</code> property \
configures cache coordination for a clustered environment. Only used for \
JMS coordination. Sets the JSM transport manager to cache a TopicPubliser \
and reuse it for all cache coordination publishing. Default value if unset is false.

eclipselink.cache.coordination.rmi.announcement-delay_DESC=The <code>"eclipselink.cache.coordination.rmi.announcement-delay"</code> \
property configures cache coordination for a clustered environment. Only \
used for RMI coordination. Sets the number of milliseconds to wait for \
announcements from other cluster members on startup. \
Default is 1000 milliseconds.

eclipselink.cache.coordination.rmi.multicast-group_DESC=The <code>"eclipselink.cache.coordination.rmi.multicast-group"</code> \
property configures cache coordination for a clustered environment. Only \
used for RMI coordination. Sets the multicast socket group address. The \
multicast group is used to find other members of the cluster. \
The default address is 239.192.0.0.

eclipselink.cache.coordination.rmi.multicast-group.port_DESC=The \
<code>"eclipselink.cache.coordination.rmi.multicast-group.port"</code> \
property configures cache coordination for a clustered environment. Only \
used for RMI coordination. Sets the multicast socket group port. The \
multicast group port is used to find other members of the cluster. \
The default port is 3121.

eclipselink.cache.coordination.rmi.packet-time-to-live_DESC=The <code>"eclipselink.cache.coordination.rmi.packet-time-to-live"</code> \
property configures cache coordination for a clustered environment. Only \
used for RMI coordination. Sets the multicast socket packet time to live. \
The multicast group is used to find other members of the cluster. Set the \
number of hops the data packets of the session announcement will take \
before expiring. The default is 2, a hub and an interface card to prevent \
the data packets from leaving the local network. \
\
Note that if sessions are hosted on different LANs that are part of WAN, \
the announcement sending by one session may not reach other sessions. In \
this case, consult your network administrator for the right time-to-live \
value or test your network by increase the value until sessions receive \
announcement sent by others.\

eclipselink.cache.coordination.rmi.url_DESC=The <code>"eclipselink.cache.coordination.rmi.url"</code> property \
configures cache coordination for a clustered environment. Only used for \
RMI coordination. Sets the URL of the host server. This is the URL that \
other cluster member should use to connect to this host. \
This may not be required in a clustered enviroment where JNDI is replicated. \
This can also be set as a System property or using a SessionCustomizer to avoid \
a seperate persistence.xml per server.

eclipselink.cache.coordination.naming-service_DESC=The <code>"eclipselink.cache.coordination.naming-service"</code> property \
configures cache coordination for a clustered environment. Set the naming \
service to use, either "jndi" or "rmi".

eclipselink.cache.coordination.jndi.user_DESC=The <code>"eclipselink.cache.coordination.jndi.user"</code> property \
configures cache coordination for a clustered environment. Set the JNDI \
naming service user name. \
This is not normally require if connecting to the local server.

eclipselink.cache.coordination.jndi.password_DESC=The <code>"eclipselink.cache.coordination.jndi.password"</code> property \
configures cache coordination for a clustered environment. Set the JNDI \
naming service user name. \
This is not normally require if connecting to the local server.

eclipselink.cache.coordination.jndi.initial-context-factory_DESC=The \
<code>"eclipselink.cache.coordination.jndi.initial-context-factory"</code> \
property configures cache coordination for a clustered environment. Set \
the JNDI InitialContext factory. \
This is not normally require if connecting to the local server.

eclipselink.cache.coordination.remove-connection-on-error_DESC=The \
<code>"eclipselink.cache.coordination.remove-connection-on-error"</code> \
property configures cache coordination for a clustered environment. Set \
if the connection should be removed if a communication error occurs when \
coordinating with it. This is normally used for RMI coordination in case \
a server goes down (it will reconnect when it comes back up).

eclipselink.cache.coordination.propagate-asynchronously_DESC=The \
<code>"eclipselink.cache.coordination.propagate-asynchronously"</code> \
property configures cache coordination for a clustered environment. Set \
if the coordination broadcast should occur asynchronously with the \
committing thread. This means the coordination will be complete before \
the thread returns from the commit of the transaction. Note that JMS is \
always asynchronous. By default RMI is asynchronous.

eclipselink.cache.coordination.channel_DESC=The <code>"eclipselink.cache.coordination.channel"</code> property \
configures cache coordination for a clustered environment. Set if the \
channel for this cluster. All server's in the same channel will be \
coordinated.  The default channel name is "EclipseLinkCommandChannel".

eclipselink.composite-unit_DESC=Indicates if it's a composite persistence unit ("true"). \
The property must be specified in persistence.xml of a composite persistence unit. \
The property passed to createEntityManagerFactory method or in system properties is ignored. \
Composite persistence unit would contain all persistence units found in jar files specified by <jar-file> elements in persistence.xml. \
   <jar-file>member1.jar</jar-file>\
   <jar-file>member2.jar</jar-file>\
   <properties>\
       <property name="eclipselink.composite-unit" value="true"/>\
   </properties>
    
eclipselink.composite-unit.member_DESC=Indicates if the persistence unit must be a member of a composite persistence unit ("true"), \
can't be used as an independent persistence unit. \
That happens if persistence unit has dependencies on other persistence unit(s). \
The property may be specified in persistence.xml. \
The property passed to createEntityManagerFactory method or in system properties is ignored. \
If this property is set to true, EntityManagerFactory still could be created, \
but it can't be connected: an attempt to create entity manager would cause an exception.

eclipselink.composite-unit.properties_DESC=The property may be passed to createEntityManagerFactory method of a composite persistence unit \
to pass properties to member persistence units. \
The value is a map: \
the key is a member persistence unit's name, \
the value is a map of properties to be passed to this persistence unit. \
"eclipselink.composite-unit.properties" -> (\
  ("memberPu1" -> (   "javax.persistence.jdbc.user" -> "user1", \
                      "javax.persistence.jdbc.password" -> "password1", \
                      "javax.persistence.jdbc.driver" -> "oracle.jdbc.OracleDriver", \
                      "javax.persistence.jdbc.url" -> "jdbc:oracle:thin:@oracle_db_url:1521:db", \
                   ) , \
  ("memberPu2" -> (   "javax.persistence.jdbc.user" -> "user2", \
                      "javax.persistence.jdbc.password" -> "password2" \
                      "javax.persistence.jdbc.driver" -> "com.mysql.cj.jdbc.Driver", \
                      "javax.persistence.jdbc.url" -> "jdbc:mysql://my_sql_db_url:3306/user2", \
                   )\
)

eclipselink.cache.shared.default_DESC=The shared cache exists for the duration of the persistence unit (EntityManagerFactory, or server) and is shared by all EntityManagers and users of the persistence unit.

eclipselink.cache.size.default_DESC=The default maximum number of objects allowed in an EclipseLink cache. \
\
Valid values: 0 to Integer.MAX_VALUE as a String. 

eclipselink.cache.type.default_DESC=The default type of session cache. \
\
A session cache is a shared cache that services clients attached to a given session. When you read objects from or write objects to the data source using a client session, EclipseLink saves a copy of the objects in the parent server session's cache and makes them accessible to child client sessions. From a JPA perspective, an EntityManagerFactory wraps an org.eclipse.persistence.sessions.server.ServerSession; entity managers wrap an org.eclipse.persistence.sessions.UnitOfWork and org.eclipse.persistence.sessions.server.ClientSession. For more information about sessions, see Introduction to EclipseLink Sessions. \
\
The following are the valid values for the use in a persistence.xml file and for the org.eclipse.persistence.config.CacheType: \
\
    Full \u2013 This option provides full caching and guaranteed identity: objects are never flushed from memory unless they are deleted. \
    For more information, see Full Identity Map. \
    Weak \u2013 This option is similar to Full, except that objects are referenced using weak references. This option uses less memory than Full, but does not provide a durable caching strategy across client/server transactions. We recommend using this identity map for transactions that, once started, stay on the server side. \
    For more information, see Weak Identity Map. \
    Soft \u2013 This option is similar to Weak except that the map holds the objects using soft references. This identity map enables full garbage collection when memory is low. It provides full caching and guaranteed identity. \
    For more information, see Soft Identity Map. \
    SoftWeak \u2013 This option is similar to Weak except that it maintains a most frequently used subcache that uses soft references. We recommend using this identity map in most circumstances as a means to control memory used by the cache. \
    For more information, see Soft Cache Weak Identity Map and Hard Cache Weak Identity Map. \
    HardWeak \u2013 This option is similar to Weak except that it maintains a most frequently used subcache that uses hard references. \
    For more information, see Soft Cache Weak Identity Map and Hard Cache Weak Identity Map. \
    NONE \u2013 This option does not preserve object identity and does not cache objects. Oracle does not recommend using this option. \
    For more information, see No Identity Map or to turn off the cache - use "eclipselink.cache.shared"="false". 

