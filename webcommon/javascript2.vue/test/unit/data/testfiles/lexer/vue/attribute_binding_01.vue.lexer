Token #0 HTML [<!--\nHere we show the simplest possible component which accepts a prop and renders it.\nLearn more about components in the guide!\n-->\n\n<script setup>\nimport { ref } from 'vue'\nimport TodoItem from './TodoItem.vue'\n\nconst groceryList = ref([\n  { id: 0, text: 'Vegetables' },\n  { id: 1, text: 'Cheese' },\n  { id: 2, text: 'Whatever else humans are supposed to eat' }\n])\n</script>\n\n]
Token #1 HTML [<template>\n  <ol>\n    <!--\n      We are providing each todo-item with the todo object\n      it's representing, so that its content can be dynamic.\n      We also need to provide each component with a "key",\n      which is explained in the guide section on v-for.\n    -->\n    <TodoItem\n      ]
Token #2 VUE_DIRECTIVE [v-for]
Token #3 JAVASCRIPT_ATTR [=]
Token #4 QUOTE_ATTR ["]
Token #5 JAVASCRIPT_ATTR [item in groceryList]
Token #6 QUOTE_ATTR ["]
Token #7 HTML [\n      ]
Token #8 VUE_DIRECTIVE [:todo]
Token #9 JAVASCRIPT_ATTR [=]
Token #10 QUOTE_ATTR ["]
Token #11 JAVASCRIPT_ATTR [item]
Token #12 QUOTE_ATTR ["]
Token #13 HTML [\n      ]
Token #14 VUE_DIRECTIVE [:key]
Token #15 JAVASCRIPT_ATTR [=]
Token #16 QUOTE_ATTR ["]
Token #17 JAVASCRIPT_ATTR [item.id]
Token #18 QUOTE_ATTR ["]
Token #19 HTML [\n    ></TodoItem>\n  </ol>\n]
Token #20 HTML [</template>]
