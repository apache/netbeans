#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# path to the directory where the base build scripts library and properties 
# reside
common.dir=../../../../../nbi/infra/build/.common

# path to the local working directory; this directory which will be the target 
# for checking out the sources and will be used for the build process
# * this path can be either absolute or relative in any unix environment, 
#   however, only relative paths are supported on windows, as the cygwin scp 
#   command does not properly handle colon in local paths
work.dir=./build

# path to the local distributive directory; this directory will contain the 
# distributive file, when (if) the build script finishes successfully
dist.dir=./dist

# path to the group's sources within the cvs module; it should be a relative 
# path from the module's root, e.g. for 'nbi/engine', where 'nbi is the module 
# name, the path should be 'engine'
cvs.path=components/groups/documentation-group

# core group's properties
# * ${group.uid} - the unique identifier for the group; a registry can contain 
#   only one group with a given identifier
group.uid=documentation-group

# miscellaneous group properties
# * ${group.offset} - order of the group's node among its parent's children, 
#   the bigger the offset value, the further the group's node will be
# * ${group.expand} - whether to automatically expand the group's node in the 
#   components tree or not; 'true'/'false'
# * ${group.visible} - whether the group's node is visible or not (note that 
#   this value will be modified at nbi runtime, 'true' may become 'false' if 
#   the group is filtered out); 'true'/'false'
group.offset=20000
group.expand=true
group.visible=true

# additional groups's properties; these will appear in the group's descriptor 
# and in the registry in the form of <property name="[name]">value</property>
# tags.
# * ${group.properties.length} - total number of the properties
# * indices should start with 1
# * properties are not i18n compliant
group.properties.length=0
#group.properties.1.name=
#group.properties.1.value=

# sources parameters; a search-and-replace will be run over the sources after 
# check-out, replacing [token] => [value]; regular expressions are not allowed
# * ${sources.params.length} - total number of the parameters
# * indices should start with 1
# * parameters are not i18n compliant
sources.params.length=0
#sources.params.1.token=
#sources.params.1.value=
