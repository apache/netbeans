# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

#BreakpointTypes
    CTL_Java_breakpoint_events_cathegory_name=Java

    CTL_Class_event_type_name=Class
    CTL_Method_event_type_name=Method
    CTL_Exception_event_name_type_name=Exception
    CTL_Variable_event_type_name=Field
    CTL_Thread_event_type_name=Thread
    CTL_Line_event_type_name=Line

#ActionsPanel
    L_Actions_Panel_Suspend=&Suspend\:
    ASCD_L_Actions_Panel_Suspend=

    ASCD_CB_Actions_Panel_Suspend=
    LBL_CB_Actions_Panel_Suspend_None=No thread (continue)
    LBL_CB_Actions_Panel_Suspend_Current=Breakpoint thread
    LBL_CB_Actions_Panel_Suspend_All=All threads
    TTT_CB_Actions_Panel_Suspend=The suspend mode.

    MSG_EnableGroup=En&able Group:
    MSG_DisableGroup=&Disable Group:
    LBL_NoneBreakpointGroup=<none>
    LBL_FilesGroup=Breakpoints in Files
    LBL_ProjectsGroup=Breakpoints in Projects
    LBL_TypesGroup=Breakpoint Types
    LBL_ProjectGroupItem=Project: {0}
    LBL_TypeGroupItem=Breakpoint Type: {0}

    L_Actions_Panel_Print_Text=Print &Text\:

    ACSD_TF_Actions_Panel_Print_Text=
    TTT_TF_Actions_Panel_Print_Text=Text to be printed when breakpoint occurs. Use {=<expression>} to print expressions/variables.

#ClassBreakpointPanel
    CTL_Class_Breakpoint_Print_Text=Class breakpoint hit for class {className}.

    L_Class_Breakpoint_filter_hint=Class Filter (Set exclusion / non-exclusion filter for classes)
    ACSD_L_Class_Breakpoint_filter_hint=

    L_Class_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Class_Breakpoint_Package_Name=

    TTT_TF_Class_Breakpoint_Package_Name=Specify name of package.
    ACSD_TF_Class_Breakpoint_Package_Name=

    L_Class_Breakpoint_Class_Name=&Class Name\:
    ACSD_L_Class_Breakpoint_Class_Name=

    TTT_TF_Class_Breakpoint_Class_Name=Specify class name or use '*' for all classes from package.
    ACSD_TF_Class_Breakpoint_Class_Name=

    CB_Class_Breakpoint_Exclusion_Filter=&Exclusion Filter
    ACSD_CB_Class_Breakpoint_Exclusion_Filter=
    TTT_CB_Class_Breakpoint_Exclusion_Filter=Hit all classes except those matching the filter.
    L_Class_Breakpoint_Type=Stop &On\:
    ASCD_L_Class_Breakpoint_Type=

    ACSD_CB_Class_Breakpoint_Type=
    TTT_CB_Class_Breakpoint_Type=Select type of event this breakpoint should stop on.
    LBL_Class_Breakpoint_Type_Prepare=Class Load
    LBL_Class_Breakpoint_Type_Unload=Class Unload
    LBL_Class_Breakpoint_Type_Prepare_or_Unload=Class Load or Unload

    MSG_No_Class_Name_Spec=Class Name should be specified.

#ExceptionBreakpointPanel
    CTL_Exception_Breakpoint_Print_Text=Exception {exceptionClassName}({exceptionMessage}) breakpoint hit in {className} at line {lineNumber} by thread {threadName}.

    L_Exception_Breakpoint_filter_hint=(Enter full name of class of exception or error, e.g.\: java.lang.InternalError)
    ACSD_L_Exception_Breakpoint_filter_hint=

    L_Exception_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Exception_Breakpoint_Package_Name=
    ACSD_TF_Exception_Breakpoint_Package_Name=Package name input line

    TTT_CB_Exception_Breakpoint_Package_Name=Type name of package here.

    L_Exception_Breakpoint_Class_Name=&Exception Class Name\:
    ACSD_L_Exception_Breakpoint_Class_Name=

    TTT_CB_Exception_Breakpoint_Class_Name=Select name of exception class here.
    ACSD_CB_Exception_Breakpoint_Class_Name=

    LBL_ClassFilter=Class Filter\:
    TTT_ClassFilter=Restricts to locations in classes whose names match this filter.
    LBL_ClassExclusionFilter=Class Exclusion Filter\:
    TTT_ClassExclusionFilter=Restricts to locations in classes whose names do not match this filter.

    L_Exception_Breakpoint_Type=Stop &On\:
    ASCD_L_Exception_Breakpoint_Type=

    TTT_CB_Exception_Breakpoint_Type=Select type of event this breakpoint should stop on.
    ACSD_CB_Exception_Breakpoint_Type=
    LBL_Exception_Breakpoint_Type_Catched=Caught
    LBL_Exception_Breakpoint_Type_Uncatched=Uncaught
    LBL_Exception_Breakpoint_Type_Catched_or_Uncatched=Caught or Uncaught

    L_Exception_Breakpoint_Condition=Co&ndition\:
    ACSD_L_Exception_Breakpoint_Condition=

    TTT_TF_Exception_Breakpoint_Condition=Write Java expression here.
    ACSD_TF_Exception_Breakpoint_Condition=

    MSG_No_Exception_Class_Name_Spec=Exception Class Name should be specified.

#MethodBreakpointPanel
    CTL_Method_Breakpoint_Print_Text=Method breakpoint hit in {className}.{methodName} at line {lineNumber} by thread {threadName}.

    L_Method_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Method_Breakpoint_Package_Name=

    ACSD_TF_Method_Breakpoint_Package_Name=
    TTT_TF_Method_Breakpoint_Package_Name=Enter name of package here.

    L_Method_Breakpoint_Class_Name=&Class Name\:
    ACSD_L_Method_Breakpoint_Class_Name=

    ACSD_TF_Method_Breakpoint_Class_Name=
    TTT_TF_Method_Breakpoint_Class_Name=Enter name of class here.

    L_Method_Breakpoint_Method_Name=&Method Name\:
    ACSD_L_Method_Breakpoint_Method_Name=
    Method_Breakpoint_ALL_METHODS=<all methods>

    TTT_TF_Method_Breakpoint_Method_Name=Enter name of method here.
    ACSD_TF_Method_Breakpoint_Method_Name=

    ACSD_CB_Method_Breakpoint_All_Methods=
    TTT_CB_Method_Breakpoint_All_Methods=Select if you would like to stop in all methods in given class.
    CB_Method_Breakpoint_All_Methods=All Methods for &Given Class

    LBL_Method_Breakpoint_Type_Entry=Method Entry
    LBL_Method_Breakpoint_Type_Exit=Method Exit
    LBL_Method_Breakpoint_Type_Entry_or_Exit=Method Entry or Exit

    ACSD_L_Method_Breakpoint_Condition=
    L_Method_Breakpoint_Condition=Co&ndition\:

    TTT_TF_Method_Breakpoint_Condition=Write Java expression here. A special "return" variable name can be used to reference returned value from method exit breakpoints.
    ACSD_TF_Method_Breakpoint_Condition=

    MSG_No_Class_or_Method_Name_Spec=Class Name and Method Name should be specified.

#FieldBreakpointPanel
    CTL_Field_Breakpoint_Print_Text=Field breakpoint hit at line {lineNumber} in class {className} by thread {threadName}.

    L_Field_Breakpoint_Package_Name=&Package Name\:
    ACSD_L_Field_Breakpoint_Package_Name=

    ACSD_TF_Field_Breakpoint_Package_Name=
    TTT_TF_Field_Breakpoint_Package_Name=Enter name of package here.

    L_Field_Breakpoint_Class_Name=&Class Name\:
    ACSD_L_Field_Breakpoint_Class_Name=

    ACSD_TF_Field_Breakpoint_Class_Name=
    TTT_TF_Field_Breakpoint_Class_Name=Enter name of class here.

    L_Field_Breakpoint_Field_Name=&Field Name\:
    ACSD_L_Field_Breakpoint_Field_Name=

    TTT_TF_Field_Breakpoint_Field_Name=Enter name of field here.
    ACSD_TF_Field_Breakpoint_Field_Name=

    L_Field_Breakpoint_Type=Stop &On\:
    ACSD_L_Field_Breakpoint_Type=

    TTT_CB_Field_Breakpoint_Type=Select type of breakpoint here.
    ACSD_CB_Field_Breakpoint_Type=
    LBL_Field_Breakpoint_Type_Access=Field Access
    LBL_Field_Breakpoint_Type_Modification=Field Modification
    LBL_Field_Breakpoint_Type_Access_or_Modification=Field Access or Modification

    L_Field_Breakpoint_Condition=Co&ndition\:
    ACSD_L_Field_Breakpoint_Condition=

    ACSD_TF_Field_Breakpoint_Condition=
    TTT_TF_Field_Breakpoint_Condition=Write Java expression here.

    MSG_No_Class_or_Field_Name_Spec=Class Name and Field Name should be specified.

#ThreadBreakpointPanel
    CTL_Thread_Breakpoint_started_Print_Text=Thread breakpoint hit by thread {threadName} (started).
    CTL_Thread_Breakpoint_died_Print_Text=Thread breakpoint hit by thread {threadName} (died).
    L_Thread_Breakpoint_Type=Stop &On\:
    ACSD_L_Thread_Breakpoint_Type=

    TTT_CB_Thread_Breakpoint_Type=Select type of breakpoint here.
    ACSD_CB_Thread_Breakpoint_Type=
    LBL_Thread_Breakpoint_Type_Start=Thread Start
    LBL_Thread_Breakpoint_Type_Death=Thread Death
    LBL_Thread_Breakpoint_Type_Start_or_Death=Thread Start or Death


#LineBreakpointPanel
    #L_Line_Breakpoint_Project_Name=Project\:
    #MN_L_Line_Breakpoint_Project_Name=P
    #ASCD_L_Line_Breakpoint_Project_Name=Project
    #ASCD_TF_Line_Breakpoint_Project_Name=Project
    #TTT_TF_Line_Breakpoint_Project_Name=Project

    CTL_Line_Breakpoint_Print_Text=Breakpoint hit at line {lineNumber} in class {className} by thread {threadName}.

    L_Line_Breakpoint_File_Name=&File\:
    ACSD_L_Line_Breakpoint_File_Name=File
    ACSD_TF_Line_Breakpoint_File_Name=File
    TTT_TF_Line_Breakpoint_File_Name=File Name

    L_Line_Breakpoint_Line_Number=L&ine number\:
    ACSD_L_Line_Breakpoint_Line_Number=Line number
    ACSD_TF_Line_Breakpoint_Line_Number=Line number
    TTT_TF_Line_Breakpoint_Line_Number=Line number to stop at

    L_Line_Breakpoint_Condition=Co&ndition:
    ACSD_L_Line_Breakpoint_Condition=Condition
    ACSD_TF_Line_Breakpoint_Condition=Condition
    TTT_TF_Line_Breakpoint_Condition=Breakpoint is hit if the expression evaluates to true.

    MSG_No_File_Spec=File name should be specified.
    MSG_Invalid_File_Spec=Invalid file name.
    MSG_Malformed_File_Spec=Malformed file name.
    MSG_NonExistent_File_Spec=File does not exist.
    MSG_NonJava_File_Spec=Java source file is expected.
    MSG_No_Line_Number_Spec=Line number should be specified.
    MSG_TooBig_Line_Number_Spec=The line number {0} is too big. Maximum line number is {1}.
    MSG_NonPositive_Line_Number_Spec=A positive line number should be specified.

    MSG_Bad_Hit_Count_Filter_Spec=Wrong value of hit count filter: ''{0}''.
    MSG_NonPositive_Hit_Count_Filter_Spec=A positive hit count filter should be specified.
    MSG_No_Hit_Count_Filter_Spec=No hit count filter is specified.

    MSG_No_Condition_Spec=An empty condition is specified.

# A text field follows, like "Equal to" <number>
ConditionsPanel.cbWhenHitCount.equals=Equal to
# Greater than <number>
ConditionsPanel.cbWhenHitCount.greater=Greater than
# Multiple of <number>
ConditionsPanel.cbWhenHitCount.multiple=Multiple of

L_Actions_Panel_BorderTitle=Actions

LBL_Use_As_Default_Option=De&fault for New Breakpoints
TTT_Use_As_Default_Option=Use the selected suspend mode as default for all new breakpoints.

L_Class_Breakpoint_BorderTitle=Settings

L_Exception_Breakpoint_BorderTitle=Settings

L_Field_Breakpoint_BorderTitle=Settings

L_Line_Breakpoint_BorderTitle=Settings

L_Method_Breakpoint_BorderTitle=Settings

L_Thread_Breakpoint_BorderTitle=Settings
LBL_HitCountFilter=Break when hit count

L_Conditions_Breakpoint_BorderTitle=Conditions
ConditionsPanel.classFilterCheckBox.text=&Filter on Classes Throwing the Exception
ConditionsPanel.cbWhenHitCount.text=B&reak when hit count is:
ConditionsPanel.conditionCheckBox.text=Co&ndition\:
ConditionsPanel.classExcludeFilterLabel.text=E&xclude Classes\:
ConditionsPanel.classIncludeFilterLabel.text=&Match Classes\:

ConditionsPanel.spCondition.toolTipText=Condition
ConditionsPanel.tfCondition.toolTipText=Breakpoint is hit only if this expression evaluates to true.

L_Method_Breakpoint_Type=Stop &On\:

TTT_CB_Classes_Filter_Throwing=Enables restricting this breakpoint to specific classes that throw the exception.
TTT_CB_Classes_Matched=Restrict this breakpoint to specified classes.
TTT_CB_Classes_Excluded=Breakpoint applied to all classes except these excluded classes.

TTT_Class_Pattern_Help_1=In a class pattern, you can use an asterisk (*) as a suffix.
TTT_Class_Pattern_Help_2=Multiple patterns should be separated by commas.
TTT_Class_Pattern_Help_3=Example: java.net.URLClassLoader*, java.lang.ClassLoader

TTT_TF_Hit_Count=Debugging is stopped only if the number of this breakpoint hits matches the selected condition.
ACSN_CB_Method_Breakpoint_Type=When to stop on this method.
ACSN_CB_HitCount=Hit count condition.
ACSD_CB_HitCount=Specify the hit count condition.

ACSN_Method_Breakpoint_ClassName=Class Name
ACSD_Method_Breakpoint_ClassName=Enter the class name the method is defined in.
ACSD_Class_Breakpoint_ClassName=Enter the class name.
ACSD_Field_Breakpoint_ClassName=Enter the class name the field is defined in.
ACSD_Exception_Breakpoint_ClassName=Enter the class name representing the exception.
ACSN_ConditionTF=The condition expression.
ACSN_HitCountTF=The hit count number.
ACSN_MethodBreakpointPanel=Method Breakpoint Settings
ACSD_ExcludeClasses_LBL=The classes to exclude
ACSD_IncludeClasses_LBL=The classes to match
ACSD_PrintText=The text to print when the breakpoint is hit.
ACSD_StopOn_LBL=The event type this breakpoint should stop on.
ACSD_Actions=Actions performed when the breakpoint is hit.
ACSD_Conditions=Conditions determining when the breakpoint is hit.
ACSN_LineBreakpoint=Line Breakpoint properties
ACSN_FieldBreakpoint=Field Breakpoint properties
ACSN_ExceptionBreakpoint=Exception Breakpoint properties
TTT_ExceptionClassName=The class name representing the exception.
TTT_TF_Class_Name=Optional class name to stop at with * wildcard before and after
MSG_ClassPatternWrong=Class name pattern can only contains single * at beginning or end