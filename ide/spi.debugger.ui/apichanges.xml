<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<?xml-stylesheet href="../../nbbuild/javadoctools/apichanges.xsl" type="text/xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../nbbuild/javadoctools/apichanges.dtd">

<!-- INFO FOR PEOPLE ADDING CHANGES:
[most of contents snipped - see openide's apichanges for how-to instructions]
<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>
-->

<apichanges>

<!-- First, a list of API names you may use: -->
<apidefs>
        <apidef name="DebuggerCoreSPI">Debugger Core UI SPI</apidef>
</apidefs>

<!-- ACTUAL CHANGES BEGIN HERE: -->

<changes>
    <change id="annotation-to-breakpoint">
        <api name="DebuggerCoreSPI"/>
        <summary><code>BreakpointAnnotation</code> class added.</summary>
        <version major="2" minor="11"/>
        <date day="27" month="3" year="2008"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                <code>BreakpointAnnotation</code> class added, in order to bind annotations to breakpoints.
                BreakpointEnableAction and BreakpointCustomizeAction are also moved to spi.debugger.ui module
                so thatthey do not have to be duplicated in every debugger module. It's enough to implement
                the new BreakpointAnnotation class and these action will automatically retrieve the breakpoint.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="BreakpointAnnotation"/>
        <issue number="127758"/>
    </change>

    <change id="context-events-dispatch">
        <api name="DebuggerCoreSPI"/>
        <summary><code>EditorContextDispatcher</code> class added.</summary>
        <version major="2" minor="13"/>
        <date day="18" month="6" year="2008"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                <code>EditorContextDispatcher</code> class added, in order to simplify the access to current
                active elements in the IDE (like current FileObject and editor pane) and
                to make the events dispatching more efficient - reduce the number of listeners on context switching.
                <code>EditorContextDispatcher</code> allows registration of listeners based on files MIME type, therefore
               listeners obtain change events only when context change concerns a file of the given MIME type.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="EditorContextDispatcher"/>
        <issue number="137005"/>
    </change>

    <change id="controller">
        <api name="DebuggerCoreSPI"/>
        <summary><code>AttachType.getController()</code> and
                 <code>BreakpointType.getController()</code> methods added.</summary>
        <version major="2" minor="14"/>
        <date day="17" month="9" year="2008"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                <code>AttachType.getController()</code> and <code>BreakpointType.getController()</code>
                methods added, because of the clash of Controller.isValid() and
		javax.swing.JComponent.isValid() methods.
                This cause problems when using false validity in some cases,
                therefore a separate implementation of <code>Controller</code> interface is necessary.
            </p>
        </description>
        <issue number="138717"/>
    </change>

    <change id="method-chooser">
        <api name="DebuggerCoreSPI"/>
        <summary><code>MethodChooser</code> added.</summary>
        <version major="2" minor="22"/>
        <date day="28" month="1" year="2010"/>
        <author login="dprusa"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                <code>MethodChooser</code> class added. It is a support for Step Into action
                    implementations. Providing a simple graphical interface, it allows the user
                    to select in a source file a method call the debugger should step into.
                    It has been originally implemented in the jpda debugger module, now it can be
                    reused by other debuggers.
            </p>
        </description>
        <issue number="171213"/>
    </change>
    
    <change id="ViewFactory">
        <api name="DebuggerCoreSPI"/>
        <summary><code>ViewFactory</code> and <code>ViewLifecycle</code> classes added.</summary>
        <version major="2" minor="34"/>
        <date day="17" month="8" year="2012"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
        <description>
            <p>
                <code>ViewFactory</code> class introduced to provide GUI views
                created from registered view models.
                <code>ViewLifecycle</code> class is a support class for a custom view
                based on registered view models.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="ViewFactory"/>
        <class package="org.netbeans.spi.debugger.ui" name="ViewLifecycle"/>
        <issue number="198385"/>
    </change>
    
    <change id="EngineComponentsProvider">
        <api name="DebuggerCoreSPI"/>
        <summary><code>EngineComponentsProvider</code> interface added.</summary>
        <version major="2" minor="35"/>
        <date day="19" month="9" year="2012"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
        <description>
            <p>
                <code>EngineComponentsProvider</code> interface introduced
                to provide GUI components that are associated with a debugger
                engine. <code>EngineComponentsProvider.ComponentInfo</code>
                provides information about the associated component.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="EngineComponentsProvider"/>
        <issue number="217953"/>
    </change>

    <change id="PersistentController">
        <api name="DebuggerCoreSPI"/>
        <summary><code>PersistentController</code> interface added.</summary>
        <version major="2" minor="46"/>
        <date day="21" month="7" year="2014"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
        <description>
            <p>
                <code>PersistentController</code> interface introduced
                to provide persistence mechanism to attach controllers.
                Debug action provides access to history of customized attach
                controllers.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="PersistentController"/>
        <issue number="193872"/>
    </change>

    <change id="CodeEvaluator">
        <api name="DebuggerCoreSPI"/>
        <summary><code>CodeEvaluator</code> class added.</summary>
        <version major="2" minor="49"/>
        <date day="28" month="11" year="2014"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
        <description>
            <p>
                <code>CodeEvaluator</code> class introduced
                to access and manage a component for code evaluations
                and handle it's result.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="CodeEvaluator"/>
        <issue number="248626"/>
    </change>

    <change id="GetMIMETypesOnLine">
        <api name="DebuggerCoreSPI"/>
        <summary>A method for retrieving a set of language MIME types on a line in a document is added.</summary>
        <version major="2" minor="50"/>
        <date day="20" month="04" year="2015"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
        <description>
            <p>
                Methods <code>getMIMETypesOnCurrentLine()</code> and
                <code>getMIMETypesOnLine()</code> added to
                <code>EditorContextDispatcher</code> class. They provide a set of
                MIME types of languages found on the line.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="EditorContextDispatcher"/>
        <issue number="251531"/>
    </change>

    <change id="tooltip-ui">
        <api name="DebuggerCoreSPI"/>
        <summary>Tooltip view added.</summary>
        <version major="2" minor="54"/>
        <date day="14" month="6" year="2016"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" modification="yes" semantic="compatible"/>
        <description>
            <p>
                Tooltip view is added into APIs.
                It's accessible via <code>createToolTip</code> method in <code>ViewFactory</code>,
                or <code>AbstractExpandToolTipAction</code>.
                Default model filters are pre-registered under <code>ToolTipView</code> name
                and they define the expanded tooltip node.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="ToolTipUI"/>
        <issue number="262312"/>
    </change>

    <change id="DebuggingViewFrames">
        <api name="DebuggerCoreSPI"/>
        <summary>Frames added into DebuggingView.</summary>
        <version major="2" minor="65"/>
        <date day="09" month="10" year="2020"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
        <description>
            <p>
                DebuggingView is enhanced with stack frames.
                <code>DVSupport.DVFrame</code> interface was added together with getters on
                <code>DVThread</code> class.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="DebuggingView"/>
    </change>

    <change id="DVFrameSourceMimeType">
        <api name="DebuggerCoreSPI"/>
        <summary>Source MIME type added to DVFrame.</summary>
        <version major="2" minor="67"/>
        <date day="30" month="11" year="2020"/>
        <author login="mentlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
        <description>
            <p>
                <code>DebuggingView.DVFrame</code> provides source MIME type.
            </p>
        </description>
        <class package="org.netbeans.spi.debugger.ui" name="DebuggingView"/>
    </change>

    <change id="debugger.persistence">
        <api name="DebuggerCoreSPI"/>
        <summary>Add a way not to persist breakpoints and watches.</summary>
        <version major="2" minor="72"/>
        <date day="04" month="10" year="2021"/>
        <author login="entlicher"/>
        <compatibility binary="compatible" source="compatible" addition="yes" semantic="compatible"/>
	<description>
            Class <code>org.netbeans.api.debugger.Properties</code> is used to persistently store
            debugger settings. In order to be able to decide which particular settings should be
            persistent and which not, <code>debugger.persistence</code> properties namespace is
            introduced. In particular, <code>debugger.persistence.breakpoints</code> boolean property
            determines the persistence of breakpoints and <code>debugger.persistence.watches</code>
            boolean property determines the persistence of watches.
        </description>
    </change>

</changes>

  <!-- Now the surrounding HTML text and document structure: -->

  <htmlcontents>
<!--

                            NO NO NO NO NO!

         ==============>    DO NOT EDIT ME!  <======================

          AUTOMATICALLY GENERATED FROM APICHANGES.XML, DO NOT EDIT

                SEE xml/api/doc/changes/apichanges.xml

-->
    <head>
      <title>Debugger Core UI SPI changes by date</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the Debugger Core UI SPIs. Please ask on the 
    <code>nbdev@netbeans.org</code>
    mailing list if you have any questions about the details of a
    change, or are wondering how to convert existing code to be compatible.
</p>

      <hr/><standard-changelists module-code-name="org.netbeans.spi.debugger.ui/1"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>
</apichanges>
