# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Nodes
Error=Error
Patterns=Bean Patterns
Patterns_HINT=Represents properties and other patterns available in this bean through introspection.

LBL_WaitNode=Please Wait...
LBL_BeanPatterns=Bean Patterns

# CONTROLS - PatternGroupNode menu Items
CTL_TITLE_NewProperty=New Property Pattern
CTL_TITLE_NewIdxProperty=New Indexed Property Pattern
CTL_TITLE_NewMultiCastES=New Multicast Event Set
CTL_TITLE_NewUniCastES=New Unicast Event Set
CTL_TITLE_GenerateBeanInfo=BeanInfo Editor...

# CONTROLS - PropertyPatternPanel
CTL_PropertyPanel_propertyPanel=Property
CTL_PropertyPanel_optionsPanel=Options
CTL_PropertyPanel_nameLabel=Name:
CTL_PropertyPanel_nameLabel_Mnemonic=N
CTL_PropertyPanel_typeLabel=Type:
CTL_PropertyPanel_typeLabel_Mnemonic=Y
CTL_PropertyPanel_modeLabel=Mode:
CTL_PropertyPanel_modeLabel_Mnemonic=M
CTL_PropertyPanel_boundCheckBox=Bound
CTL_PropertyPanel_boundCheckBox_Mnemonic=B
CTL_PropertyPanel_constrainedCheckBox=Constrained
CTL_PropertyPanel_constrainedCheckBox_Mnemonic=C
CTL_PropertyPanel_fieldCheckBox=Generate Field
CTL_PropertyPanel_fieldCheckBox_Mnemonic=F
CTL_PropertyPanel_returnCheckBox=Generate Return Statement
CTL_PropertyPanel_returnCheckBox_Mnemonic=R
CTL_PropertyPanel_setCheckBox=Generate Set Statement
CTL_PropertyPanel_setCheckBox_Mnemonic=T
CTL_PropertyPanel_supportCheckBox=Generate Property Change Support
CTL_PropertyPanel_supportCheckBox_Mnemonic=P

ACSD_PropertyPanelDialog=Dialog for add new property of bean patterns
ACS_PropertyPanel_nameLabelA11yDesc=Property name.
ACS_PropertyPanel_nameTextFieldA11yName=Property name text field
ACS_PropertyPanel_nameTextFieldA11yDesc=Property name.
ACS_PropertyPanel_typeLabelA11yDesc=Indexed type of this property.
ACS_PropertyPanel_typeComboBoxA11yName=Indexed type combo box
ACS_PropertyPanel_typeComboBoxA11yDesc=Combo box containing all available types.
ACS_PropertyPanel_modeLabelA11yDesc=Property mode.
ACS_PropertyPanel_modeComboBoxA11yName=Property mode combo box
ACS_PropertyPanel_modeComboBoxA11yDesc=Combo box containing all property modes.
ACS_PropertyPanel_boundCheckBoxA11yDesc=Select this checkbox to create a bound property.
ACS_PropertyPanel_constrainedCheckBoxA11yDesc=Select this checkbox to create a constrained property.
ACS_PropertyPanel_fieldCheckBoxA11yDesc=Select this checkbox to generate a private field with the same name.
ACS_PropertyPanel_returnCheckBoxA11yDesc=Select this checkbox to insert code in the body of the getter method that returns the field.
ACS_PropertyPanel_setCheckBoxA11yDesc=Select this checkbox to insert code in the body of the setter method that sets the value of the property field to the value of the setter parameter.
ACS_PropertyPanel_supportCheckBoxA11yDesc=Select this checkbox to generate all code needed for firing PropertyChangeEvents or VetoableChangeEvents.

# CONTROLS - IdxPropertyPatternPanel
CTL_IdxPropertyPanel_propertyPanel=Property
CTL_IdxPropertyPanel_optionsPanel=Options
CTL_IdxPropertyPanel_niOptionsPanel=Non-Index Options
CTL_IdxPropertyPanel_nameLabel=Name:
CTL_IdxPropertyPanel_nameLabel_Mnemonic=N
CTL_IdxPropertyPanel_typeLabel=Indexed Type:
CTL_IdxPropertyPanel_typeLabel_Mnemonic=I
CTL_IdxPropertyPanel_modeLabel=Mode:
CTL_IdxPropertyPanel_modeLabel_Mnemonic=M
CTL_IdxPropertyPanel_boundCheckBox=Bound
CTL_IdxPropertyPanel_boundCheckBox_Mnemonic=B
CTL_IdxPropertyPanel_constrainedCheckBox=Constrained
CTL_IdxPropertyPanel_constrainedCheckBox_Mnemonic=C
CTL_IdxPropertyPanel_fieldCheckBox=Generate Field
CTL_IdxPropertyPanel_fieldCheckBox_Mnemonic=F
CTL_IdxPropertyPanel_returnCheckBox=Generate Return Statement
CTL_IdxPropertyPanel_returnCheckBox_Mnemonic=R
CTL_IdxPropertyPanel_setCheckBox=Generate Set Statement
CTL_IdxPropertyPanel_setCheckBox_Mnemonic=T
CTL_IdxPropertyPanel_supportCheckBox=Generate Property Change Support
CTL_IdxPropertyPanel_supportCheckBox_Mnemonic=P
CTL_IdxPropertyPanel_niGetterCheckBox=Generate Getter
CTL_IdxPropertyPanel_niGetterCheckBox_Mnemonic=G
CTL_IdxPropertyPanel_niReturnCheckBox=With Return Statement
CTL_IdxPropertyPanel_niReturnCheckBox_Mnemonic=W
CTL_IdxPropertyPanel_niSetterCheckBox=Generate Setter
CTL_IdxPropertyPanel_niSetCheckBox=With Set Statement
CTL_IdxPropertyPanel_niSetCheckBox_Mnemonic=E

ACS_IdxPropertyPanel_nameLabelA11yDesc=Property name.
ACS_IdxPropertyPanel_nameTextFieldA11yName=Property name text field
ACS_IdxPropertyPanel_nameTextFieldA11yDesc=Property name.
ACS_IdxPropertyPanel_typeLabelA11yDesc=Indexed type of this property.
ACS_IdxPropertyPanel_typeComboBoxA11yName=Indexed type combo box
ACS_IdxPropertyPanel_typeComboBoxA11yDesc=Combo box containing all available types.
ACS_IdxPropertyPanel_modeLabelA11yDesc=Property mode.
ACS_IdxPropertyPanel_modeComboBoxA11yName=Property mode combo box
ACS_IdxPropertyPanel_modeComboBoxA11yDesc=Combo box containing all property modes.
ACS_IdxPropertyPanel_boundCheckBoxA11yDesc=Select this checkbox to create a bound property.
ACS_IdxPropertyPanel_constrainedCheckBoxA11yDesc=Select this checkbox to create a constrained property.
ACS_IdxPropertyPanel_fieldCheckBoxA11yDesc=Select this checkbox to generate a private field with the same name.
ACS_IdxPropertyPanel_returnCheckBoxA11yDesc=Select this checkbox to insert code in the body of the getter method that returns the field.
ACS_IdxPropertyPanel_setCheckBoxA11yDesc=Select this checkbox to insert code in the body of the setter method that sets the value of the property field to the value of the setter parameter.
ACS_IdxPropertyPanel_supportCheckBoxA11yDesc=Select this checkbox to generate all code needed for firing PropertyChangeEvents or VetoableChangeEvents.
ACS_IdxPropertyPanel_niGetterCheckBoxA11yDesc=Select this checkbox to generate getter methods that apply to all elements of the array.
ACS_IdxPropertyPanel_niReturnCheckBoxA11yDesc=Select this checkbox to add return statement to the getter methods.
ACS_IdxPropertyPanel_niSetterCheckBoxA11yDesc=Select this checkbox to generate setter methods that apply to all elements of the array.
ACS_IdxPropertyPanel_niSetCheckBoxA11yDesc=Select this checkbox to add set statement to the setter methods.

# CONTROLS - EventSetPatternPanel
CTL_EventSetPanel_eventSetPanel=Event Set
CTL_EventSetPanel_optionsPanel=Options
CTL_EventSetPanel_typeLabel=Type:
CTL_EventSetPanel_typeLabel_Mnemonic=T
CTL_EventSetPanel_textLabel=(Fully qualified listener interface name)
CTL_EventSetPanel_emptyRadioButton=Generate Empty
CTL_EventSetPanel_emptyRadioButton_Mnemonic=G
CTL_EventSetPanel_alRadioButton=Generate ArrayList Implementation
CTL_EventSetPanel_alRadioButton_Mnemonic=A
CTL_EventSetPanel_ellRadioButton=Generate EventListenerList Implementation
CTL_EventSetPanel_ellRadioButton_Mnemonic=E
CTL_EventSetPanel_fireCheckBox=Generate Event Firing Methods
CTL_EventSetPanel_fireCheckBox_Mnemonic=F
CTL_EventSetPanel_passEventCheckBox=Pass Event as Parameter
CTL_EventSetPanel_passEventCheckBox_Mnemonic=P

ACSD_EventSetPanelDialog=Dialog for add new multicast event source by bean patterns
ACS_EventSetPanel_typeLabelA11yDesc=Event type
ACS_EventSetPanel_typeComboBoxA11yName=Event type combo box
ACS_EventSetPanel_typeComboBoxA11yDesc=Combo box containing all event types.
ACS_EventSetPanel_textLabelA11yDesc=Fully qualified listener interface name.
ACS_EventSetPanel_emptyRadioButtonA11yDesc=Generates an empty implementation.
ACS_EventSetPanel_alRadioButtonA11yDesc=Generates a simple implementation for multiple listeners.
ACS_EventSetPanel_ellRadioButtonA11yDesc=Generates an implementation using the EventListenerList support class from the javax.swing.event package.
ACS_EventSetPanel_fireCheckBoxA11yDesc=Select this checkbox to generate event firing methods for all listeners.
ACS_EventSetPanel_passEventCheckBoxA11yDesc=Select this checkbox to add the event as a parameter to each event firing method.

# CONTROLS - UEventPatternPanel
CTL_UEventSetPanel_eventSetPanel=Event Set
CTL_UEventSetPanel_optionsPanel=Options
CTL_UEventSetPanel_typeLabel=Type:
CTL_UEventSetPanel_typeLabel_Mnemonic=T
CTL_UEventSetPanel_textLabel=(Fully qualified listener interface name)
CTL_UEventSetPanel_emptyRadioButton=Generate Empty
CTL_UEventSetPanel_emptyRadioButton_Mnemonic=G
CTL_UEventSetPanel_implRadioButton=Generate Implementation
CTL_UEventSetPanel_implRadioButton_Mnemonic=E
CTL_UEventSetPanel_fireCheckBox=Generate Event Firing Methods
CTL_UEventSetPanel_fireCheckBox_Mnemonic=F
CTL_UEventSetPanel_passEventCheckBox=Pass Event as Parameter
CTL_UEventSetPanel_passEventCheckBox_Mnemonic=P

ACSD_UEventSetPanelDialog=Dialog for add new unicast event source by bean patterns
ACS_UEventSetPanel_typeLabelA11yDesc=Event type
ACS_UEventSetPanel_typeComboBoxA11yName=Event type combo box
ACS_UEventSetPanel_typeComboBoxA11yDesc=Combo box containing all event types.
ACS_UEventSetPanel_textLabelA11yDesc=Fully qualified listener interface name.
ACS_UEventSetPanel_emptyRadioButtonA11yDesc=Generates an empty implementation.
ACS_UEventSetPanel_implRadioButtonA11yDesc=Generates an implementation using the EventListenerList support class from the javax.swing.event package.
ACS_UEventSetPanel_fireCheckBoxA11yDesc=Select this checkbox to generate event firing methods for all listeners.
ACS_UEventSetPanel_passEventCheckBoxA11yDesc=Select this checkbox to add the event as a parameter to each event firing method.

# Properties names
PROP_initializerElementFormat=Initializers

# Hints for nodes
HINT_BeanPatterns=Bean Patterns
HINT_Property=Property Pattern
HINT_IndexedProperty=Indexed Property Pattern
HINT_UnicastEventSet=Unicast Event Source Pattern
HINT_MulticastEventSet=Multicast Event Source Pattern
HINT_ReadWriteProperty=(r/w)
HINT_ReadOnlyProperty=(r/-)
HINT_WriteOnlyProperty=(-/w)

HINT_initializerElementFormat=Display name format for initializers.

# Default comments for bean pattern methods and fields

COMMENT_PropertyField=Holds value of property {0}.

COMMENT_PropertyGetter=Getter for property {0}.\n\
\t@return Value of property {0}.\n

COMMENT_PropertySetter=Setter for property {0}.\n\
\t@param {1} New value of property {0}.\n

COMMENT_IdxPropertyGetter=Indexed getter for property {0}.\n\
\t@param index Index of the property.\n\
\t@return Value of the property at <CODE>index</CODE>.\n

COMMENT_IdxPropertySetter=Indexed setter for property {0}.\n\
\t@param index Index of the property.\n\
\t@param {0} New value of the property at <CODE>index</CODE>.\n

COMMENT_AddListenerMethod=Registers {0} to receive events.\n\
\t\t@param listener The listener to register.\n

COMMENT_RemoveListenerMethod=Removes {0} from the list of listeners.\n\
\t\t@param listener The listener to remove.\n

COMMENT_PropertyChangeSupport=Utility field used by bound properties.

COMMENT_VetoableChangeSupport=Utility field used by constrained properties.

COMMENT_AddPropertyChangeListener=Adds a PropertyChangeListener to the listener list.\n\
\t\t  @param l The listener to add.\n

COMMENT_RemovePropertyChangeListener=Removes a PropertyChangeListener from the listener list.\n\
\t\t  @param l The listener to remove.\n

COMMENT_AddVetoableChangeListener=Adds a VetoableChangeListener to the listener list.\n\
\t\t  @param l The listener to add.\n

COMMENT_RemoveVetoableChangeListener=Removes a VetoableChangeListener from the listener list.\n\
\t\t  @param l The listener to remove.\n

COMMENT_ListenerArrayList=Utility field holding list of {0}s.

COMMENT_EventListenerList=Utility field used by event firing mechanism.

COMMENT_UnicastEventListener=Utility field holding the {0}.

COMMENT_FireMethodMC=Notifies all registered listeners about the event.\n

COMMENT_FireMethodUC=Notifies the registered listener about the event.\n

COMMENT_Tag_ThrowsPropertyVeto=\n@throws PropertyVetoException if some vetoable listeners reject the new value\n


# Element properties
PROP_type=Type
PROP_name=Name
PROP_mode=Mode
PROP_getter=Getter
PROP_setter=Setter
PROP_estimatedField=Estimated Field
PROP_indexedType=Indexed Type
PROP_indexedGetter=Indexed Getter
PROP_indexedSetter=Indexed Setter
PROP_addListener=addListener Method
PROP_removeListener=removeListener Method
PROP_isUnicast=Is Unicast

HINT_type=Value type of this property.
HINT_name=Name of this property.
HINT_mode=Specifies whether element is readable and writable, generates getter and setter appropriately.
HINT_estimatedField=Sets the estimated field for this property.
HINT_getter=Getter method of this property.
HINT_setter=Setter method of this property.
HINT_indexedType=Indexed type of this property.
HINT_indexedGetter=Indexed getter method of this property.
HINT_indexedSetter=Indexed setter method of this property.
HINT_addListener=Method for adding listeners.
HINT_removeListener=Method for removing listeners.
HINT_isUnicast=If True, only one listener can be registred.

# Message from node element
MSG_Cannot_Write=Cannot modify a read-only property.
MSG_Not_Valid_Identifier=The specified name is not a valid Java identifier.
# {0} = Propertyname
MSG_Property_Exists=A property named {0} already exists.
# {0} = EventSet type
MSG_EventSet_Exists=An event set of type {0} already exists.
MSG_Not_Valid_Type=The specified type is not valid.
MSG_InvalidListenerInterface=Invalid type. The type you specified is not a subclass of java.util.EventListener.
MSG_ListenerInterfaceNotFound=Class for listener interface not found.
# {0} = Propertyname
FMT_ChangeToIs=Do you want to change the name of the getter to is{0} ?
# {0} = Propertyname
FMT_ChangeMethodBody=Do you want to change the setter body of the setter {0}\n to reflect changes to PropertyChangeSupport?
# {0} = Field name
FMT_ChangeFieldName=Do you want to change the property name in the estimated field: {0} and the body of setter and getter?
# {0} = Field name
FMT_ChangeFieldType=Do you want to change the property type in the estimated field: {0} ?
# {0} = Field name
FMT_DeleteField=Do you also want to delete the estimated field: {0} ?
# Message from deleting an event
FMT_DeleteFire=Do you also want to delete the event firing methods?\n(Warning: If you choose 'Yes', bodies of these methods will also be removed.)
# {0} = Event source name
FMT_ChangeEventSourceName=Do you want to apply the type change to the method names of this event source? The new names will be: add{0}, remove{0}.
# {0} = Event source name
FMT_InvalidEventSourceName={0} is not a valid name for an event source because it does not end with "Listener".

# Property editors
LAB_NoMethod=<None>
LAB_NoField=<None>
LAB_ReadWriteMODE=Read / Write
LAB_ReadOnlyMODE=Read Only
LAB_WriteOnlyMODE=Write Only
LAB_Unsupported=Unsupported

# New types of the ClassElement
MENU_CREATE_PROPERTY=Property
MENU_CREATE_IDXPROPERTY=Indexed Property
MENU_CREATE_UNICASTSE=Unicast Event Source
MENU_CREATE_MULTICASTSE=Multicast Event Source

#unable to create field for property
MSG_Cannot_Create_Field=A problem was encountered during property field generation.\nThe field for the property will not be created.
MSG_Delete_Setter=Setter method will be deleted.
MSG_Delete_Getter=Getter method will be deleted.
MSG_Delete_Getters=Getter methods will be deleted.
MSG_Delete_Setters=Setter methods will be deleted.
MSG_Continue_Confirm=\nDo you wish to continue?

#found InheritanceEvent
MSG_Inheritance_Found=Superclass {0} contains {1}\r\nDo you want to use this support?

#Property names for option settings
PROP_Option_Menu=Beans Property
PROP_Option_Prop_Style=Style of Declared Variable
HINT_Option_Prop_Style=Sets the style used to create declared variables.

MSG_Option_Gen_Undescored=_property_Value
MSG_Option_Gen_This=this.property_Value
Services/org-netbeans-modules-beans-beans.settings=Beans Property

#localized manifest
OpenIDE-Module-Name=Bean Patterns
OpenIDE-Module-Display-Category=Java
OpenIDE-Module-Short-Description=Support for creating JavaBeans(TM) components.
OpenIDE-Module-Long-Description=The Bean Patterns module provides support for developing JavaBeans(TM) components \
                in the IDE, such as generation of properties, event sets, and BeanInfo.

# Human-readable names for Bean templates:
Templates/Beans=JavaBeans Objects
Templates/Beans/Bean.java=JavaBeans Component
Templates/Beans/BeanInfo.java=BeanInfo
Templates/Beans/NoIconBeanInfo.java=BeanInfo w/o Icon
Templates/Beans/Customizer.java=Customizer
Templates/Beans/PropertyEditor.java=Property Editor

#brandable types
## filling for Types combo
PropertyPatternPanel_Types=boolean|char|byte|short|int|long|float|double|String
## selected type of the Types combo
PropertyPatternPanel_SelectedType=String
## filling for Types combo
IdxPropertyPatternPanel_Types=boolean|char|byte|short|int|long|float|double|String
## selected type of the Types combo
IdxPropertyPatternPanel_SelectedType=String

org.netbeans.modules.java.codestyle/AddProperty.freemarker=Add Property
