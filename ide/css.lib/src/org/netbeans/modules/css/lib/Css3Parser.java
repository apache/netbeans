// $ANTLR 3.5.3 ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g 2025-05-23 06:42:20

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// DO NOT EDIT THIS FILE MANUALLY!
// SEE Css3.g FOR INSTRUCTIONS

package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINER_SYM", "CONTAINS", "COUNTER_STYLE_SYM", 
		"CP_DOTS", "CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", 
		"DOT", "E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "HEXCHAR_WILDCARD", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", 
		"INCLUDES", "INVALID", "J", "K", "KEYFRAMES_SYM", "L", "LAYER_SYM", "LBRACE", 
		"LBRACKET", "LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", "LEFTTOP_SYM", "LENGTH", 
		"LESS", "LESS_AND", "LESS_JS_STRING", "LESS_OR_EQ", "LESS_REST", "LINE_COMMENT", 
		"LPAREN", "M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", "MOZ_DOMAIN", 
		"MOZ_REGEXP", "MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", "NL", "NMCHAR", 
		"NMSTART", "NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", "PAGE_SYM", 
		"PERCENTAGE", "PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", "RBRACE", 
		"RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", 
		"RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", 
		"SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_ELSEIF", "SASS_ERROR", 
		"SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", "SASS_FOR", "SASS_FORWARD", 
		"SASS_FUNCTION", "SASS_GLOBAL", "SASS_IF", "SASS_INCLUDE", "SASS_MIXIN", 
		"SASS_OPTIONAL", "SASS_RETURN", "SASS_USE", "SASS_VAR", "SASS_WARN", "SASS_WHILE", 
		"SEMI", "SOLIDUS", "STAR", "STRING", "SUPPORTS_SYM", "T", "TILDE", "TIME", 
		"TOPCENTER_SYM", "TOPLEFTCORNER_SYM", "TOPLEFT_SYM", "TOPRIGHTCORNER_SYM", 
		"TOPRIGHT_SYM", "U", "UNICODE", "URANGE", "URI", "URL", "V", "VARIABLE", 
		"W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINER_SYM=22;
	public static final int CONTAINS=23;
	public static final int COUNTER_STYLE_SYM=24;
	public static final int CP_DOTS=25;
	public static final int CP_EQ=26;
	public static final int CP_NOT_EQ=27;
	public static final int D=28;
	public static final int DASHMATCH=29;
	public static final int DCOLON=30;
	public static final int DIMENSION=31;
	public static final int DOT=32;
	public static final int E=33;
	public static final int EMS=34;
	public static final int ENDS=35;
	public static final int ESCAPE=36;
	public static final int EXCLAMATION_MARK=37;
	public static final int EXS=38;
	public static final int F=39;
	public static final int FONT_FACE_SYM=40;
	public static final int FREQ=41;
	public static final int G=42;
	public static final int GEN=43;
	public static final int GREATER=44;
	public static final int GREATER_OR_EQ=45;
	public static final int H=46;
	public static final int HASH=47;
	public static final int HASH_SYMBOL=48;
	public static final int HEXCHAR=49;
	public static final int HEXCHAR_WILDCARD=50;
	public static final int I=51;
	public static final int IDENT=52;
	public static final int IMPORTANT_SYM=53;
	public static final int IMPORT_SYM=54;
	public static final int INCLUDES=55;
	public static final int INVALID=56;
	public static final int J=57;
	public static final int K=58;
	public static final int KEYFRAMES_SYM=59;
	public static final int L=60;
	public static final int LAYER_SYM=61;
	public static final int LBRACE=62;
	public static final int LBRACKET=63;
	public static final int LEFTBOTTOM_SYM=64;
	public static final int LEFTMIDDLE_SYM=65;
	public static final int LEFTTOP_SYM=66;
	public static final int LENGTH=67;
	public static final int LESS=68;
	public static final int LESS_AND=69;
	public static final int LESS_JS_STRING=70;
	public static final int LESS_OR_EQ=71;
	public static final int LESS_REST=72;
	public static final int LINE_COMMENT=73;
	public static final int LPAREN=74;
	public static final int M=75;
	public static final int MEDIA_SYM=76;
	public static final int MINUS=77;
	public static final int MOZ_DOCUMENT_SYM=78;
	public static final int MOZ_DOMAIN=79;
	public static final int MOZ_REGEXP=80;
	public static final int MOZ_URL_PREFIX=81;
	public static final int N=82;
	public static final int NAME=83;
	public static final int NAMESPACE_SYM=84;
	public static final int NL=85;
	public static final int NMCHAR=86;
	public static final int NMSTART=87;
	public static final int NONASCII=88;
	public static final int NOT=89;
	public static final int NUMBER=90;
	public static final int O=91;
	public static final int OPEQ=92;
	public static final int P=93;
	public static final int PAGE_SYM=94;
	public static final int PERCENTAGE=95;
	public static final int PERCENTAGE_SYMBOL=96;
	public static final int PIPE=97;
	public static final int PLUS=98;
	public static final int Q=99;
	public static final int R=100;
	public static final int RBRACE=101;
	public static final int RBRACKET=102;
	public static final int REM=103;
	public static final int RESOLUTION=104;
	public static final int RIGHTBOTTOM_SYM=105;
	public static final int RIGHTMIDDLE_SYM=106;
	public static final int RIGHTTOP_SYM=107;
	public static final int RPAREN=108;
	public static final int S=109;
	public static final int SASS_AT_ROOT=110;
	public static final int SASS_CONTENT=111;
	public static final int SASS_DEBUG=112;
	public static final int SASS_DEFAULT=113;
	public static final int SASS_EACH=114;
	public static final int SASS_ELSE=115;
	public static final int SASS_ELSEIF=116;
	public static final int SASS_ERROR=117;
	public static final int SASS_EXTEND=118;
	public static final int SASS_EXTEND_ONLY_SELECTOR=119;
	public static final int SASS_FOR=120;
	public static final int SASS_FORWARD=121;
	public static final int SASS_FUNCTION=122;
	public static final int SASS_GLOBAL=123;
	public static final int SASS_IF=124;
	public static final int SASS_INCLUDE=125;
	public static final int SASS_MIXIN=126;
	public static final int SASS_OPTIONAL=127;
	public static final int SASS_RETURN=128;
	public static final int SASS_USE=129;
	public static final int SASS_VAR=130;
	public static final int SASS_WARN=131;
	public static final int SASS_WHILE=132;
	public static final int SEMI=133;
	public static final int SOLIDUS=134;
	public static final int STAR=135;
	public static final int STRING=136;
	public static final int SUPPORTS_SYM=137;
	public static final int T=138;
	public static final int TILDE=139;
	public static final int TIME=140;
	public static final int TOPCENTER_SYM=141;
	public static final int TOPLEFTCORNER_SYM=142;
	public static final int TOPLEFT_SYM=143;
	public static final int TOPRIGHTCORNER_SYM=144;
	public static final int TOPRIGHT_SYM=145;
	public static final int U=146;
	public static final int UNICODE=147;
	public static final int URANGE=148;
	public static final int URI=149;
	public static final int URL=150;
	public static final int V=151;
	public static final int VARIABLE=152;
	public static final int W=153;
	public static final int WEBKIT_KEYFRAMES_SYM=154;
	public static final int WS=155;
	public static final int X=156;
	public static final int Y=157;
	public static final int Z=158;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "combinator", "body", "sizeFeatureRangeSingle", "synpred35_Css3", 
		"synpred29_Css3", "mediaFeature", "synpred20_Css3", "synpred66_Css3", 
		"synpred26_Css3", "webkitKeyframeSelectors", "synpred48_Css3", "rule", 
		"cssClass", "sass_use_with_declaration", "styleInParens", "synpred34_Css3", 
		"namespace", "sass_error", "cp_mixin_name", "synpred60_Css3", "mediaFeatureValue", 
		"synpred58_Css3", "containerQueryInParens", "layerName", "declarations", 
		"pseudoPage", "synpred18_Css3", "sass_use_as", "synpred50_Css3", "braceBlock", 
		"typeSelector", "mediaCondition", "sass_use_with", "sass_map_pair", "braceBlock2", 
		"cp_variable_declaration", "synpred56_Css3", "sass_each_variables", "sass_forward_with", 
		"synpred8_Css3", "synpred36_Css3", "synpred17_Css3", "mediaQuery", "supportsWithOperator", 
		"sass_while", "namespacePrefix", "styleQueryConjunction", "property", 
		"sass_selector_interpolation_exp", "importItem", "elementSubsequent", 
		"mediaQueryList", "prio", "sass_debug", "synpred54_Css3", "mediaInParens", 
		"containerQueryWithOperator", "cp_expression_operator", "simpleSelectorSequence", 
		"bracketBlock", "synpred13_Css3", "declaration", "webkitKeyframesBlock", 
		"synpred22_Css3", "syncTo_SEMI", "resourceIdentifier", "cp_mixin_call_args", 
		"synpred59_Css3", "supportsDecl", "supportsConjunction", "imports", "synpred1_Css3", 
		"less_import_types", "less_selector_interpolation_exp", "synpred55_Css3", 
		"charSetValue", "synpred27_Css3", "media", "mediaBody", "styleQueryDisjunction", 
		"sass_use", "webkitKeyframes", "synpred2_Css3", "synpred14_Css3", "styleCondition", 
		"synpred46_Css3", "componentValueOuter", "cp_math_expressions", "less_selector_interpolation", 
		"less_condition_operator", "importLayer", "sass_function_declaration", 
		"mediaQueryOperator", "mediaExpression", "synpred39_Css3", "supportsCondition", 
		"atRuleId", "synpred32_Css3", "mediaBodyItem", "hexColor", "supportsInParens", 
		"counterStyle", "less_fn_name", "syncToDeclarationsRule", "containerQueryConjunction", 
		"namespacePrefixName", "styleFeature", "mediaType", "synpred15_Css3", 
		"less_condition", "fnAttributes", "functionName", "synpred63_Css3", "cp_expression", 
		"less_when", "sass_forward", "synpred37_Css3", "supportsDisjunction", 
		"pseudo", "sass_forward_hide", "styleSheet", "mediaRangeExplicitValue", 
		"layerBody", "cp_expression_atom", "sass_control_block", "sizeFeatureRangeBetweenLt", 
		"synpred57_Css3", "synpred7_Css3", "synpred5_Css3", "cp_mixin_call_arg", 
		"cp_expression_list", "sass_forward_with_declaration", "sizeFeatureRangeBetweenGt", 
		"slAttributeName", "cp_variable", "fnAttributeValue", "synpred40_Css3", 
		"sass_control", "cp_term_symbol", "synpred67_Css3", "synpred16_Css3", 
		"synpred30_Css3", "synpred44_Css3", "preservedToken", "preservedTokenTopLevel", 
		"synpred53_Css3", "syncTo_RBRACE", "synpred52_Css3", "synpred42_Css3", 
		"page", "key_or", "cp_math_expression_atom", "fnAttribute", "selectorsGroup", 
		"mediaConditionWithoutOr", "less_function_in_condition", "sizeFeatureName", 
		"synpred11_Css3", "synpred45_Css3", "synpred33_Css3", "cp_mixin_declaration", 
		"key_and", "key_only", "synpred64_Css3", "synpred65_Css3", "unaryOperator", 
		"sizeFeature", "namespaces", "moz_document", "cssId", "sass_else", "parenBlock", 
		"layerBlock", "containerAtRule", "synpred47_Css3", "slAttributeValue", 
		"synpred51_Css3", "synpred19_Css3", "supportsFeature", "generic_at_rule", 
		"sass_for", "cp_math_expression", "cp_mixin_block", "fontFace", "sass_nested_properties", 
		"synpred31_Css3", "sass_forward_show", "synpred41_Css3", "operator", "cp_propertyValue", 
		"synpred68_Css3", "synpred6_Css3", "sass_map_name", "layerStatement", 
		"syncToFollow", "sass_content", "sass_if", "moz_document_function", "containerQueryDisjunction", 
		"synpred4_Css3", "componentValue", "charSet", "synpred61_Css3", "at_rule", 
		"selector", "synpred24_Css3", "sass_extend_only_selector", "synpred28_Css3", 
		"synpred21_Css3", "styleQuery", "supportsAtRule", "synpred12_Css3", "ws", 
		"sizeFeatureValue", "bodyItem", "containerName", "expression", "sass_function_return", 
		"sizeFeatureFixedValue", "synpred25_Css3", "function", "slAttribute", 
		"cp_mixin_call", "synpred43_Css3", "vendorAtRule", "synpred49_Css3", "containerCondition", 
		"sass_interpolation_expression_var", "esPred", "sass_extend", "styleConditionWithOperator", 
		"elementName", "expressionPredicate", "synpred10_Css3", "cp_arg", "synpred3_Css3", 
		"synpred23_Css3", "sass_control_expression", "margin_sym", "mediaComparisonOperator", 
		"less_mixin_guarded", "sass_map", "propertyDeclaration", "propertyValue", 
		"cp_args_list", "synpred9_Css3", "sass_function_name", "mediaFeatureRangeContext", 
		"term", "margin", "sass_map_pairs", "synpred38_Css3", "fnAttributeName", 
		"sass_each", "layerAtRule", "synpred62_Css3", "sass_forward_as"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, true, false, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, true, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, true, false, false, false, true, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, true, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, true, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    true, true, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, true, false, false, false, false, 
		    true, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, true, false, false, true, false, 
		    false, false, false, false, false, true, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, true, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }

	    private boolean tokenNameEquals2(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(2).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	    private boolean tokenNameStartsWith(String prefix) {
	        return input.LT(1).getText() != null
	            && input.LT(1).getText().startsWith(prefix);
	    }

	    /**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	        /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:284:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(284, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:285:5: ( ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:286:6: ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(286,6);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:286:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:286:6: ws
					{
					dbg.location(286,6);
					pushFollow(FOLLOW_ws_in_styleSheet102);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(287,6);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:287:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:287:8: charSet ( ws )?
					{
					dbg.location(287,8);
					pushFollow(FOLLOW_charSet_in_styleSheet112);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(287,16);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:287:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:287:16: ws
							{
							dbg.location(287,16);
							pushFollow(FOLLOW_ws_in_styleSheet114);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(288,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:288:9: ( layerStatement ( ws )? )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:288:11: layerStatement ( ws )?
					{
					dbg.location(288,11);
					pushFollow(FOLLOW_layerStatement_in_styleSheet130);
					layerStatement();
					state._fsp--;
					if (state.failed) return;dbg.location(288,26);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:288:26: ( ws )?
					int alt4=2;
					try { dbg.enterSubRule(4);
					try { dbg.enterDecision(4, decisionCanBacktrack[4]);

					int LA4_0 = input.LA(1);
					if ( (LA4_0==COMMENT||LA4_0==NL||LA4_0==WS) ) {
						alt4=1;
					}
					} finally {dbg.exitDecision(4);}

					switch (alt4) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:288:26: ws
							{
							dbg.location(288,26);
							pushFollow(FOLLOW_ws_in_styleSheet132);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(4);}

					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(289,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:289:9: ( imports )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			switch ( input.LA(1) ) {
				case IMPORT_SYM:
					{
					int LA6_1 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt6=1;
					}
					}
					break;
				case SASS_USE:
					{
					int LA6_2 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt6=1;
					}
					}
					break;
				case SASS_FORWARD:
					{
					int LA6_3 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt6=1;
					}
					}
					break;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:289:9: imports
					{
					dbg.location(289,9);
					pushFollow(FOLLOW_imports_in_styleSheet146);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(290,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:290:9: ( namespaces )?
			int alt7=2;
			try { dbg.enterSubRule(7);
			try { dbg.enterDecision(7, decisionCanBacktrack[7]);

			try {
				isCyclicDecision = true;
				alt7 = dfa7.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(7);}

			switch (alt7) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:290:9: namespaces
					{
					dbg.location(290,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet157);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(7);}
			dbg.location(291,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:291:9: ( body )?
			int alt8=2;
			try { dbg.enterSubRule(8);
			try { dbg.enterDecision(8, decisionCanBacktrack[8]);

			int LA8_0 = input.LA(1);
			if ( ((LA8_0 >= AT_IDENT && LA8_0 <= AT_SIGN)||(LA8_0 >= BOTTOMCENTER_SYM && LA8_0 <= BOTTOMRIGHT_SYM)||(LA8_0 >= CHARSET_SYM && LA8_0 <= COLON)||LA8_0==CONTAINER_SYM||LA8_0==COUNTER_STYLE_SYM||(LA8_0 >= DCOLON && LA8_0 <= DOT)||LA8_0==FONT_FACE_SYM||(LA8_0 >= GEN && LA8_0 <= GREATER)||(LA8_0 >= HASH && LA8_0 <= HASH_SYMBOL)||LA8_0==IDENT||LA8_0==IMPORT_SYM||LA8_0==KEYFRAMES_SYM||LA8_0==LAYER_SYM||(LA8_0 >= LBRACKET && LA8_0 <= LEFTTOP_SYM)||LA8_0==LESS_AND||(LA8_0 >= MEDIA_SYM && LA8_0 <= MOZ_DOCUMENT_SYM)||LA8_0==NAMESPACE_SYM||LA8_0==PAGE_SYM||(LA8_0 >= PIPE && LA8_0 <= PLUS)||(LA8_0 >= RIGHTBOTTOM_SYM && LA8_0 <= RIGHTTOP_SYM)||(LA8_0 >= SASS_AT_ROOT && LA8_0 <= SASS_DEBUG)||(LA8_0 >= SASS_EACH && LA8_0 <= SASS_ELSE)||(LA8_0 >= SASS_EXTEND && LA8_0 <= SASS_FUNCTION)||(LA8_0 >= SASS_IF && LA8_0 <= SASS_MIXIN)||(LA8_0 >= SASS_RETURN && LA8_0 <= SEMI)||LA8_0==STAR||LA8_0==SUPPORTS_SYM||LA8_0==TILDE||(LA8_0 >= TOPCENTER_SYM && LA8_0 <= TOPRIGHT_SYM)||LA8_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt8=1;
			}
			} finally {dbg.exitDecision(8);}

			switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:291:9: body
					{
					dbg.location(291,9);
					pushFollow(FOLLOW_body_in_styleSheet168);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(8);}
			dbg.location(292,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet176); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(293, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:295:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(295, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:296:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:297:2: ( namespace ( ws )? )+
			{
			dbg.location(297,2);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:297:2: ( namespace ( ws )? )+
			int cnt10=0;
			try { dbg.enterSubRule(10);

			loop10:
			while (true) {
				int alt10=2;
				try { dbg.enterDecision(10, decisionCanBacktrack[10]);

				try {
					isCyclicDecision = true;
					alt10 = dfa10.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(10);}

				switch (alt10) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:297:4: namespace ( ws )?
					{
					dbg.location(297,4);
					pushFollow(FOLLOW_namespace_in_namespaces193);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(297,14);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:297:14: ( ws )?
					int alt9=2;
					try { dbg.enterSubRule(9);
					try { dbg.enterDecision(9, decisionCanBacktrack[9]);

					int LA9_0 = input.LA(1);
					if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
						alt9=1;
					}
					} finally {dbg.exitDecision(9);}

					switch (alt9) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:297:14: ws
							{
							dbg.location(297,14);
							pushFollow(FOLLOW_ws_in_namespaces195);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(9);}

					}
					break;

				default :
					if ( cnt10 >= 1 ) break loop10;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(10, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt10++;
			}
			} finally {dbg.exitSubRule(10);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(298, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:300:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(300, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(301,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace211); if (state.failed) return;dbg.location(301,19);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:19: ( ws )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==COMMENT||LA11_0==NL||LA11_0==WS) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:19: ws
					{
					dbg.location(301,19);
					pushFollow(FOLLOW_ws_in_namespace213);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(301,23);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:23: ( namespacePrefixName ( ws )? )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==IDENT) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:24: namespacePrefixName ( ws )?
					{
					dbg.location(301,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace217);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(301,44);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:44: ( ws )?
					int alt12=2;
					try { dbg.enterSubRule(12);
					try { dbg.enterDecision(12, decisionCanBacktrack[12]);

					int LA12_0 = input.LA(1);
					if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
						alt12=1;
					}
					} finally {dbg.exitDecision(12);}

					switch (alt12) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:44: ws
							{
							dbg.location(301,44);
							pushFollow(FOLLOW_ws_in_namespace219);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(12);}

					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(301,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace224);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(301,69);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:69: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:301:69: ws
					{
					dbg.location(301,69);
					pushFollow(FOLLOW_ws_in_namespace226);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(301,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace229); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(302, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:304:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(304, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:305:3: ( IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:305:5: IDENT
			{
			dbg.location(305,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName242); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(306, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:308:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(308, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:309:3: ( STRING | URI )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(309,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(310, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:312:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(312, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:313:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:313:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(313,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet276); if (state.failed) return;dbg.location(313,21);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:313:21: ( ws )?
			int alt15=2;
			try { dbg.enterSubRule(15);
			try { dbg.enterDecision(15, decisionCanBacktrack[15]);

			int LA15_0 = input.LA(1);
			if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
				alt15=1;
			}
			} finally {dbg.exitDecision(15);}

			switch (alt15) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:313:21: ws
					{
					dbg.location(313,21);
					pushFollow(FOLLOW_ws_in_charSet278);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(15);}
			dbg.location(313,25);
			pushFollow(FOLLOW_charSetValue_in_charSet281);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(313,38);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:313:38: ( ws )?
			int alt16=2;
			try { dbg.enterSubRule(16);
			try { dbg.enterDecision(16, decisionCanBacktrack[16]);

			int LA16_0 = input.LA(1);
			if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
				alt16=1;
			}
			} finally {dbg.exitDecision(16);}

			switch (alt16) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:313:38: ws
					{
					dbg.location(313,38);
					pushFollow(FOLLOW_ws_in_charSet283);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(16);}
			dbg.location(313,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet286); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(314, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:316:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(316, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:317:2: ( STRING )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:317:4: STRING
			{
			dbg.location(317,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue300); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(318, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:320:1: imports : ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(320, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:321:2: ( ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:322:2: ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+
			{
			dbg.location(322,2);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:322:2: ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+
			int cnt23=0;
			try { dbg.enterSubRule(23);

			loop23:
			while (true) {
				int alt23=4;
				try { dbg.enterDecision(23, decisionCanBacktrack[23]);

				switch ( input.LA(1) ) {
				case IMPORT_SYM:
					{
					int LA23_30 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt23=1;
					}

					}
					break;
				case SASS_USE:
					{
					int LA23_39 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt23=2;
					}

					}
					break;
				case SASS_FORWARD:
					{
					int LA23_42 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt23=3;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(23);}

				switch (alt23) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:323:13: ( importItem ( ws )? SEMI ( ws )? )
					{
					dbg.location(323,13);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:323:13: ( importItem ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:323:15: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(323,15);
					pushFollow(FOLLOW_importItem_in_imports328);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(323,26);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:323:26: ( ws )?
					int alt17=2;
					try { dbg.enterSubRule(17);
					try { dbg.enterDecision(17, decisionCanBacktrack[17]);

					int LA17_0 = input.LA(1);
					if ( (LA17_0==COMMENT||LA17_0==NL||LA17_0==WS) ) {
						alt17=1;
					}
					} finally {dbg.exitDecision(17);}

					switch (alt17) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:323:26: ws
							{
							dbg.location(323,26);
							pushFollow(FOLLOW_ws_in_imports330);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(17);}
					dbg.location(323,30);
					match(input,SEMI,FOLLOW_SEMI_in_imports333); if (state.failed) return;dbg.location(323,35);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:323:35: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:323:35: ws
							{
							dbg.location(323,35);
							pushFollow(FOLLOW_ws_in_imports335);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:325:13: {...}? ( sass_use ( ws )? SEMI ( ws )? )
					{
					dbg.location(325,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "imports", "isScssSource()");
					}dbg.location(325,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:325:31: ( sass_use ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:325:33: sass_use ( ws )? SEMI ( ws )?
					{
					dbg.location(325,33);
					pushFollow(FOLLOW_sass_use_in_imports370);
					sass_use();
					state._fsp--;
					if (state.failed) return;dbg.location(325,42);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:325:42: ( ws )?
					int alt19=2;
					try { dbg.enterSubRule(19);
					try { dbg.enterDecision(19, decisionCanBacktrack[19]);

					int LA19_0 = input.LA(1);
					if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
						alt19=1;
					}
					} finally {dbg.exitDecision(19);}

					switch (alt19) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:325:42: ws
							{
							dbg.location(325,42);
							pushFollow(FOLLOW_ws_in_imports372);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(19);}
					dbg.location(325,46);
					match(input,SEMI,FOLLOW_SEMI_in_imports375); if (state.failed) return;dbg.location(325,51);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:325:51: ( ws )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						alt20=1;
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:325:51: ws
							{
							dbg.location(325,51);
							pushFollow(FOLLOW_ws_in_imports377);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:327:13: {...}? ( sass_forward ( ws )? SEMI ( ws )? )
					{
					dbg.location(327,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "imports", "isScssSource()");
					}dbg.location(327,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:327:31: ( sass_forward ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:327:33: sass_forward ( ws )? SEMI ( ws )?
					{
					dbg.location(327,33);
					pushFollow(FOLLOW_sass_forward_in_imports412);
					sass_forward();
					state._fsp--;
					if (state.failed) return;dbg.location(327,46);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:327:46: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:327:46: ws
							{
							dbg.location(327,46);
							pushFollow(FOLLOW_ws_in_imports414);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(327,50);
					match(input,SEMI,FOLLOW_SEMI_in_imports417); if (state.failed) return;dbg.location(327,55);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:327:55: ( ws )?
					int alt22=2;
					try { dbg.enterSubRule(22);
					try { dbg.enterDecision(22, decisionCanBacktrack[22]);

					int LA22_0 = input.LA(1);
					if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
						alt22=1;
					}
					} finally {dbg.exitDecision(22);}

					switch (alt22) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:327:55: ws
							{
							dbg.location(327,55);
							pushFollow(FOLLOW_ws_in_imports419);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(22);}

					}

					}
					break;

				default :
					if ( cnt23 >= 1 ) break loop23;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(23, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt23++;
			}
			} finally {dbg.exitSubRule(23);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(329, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:331:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(331, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:332:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt44=3;
			try { dbg.enterDecision(44, decisionCanBacktrack[44]);

			try {
				isCyclicDecision = true;
				alt44 = dfa44.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(44);}

			switch (alt44) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:9: IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(333,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem455); if (state.failed) return;dbg.location(333,20);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:20: ( ws )?
					int alt24=2;
					try { dbg.enterSubRule(24);
					try { dbg.enterDecision(24, decisionCanBacktrack[24]);

					int LA24_0 = input.LA(1);
					if ( (LA24_0==COMMENT||LA24_0==NL||LA24_0==WS) ) {
						alt24=1;
					}
					} finally {dbg.exitDecision(24);}

					switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:20: ws
							{
							dbg.location(333,20);
							pushFollow(FOLLOW_ws_in_importItem457);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(333,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem460);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(333,43);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:43: ( ws )?
					int alt25=2;
					try { dbg.enterSubRule(25);
					try { dbg.enterDecision(25, decisionCanBacktrack[25]);

					int LA25_0 = input.LA(1);
					if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
						alt25=1;
					}
					} finally {dbg.exitDecision(25);}

					switch (alt25) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:43: ws
							{
							dbg.location(333,43);
							pushFollow(FOLLOW_ws_in_importItem462);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(25);}
					dbg.location(333,47);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:47: ( importLayer )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==IDENT) ) {
						int LA26_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:47: importLayer
							{
							dbg.location(333,47);
							pushFollow(FOLLOW_importLayer_in_importItem465);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}
					dbg.location(333,60);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:60: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt28=2;
					try { dbg.enterSubRule(28);
					try { dbg.enterDecision(28, decisionCanBacktrack[28]);

					int LA28_0 = input.LA(1);
					if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
						int LA28_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==NOT) && (synpred1_Css3())) {
						alt28=1;
					}
					else if ( (LA28_0==LPAREN) && (synpred1_Css3())) {
						alt28=1;
					}
					else if ( (LA28_0==IDENT) ) {
						int LA28_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==GEN) ) {
						int LA28_5 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==HASH_SYMBOL) ) {
						int LA28_6 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_MIXIN) ) {
						int LA28_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_VAR) ) {
						int LA28_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==AT_IDENT) ) {
						int LA28_14 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_INCLUDE) ) {
						int LA28_15 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_AT_ROOT) ) {
						int LA28_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_DEBUG||LA28_0==SASS_WARN) ) {
						int LA28_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_IF) ) {
						int LA28_28 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_FOR) ) {
						int LA28_29 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_EACH) ) {
						int LA28_30 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_WHILE) ) {
						int LA28_31 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_CONTENT) ) {
						int LA28_32 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==IMPORT_SYM) ) {
						int LA28_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==PAGE_SYM) ) {
						int LA28_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==FONT_FACE_SYM) ) {
						int LA28_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==MOZ_DOCUMENT_SYM) ) {
						int LA28_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA28_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==KEYFRAMES_SYM) ) {
						int LA28_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==MEDIA_SYM) ) {
						int LA28_39 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_EXTEND) ) {
						int LA28_40 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==COUNTER_STYLE_SYM) ) {
						int LA28_42 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_FUNCTION) ) {
						int LA28_44 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( ((LA28_0 >= BOTTOMCENTER_SYM && LA28_0 <= BOTTOMRIGHT_SYM)||LA28_0==CHARSET_SYM||(LA28_0 >= LEFTBOTTOM_SYM && LA28_0 <= LEFTTOP_SYM)||LA28_0==NAMESPACE_SYM||(LA28_0 >= RIGHTBOTTOM_SYM && LA28_0 <= RIGHTTOP_SYM)||LA28_0==SASS_ELSE||LA28_0==SASS_FORWARD||(LA28_0 >= SASS_RETURN && LA28_0 <= SASS_USE)||(LA28_0 >= TOPCENTER_SYM && LA28_0 <= TOPRIGHT_SYM)) ) {
						int LA28_47 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					} finally {dbg.exitDecision(28);}

					switch (alt28) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:61: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(333,83);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:83: ( ws )?
							int alt27=2;
							try { dbg.enterSubRule(27);
							try { dbg.enterDecision(27, decisionCanBacktrack[27]);

							int LA27_0 = input.LA(1);
							if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
								alt27=1;
							}
							} finally {dbg.exitDecision(27);}

							switch (alt27) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:83: ws
									{
									dbg.location(333,83);
									pushFollow(FOLLOW_ws_in_importItem476);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(27);}
							dbg.location(333,87);
							pushFollow(FOLLOW_mediaQueryList_in_importItem479);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(28);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(336,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(336,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem512); if (state.failed) return;dbg.location(336,38);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:38: ( ws )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==COMMENT||LA29_0==NL||LA29_0==WS) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:38: ws
							{
							dbg.location(336,38);
							pushFollow(FOLLOW_ws_in_importItem514);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(336,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem517);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(336,61);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(32);

					loop32:
					while (true) {
						int alt32=2;
						try { dbg.enterDecision(32, decisionCanBacktrack[32]);

						try {
							isCyclicDecision = true;
							alt32 = dfa32.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(32);}

						switch (alt32) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(336,62);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:62: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:62: ws
									{
									dbg.location(336,62);
									pushFollow(FOLLOW_ws_in_importItem520);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(336,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem523); if (state.failed) return;dbg.location(336,72);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:72: ( ws )?
							int alt31=2;
							try { dbg.enterSubRule(31);
							try { dbg.enterDecision(31, decisionCanBacktrack[31]);

							int LA31_0 = input.LA(1);
							if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
								alt31=1;
							}
							} finally {dbg.exitDecision(31);}

							switch (alt31) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:72: ws
									{
									dbg.location(336,72);
									pushFollow(FOLLOW_ws_in_importItem525);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(31);}
							dbg.location(336,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem528);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop32;
						}
					}
					} finally {dbg.exitSubRule(32);}
					dbg.location(336,97);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:97: ( ws )?
					int alt33=2;
					try { dbg.enterSubRule(33);
					try { dbg.enterDecision(33, decisionCanBacktrack[33]);

					int LA33_0 = input.LA(1);
					if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
						alt33=1;
					}
					} finally {dbg.exitDecision(33);}

					switch (alt33) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:97: ws
							{
							dbg.location(336,97);
							pushFollow(FOLLOW_ws_in_importItem532);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(33);}
					dbg.location(336,101);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:101: ( importLayer )?
					int alt34=2;
					try { dbg.enterSubRule(34);
					try { dbg.enterDecision(34, decisionCanBacktrack[34]);

					int LA34_0 = input.LA(1);
					if ( (LA34_0==IDENT) ) {
						int LA34_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt34=1;
						}
					}
					} finally {dbg.exitDecision(34);}

					switch (alt34) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:101: importLayer
							{
							dbg.location(336,101);
							pushFollow(FOLLOW_importLayer_in_importItem535);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(34);}
					dbg.location(336,114);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:114: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt36=2;
					try { dbg.enterSubRule(36);
					try { dbg.enterDecision(36, decisionCanBacktrack[36]);

					int LA36_0 = input.LA(1);
					if ( (LA36_0==COMMENT||LA36_0==NL||LA36_0==WS) ) {
						int LA36_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==NOT) && (synpred2_Css3())) {
						alt36=1;
					}
					else if ( (LA36_0==LPAREN) && (synpred2_Css3())) {
						alt36=1;
					}
					else if ( (LA36_0==IDENT) ) {
						int LA36_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==GEN) ) {
						int LA36_5 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==HASH_SYMBOL) ) {
						int LA36_6 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_MIXIN) ) {
						int LA36_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_VAR) ) {
						int LA36_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==AT_IDENT) ) {
						int LA36_14 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_INCLUDE) ) {
						int LA36_15 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_AT_ROOT) ) {
						int LA36_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_DEBUG||LA36_0==SASS_WARN) ) {
						int LA36_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_IF) ) {
						int LA36_28 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_FOR) ) {
						int LA36_29 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_EACH) ) {
						int LA36_30 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_WHILE) ) {
						int LA36_31 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_CONTENT) ) {
						int LA36_32 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==IMPORT_SYM) ) {
						int LA36_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==PAGE_SYM) ) {
						int LA36_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==FONT_FACE_SYM) ) {
						int LA36_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==MOZ_DOCUMENT_SYM) ) {
						int LA36_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA36_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==KEYFRAMES_SYM) ) {
						int LA36_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==MEDIA_SYM) ) {
						int LA36_39 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_EXTEND) ) {
						int LA36_40 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==COUNTER_STYLE_SYM) ) {
						int LA36_42 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_FUNCTION) ) {
						int LA36_44 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( ((LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||LA36_0==CHARSET_SYM||(LA36_0 >= LEFTBOTTOM_SYM && LA36_0 <= LEFTTOP_SYM)||LA36_0==NAMESPACE_SYM||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||LA36_0==SASS_ELSE||LA36_0==SASS_FORWARD||(LA36_0 >= SASS_RETURN && LA36_0 <= SASS_USE)||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)) ) {
						int LA36_47 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					} finally {dbg.exitDecision(36);}

					switch (alt36) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:115: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(336,137);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:137: ( ws )?
							int alt35=2;
							try { dbg.enterSubRule(35);
							try { dbg.enterDecision(35, decisionCanBacktrack[35]);

							int LA35_0 = input.LA(1);
							if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
								alt35=1;
							}
							} finally {dbg.exitDecision(35);}

							switch (alt35) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:137: ws
									{
									dbg.location(336,137);
									pushFollow(FOLLOW_ws_in_importItem546);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(35);}
							dbg.location(336,141);
							pushFollow(FOLLOW_mediaQueryList_in_importItem549);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(36);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(338,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(338,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem573); if (state.failed) return;dbg.location(338,38);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:38: ( ws )?
					int alt37=2;
					try { dbg.enterSubRule(37);
					try { dbg.enterDecision(37, decisionCanBacktrack[37]);

					int LA37_0 = input.LA(1);
					if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
						alt37=1;
					}
					} finally {dbg.exitDecision(37);}

					switch (alt37) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:38: ws
							{
							dbg.location(338,38);
							pushFollow(FOLLOW_ws_in_importItem575);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(37);}
					dbg.location(338,42);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==LPAREN) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(338,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem579); if (state.failed) return;dbg.location(338,50);
							pushFollow(FOLLOW_less_import_types_in_importItem581);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(338,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem583); if (state.failed) return;dbg.location(338,75);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:75: ( ws )?
							int alt38=2;
							try { dbg.enterSubRule(38);
							try { dbg.enterDecision(38, decisionCanBacktrack[38]);

							int LA38_0 = input.LA(1);
							if ( (LA38_0==COMMENT||LA38_0==NL||LA38_0==WS) ) {
								alt38=1;
							}
							} finally {dbg.exitDecision(38);}

							switch (alt38) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:75: ws
									{
									dbg.location(338,75);
									pushFollow(FOLLOW_ws_in_importItem585);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(38);}

							}
							break;

					}
					} finally {dbg.exitSubRule(39);}
					dbg.location(338,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem590);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(338,100);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:100: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:100: ws
							{
							dbg.location(338,100);
							pushFollow(FOLLOW_ws_in_importItem592);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}
					dbg.location(338,104);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:104: ( importLayer )?
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==IDENT) ) {
						int LA41_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt41=1;
						}
					}
					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:104: importLayer
							{
							dbg.location(338,104);
							pushFollow(FOLLOW_importLayer_in_importItem595);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(41);}
					dbg.location(338,117);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:117: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt43=2;
					try { dbg.enterSubRule(43);
					try { dbg.enterDecision(43, decisionCanBacktrack[43]);

					int LA43_0 = input.LA(1);
					if ( (LA43_0==COMMENT||LA43_0==NL||LA43_0==WS) ) {
						int LA43_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==NOT) && (synpred3_Css3())) {
						alt43=1;
					}
					else if ( (LA43_0==LPAREN) && (synpred3_Css3())) {
						alt43=1;
					}
					else if ( (LA43_0==IDENT) ) {
						int LA43_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==GEN) ) {
						int LA43_5 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==HASH_SYMBOL) ) {
						int LA43_6 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_MIXIN) ) {
						int LA43_7 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_VAR) ) {
						int LA43_8 = input.LA(2);
						if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==AT_IDENT) ) {
						int LA43_14 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_INCLUDE) ) {
						int LA43_15 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_AT_ROOT) ) {
						int LA43_16 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_DEBUG||LA43_0==SASS_WARN) ) {
						int LA43_17 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_IF) ) {
						int LA43_28 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_FOR) ) {
						int LA43_29 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_EACH) ) {
						int LA43_30 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_WHILE) ) {
						int LA43_31 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_CONTENT) ) {
						int LA43_32 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==IMPORT_SYM) ) {
						int LA43_33 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==PAGE_SYM) ) {
						int LA43_34 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==FONT_FACE_SYM) ) {
						int LA43_35 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==MOZ_DOCUMENT_SYM) ) {
						int LA43_36 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA43_37 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==KEYFRAMES_SYM) ) {
						int LA43_38 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==MEDIA_SYM) ) {
						int LA43_39 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_EXTEND) ) {
						int LA43_40 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==COUNTER_STYLE_SYM) ) {
						int LA43_42 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_FUNCTION) ) {
						int LA43_44 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( ((LA43_0 >= BOTTOMCENTER_SYM && LA43_0 <= BOTTOMRIGHT_SYM)||LA43_0==CHARSET_SYM||(LA43_0 >= LEFTBOTTOM_SYM && LA43_0 <= LEFTTOP_SYM)||LA43_0==NAMESPACE_SYM||(LA43_0 >= RIGHTBOTTOM_SYM && LA43_0 <= RIGHTTOP_SYM)||LA43_0==SASS_ELSE||LA43_0==SASS_FORWARD||(LA43_0 >= SASS_RETURN && LA43_0 <= SASS_USE)||(LA43_0 >= TOPCENTER_SYM && LA43_0 <= TOPRIGHT_SYM)) ) {
						int LA43_47 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					} finally {dbg.exitDecision(43);}

					switch (alt43) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:118: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(338,140);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:140: ( ws )?
							int alt42=2;
							try { dbg.enterSubRule(42);
							try { dbg.enterDecision(42, decisionCanBacktrack[42]);

							int LA42_0 = input.LA(1);
							if ( (LA42_0==COMMENT||LA42_0==NL||LA42_0==WS) ) {
								alt42=1;
							}
							} finally {dbg.exitDecision(42);}

							switch (alt42) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:140: ws
									{
									dbg.location(338,140);
									pushFollow(FOLLOW_ws_in_importItem606);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(42);}
							dbg.location(338,144);
							pushFollow(FOLLOW_mediaQueryList_in_importItem609);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(43);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(339, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "importLayer"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:341:1: importLayer :{...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )? ;
	public final void importLayer() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importLayer");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(341, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:342:5: ({...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:343:5: {...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )?
			{
			dbg.location(343,5);
			if ( !(evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "importLayer", "tokenNameEquals(\"layer\")");
			}dbg.location(343,33);
			match(input,IDENT,FOLLOW_IDENT_in_importLayer634); if (state.failed) return;dbg.location(343,39);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:343:39: ( LPAREN ( ws )? layerName ( ws )? RPAREN )?
			int alt47=2;
			try { dbg.enterSubRule(47);
			try { dbg.enterDecision(47, decisionCanBacktrack[47]);

			try {
				isCyclicDecision = true;
				alt47 = dfa47.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(47);}

			switch (alt47) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:343:40: LPAREN ( ws )? layerName ( ws )? RPAREN
					{
					dbg.location(343,40);
					match(input,LPAREN,FOLLOW_LPAREN_in_importLayer637); if (state.failed) return;dbg.location(343,47);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:343:47: ( ws )?
					int alt45=2;
					try { dbg.enterSubRule(45);
					try { dbg.enterDecision(45, decisionCanBacktrack[45]);

					int LA45_0 = input.LA(1);
					if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
						alt45=1;
					}
					} finally {dbg.exitDecision(45);}

					switch (alt45) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:343:47: ws
							{
							dbg.location(343,47);
							pushFollow(FOLLOW_ws_in_importLayer639);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(45);}
					dbg.location(343,51);
					pushFollow(FOLLOW_layerName_in_importLayer642);
					layerName();
					state._fsp--;
					if (state.failed) return;dbg.location(343,61);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:343:61: ( ws )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					int LA46_0 = input.LA(1);
					if ( (LA46_0==COMMENT||LA46_0==NL||LA46_0==WS) ) {
						alt46=1;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:343:61: ws
							{
							dbg.location(343,61);
							pushFollow(FOLLOW_ws_in_importLayer644);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}
					dbg.location(343,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_importLayer647); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(47);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(344, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importLayer");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importLayer"



	// $ANTLR start "sass_use"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:346:1: sass_use : SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? ;
	public final void sass_use() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(346, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:347:5: ( SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:348:9: SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )?
			{
			dbg.location(348,9);
			match(input,SASS_USE,FOLLOW_SASS_USE_in_sass_use674); if (state.failed) return;dbg.location(348,18);
			pushFollow(FOLLOW_ws_in_sass_use676);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(348,21);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_use678);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(348,40);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:348:40: ( ws sass_use_as )?
			int alt48=2;
			try { dbg.enterSubRule(48);
			try { dbg.enterDecision(48, decisionCanBacktrack[48]);

			try {
				isCyclicDecision = true;
				alt48 = dfa48.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(48);}

			switch (alt48) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:348:41: ws sass_use_as
					{
					dbg.location(348,41);
					pushFollow(FOLLOW_ws_in_sass_use681);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(348,44);
					pushFollow(FOLLOW_sass_use_as_in_sass_use683);
					sass_use_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(48);}
			dbg.location(348,58);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:348:58: ( ws sass_use_with )?
			int alt49=2;
			try { dbg.enterSubRule(49);
			try { dbg.enterDecision(49, decisionCanBacktrack[49]);

			try {
				isCyclicDecision = true;
				alt49 = dfa49.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(49);}

			switch (alt49) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:348:59: ws sass_use_with
					{
					dbg.location(348,59);
					pushFollow(FOLLOW_ws_in_sass_use688);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(348,62);
					pushFollow(FOLLOW_sass_use_with_in_sass_use690);
					sass_use_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(49);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(349, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use"



	// $ANTLR start "sass_use_as"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:351:1: sass_use_as :{...}? IDENT ws IDENT ;
	public final void sass_use_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(351, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:352:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:353:5: {...}? IDENT ws IDENT
			{
			dbg.location(353,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_as", "tokenNameEquals(\"as\")");
			}dbg.location(353,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as715); if (state.failed) return;dbg.location(353,36);
			pushFollow(FOLLOW_ws_in_sass_use_as717);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(353,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as719); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(354, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_as"



	// $ANTLR start "sass_use_with"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:356:1: sass_use_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN ;
	public final void sass_use_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(356, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:357:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(358,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_with", "tokenNameEquals(\"with\")");
			}dbg.location(358,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_with742); if (state.failed) return;dbg.location(358,38);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:38: ( ws )?
			int alt50=2;
			try { dbg.enterSubRule(50);
			try { dbg.enterDecision(50, decisionCanBacktrack[50]);

			int LA50_0 = input.LA(1);
			if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {
				alt50=1;
			}
			} finally {dbg.exitDecision(50);}

			switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:38: ws
					{
					dbg.location(358,38);
					pushFollow(FOLLOW_ws_in_sass_use_with744);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(50);}
			dbg.location(358,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_use_with747); if (state.failed) return;dbg.location(358,49);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:49: ( ws )?
			int alt51=2;
			try { dbg.enterSubRule(51);
			try { dbg.enterDecision(51, decisionCanBacktrack[51]);

			int LA51_0 = input.LA(1);
			if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
				alt51=1;
			}
			} finally {dbg.exitDecision(51);}

			switch (alt51) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:49: ws
					{
					dbg.location(358,49);
					pushFollow(FOLLOW_ws_in_sass_use_with749);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(51);}
			dbg.location(358,53);
			pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with752);
			sass_use_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(358,80);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*
			try { dbg.enterSubRule(54);

			loop54:
			while (true) {
				int alt54=2;
				try { dbg.enterDecision(54, decisionCanBacktrack[54]);

				try {
					isCyclicDecision = true;
					alt54 = dfa54.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(54);}

				switch (alt54) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:81: ( ws )? COMMA ( ws )? sass_use_with_declaration
					{
					dbg.location(358,81);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:81: ( ws )?
					int alt52=2;
					try { dbg.enterSubRule(52);
					try { dbg.enterDecision(52, decisionCanBacktrack[52]);

					int LA52_0 = input.LA(1);
					if ( (LA52_0==COMMENT||LA52_0==NL||LA52_0==WS) ) {
						alt52=1;
					}
					} finally {dbg.exitDecision(52);}

					switch (alt52) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:81: ws
							{
							dbg.location(358,81);
							pushFollow(FOLLOW_ws_in_sass_use_with756);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(52);}
					dbg.location(358,85);
					match(input,COMMA,FOLLOW_COMMA_in_sass_use_with759); if (state.failed) return;dbg.location(358,91);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:91: ( ws )?
					int alt53=2;
					try { dbg.enterSubRule(53);
					try { dbg.enterDecision(53, decisionCanBacktrack[53]);

					int LA53_0 = input.LA(1);
					if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
						alt53=1;
					}
					} finally {dbg.exitDecision(53);}

					switch (alt53) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:91: ws
							{
							dbg.location(358,91);
							pushFollow(FOLLOW_ws_in_sass_use_with761);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(53);}
					dbg.location(358,95);
					pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with764);
					sass_use_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop54;
				}
			}
			} finally {dbg.exitSubRule(54);}
			dbg.location(358,124);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:124: ( ws )?
			int alt55=2;
			try { dbg.enterSubRule(55);
			try { dbg.enterDecision(55, decisionCanBacktrack[55]);

			int LA55_0 = input.LA(1);
			if ( (LA55_0==COMMENT||LA55_0==NL||LA55_0==WS) ) {
				alt55=1;
			}
			} finally {dbg.exitDecision(55);}

			switch (alt55) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:358:124: ws
					{
					dbg.location(358,124);
					pushFollow(FOLLOW_ws_in_sass_use_with769);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(55);}
			dbg.location(358,128);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_use_with772); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(359, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with"



	// $ANTLR start "sass_use_with_declaration"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:361:1: sass_use_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_use_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(361, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:362:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:363:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(363,5);
			pushFollow(FOLLOW_cp_variable_in_sass_use_with_declaration793);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(363,17);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:363:17: ( ws )?
			int alt56=2;
			try { dbg.enterSubRule(56);
			try { dbg.enterDecision(56, decisionCanBacktrack[56]);

			int LA56_0 = input.LA(1);
			if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
				alt56=1;
			}
			} finally {dbg.exitDecision(56);}

			switch (alt56) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:363:17: ws
					{
					dbg.location(363,17);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration795);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(56);}
			dbg.location(363,21);
			match(input,COLON,FOLLOW_COLON_in_sass_use_with_declaration798); if (state.failed) return;dbg.location(363,27);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:363:27: ( ws )?
			int alt57=2;
			try { dbg.enterSubRule(57);
			try { dbg.enterDecision(57, decisionCanBacktrack[57]);

			int LA57_0 = input.LA(1);
			if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
				alt57=1;
			}
			} finally {dbg.exitDecision(57);}

			switch (alt57) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:363:27: ws
					{
					dbg.location(363,27);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration800);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(57);}
			dbg.location(363,31);
			pushFollow(FOLLOW_cp_expression_in_sass_use_with_declaration803);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(364, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with_declaration"



	// $ANTLR start "sass_forward"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:367:1: sass_forward : SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? ;
	public final void sass_forward() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(367, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:368:5: ( SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:9: SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )?
			{
			dbg.location(369,9);
			match(input,SASS_FORWARD,FOLLOW_SASS_FORWARD_in_sass_forward829); if (state.failed) return;dbg.location(369,22);
			pushFollow(FOLLOW_ws_in_sass_forward831);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(369,25);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_forward833);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(369,44);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:44: ( ws ( sass_forward_hide | sass_forward_show ) )?
			int alt59=2;
			try { dbg.enterSubRule(59);
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			try {
				isCyclicDecision = true;
				alt59 = dfa59.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:46: ws ( sass_forward_hide | sass_forward_show )
					{
					dbg.location(369,46);
					pushFollow(FOLLOW_ws_in_sass_forward837);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,49);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:49: ( sass_forward_hide | sass_forward_show )
					int alt58=2;
					try { dbg.enterSubRule(58);
					try { dbg.enterDecision(58, decisionCanBacktrack[58]);

					try {
						isCyclicDecision = true;
						alt58 = dfa58.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(58);}

					switch (alt58) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:51: sass_forward_hide
							{
							dbg.location(369,51);
							pushFollow(FOLLOW_sass_forward_hide_in_sass_forward841);
							sass_forward_hide();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:72: sass_forward_show
							{
							dbg.location(369,72);
							pushFollow(FOLLOW_sass_forward_show_in_sass_forward846);
							sass_forward_show();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(58);}

					}
					break;

			}
			} finally {dbg.exitSubRule(59);}
			dbg.location(369,93);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:93: ({...}? ws sass_forward_as )?
			int alt60=2;
			try { dbg.enterSubRule(60);
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			try {
				isCyclicDecision = true;
				alt60 = dfa60.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:94: {...}? ws sass_forward_as
					{
					dbg.location(369,94);
					if ( !(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"as\")");
					}dbg.location(369,120);
					pushFollow(FOLLOW_ws_in_sass_forward854);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,123);
					pushFollow(FOLLOW_sass_forward_as_in_sass_forward856);
					sass_forward_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(60);}
			dbg.location(369,141);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:141: ({...}? ws sass_forward_with )?
			int alt61=2;
			try { dbg.enterSubRule(61);
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			try {
				isCyclicDecision = true;
				alt61 = dfa61.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:369:142: {...}? ws sass_forward_with
					{
					dbg.location(369,142);
					if ( !(evalPredicate(tokenNameEquals2("with"),"tokenNameEquals2(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"with\")");
					}dbg.location(369,170);
					pushFollow(FOLLOW_ws_in_sass_forward863);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,173);
					pushFollow(FOLLOW_sass_forward_with_in_sass_forward865);
					sass_forward_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(61);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(370, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward"



	// $ANTLR start "sass_forward_as"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:372:1: sass_forward_as :{...}? IDENT ws IDENT ;
	public final void sass_forward_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(372, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:373:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:374:5: {...}? IDENT ws IDENT
			{
			dbg.location(374,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_as", "tokenNameEquals(\"as\")");
			}dbg.location(374,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as890); if (state.failed) return;dbg.location(374,36);
			pushFollow(FOLLOW_ws_in_sass_forward_as892);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(374,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as894); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(375, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_as"



	// $ANTLR start "sass_forward_with"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:377:1: sass_forward_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN ;
	public final void sass_forward_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(377, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:378:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(379,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_with", "tokenNameEquals(\"with\")");
			}dbg.location(379,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_with917); if (state.failed) return;dbg.location(379,38);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:38: ( ws )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:38: ws
					{
					dbg.location(379,38);
					pushFollow(FOLLOW_ws_in_sass_forward_with919);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(379,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_forward_with922); if (state.failed) return;dbg.location(379,49);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:49: ( ws )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			int LA63_0 = input.LA(1);
			if ( (LA63_0==COMMENT||LA63_0==NL||LA63_0==WS) ) {
				alt63=1;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:49: ws
					{
					dbg.location(379,49);
					pushFollow(FOLLOW_ws_in_sass_forward_with924);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(379,53);
			pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with927);
			sass_forward_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(379,84);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*
			try { dbg.enterSubRule(66);

			loop66:
			while (true) {
				int alt66=2;
				try { dbg.enterDecision(66, decisionCanBacktrack[66]);

				try {
					isCyclicDecision = true;
					alt66 = dfa66.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(66);}

				switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:85: ( ws )? COMMA ( ws )? sass_forward_with_declaration
					{
					dbg.location(379,85);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:85: ( ws )?
					int alt64=2;
					try { dbg.enterSubRule(64);
					try { dbg.enterDecision(64, decisionCanBacktrack[64]);

					int LA64_0 = input.LA(1);
					if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
						alt64=1;
					}
					} finally {dbg.exitDecision(64);}

					switch (alt64) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:85: ws
							{
							dbg.location(379,85);
							pushFollow(FOLLOW_ws_in_sass_forward_with931);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(64);}
					dbg.location(379,89);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_with934); if (state.failed) return;dbg.location(379,95);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:95: ( ws )?
					int alt65=2;
					try { dbg.enterSubRule(65);
					try { dbg.enterDecision(65, decisionCanBacktrack[65]);

					int LA65_0 = input.LA(1);
					if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
						alt65=1;
					}
					} finally {dbg.exitDecision(65);}

					switch (alt65) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:95: ws
							{
							dbg.location(379,95);
							pushFollow(FOLLOW_ws_in_sass_forward_with936);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(65);}
					dbg.location(379,99);
					pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with939);
					sass_forward_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop66;
				}
			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(379,132);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:132: ( ws )?
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			int LA67_0 = input.LA(1);
			if ( (LA67_0==COMMENT||LA67_0==NL||LA67_0==WS) ) {
				alt67=1;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:379:132: ws
					{
					dbg.location(379,132);
					pushFollow(FOLLOW_ws_in_sass_forward_with944);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}
			dbg.location(379,136);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_forward_with947); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(380, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with"



	// $ANTLR start "sass_forward_with_declaration"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:382:1: sass_forward_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_forward_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(382, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:383:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:384:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(384,5);
			pushFollow(FOLLOW_cp_variable_in_sass_forward_with_declaration968);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(384,17);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:384:17: ( ws )?
			int alt68=2;
			try { dbg.enterSubRule(68);
			try { dbg.enterDecision(68, decisionCanBacktrack[68]);

			int LA68_0 = input.LA(1);
			if ( (LA68_0==COMMENT||LA68_0==NL||LA68_0==WS) ) {
				alt68=1;
			}
			} finally {dbg.exitDecision(68);}

			switch (alt68) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:384:17: ws
					{
					dbg.location(384,17);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration970);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(68);}
			dbg.location(384,21);
			match(input,COLON,FOLLOW_COLON_in_sass_forward_with_declaration973); if (state.failed) return;dbg.location(384,27);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:384:27: ( ws )?
			int alt69=2;
			try { dbg.enterSubRule(69);
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			int LA69_0 = input.LA(1);
			if ( (LA69_0==COMMENT||LA69_0==NL||LA69_0==WS) ) {
				alt69=1;
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:384:27: ws
					{
					dbg.location(384,27);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration975);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(69);}
			dbg.location(384,31);
			pushFollow(FOLLOW_cp_expression_in_sass_forward_with_declaration978);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(385, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with_declaration"



	// $ANTLR start "sass_forward_hide"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:387:1: sass_forward_hide :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_hide() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_hide");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(387, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:388:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:389:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(389,5);
			if ( !(evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_hide", "tokenNameEquals(\"hide\")");
			}dbg.location(389,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1001); if (state.failed) return;dbg.location(389,38);
			pushFollow(FOLLOW_ws_in_sass_forward_hide1003);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(389,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1005); if (state.failed) return;dbg.location(389,47);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:389:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(72);

			loop72:
			while (true) {
				int alt72=2;
				try { dbg.enterDecision(72, decisionCanBacktrack[72]);

				try {
					isCyclicDecision = true;
					alt72 = dfa72.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(72);}

				switch (alt72) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:389:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(389,48);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:389:48: ( ws )?
					int alt70=2;
					try { dbg.enterSubRule(70);
					try { dbg.enterDecision(70, decisionCanBacktrack[70]);

					int LA70_0 = input.LA(1);
					if ( (LA70_0==COMMENT||LA70_0==NL||LA70_0==WS) ) {
						alt70=1;
					}
					} finally {dbg.exitDecision(70);}

					switch (alt70) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:389:48: ws
							{
							dbg.location(389,48);
							pushFollow(FOLLOW_ws_in_sass_forward_hide1008);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(70);}
					dbg.location(389,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_hide1011); if (state.failed) return;dbg.location(389,58);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:389:58: ( ws )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					int LA71_0 = input.LA(1);
					if ( (LA71_0==COMMENT||LA71_0==NL||LA71_0==WS) ) {
						alt71=1;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:389:58: ws
							{
							dbg.location(389,58);
							pushFollow(FOLLOW_ws_in_sass_forward_hide1013);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}
					dbg.location(389,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1016); if (state.failed) return;
					}
					break;

				default :
					break loop72;
				}
			}
			} finally {dbg.exitSubRule(72);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(390, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_hide");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_hide"



	// $ANTLR start "sass_forward_show"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:392:1: sass_forward_show :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_show() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_show");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(392, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:393:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:394:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(394,5);
			if ( !(evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_show", "tokenNameEquals(\"show\")");
			}dbg.location(394,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1041); if (state.failed) return;dbg.location(394,38);
			pushFollow(FOLLOW_ws_in_sass_forward_show1043);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(394,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1045); if (state.failed) return;dbg.location(394,47);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:394:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(75);

			loop75:
			while (true) {
				int alt75=2;
				try { dbg.enterDecision(75, decisionCanBacktrack[75]);

				try {
					isCyclicDecision = true;
					alt75 = dfa75.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(75);}

				switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:394:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(394,48);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:394:48: ( ws )?
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:394:48: ws
							{
							dbg.location(394,48);
							pushFollow(FOLLOW_ws_in_sass_forward_show1048);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(73);}
					dbg.location(394,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_show1051); if (state.failed) return;dbg.location(394,58);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:394:58: ( ws )?
					int alt74=2;
					try { dbg.enterSubRule(74);
					try { dbg.enterDecision(74, decisionCanBacktrack[74]);

					int LA74_0 = input.LA(1);
					if ( (LA74_0==COMMENT||LA74_0==NL||LA74_0==WS) ) {
						alt74=1;
					}
					} finally {dbg.exitDecision(74);}

					switch (alt74) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:394:58: ws
							{
							dbg.location(394,58);
							pushFollow(FOLLOW_ws_in_sass_forward_show1053);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(74);}
					dbg.location(394,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1056); if (state.failed) return;
					}
					break;

				default :
					break loop75;
				}
			}
			} finally {dbg.exitSubRule(75);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(395, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_show");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_show"



	// $ANTLR start "media"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:397:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(397, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:398:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:398:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(398,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media1075); if (state.failed) return;dbg.location(398,17);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:398:17: ( ws )?
			int alt76=2;
			try { dbg.enterSubRule(76);
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			int LA76_0 = input.LA(1);
			if ( (LA76_0==COMMENT||LA76_0==NL||LA76_0==WS) ) {
				alt76=1;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:398:17: ws
					{
					dbg.location(398,17);
					pushFollow(FOLLOW_ws_in_media1077);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(76);}
			dbg.location(399,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:399:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:400:10: mediaQueryList
			{
			dbg.location(400,10);
			pushFollow(FOLLOW_mediaQueryList_in_media1095);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(401,7);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:401:7: ( ws )?
			int alt77=2;
			try { dbg.enterSubRule(77);
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			int LA77_0 = input.LA(1);
			if ( (LA77_0==COMMENT||LA77_0==NL||LA77_0==WS) ) {
				alt77=1;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:401:7: ws
					{
					dbg.location(401,7);
					pushFollow(FOLLOW_ws_in_media1103);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(77);}
			dbg.location(402,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media1110); if (state.failed) return;dbg.location(402,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:402:12: ( ws )?
			int alt78=2;
			try { dbg.enterSubRule(78);
			try { dbg.enterDecision(78, decisionCanBacktrack[78]);

			int LA78_0 = input.LA(1);
			if ( (LA78_0==COMMENT||LA78_0==NL||LA78_0==WS) ) {
				alt78=1;
			}
			} finally {dbg.exitDecision(78);}

			switch (alt78) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:402:12: ws
					{
					dbg.location(402,12);
					pushFollow(FOLLOW_ws_in_media1112);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(78);}
			dbg.location(402,16);
			pushFollow(FOLLOW_syncToFollow_in_media1115);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(403,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:403:9: ( mediaBody )?
			int alt79=2;
			try { dbg.enterSubRule(79);
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			int LA79_0 = input.LA(1);
			if ( ((LA79_0 >= AT_IDENT && LA79_0 <= AT_SIGN)||(LA79_0 >= BOTTOMCENTER_SYM && LA79_0 <= BOTTOMRIGHT_SYM)||(LA79_0 >= CHARSET_SYM && LA79_0 <= COLON)||LA79_0==COUNTER_STYLE_SYM||(LA79_0 >= DCOLON && LA79_0 <= DOT)||LA79_0==FONT_FACE_SYM||(LA79_0 >= GEN && LA79_0 <= GREATER)||(LA79_0 >= HASH && LA79_0 <= HASH_SYMBOL)||LA79_0==IDENT||LA79_0==IMPORT_SYM||LA79_0==KEYFRAMES_SYM||(LA79_0 >= LBRACKET && LA79_0 <= LEFTTOP_SYM)||LA79_0==LESS_AND||(LA79_0 >= MEDIA_SYM && LA79_0 <= MOZ_DOCUMENT_SYM)||LA79_0==NAMESPACE_SYM||LA79_0==PAGE_SYM||(LA79_0 >= PIPE && LA79_0 <= PLUS)||(LA79_0 >= RIGHTBOTTOM_SYM && LA79_0 <= RIGHTTOP_SYM)||(LA79_0 >= SASS_AT_ROOT && LA79_0 <= SASS_DEBUG)||(LA79_0 >= SASS_EACH && LA79_0 <= SASS_ELSE)||(LA79_0 >= SASS_EXTEND && LA79_0 <= SASS_FUNCTION)||(LA79_0 >= SASS_IF && LA79_0 <= SASS_MIXIN)||(LA79_0 >= SASS_RETURN && LA79_0 <= SEMI)||LA79_0==STAR||LA79_0==SUPPORTS_SYM||LA79_0==TILDE||(LA79_0 >= TOPCENTER_SYM && LA79_0 <= TOPRIGHT_SYM)||LA79_0==VARIABLE||LA79_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt79=1;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:403:9: mediaBody
					{
					dbg.location(403,9);
					pushFollow(FOLLOW_mediaBody_in_media1125);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(79);}
			dbg.location(404,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media1132); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(405, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:407:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(407, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:408:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:409:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(409,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:409:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt85=0;
			try { dbg.enterSubRule(85);

			loop85:
			while (true) {
				int alt85=4;
				try { dbg.enterDecision(85, decisionCanBacktrack[85]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case KEYFRAMES_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FORWARD:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_USE:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case SUPPORTS_SYM:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case VARIABLE:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt85=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA85_36 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt85=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt85=3;
					}

					}
					break;
				case SEMI:
					{
					alt85=2;
					}
					break;
				}
				} finally {dbg.exitDecision(85);}

				switch (alt85) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(410,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(410,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody1166);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(410,26);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt81=2;
					try { dbg.enterSubRule(81);
					try { dbg.enterDecision(81, decisionCanBacktrack[81]);

					try {
						isCyclicDecision = true;
						alt81 = dfa81.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(81);}

					switch (alt81) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(410,39);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:39: ( ws )?
							int alt80=2;
							try { dbg.enterSubRule(80);
							try { dbg.enterDecision(80, decisionCanBacktrack[80]);

							int LA80_0 = input.LA(1);
							if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
								alt80=1;
							}
							} finally {dbg.exitDecision(80);}

							switch (alt80) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:39: ws
									{
									dbg.location(410,39);
									pushFollow(FOLLOW_ws_in_mediaBody1176);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(80);}
							dbg.location(410,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1179); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(81);}
					dbg.location(410,50);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:50: ( ws )?
					int alt82=2;
					try { dbg.enterSubRule(82);
					try { dbg.enterDecision(82, decisionCanBacktrack[82]);

					int LA82_0 = input.LA(1);
					if ( (LA82_0==COMMENT||LA82_0==NL||LA82_0==WS) ) {
						alt82=1;
					}
					} finally {dbg.exitDecision(82);}

					switch (alt82) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:50: ws
							{
							dbg.location(410,50);
							pushFollow(FOLLOW_ws_in_mediaBody1183);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(82);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:412:10: ( SEMI ( ws )? )
					{
					dbg.location(412,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:412:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:412:12: SEMI ( ws )?
					{
					dbg.location(412,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody1210); if (state.failed) return;dbg.location(412,17);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:412:17: ( ws )?
					int alt83=2;
					try { dbg.enterSubRule(83);
					try { dbg.enterDecision(83, decisionCanBacktrack[83]);

					int LA83_0 = input.LA(1);
					if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
						alt83=1;
					}
					} finally {dbg.exitDecision(83);}

					switch (alt83) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:412:17: ws
							{
							dbg.location(412,17);
							pushFollow(FOLLOW_ws_in_mediaBody1212);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(83);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(413,12);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(413,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(413,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody1231);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(413,43);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:43: ( ws | ( SEMI ) )
					int alt84=2;
					try { dbg.enterSubRule(84);
					try { dbg.enterDecision(84, decisionCanBacktrack[84]);

					int LA84_0 = input.LA(1);
					if ( (LA84_0==COMMENT||LA84_0==NL||LA84_0==WS) ) {
						alt84=1;
					}
					else if ( (LA84_0==SEMI) ) {
						alt84=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 84, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(84);}

					switch (alt84) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:44: ws
							{
							dbg.location(413,44);
							pushFollow(FOLLOW_ws_in_mediaBody1234);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:49: ( SEMI )
							{
							dbg.location(413,49);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:49: ( SEMI )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:413:50: SEMI
							{
							dbg.location(413,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1239); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(84);}

					}

					}
					break;

				default :
					if ( cnt85 >= 1 ) break loop85;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(85, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt85++;
			}
			} finally {dbg.exitSubRule(85);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(415, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:417:1: mediaBodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(417, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:418:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule )
			int alt90=15;
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==LESS_AND) ) {
				int LA90_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==DOT) ) {
				int LA90_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==HASH) ) {
				int LA90_3 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==SASS_MIXIN) ) {
				int LA90_4 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==AT_IDENT) ) {
				int LA90_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( ((evalPredicate(! tokenNameEquals("@charset"),"! tokenNameEquals(\"@charset\")")||evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")||evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")"))) ) {
					alt90=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_INCLUDE) ) {
				int LA90_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=2;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_AT_ROOT) ) {
				int LA90_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==GREATER||LA90_0==PLUS||LA90_0==TILDE) ) {
				int LA90_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				int LA90_9 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==HASH_SYMBOL) ) {
				int LA90_10 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( ((synpred9_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==DIMENSION) ) {
				int LA90_11 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"))) ) {
					alt90=4;
				}
				else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==LBRACKET) ) {
				int LA90_12 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==COLON||LA90_0==DCOLON) ) {
				int LA90_13 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==IDENT) ) {
				int LA90_14 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==AT_SIGN) ) {
				int LA90_15 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==MINUS) ) {
				int LA90_16 = input.LA(2);
				if ( ((synpred8_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt90=4;
				}
				else if ( ((synpred9_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt90=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==STAR) ) {
				int LA90_17 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==PIPE) ) {
				int LA90_18 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==GEN) ) {
				int LA90_19 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==VARIABLE) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SASS_DEBUG||LA90_0==SASS_WARN) ) {
				int LA90_21 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_VAR) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SASS_IF) ) {
				int LA90_23 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_FOR) ) {
				int LA90_24 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_EACH) ) {
				int LA90_25 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_WHILE) ) {
				int LA90_26 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_CONTENT) ) {
				int LA90_27 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==IMPORT_SYM) ) {
				int LA90_28 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt90=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==PAGE_SYM) ) {
				int LA90_29 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=11;
				}

			}
			else if ( (LA90_0==FONT_FACE_SYM) ) {
				int LA90_30 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=12;
				}

			}
			else if ( (LA90_0==MOZ_DOCUMENT_SYM) ) {
				int LA90_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA90_32 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==KEYFRAMES_SYM) ) {
				int LA90_33 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==MEDIA_SYM) ) {
				int LA90_34 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=14;
				}

			}
			else if ( ((LA90_0 >= BOTTOMCENTER_SYM && LA90_0 <= BOTTOMRIGHT_SYM)||LA90_0==CHARSET_SYM||LA90_0==COUNTER_STYLE_SYM||(LA90_0 >= LEFTBOTTOM_SYM && LA90_0 <= LEFTTOP_SYM)||LA90_0==NAMESPACE_SYM||(LA90_0 >= RIGHTBOTTOM_SYM && LA90_0 <= RIGHTTOP_SYM)||LA90_0==SASS_ELSE||LA90_0==SASS_EXTEND||(LA90_0 >= SASS_FORWARD && LA90_0 <= SASS_FUNCTION)||(LA90_0 >= SASS_RETURN && LA90_0 <= SASS_USE)||(LA90_0 >= TOPCENTER_SYM && LA90_0 <= TOPRIGHT_SYM)) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SUPPORTS_SYM) ) {
				alt90=15;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(419,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem1313);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(421,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(421,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1346);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(421,87);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:87: ( ( ws )? IMPORTANT_SYM )?
					int alt87=2;
					try { dbg.enterSubRule(87);
					try { dbg.enterDecision(87, decisionCanBacktrack[87]);

					try {
						isCyclicDecision = true;
						alt87 = dfa87.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(87);}

					switch (alt87) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(421,88);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:88: ( ws )?
							int alt86=2;
							try { dbg.enterSubRule(86);
							try { dbg.enterDecision(86, decisionCanBacktrack[86]);

							int LA86_0 = input.LA(1);
							if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
								alt86=1;
							}
							} finally {dbg.exitDecision(86);}

							switch (alt86) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:88: ws
									{
									dbg.location(421,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1349);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(86);}
							dbg.location(421,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1352); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(87);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:422:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(422,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(422,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1369);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(422,57);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:422:57: ( ( ws )? IMPORTANT_SYM )?
					int alt89=2;
					try { dbg.enterSubRule(89);
					try { dbg.enterDecision(89, decisionCanBacktrack[89]);

					try {
						isCyclicDecision = true;
						alt89 = dfa89.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(89);}

					switch (alt89) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:422:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(422,58);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:422:58: ( ws )?
							int alt88=2;
							try { dbg.enterSubRule(88);
							try { dbg.enterDecision(88, decisionCanBacktrack[88]);

							int LA88_0 = input.LA(1);
							if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
								alt88=1;
							}
							} finally {dbg.exitDecision(88);}

							switch (alt88) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:422:58: ws
									{
									dbg.location(422,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1372);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(88);}
							dbg.location(422,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1375); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(89);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(423,145);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1440);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:424:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(424,30);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem1452);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:425:7: {...}? sass_debug
					{
					dbg.location(425,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(425,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem1462);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:426:7: {...}? sass_control
					{
					dbg.location(426,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(426,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem1472);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:427:7: {...}? sass_content
					{
					dbg.location(427,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(427,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem1482);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:428:7: {...}? importItem
					{
					dbg.location(428,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(428,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem1492);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:429:7: rule
					{
					dbg.location(429,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1500);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:430:7: page
					{
					dbg.location(430,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem1508);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:431:7: fontFace
					{
					dbg.location(431,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem1516);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:432:7: vendorAtRule
					{
					dbg.location(432,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem1524);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:434:7: media
					{
					dbg.location(434,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem1537);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:435:7: supportsAtRule
					{
					dbg.location(435,7);
					pushFollow(FOLLOW_supportsAtRule_in_mediaBodyItem1545);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(436, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:438:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(438, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(439,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1559);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(439,15);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(93);

			loop93:
			while (true) {
				int alt93=2;
				try { dbg.enterDecision(93, decisionCanBacktrack[93]);

				try {
					isCyclicDecision = true;
					alt93 = dfa93.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(93);}

				switch (alt93) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(439,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:31: ( ws )?
					int alt91=2;
					try { dbg.enterSubRule(91);
					try { dbg.enterDecision(91, decisionCanBacktrack[91]);

					int LA91_0 = input.LA(1);
					if ( (LA91_0==COMMENT||LA91_0==NL||LA91_0==WS) ) {
						alt91=1;
					}
					} finally {dbg.exitDecision(91);}

					switch (alt91) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:31: ws
							{
							dbg.location(439,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList1571);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(91);}
					dbg.location(439,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList1574); if (state.failed) return;dbg.location(439,41);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:41: ( ws )?
					int alt92=2;
					try { dbg.enterSubRule(92);
					try { dbg.enterDecision(92, decisionCanBacktrack[92]);

					int LA92_0 = input.LA(1);
					if ( (LA92_0==COMMENT||LA92_0==NL||LA92_0==WS) ) {
						alt92=1;
					}
					} finally {dbg.exitDecision(92);}

					switch (alt92) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:41: ws
							{
							dbg.location(439,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList1576);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(92);}
					dbg.location(439,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1579);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop93;
				}
			}
			} finally {dbg.exitSubRule(93);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(440, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:442:1: mediaQuery : ( mediaCondition | ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaConditionWithoutOr )? |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(442, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:443:5: ( mediaCondition | ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaConditionWithoutOr )? |{...}? cp_variable )
			int alt99=3;
			try { dbg.enterDecision(99, decisionCanBacktrack[99]);

			try {
				isCyclicDecision = true;
				alt99 = dfa99.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(99);}

			switch (alt99) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:444:5: mediaCondition
					{
					dbg.location(444,5);
					pushFollow(FOLLOW_mediaCondition_in_mediaQuery1600);
					mediaCondition();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:7: ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaConditionWithoutOr )?
					{
					dbg.location(445,7);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:7: ( mediaQueryOperator ( ws )? )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==IDENT) ) {
						int LA95_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt95=1;
						}
					}
					else if ( (LA95_0==NOT) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:8: mediaQueryOperator ( ws )?
							{
							dbg.location(445,8);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery1609);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(445,27);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:27: ( ws )?
							int alt94=2;
							try { dbg.enterSubRule(94);
							try { dbg.enterDecision(94, decisionCanBacktrack[94]);

							int LA94_0 = input.LA(1);
							if ( (LA94_0==COMMENT||LA94_0==NL||LA94_0==WS) ) {
								alt94=1;
							}
							} finally {dbg.exitDecision(94);}

							switch (alt94) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:27: ws
									{
									dbg.location(445,27);
									pushFollow(FOLLOW_ws_in_mediaQuery1611);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(94);}

							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(445,35);
					pushFollow(FOLLOW_mediaType_in_mediaQuery1618);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(445,45);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:45: ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaConditionWithoutOr )?
					int alt98=2;
					try { dbg.enterSubRule(98);
					try { dbg.enterDecision(98, decisionCanBacktrack[98]);

					int LA98_0 = input.LA(1);
					if ( (LA98_0==COMMENT||LA98_0==NL||LA98_0==WS) ) {
						int LA98_1 = input.LA(2);
						if ( (synpred11_Css3()) ) {
							alt98=1;
						}
					}
					else if ( (LA98_0==IDENT) ) {
						int LA98_2 = input.LA(2);
						if ( ((synpred11_Css3()&&evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")"))) ) {
							alt98=1;
						}
					}
					} finally {dbg.exitDecision(98);}

					switch (alt98) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:46: ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaConditionWithoutOr
							{
							dbg.location(445,63);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:63: ( ws )?
							int alt96=2;
							try { dbg.enterSubRule(96);
							try { dbg.enterDecision(96, decisionCanBacktrack[96]);

							int LA96_0 = input.LA(1);
							if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
								alt96=1;
							}
							} finally {dbg.exitDecision(96);}

							switch (alt96) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:63: ws
									{
									dbg.location(445,63);
									pushFollow(FOLLOW_ws_in_mediaQuery1630);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(96);}
							dbg.location(445,67);
							pushFollow(FOLLOW_key_and_in_mediaQuery1633);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(445,75);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:75: ( ws )?
							int alt97=2;
							try { dbg.enterSubRule(97);
							try { dbg.enterDecision(97, decisionCanBacktrack[97]);

							int LA97_0 = input.LA(1);
							if ( (LA97_0==COMMENT||LA97_0==NL||LA97_0==WS) ) {
								alt97=1;
							}
							} finally {dbg.exitDecision(97);}

							switch (alt97) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:75: ws
									{
									dbg.location(445,75);
									pushFollow(FOLLOW_ws_in_mediaQuery1635);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(97);}
							dbg.location(445,79);
							pushFollow(FOLLOW_mediaConditionWithoutOr_in_mediaQuery1638);
							mediaConditionWithoutOr();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(98);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:446:7: {...}? cp_variable
					{
					dbg.location(446,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(446,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1650);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(447, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:449:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(449, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:450:5: ( key_only | NOT )
			int alt100=2;
			try { dbg.enterDecision(100, decisionCanBacktrack[100]);

			int LA100_0 = input.LA(1);
			if ( (LA100_0==IDENT) ) {
				alt100=1;
			}
			else if ( (LA100_0==NOT) ) {
				alt100=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 100, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(100);}

			switch (alt100) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:451:5: key_only
					{
					dbg.location(451,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1668);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:451:16: NOT
					{
					dbg.location(451,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1672); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(452, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaCondition"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:454:1: mediaCondition : ( ( NOT ( ws )? ) mediaInParens | mediaInParens ( ( ws )? ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens ) )* | LPAREN ( ws )* RPAREN );
	public final void mediaCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(454, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:455:5: ( ( NOT ( ws )? ) mediaInParens | mediaInParens ( ( ws )? ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens ) )* | LPAREN ( ws )* RPAREN )
			int alt110=3;
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			try {
				isCyclicDecision = true;
				alt110 = dfa110.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:456:5: ( NOT ( ws )? ) mediaInParens
					{
					dbg.location(456,5);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:456:5: ( NOT ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:456:6: NOT ( ws )?
					{
					dbg.location(456,6);
					match(input,NOT,FOLLOW_NOT_in_mediaCondition1690); if (state.failed) return;dbg.location(456,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:456:10: ( ws )?
					int alt101=2;
					try { dbg.enterSubRule(101);
					try { dbg.enterDecision(101, decisionCanBacktrack[101]);

					int LA101_0 = input.LA(1);
					if ( (LA101_0==COMMENT||LA101_0==NL||LA101_0==WS) ) {
						alt101=1;
					}
					} finally {dbg.exitDecision(101);}

					switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:456:10: ws
							{
							dbg.location(456,10);
							pushFollow(FOLLOW_ws_in_mediaCondition1692);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(101);}

					}
					dbg.location(456,15);
					pushFollow(FOLLOW_mediaInParens_in_mediaCondition1696);
					mediaInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:457:7: mediaInParens ( ( ws )? ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens ) )*
					{
					dbg.location(457,7);
					pushFollow(FOLLOW_mediaInParens_in_mediaCondition1705);
					mediaInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(457,22);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:457:22: ( ( ws )? ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens ) )*
					try { dbg.enterSubRule(108);

					loop108:
					while (true) {
						int alt108=2;
						try { dbg.enterDecision(108, decisionCanBacktrack[108]);

						try {
							isCyclicDecision = true;
							alt108 = dfa108.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(108);}

						switch (alt108) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:457:23: ( ws )? ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens )
							{
							dbg.location(457,23);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:457:23: ( ws )?
							int alt102=2;
							try { dbg.enterSubRule(102);
							try { dbg.enterDecision(102, decisionCanBacktrack[102]);

							int LA102_0 = input.LA(1);
							if ( (LA102_0==COMMENT||LA102_0==NL||LA102_0==WS) ) {
								alt102=1;
							}
							} finally {dbg.exitDecision(102);}

							switch (alt102) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:457:23: ws
									{
									dbg.location(457,23);
									pushFollow(FOLLOW_ws_in_mediaCondition1709);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(102);}
							dbg.location(457,27);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:457:27: ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens )
							int alt107=2;
							try { dbg.enterSubRule(107);
							try { dbg.enterDecision(107, decisionCanBacktrack[107]);

							int LA107_0 = input.LA(1);
							if ( (LA107_0==COMMENT||LA107_0==NL||LA107_0==WS) ) {
								alt107=1;
							}
							else if ( (LA107_0==IDENT) ) {
								int LA107_2 = input.LA(2);
								if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
									alt107=1;
								}
								else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
									alt107=2;
								}

								else {
									if (state.backtracking>0) {state.failed=true; return;}
									int nvaeMark = input.mark();
									try {
										input.consume();
										NoViableAltException nvae =
											new NoViableAltException("", 107, 2, input);
										dbg.recognitionException(nvae);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 107, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(107);}

							switch (alt107) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:458:9: ( ws )? key_and ( ws )? mediaInParens
									{
									dbg.location(458,9);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:458:9: ( ws )?
									int alt103=2;
									try { dbg.enterSubRule(103);
									try { dbg.enterDecision(103, decisionCanBacktrack[103]);

									int LA103_0 = input.LA(1);
									if ( (LA103_0==COMMENT||LA103_0==NL||LA103_0==WS) ) {
										alt103=1;
									}
									} finally {dbg.exitDecision(103);}

									switch (alt103) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:458:9: ws
											{
											dbg.location(458,9);
											pushFollow(FOLLOW_ws_in_mediaCondition1722);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(103);}
									dbg.location(458,13);
									pushFollow(FOLLOW_key_and_in_mediaCondition1725);
									key_and();
									state._fsp--;
									if (state.failed) return;dbg.location(458,21);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:458:21: ( ws )?
									int alt104=2;
									try { dbg.enterSubRule(104);
									try { dbg.enterDecision(104, decisionCanBacktrack[104]);

									int LA104_0 = input.LA(1);
									if ( (LA104_0==COMMENT||LA104_0==NL||LA104_0==WS) ) {
										alt104=1;
									}
									} finally {dbg.exitDecision(104);}

									switch (alt104) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:458:21: ws
											{
											dbg.location(458,21);
											pushFollow(FOLLOW_ws_in_mediaCondition1727);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(104);}
									dbg.location(458,25);
									pushFollow(FOLLOW_mediaInParens_in_mediaCondition1730);
									mediaInParens();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:459:11: ( ws )? key_or ( ws )? mediaInParens
									{
									dbg.location(459,11);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:459:11: ( ws )?
									int alt105=2;
									try { dbg.enterSubRule(105);
									try { dbg.enterDecision(105, decisionCanBacktrack[105]);

									int LA105_0 = input.LA(1);
									if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
										alt105=1;
									}
									} finally {dbg.exitDecision(105);}

									switch (alt105) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:459:11: ws
											{
											dbg.location(459,11);
											pushFollow(FOLLOW_ws_in_mediaCondition1743);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(105);}
									dbg.location(459,15);
									pushFollow(FOLLOW_key_or_in_mediaCondition1746);
									key_or();
									state._fsp--;
									if (state.failed) return;dbg.location(459,22);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:459:22: ( ws )?
									int alt106=2;
									try { dbg.enterSubRule(106);
									try { dbg.enterDecision(106, decisionCanBacktrack[106]);

									int LA106_0 = input.LA(1);
									if ( (LA106_0==COMMENT||LA106_0==NL||LA106_0==WS) ) {
										alt106=1;
									}
									} finally {dbg.exitDecision(106);}

									switch (alt106) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:459:22: ws
											{
											dbg.location(459,22);
											pushFollow(FOLLOW_ws_in_mediaCondition1748);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(106);}
									dbg.location(459,26);
									pushFollow(FOLLOW_mediaInParens_in_mediaCondition1751);
									mediaInParens();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(107);}

							}
							break;

						default :
							break loop108;
						}
					}
					} finally {dbg.exitSubRule(108);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:462:7: LPAREN ( ws )* RPAREN
					{
					dbg.location(462,7);
					match(input,LPAREN,FOLLOW_LPAREN_in_mediaCondition1782); if (state.failed) return;dbg.location(462,14);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:462:14: ( ws )*
					try { dbg.enterSubRule(109);

					loop109:
					while (true) {
						int alt109=2;
						try { dbg.enterDecision(109, decisionCanBacktrack[109]);

						int LA109_0 = input.LA(1);
						if ( (LA109_0==COMMENT||LA109_0==NL||LA109_0==WS) ) {
							alt109=1;
						}

						} finally {dbg.exitDecision(109);}

						switch (alt109) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:462:14: ws
							{
							dbg.location(462,14);
							pushFollow(FOLLOW_ws_in_mediaCondition1784);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop109;
						}
					}
					} finally {dbg.exitSubRule(109);}
					dbg.location(462,18);
					match(input,RPAREN,FOLLOW_RPAREN_in_mediaCondition1787); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(463, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaCondition"



	// $ANTLR start "mediaConditionWithoutOr"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:465:1: mediaConditionWithoutOr : ( ( NOT ( ws )? ) mediaInParens | mediaInParens ( ( ws )? key_and ( ws )? mediaInParens )* | ( HASH )=>{...}? sass_interpolation_expression_var );
	public final void mediaConditionWithoutOr() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaConditionWithoutOr");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(465, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:466:5: ( ( NOT ( ws )? ) mediaInParens | mediaInParens ( ( ws )? key_and ( ws )? mediaInParens )* | ( HASH )=>{...}? sass_interpolation_expression_var )
			int alt115=3;
			try { dbg.enterDecision(115, decisionCanBacktrack[115]);

			int LA115_0 = input.LA(1);
			if ( (LA115_0==NOT) ) {
				alt115=1;
			}
			else if ( (LA115_0==LPAREN) ) {
				alt115=2;
			}
			else if ( (LA115_0==HASH_SYMBOL) && (synpred12_Css3())) {
				alt115=3;
			}

			} finally {dbg.exitDecision(115);}

			switch (alt115) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:467:5: ( NOT ( ws )? ) mediaInParens
					{
					dbg.location(467,5);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:467:5: ( NOT ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:467:6: NOT ( ws )?
					{
					dbg.location(467,6);
					match(input,NOT,FOLLOW_NOT_in_mediaConditionWithoutOr1805); if (state.failed) return;dbg.location(467,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:467:10: ( ws )?
					int alt111=2;
					try { dbg.enterSubRule(111);
					try { dbg.enterDecision(111, decisionCanBacktrack[111]);

					int LA111_0 = input.LA(1);
					if ( (LA111_0==COMMENT||LA111_0==NL||LA111_0==WS) ) {
						alt111=1;
					}
					} finally {dbg.exitDecision(111);}

					switch (alt111) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:467:10: ws
							{
							dbg.location(467,10);
							pushFollow(FOLLOW_ws_in_mediaConditionWithoutOr1807);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(111);}

					}
					dbg.location(467,15);
					pushFollow(FOLLOW_mediaInParens_in_mediaConditionWithoutOr1811);
					mediaInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:468:7: mediaInParens ( ( ws )? key_and ( ws )? mediaInParens )*
					{
					dbg.location(468,7);
					pushFollow(FOLLOW_mediaInParens_in_mediaConditionWithoutOr1820);
					mediaInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(468,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:468:21: ( ( ws )? key_and ( ws )? mediaInParens )*
					try { dbg.enterSubRule(114);

					loop114:
					while (true) {
						int alt114=2;
						try { dbg.enterDecision(114, decisionCanBacktrack[114]);

						try {
							isCyclicDecision = true;
							alt114 = dfa114.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(114);}

						switch (alt114) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:468:22: ( ws )? key_and ( ws )? mediaInParens
							{
							dbg.location(468,22);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:468:22: ( ws )?
							int alt112=2;
							try { dbg.enterSubRule(112);
							try { dbg.enterDecision(112, decisionCanBacktrack[112]);

							int LA112_0 = input.LA(1);
							if ( (LA112_0==COMMENT||LA112_0==NL||LA112_0==WS) ) {
								alt112=1;
							}
							} finally {dbg.exitDecision(112);}

							switch (alt112) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:468:22: ws
									{
									dbg.location(468,22);
									pushFollow(FOLLOW_ws_in_mediaConditionWithoutOr1823);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(112);}
							dbg.location(468,26);
							pushFollow(FOLLOW_key_and_in_mediaConditionWithoutOr1826);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(468,34);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:468:34: ( ws )?
							int alt113=2;
							try { dbg.enterSubRule(113);
							try { dbg.enterDecision(113, decisionCanBacktrack[113]);

							int LA113_0 = input.LA(1);
							if ( (LA113_0==COMMENT||LA113_0==NL||LA113_0==WS) ) {
								alt113=1;
							}
							} finally {dbg.exitDecision(113);}

							switch (alt113) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:468:34: ws
									{
									dbg.location(468,34);
									pushFollow(FOLLOW_ws_in_mediaConditionWithoutOr1828);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(113);}
							dbg.location(468,38);
							pushFollow(FOLLOW_mediaInParens_in_mediaConditionWithoutOr1831);
							mediaInParens();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop114;
						}
					}
					} finally {dbg.exitSubRule(114);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:469:7: ( HASH )=>{...}? sass_interpolation_expression_var
					{
					dbg.location(469,17);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaConditionWithoutOr", "isCssPreprocessorSource()");
					}dbg.location(469,46);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaConditionWithoutOr1850);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(470, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaConditionWithoutOr");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaConditionWithoutOr"



	// $ANTLR start "mediaInParens"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:472:1: mediaInParens : LPAREN ( ws )? ( mediaCondition | mediaExpression ) ( ws )? RPAREN ;
	public final void mediaInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(472, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:472:14: ( LPAREN ( ws )? ( mediaCondition | mediaExpression ) ( ws )? RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:4: LPAREN ( ws )? ( mediaCondition | mediaExpression ) ( ws )? RPAREN
			{
			dbg.location(473,4);
			match(input,LPAREN,FOLLOW_LPAREN_in_mediaInParens1861); if (state.failed) return;dbg.location(473,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:11: ( ws )?
			int alt116=2;
			try { dbg.enterSubRule(116);
			try { dbg.enterDecision(116, decisionCanBacktrack[116]);

			int LA116_0 = input.LA(1);
			if ( (LA116_0==COMMENT||LA116_0==NL||LA116_0==WS) ) {
				alt116=1;
			}
			} finally {dbg.exitDecision(116);}

			switch (alt116) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:11: ws
					{
					dbg.location(473,11);
					pushFollow(FOLLOW_ws_in_mediaInParens1863);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(116);}
			dbg.location(473,15);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:15: ( mediaCondition | mediaExpression )
			int alt117=2;
			try { dbg.enterSubRule(117);
			try { dbg.enterDecision(117, decisionCanBacktrack[117]);

			switch ( input.LA(1) ) {
			case NOT:
				{
				int LA117_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt117=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt117=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 117, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LPAREN:
				{
				int LA117_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt117=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt117=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 117, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case DIMENSION:
			case EMS:
			case EXS:
			case FONT_FACE_SYM:
			case FREQ:
			case GEN:
			case HASH:
			case HASH_SYMBOL:
			case IDENT:
			case IMPORTANT_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LBRACE:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case NUMBER:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STRING:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case URANGE:
			case URI:
			case VARIABLE:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt117=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 117, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(117);}

			switch (alt117) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:16: mediaCondition
					{
					dbg.location(473,16);
					pushFollow(FOLLOW_mediaCondition_in_mediaInParens1867);
					mediaCondition();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:33: mediaExpression
					{
					dbg.location(473,33);
					pushFollow(FOLLOW_mediaExpression_in_mediaInParens1871);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(117);}
			dbg.location(473,50);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:50: ( ws )?
			int alt118=2;
			try { dbg.enterSubRule(118);
			try { dbg.enterDecision(118, decisionCanBacktrack[118]);

			int LA118_0 = input.LA(1);
			if ( (LA118_0==COMMENT||LA118_0==NL||LA118_0==WS) ) {
				alt118=1;
			}
			} finally {dbg.exitDecision(118);}

			switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:473:50: ws
					{
					dbg.location(473,50);
					pushFollow(FOLLOW_ws_in_mediaInParens1874);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(118);}
			dbg.location(473,54);
			match(input,RPAREN,FOLLOW_RPAREN_in_mediaInParens1877); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(474, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaInParens"



	// $ANTLR start "mediaType"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:476:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(476, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:477:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt119=3;
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt119=1;
				}
				break;
			case GEN:
				{
				alt119=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt119=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 119, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:477:4: IDENT
					{
					dbg.location(477,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1887); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:477:12: GEN
					{
					dbg.location(477,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1891); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:477:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(477,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(477,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1897);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(478, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:480:1: mediaExpression : ( mediaFeature ( ( ws )? ( COLON | mediaComparisonOperator ) ( ws )? mediaFeatureValue )? | mediaFeatureRangeContext | ( HASH )=>{...}? sass_interpolation_expression_var );
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(480, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:481:5: ( mediaFeature ( ( ws )? ( COLON | mediaComparisonOperator ) ( ws )? mediaFeatureValue )? | mediaFeatureRangeContext | ( HASH )=>{...}? sass_interpolation_expression_var )
			int alt124=3;
			try { dbg.enterDecision(124, decisionCanBacktrack[124]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt124=1;
				}
				break;
			case GEN:
				{
				alt124=1;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA124_3 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt124=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt124=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 124, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA124_4 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt124=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt124=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 124, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA124_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt124=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt124=2;
				}
				else if ( ((synpred13_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt124=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 124, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
			case AT_SIGN:
			case DIMENSION:
			case EMS:
			case EXS:
			case FREQ:
			case HASH:
			case IMPORTANT_SYM:
			case LBRACE:
			case LBRACKET:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case LPAREN:
			case MINUS:
			case NOT:
			case NUMBER:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case STRING:
			case TILDE:
			case TIME:
			case URANGE:
			case URI:
			case VARIABLE:
				{
				alt124=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 124, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(124);}

			switch (alt124) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:5: mediaFeature ( ( ws )? ( COLON | mediaComparisonOperator ) ( ws )? mediaFeatureValue )?
					{
					dbg.location(482,5);
					pushFollow(FOLLOW_mediaFeature_in_mediaExpression1915);
					mediaFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(482,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:18: ( ( ws )? ( COLON | mediaComparisonOperator ) ( ws )? mediaFeatureValue )?
					int alt123=2;
					try { dbg.enterSubRule(123);
					try { dbg.enterDecision(123, decisionCanBacktrack[123]);

					try {
						isCyclicDecision = true;
						alt123 = dfa123.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(123);}

					switch (alt123) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:19: ( ws )? ( COLON | mediaComparisonOperator ) ( ws )? mediaFeatureValue
							{
							dbg.location(482,19);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:19: ( ws )?
							int alt120=2;
							try { dbg.enterSubRule(120);
							try { dbg.enterDecision(120, decisionCanBacktrack[120]);

							int LA120_0 = input.LA(1);
							if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
								alt120=1;
							}
							} finally {dbg.exitDecision(120);}

							switch (alt120) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:19: ws
									{
									dbg.location(482,19);
									pushFollow(FOLLOW_ws_in_mediaExpression1918);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(120);}
							dbg.location(482,23);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:23: ( COLON | mediaComparisonOperator )
							int alt121=2;
							try { dbg.enterSubRule(121);
							try { dbg.enterDecision(121, decisionCanBacktrack[121]);

							int LA121_0 = input.LA(1);
							if ( (LA121_0==COLON) ) {
								alt121=1;
							}
							else if ( ((LA121_0 >= GREATER && LA121_0 <= GREATER_OR_EQ)||LA121_0==LESS||LA121_0==LESS_OR_EQ||LA121_0==OPEQ) ) {
								alt121=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 121, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(121);}

							switch (alt121) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:24: COLON
									{
									dbg.location(482,24);
									match(input,COLON,FOLLOW_COLON_in_mediaExpression1922); if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:32: mediaComparisonOperator
									{
									dbg.location(482,32);
									pushFollow(FOLLOW_mediaComparisonOperator_in_mediaExpression1926);
									mediaComparisonOperator();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(121);}
							dbg.location(482,57);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:57: ( ws )?
							int alt122=2;
							try { dbg.enterSubRule(122);
							try { dbg.enterDecision(122, decisionCanBacktrack[122]);

							int LA122_0 = input.LA(1);
							if ( (LA122_0==COMMENT||LA122_0==NL||LA122_0==WS) ) {
								alt122=1;
							}
							} finally {dbg.exitDecision(122);}

							switch (alt122) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:482:57: ws
									{
									dbg.location(482,57);
									pushFollow(FOLLOW_ws_in_mediaExpression1929);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(122);}
							dbg.location(482,61);
							pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1932);
							mediaFeatureValue();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(123);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:483:7: mediaFeatureRangeContext
					{
					dbg.location(483,7);
					pushFollow(FOLLOW_mediaFeatureRangeContext_in_mediaExpression1942);
					mediaFeatureRangeContext();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:484:7: ( HASH )=>{...}? sass_interpolation_expression_var
					{
					dbg.location(484,17);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaExpression", "isCssPreprocessorSource()");
					}dbg.location(484,46);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaExpression1958);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(485, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaComparisonOperator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:487:1: mediaComparisonOperator : ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void mediaComparisonOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaComparisonOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(487, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:488:5: ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(488,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(490, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaComparisonOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaComparisonOperator"



	// $ANTLR start "mediaRangeExplicitValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:492:1: mediaRangeExplicitValue : ( LENGTH | EMS | REM | RESOLUTION | EXS | DIMENSION );
	public final void mediaRangeExplicitValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaRangeExplicitValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(492, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:493:5: ( LENGTH | EMS | REM | RESOLUTION | EXS | DIMENSION )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(493,5);
			if ( input.LA(1)==DIMENSION||input.LA(1)==EMS||input.LA(1)==EXS||input.LA(1)==LENGTH||(input.LA(1) >= REM && input.LA(1) <= RESOLUTION) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(494, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaRangeExplicitValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaRangeExplicitValue"



	// $ANTLR start "mediaFeatureValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:496:1: mediaFeatureValue : ( mediaRangeExplicitValue |{...}? cp_expression | expression );
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(496, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:497:4: ( mediaRangeExplicitValue |{...}? cp_expression | expression )
			int alt125=3;
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			switch ( input.LA(1) ) {
			case LENGTH:
				{
				alt125=1;
				}
				break;
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt125=2;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA125_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case IDENT:
				{
				int LA125_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case VARIABLE:
				{
				int LA125_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case LBRACKET:
				{
				int LA125_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case NUMBER:
				{
				int LA125_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case URANGE:
				{
				int LA125_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA125_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case EMS:
				{
				alt125=1;
				}
				break;
			case REM:
				{
				alt125=1;
				}
				break;
			case EXS:
				{
				alt125=1;
				}
				break;
			case RESOLUTION:
				{
				alt125=1;
				}
				break;
			case ANGLE:
				{
				int LA125_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case TIME:
				{
				int LA125_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case FREQ:
				{
				int LA125_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case DIMENSION:
				{
				alt125=1;
				}
				break;
			case STRING:
				{
				int LA125_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case TILDE:
				{
				int LA125_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA125_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case GEN:
				{
				int LA125_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case URI:
				{
				int LA125_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case HASH:
				{
				int LA125_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (true) ) {
					alt125=3;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA125_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt125=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt125=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 125, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA125_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt125=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt125=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 125, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA125_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt125=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt125=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 125, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA125_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt125=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt125=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 125, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA125_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt125=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt125=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 125, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA125_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt125=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 125, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 125, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:498:4: mediaRangeExplicitValue
					{
					dbg.location(498,4);
					pushFollow(FOLLOW_mediaRangeExplicitValue_in_mediaFeatureValue2058);
					mediaRangeExplicitValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:499:6: {...}? cp_expression
					{
					dbg.location(499,6);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(499,35);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue2068);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:500:6: expression
					{
					dbg.location(500,6);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue2075);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(501, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeatureRangeContext"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:503:1: mediaFeatureRangeContext : ( ( mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) )=> mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeature ( ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeatureValue )? | ( mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) )=> mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeature ( ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeatureValue )? | mediaFeatureValue ( ws )? OPEQ ( ws )? mediaFeature );
	public final void mediaFeatureRangeContext() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureRangeContext");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(503, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:504:5: ( ( mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) )=> mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeature ( ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeatureValue )? | ( mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) )=> mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeature ( ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeatureValue )? | mediaFeatureValue ( ws )? OPEQ ( ws )? mediaFeature )
			int alt138=3;
			try { dbg.enterDecision(138, decisionCanBacktrack[138]);

			switch ( input.LA(1) ) {
			case LENGTH:
				{
				int LA138_1 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case LBRACE:
				{
				int LA138_2 = input.LA(2);
				if ( (((synpred14_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt138=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred15_Css3())) ) {
					alt138=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NOT:
				{
				int LA138_3 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt138=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred15_Css3())) ) {
					alt138=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA138_4 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case IDENT:
				{
				int LA138_5 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case VARIABLE:
				{
				int LA138_6 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case LBRACKET:
				{
				int LA138_7 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case NUMBER:
				{
				int LA138_8 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case URANGE:
				{
				int LA138_9 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA138_10 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case EMS:
				{
				int LA138_11 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case REM:
				{
				int LA138_12 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case EXS:
				{
				int LA138_13 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA138_14 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case ANGLE:
				{
				int LA138_15 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case TIME:
				{
				int LA138_16 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case FREQ:
				{
				int LA138_17 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case DIMENSION:
				{
				int LA138_18 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case STRING:
				{
				int LA138_19 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case TILDE:
				{
				int LA138_20 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA138_21 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case GEN:
				{
				int LA138_22 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case URI:
				{
				int LA138_23 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case HASH:
				{
				int LA138_24 = input.LA(2);
				if ( (synpred14_Css3()) ) {
					alt138=1;
				}
				else if ( (synpred15_Css3()) ) {
					alt138=2;
				}
				else if ( (true) ) {
					alt138=3;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA138_25 = input.LA(2);
				if ( (((synpred14_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt138=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred15_Css3())) ) {
					alt138=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA138_26 = input.LA(2);
				if ( (((synpred14_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt138=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred15_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt138=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA138_27 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt138=1;
				}
				else if ( ((synpred15_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt138=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA138_28 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt138=1;
				}
				else if ( ((synpred15_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt138=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA138_29 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt138=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred15_Css3())) ) {
					alt138=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA138_30 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt138=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred15_Css3())) ) {
					alt138=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
				{
				int LA138_31 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt138=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred15_Css3())) ) {
					alt138=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LPAREN:
				{
				int LA138_32 = input.LA(2);
				if ( ((synpred14_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt138=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred15_Css3())) ) {
					alt138=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt138=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 138, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 138, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(138);}

			switch (alt138) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:5: ( mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) )=> mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeature ( ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeatureValue )?
					{
					dbg.location(505,53);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2110);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;dbg.location(505,71);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:71: ( ws )?
					int alt126=2;
					try { dbg.enterSubRule(126);
					try { dbg.enterDecision(126, decisionCanBacktrack[126]);

					int LA126_0 = input.LA(1);
					if ( (LA126_0==COMMENT||LA126_0==NL||LA126_0==WS) ) {
						alt126=1;
					}
					} finally {dbg.exitDecision(126);}

					switch (alt126) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:71: ws
							{
							dbg.location(505,71);
							pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2112);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(126);}
					dbg.location(505,75);
					if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(505,96);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:96: ( ws )?
					int alt127=2;
					try { dbg.enterSubRule(127);
					try { dbg.enterDecision(127, decisionCanBacktrack[127]);

					int LA127_0 = input.LA(1);
					if ( (LA127_0==COMMENT||LA127_0==NL||LA127_0==WS) ) {
						alt127=1;
					}
					} finally {dbg.exitDecision(127);}

					switch (alt127) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:96: ws
							{
							dbg.location(505,96);
							pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2124);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(127);}
					dbg.location(505,100);
					pushFollow(FOLLOW_mediaFeature_in_mediaFeatureRangeContext2127);
					mediaFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(505,113);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:113: ( ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeatureValue )?
					int alt130=2;
					try { dbg.enterSubRule(130);
					try { dbg.enterDecision(130, decisionCanBacktrack[130]);

					try {
						isCyclicDecision = true;
						alt130 = dfa130.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(130);}

					switch (alt130) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:114: ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeatureValue
							{
							dbg.location(505,114);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:114: ( ws )?
							int alt128=2;
							try { dbg.enterSubRule(128);
							try { dbg.enterDecision(128, decisionCanBacktrack[128]);

							int LA128_0 = input.LA(1);
							if ( (LA128_0==COMMENT||LA128_0==NL||LA128_0==WS) ) {
								alt128=1;
							}
							} finally {dbg.exitDecision(128);}

							switch (alt128) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:114: ws
									{
									dbg.location(505,114);
									pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2130);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(128);}
							dbg.location(505,118);
							if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(505,138);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:138: ( ws )?
							int alt129=2;
							try { dbg.enterSubRule(129);
							try { dbg.enterDecision(129, decisionCanBacktrack[129]);

							int LA129_0 = input.LA(1);
							if ( (LA129_0==COMMENT||LA129_0==NL||LA129_0==WS) ) {
								alt129=1;
							}
							} finally {dbg.exitDecision(129);}

							switch (alt129) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:138: ws
									{
									dbg.location(505,138);
									pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2141);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(129);}
							dbg.location(505,142);
							pushFollow(FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2144);
							mediaFeatureValue();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(130);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:7: ( mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) )=> mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeature ( ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeatureValue )?
					{
					dbg.location(506,61);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2172);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;dbg.location(506,79);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:79: ( ws )?
					int alt131=2;
					try { dbg.enterSubRule(131);
					try { dbg.enterDecision(131, decisionCanBacktrack[131]);

					int LA131_0 = input.LA(1);
					if ( (LA131_0==COMMENT||LA131_0==NL||LA131_0==WS) ) {
						alt131=1;
					}
					} finally {dbg.exitDecision(131);}

					switch (alt131) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:79: ws
							{
							dbg.location(506,79);
							pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2174);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(131);}
					dbg.location(506,83);
					if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(506,110);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:110: ( ws )?
					int alt132=2;
					try { dbg.enterSubRule(132);
					try { dbg.enterDecision(132, decisionCanBacktrack[132]);

					int LA132_0 = input.LA(1);
					if ( (LA132_0==COMMENT||LA132_0==NL||LA132_0==WS) ) {
						alt132=1;
					}
					} finally {dbg.exitDecision(132);}

					switch (alt132) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:110: ws
							{
							dbg.location(506,110);
							pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2186);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(132);}
					dbg.location(506,114);
					pushFollow(FOLLOW_mediaFeature_in_mediaFeatureRangeContext2189);
					mediaFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(506,127);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:127: ( ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeatureValue )?
					int alt135=2;
					try { dbg.enterSubRule(135);
					try { dbg.enterDecision(135, decisionCanBacktrack[135]);

					try {
						isCyclicDecision = true;
						alt135 = dfa135.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(135);}

					switch (alt135) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:128: ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeatureValue
							{
							dbg.location(506,128);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:128: ( ws )?
							int alt133=2;
							try { dbg.enterSubRule(133);
							try { dbg.enterDecision(133, decisionCanBacktrack[133]);

							int LA133_0 = input.LA(1);
							if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
								alt133=1;
							}
							} finally {dbg.exitDecision(133);}

							switch (alt133) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:128: ws
									{
									dbg.location(506,128);
									pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2192);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(133);}
							dbg.location(506,132);
							if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(506,158);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:158: ( ws )?
							int alt134=2;
							try { dbg.enterSubRule(134);
							try { dbg.enterDecision(134, decisionCanBacktrack[134]);

							int LA134_0 = input.LA(1);
							if ( (LA134_0==COMMENT||LA134_0==NL||LA134_0==WS) ) {
								alt134=1;
							}
							} finally {dbg.exitDecision(134);}

							switch (alt134) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:158: ws
									{
									dbg.location(506,158);
									pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2203);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(134);}
							dbg.location(506,162);
							pushFollow(FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2206);
							mediaFeatureValue();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(135);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:507:7: mediaFeatureValue ( ws )? OPEQ ( ws )? mediaFeature
					{
					dbg.location(507,7);
					pushFollow(FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2216);
					mediaFeatureValue();
					state._fsp--;
					if (state.failed) return;dbg.location(507,25);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:507:25: ( ws )?
					int alt136=2;
					try { dbg.enterSubRule(136);
					try { dbg.enterDecision(136, decisionCanBacktrack[136]);

					int LA136_0 = input.LA(1);
					if ( (LA136_0==COMMENT||LA136_0==NL||LA136_0==WS) ) {
						alt136=1;
					}
					} finally {dbg.exitDecision(136);}

					switch (alt136) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:507:25: ws
							{
							dbg.location(507,25);
							pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2218);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(136);}
					dbg.location(507,29);
					match(input,OPEQ,FOLLOW_OPEQ_in_mediaFeatureRangeContext2221); if (state.failed) return;dbg.location(507,34);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:507:34: ( ws )?
					int alt137=2;
					try { dbg.enterSubRule(137);
					try { dbg.enterDecision(137, decisionCanBacktrack[137]);

					int LA137_0 = input.LA(1);
					if ( (LA137_0==COMMENT||LA137_0==NL||LA137_0==WS) ) {
						alt137=1;
					}
					} finally {dbg.exitDecision(137);}

					switch (alt137) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:507:34: ws
							{
							dbg.location(507,34);
							pushFollow(FOLLOW_ws_in_mediaFeatureRangeContext2223);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(137);}
					dbg.location(507,38);
					pushFollow(FOLLOW_mediaFeature_in_mediaFeatureRangeContext2226);
					mediaFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(508, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureRangeContext");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureRangeContext"



	// $ANTLR start "mediaFeature"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:510:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(510, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:511:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt140=3;
			try { dbg.enterDecision(140, decisionCanBacktrack[140]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA140_1 = input.LA(2);
				if ( (LA140_1==DOT) ) {
					alt140=3;
				}
				else if ( (LA140_1==COLON||LA140_1==COMMENT||(LA140_1 >= GREATER && LA140_1 <= GREATER_OR_EQ)||LA140_1==LESS||LA140_1==LESS_OR_EQ||LA140_1==NL||LA140_1==OPEQ||LA140_1==RPAREN||LA140_1==WS) ) {
					alt140=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 140, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt140=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt140=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 140, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(140);}

			switch (alt140) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:511:4: IDENT
					{
					dbg.location(511,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature2236); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:511:12: GEN
					{
					dbg.location(511,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature2240); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:511:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(511,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(511,47);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:511:47: ( cp_variable | sass_interpolation_expression_var )
					int alt139=2;
					try { dbg.enterSubRule(139);
					try { dbg.enterDecision(139, decisionCanBacktrack[139]);

					int LA139_0 = input.LA(1);
					if ( (LA139_0==AT_IDENT||(LA139_0 >= BOTTOMCENTER_SYM && LA139_0 <= BOTTOMRIGHT_SYM)||LA139_0==CHARSET_SYM||LA139_0==COUNTER_STYLE_SYM||LA139_0==FONT_FACE_SYM||LA139_0==IDENT||LA139_0==IMPORT_SYM||LA139_0==KEYFRAMES_SYM||(LA139_0 >= LEFTBOTTOM_SYM && LA139_0 <= LEFTTOP_SYM)||LA139_0==MEDIA_SYM||LA139_0==MOZ_DOCUMENT_SYM||LA139_0==NAMESPACE_SYM||LA139_0==PAGE_SYM||(LA139_0 >= RIGHTBOTTOM_SYM && LA139_0 <= RIGHTTOP_SYM)||(LA139_0 >= SASS_AT_ROOT && LA139_0 <= SASS_DEBUG)||(LA139_0 >= SASS_EACH && LA139_0 <= SASS_ELSE)||LA139_0==SASS_EXTEND||(LA139_0 >= SASS_FOR && LA139_0 <= SASS_FUNCTION)||(LA139_0 >= SASS_IF && LA139_0 <= SASS_MIXIN)||(LA139_0 >= SASS_RETURN && LA139_0 <= SASS_WHILE)||(LA139_0 >= TOPCENTER_SYM && LA139_0 <= TOPRIGHT_SYM)||LA139_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt139=1;
					}
					else if ( (LA139_0==HASH_SYMBOL) ) {
						alt139=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 139, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(139);}

					switch (alt139) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:511:49: cp_variable
							{
							dbg.location(511,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature2248);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:511:63: sass_interpolation_expression_var
							{
							dbg.location(511,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature2252);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(139);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(512, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:514:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(514, 1);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:515:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:516:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(516,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:516:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt145=0;
			try { dbg.enterSubRule(145);

			loop145:
			while (true) {
				int alt145=3;
				try { dbg.enterDecision(145, decisionCanBacktrack[145]);

				int LA145_0 = input.LA(1);
				if ( ((LA145_0 >= AT_IDENT && LA145_0 <= AT_SIGN)||(LA145_0 >= BOTTOMCENTER_SYM && LA145_0 <= BOTTOMRIGHT_SYM)||(LA145_0 >= CHARSET_SYM && LA145_0 <= COLON)||LA145_0==CONTAINER_SYM||LA145_0==COUNTER_STYLE_SYM||(LA145_0 >= DCOLON && LA145_0 <= DOT)||LA145_0==FONT_FACE_SYM||(LA145_0 >= GEN && LA145_0 <= GREATER)||(LA145_0 >= HASH && LA145_0 <= HASH_SYMBOL)||LA145_0==IDENT||LA145_0==IMPORT_SYM||LA145_0==KEYFRAMES_SYM||LA145_0==LAYER_SYM||(LA145_0 >= LBRACKET && LA145_0 <= LEFTTOP_SYM)||LA145_0==LESS_AND||(LA145_0 >= MEDIA_SYM && LA145_0 <= MOZ_DOCUMENT_SYM)||LA145_0==NAMESPACE_SYM||LA145_0==PAGE_SYM||(LA145_0 >= PIPE && LA145_0 <= PLUS)||(LA145_0 >= RIGHTBOTTOM_SYM && LA145_0 <= RIGHTTOP_SYM)||(LA145_0 >= SASS_AT_ROOT && LA145_0 <= SASS_DEBUG)||(LA145_0 >= SASS_EACH && LA145_0 <= SASS_ELSE)||(LA145_0 >= SASS_EXTEND && LA145_0 <= SASS_FUNCTION)||(LA145_0 >= SASS_IF && LA145_0 <= SASS_MIXIN)||(LA145_0 >= SASS_RETURN && LA145_0 <= SASS_WHILE)||LA145_0==STAR||LA145_0==SUPPORTS_SYM||LA145_0==TILDE||(LA145_0 >= TOPCENTER_SYM && LA145_0 <= TOPRIGHT_SYM)||LA145_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt145=1;
				}
				else if ( (LA145_0==SEMI) ) {
					alt145=2;
				}

				} finally {dbg.exitDecision(145);}

				switch (alt145) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(517,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(517,12);
					pushFollow(FOLLOW_bodyItem_in_body2286);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(517,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt142=2;
					try { dbg.enterSubRule(142);
					try { dbg.enterDecision(142, decisionCanBacktrack[142]);

					try {
						isCyclicDecision = true;
						alt142 = dfa142.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(142);}

					switch (alt142) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(517,34);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:34: ( ws )?
							int alt141=2;
							try { dbg.enterSubRule(141);
							try { dbg.enterDecision(141, decisionCanBacktrack[141]);

							int LA141_0 = input.LA(1);
							if ( (LA141_0==COMMENT||LA141_0==NL||LA141_0==WS) ) {
								alt141=1;
							}
							} finally {dbg.exitDecision(141);}

							switch (alt141) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:34: ws
									{
									dbg.location(517,34);
									pushFollow(FOLLOW_ws_in_body2296);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(141);}
							dbg.location(517,38);
							match(input,SEMI,FOLLOW_SEMI_in_body2299); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(142);}
					dbg.location(517,45);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:45: ( ws )?
					int alt143=2;
					try { dbg.enterSubRule(143);
					try { dbg.enterDecision(143, decisionCanBacktrack[143]);

					int LA143_0 = input.LA(1);
					if ( (LA143_0==COMMENT||LA143_0==NL||LA143_0==WS) ) {
						alt143=1;
					}
					} finally {dbg.exitDecision(143);}

					switch (alt143) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:45: ws
							{
							dbg.location(517,45);
							pushFollow(FOLLOW_ws_in_body2303);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(143);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:519:10: ( SEMI ( ws )? )
					{
					dbg.location(519,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:519:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:519:12: SEMI ( ws )?
					{
					dbg.location(519,12);
					match(input,SEMI,FOLLOW_SEMI_in_body2330); if (state.failed) return;dbg.location(519,17);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:519:17: ( ws )?
					int alt144=2;
					try { dbg.enterSubRule(144);
					try { dbg.enterDecision(144, decisionCanBacktrack[144]);

					int LA144_0 = input.LA(1);
					if ( (LA144_0==COMMENT||LA144_0==NL||LA144_0==WS) ) {
						alt144=1;
					}
					} finally {dbg.exitDecision(144);}

					switch (alt144) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:519:17: ws
							{
							dbg.location(519,17);
							pushFollow(FOLLOW_ws_in_body2332);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(144);}

					}

					}
					break;

				default :
					if ( cnt145 >= 1 ) break loop145;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(145, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt145++;
			}
			} finally {dbg.exitSubRule(145);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(521, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:523:1: bodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(523, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:524:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt146=11;
			try { dbg.enterDecision(146, decisionCanBacktrack[146]);

			switch ( input.LA(1) ) {
			case LESS_AND:
				{
				int LA146_1 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt146=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt146=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=3;
				}
				else if ( (true) ) {
					alt146=4;
				}

				}
				break;
			case DOT:
				{
				int LA146_2 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt146=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt146=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=3;
				}
				else if ( (true) ) {
					alt146=4;
				}

				}
				break;
			case HASH:
				{
				int LA146_3 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt146=1;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt146=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=3;
				}
				else if ( (true) ) {
					alt146=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA146_4 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
				{
				int LA146_5 = input.LA(2);
				if ( ((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt146=2;
				}
				else if ( (((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( ((evalPredicate(! tokenNameEquals("@charset"),"! tokenNameEquals(\"@charset\")")||evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")||evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")"))) ) {
					alt146=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA146_6 = input.LA(2);
				if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=2;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA146_7 = input.LA(2);
				if ( (true) ) {
					alt146=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case DIMENSION:
			case GEN:
			case GREATER:
			case HASH_SYMBOL:
			case LBRACKET:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt146=4;
				}
				break;
			case IDENT:
				{
				int LA146_14 = input.LA(2);
				if ( (true) ) {
					alt146=4;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MEDIA_SYM:
				{
				int LA146_20 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (true) ) {
					alt146=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA146_21 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((synpred21_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt146=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA146_22 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (true) ) {
					alt146=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA146_23 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (true) ) {
					alt146=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA146_24 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (true) ) {
					alt146=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA146_25 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (true) ) {
					alt146=7;
				}

				}
				break;
			case CONTAINER_SYM:
			case LAYER_SYM:
			case SUPPORTS_SYM:
				{
				alt146=7;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA146_27 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (true) ) {
					alt146=7;
				}

				}
				break;
			case KEYFRAMES_SYM:
				{
				int LA146_28 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (true) ) {
					alt146=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA146_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt146=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA146_32 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt146=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA146_33 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt146=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA146_34 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt146=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA146_35 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt146=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA146_36 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt146=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA146_37 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt146=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FORWARD:
			case SASS_RETURN:
			case SASS_USE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA146_38 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt146=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred21_Css3())) ) {
					alt146=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 146, 38, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 146, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(146);}

			switch (alt146) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(525,107);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem2412);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:527:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(527,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(527,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem2445);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:528:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(528,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(528,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem2464);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:529:8: rule
					{
					dbg.location(529,8);
					pushFollow(FOLLOW_rule_in_bodyItem2473);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:530:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(530,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem2495);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:531:11: ( sass_map )=> sass_map
					{
					dbg.location(531,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem2512);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:532:11: at_rule
					{
					dbg.location(532,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem2524);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:534:11: {...}? importItem
					{
					dbg.location(534,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(534,40);
					pushFollow(FOLLOW_importItem_in_bodyItem2547);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:535:11: {...}? sass_debug
					{
					dbg.location(535,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(535,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem2561);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:536:11: {...}? sass_control
					{
					dbg.location(536,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(536,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem2575);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:537:11: {...}? sass_function_declaration
					{
					dbg.location(537,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(537,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem2589);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(538, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "supportsAtRule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:543:1: supportsAtRule : SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void supportsAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(543, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:544:2: ( SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:2: SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(545,2);
			match(input,SUPPORTS_SYM,FOLLOW_SUPPORTS_SYM_in_supportsAtRule2609); if (state.failed) return;dbg.location(545,15);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:15: ( ws )?
			int alt147=2;
			try { dbg.enterSubRule(147);
			try { dbg.enterDecision(147, decisionCanBacktrack[147]);

			int LA147_0 = input.LA(1);
			if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
				alt147=1;
			}
			} finally {dbg.exitDecision(147);}

			switch (alt147) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:15: ws
					{
					dbg.location(545,15);
					pushFollow(FOLLOW_ws_in_supportsAtRule2611);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(147);}
			dbg.location(545,19);
			pushFollow(FOLLOW_supportsCondition_in_supportsAtRule2614);
			supportsCondition();
			state._fsp--;
			if (state.failed) return;dbg.location(545,37);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:37: ( ws )?
			int alt148=2;
			try { dbg.enterSubRule(148);
			try { dbg.enterDecision(148, decisionCanBacktrack[148]);

			int LA148_0 = input.LA(1);
			if ( (LA148_0==COMMENT||LA148_0==NL||LA148_0==WS) ) {
				alt148=1;
			}
			} finally {dbg.exitDecision(148);}

			switch (alt148) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:37: ws
					{
					dbg.location(545,37);
					pushFollow(FOLLOW_ws_in_supportsAtRule2616);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(148);}
			dbg.location(545,41);
			match(input,LBRACE,FOLLOW_LBRACE_in_supportsAtRule2619); if (state.failed) return;dbg.location(545,48);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:48: ( ws )?
			int alt149=2;
			try { dbg.enterSubRule(149);
			try { dbg.enterDecision(149, decisionCanBacktrack[149]);

			int LA149_0 = input.LA(1);
			if ( (LA149_0==COMMENT||LA149_0==NL||LA149_0==WS) ) {
				alt149=1;
			}
			} finally {dbg.exitDecision(149);}

			switch (alt149) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:48: ws
					{
					dbg.location(545,48);
					pushFollow(FOLLOW_ws_in_supportsAtRule2621);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(149);}
			dbg.location(545,52);
			pushFollow(FOLLOW_syncToFollow_in_supportsAtRule2624);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(545,65);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:65: ( mediaBody )?
			int alt150=2;
			try { dbg.enterSubRule(150);
			try { dbg.enterDecision(150, decisionCanBacktrack[150]);

			int LA150_0 = input.LA(1);
			if ( ((LA150_0 >= AT_IDENT && LA150_0 <= AT_SIGN)||(LA150_0 >= BOTTOMCENTER_SYM && LA150_0 <= BOTTOMRIGHT_SYM)||(LA150_0 >= CHARSET_SYM && LA150_0 <= COLON)||LA150_0==COUNTER_STYLE_SYM||(LA150_0 >= DCOLON && LA150_0 <= DOT)||LA150_0==FONT_FACE_SYM||(LA150_0 >= GEN && LA150_0 <= GREATER)||(LA150_0 >= HASH && LA150_0 <= HASH_SYMBOL)||LA150_0==IDENT||LA150_0==IMPORT_SYM||LA150_0==KEYFRAMES_SYM||(LA150_0 >= LBRACKET && LA150_0 <= LEFTTOP_SYM)||LA150_0==LESS_AND||(LA150_0 >= MEDIA_SYM && LA150_0 <= MOZ_DOCUMENT_SYM)||LA150_0==NAMESPACE_SYM||LA150_0==PAGE_SYM||(LA150_0 >= PIPE && LA150_0 <= PLUS)||(LA150_0 >= RIGHTBOTTOM_SYM && LA150_0 <= RIGHTTOP_SYM)||(LA150_0 >= SASS_AT_ROOT && LA150_0 <= SASS_DEBUG)||(LA150_0 >= SASS_EACH && LA150_0 <= SASS_ELSE)||(LA150_0 >= SASS_EXTEND && LA150_0 <= SASS_FUNCTION)||(LA150_0 >= SASS_IF && LA150_0 <= SASS_MIXIN)||(LA150_0 >= SASS_RETURN && LA150_0 <= SEMI)||LA150_0==STAR||LA150_0==SUPPORTS_SYM||LA150_0==TILDE||(LA150_0 >= TOPCENTER_SYM && LA150_0 <= TOPRIGHT_SYM)||LA150_0==VARIABLE||LA150_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt150=1;
			}
			} finally {dbg.exitDecision(150);}

			switch (alt150) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:545:65: mediaBody
					{
					dbg.location(545,65);
					pushFollow(FOLLOW_mediaBody_in_supportsAtRule2626);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(150);}
			dbg.location(545,76);
			match(input,RBRACE,FOLLOW_RBRACE_in_supportsAtRule2629); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(546, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsAtRule"



	// $ANTLR start "supportsCondition"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:549:1: supportsCondition : ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? );
	public final void supportsCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(549, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:550:2: ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? )
			int alt152=2;
			try { dbg.enterDecision(152, decisionCanBacktrack[152]);

			int LA152_0 = input.LA(1);
			if ( (LA152_0==NOT) ) {
				alt152=1;
			}
			else if ( (LA152_0==IDENT||LA152_0==LPAREN) ) {
				alt152=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 152, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(152);}

			switch (alt152) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:551:2: NOT ws supportsInParens
					{
					dbg.location(551,2);
					match(input,NOT,FOLLOW_NOT_in_supportsCondition2642); if (state.failed) return;dbg.location(551,6);
					pushFollow(FOLLOW_ws_in_supportsCondition2644);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(551,9);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2646);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:552:4: supportsInParens ( ws supportsWithOperator )?
					{
					dbg.location(552,4);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2651);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(552,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:552:21: ( ws supportsWithOperator )?
					int alt151=2;
					try { dbg.enterSubRule(151);
					try { dbg.enterDecision(151, decisionCanBacktrack[151]);

					try {
						isCyclicDecision = true;
						alt151 = dfa151.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(151);}

					switch (alt151) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:552:22: ws supportsWithOperator
							{
							dbg.location(552,22);
							pushFollow(FOLLOW_ws_in_supportsCondition2654);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(552,25);
							pushFollow(FOLLOW_supportsWithOperator_in_supportsCondition2656);
							supportsWithOperator();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(151);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(553, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsCondition"



	// $ANTLR start "supportsWithOperator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:555:1: supportsWithOperator : ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* );
	public final void supportsWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(555, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:556:9: ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* )
			int alt155=2;
			try { dbg.enterDecision(155, decisionCanBacktrack[155]);

			int LA155_0 = input.LA(1);
			if ( (LA155_0==IDENT) ) {
				int LA155_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt155=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt155=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 155, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 155, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(155);}

			switch (alt155) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:557:9: supportsConjunction ( ws supportsConjunction )*
					{
					dbg.location(557,9);
					pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2684);
					supportsConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(557,29);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:557:29: ( ws supportsConjunction )*
					try { dbg.enterSubRule(153);

					loop153:
					while (true) {
						int alt153=2;
						try { dbg.enterDecision(153, decisionCanBacktrack[153]);

						try {
							isCyclicDecision = true;
							alt153 = dfa153.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(153);}

						switch (alt153) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:557:30: ws supportsConjunction
							{
							dbg.location(557,30);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2687);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(557,33);
							pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2689);
							supportsConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop153;
						}
					}
					} finally {dbg.exitSubRule(153);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:558:11: supportsDisjunction ( ws supportsDisjunction )*
					{
					dbg.location(558,11);
					pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2703);
					supportsDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(558,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:558:31: ( ws supportsDisjunction )*
					try { dbg.enterSubRule(154);

					loop154:
					while (true) {
						int alt154=2;
						try { dbg.enterDecision(154, decisionCanBacktrack[154]);

						try {
							isCyclicDecision = true;
							alt154 = dfa154.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(154);}

						switch (alt154) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:558:32: ws supportsDisjunction
							{
							dbg.location(558,32);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2706);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(558,35);
							pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2708);
							supportsDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop154;
						}
					}
					} finally {dbg.exitSubRule(154);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(559, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsWithOperator"



	// $ANTLR start "supportsConjunction"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:561:1: supportsConjunction : ( key_and ws supportsInParens ) ;
	public final void supportsConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(561, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:562:9: ( ( key_and ws supportsInParens ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:562:11: ( key_and ws supportsInParens )
			{
			dbg.location(562,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:562:11: ( key_and ws supportsInParens )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:562:12: key_and ws supportsInParens
			{
			dbg.location(562,12);
			pushFollow(FOLLOW_key_and_in_supportsConjunction2736);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(562,20);
			pushFollow(FOLLOW_ws_in_supportsConjunction2738);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(562,23);
			pushFollow(FOLLOW_supportsInParens_in_supportsConjunction2740);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(563, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsConjunction"



	// $ANTLR start "supportsDisjunction"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:565:1: supportsDisjunction : ( key_or ws supportsInParens ) ;
	public final void supportsDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(565, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:566:9: ( ( key_or ws supportsInParens ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:566:11: ( key_or ws supportsInParens )
			{
			dbg.location(566,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:566:11: ( key_or ws supportsInParens )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:566:12: key_or ws supportsInParens
			{
			dbg.location(566,12);
			pushFollow(FOLLOW_key_or_in_supportsDisjunction2767);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(566,19);
			pushFollow(FOLLOW_ws_in_supportsDisjunction2769);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(566,22);
			pushFollow(FOLLOW_supportsInParens_in_supportsDisjunction2771);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(567, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDisjunction"



	// $ANTLR start "supportsInParens"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:569:1: supportsInParens options {backtrack=true; } : ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN | supportsFeature | function );
	public final void supportsInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(569, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:570:2: ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN | supportsFeature | function )
			int alt158=3;
			try { dbg.enterDecision(158, decisionCanBacktrack[158]);

			int LA158_0 = input.LA(1);
			if ( (LA158_0==LPAREN) ) {
				int LA158_1 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt158=1;
				}
				else if ( (synpred23_Css3()) ) {
					alt158=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 158, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA158_0==IDENT) ) {
				alt158=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 158, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(158);}

			switch (alt158) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:2: LPAREN ( ws )? supportsCondition ( ws )? RPAREN
					{
					dbg.location(571,2);
					match(input,LPAREN,FOLLOW_LPAREN_in_supportsInParens2798); if (state.failed) return;dbg.location(571,9);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:9: ( ws )?
					int alt156=2;
					try { dbg.enterSubRule(156);
					try { dbg.enterDecision(156, decisionCanBacktrack[156]);

					int LA156_0 = input.LA(1);
					if ( (LA156_0==COMMENT||LA156_0==NL||LA156_0==WS) ) {
						alt156=1;
					}
					} finally {dbg.exitDecision(156);}

					switch (alt156) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:9: ws
							{
							dbg.location(571,9);
							pushFollow(FOLLOW_ws_in_supportsInParens2800);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(156);}
					dbg.location(571,13);
					pushFollow(FOLLOW_supportsCondition_in_supportsInParens2803);
					supportsCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(571,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:31: ( ws )?
					int alt157=2;
					try { dbg.enterSubRule(157);
					try { dbg.enterDecision(157, decisionCanBacktrack[157]);

					int LA157_0 = input.LA(1);
					if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
						alt157=1;
					}
					} finally {dbg.exitDecision(157);}

					switch (alt157) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:31: ws
							{
							dbg.location(571,31);
							pushFollow(FOLLOW_ws_in_supportsInParens2805);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(157);}
					dbg.location(571,35);
					match(input,RPAREN,FOLLOW_RPAREN_in_supportsInParens2808); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:572:4: supportsFeature
					{
					dbg.location(572,4);
					pushFollow(FOLLOW_supportsFeature_in_supportsInParens2813);
					supportsFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:573:11: function
					{
					dbg.location(573,11);
					pushFollow(FOLLOW_function_in_supportsInParens2825);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(576, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsInParens"



	// $ANTLR start "supportsFeature"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:578:1: supportsFeature : supportsDecl ;
	public final void supportsFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(578, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:579:2: ( supportsDecl )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:580:2: supportsDecl
			{
			dbg.location(580,2);
			pushFollow(FOLLOW_supportsDecl_in_supportsFeature2855);
			supportsDecl();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(581, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsFeature"



	// $ANTLR start "supportsDecl"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:583:1: supportsDecl : LPAREN ( ws )? declaration ( ws )? RPAREN ;
	public final void supportsDecl() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDecl");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(583, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:584:2: ( LPAREN ( ws )? declaration ( ws )? RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:585:2: LPAREN ( ws )? declaration ( ws )? RPAREN
			{
			dbg.location(585,2);
			match(input,LPAREN,FOLLOW_LPAREN_in_supportsDecl2867); if (state.failed) return;dbg.location(585,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:585:9: ( ws )?
			int alt159=2;
			try { dbg.enterSubRule(159);
			try { dbg.enterDecision(159, decisionCanBacktrack[159]);

			int LA159_0 = input.LA(1);
			if ( (LA159_0==COMMENT||LA159_0==NL||LA159_0==WS) ) {
				alt159=1;
			}
			} finally {dbg.exitDecision(159);}

			switch (alt159) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:585:9: ws
					{
					dbg.location(585,9);
					pushFollow(FOLLOW_ws_in_supportsDecl2869);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(159);}
			dbg.location(585,13);
			pushFollow(FOLLOW_declaration_in_supportsDecl2872);
			declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(585,25);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:585:25: ( ws )?
			int alt160=2;
			try { dbg.enterSubRule(160);
			try { dbg.enterDecision(160, decisionCanBacktrack[160]);

			int LA160_0 = input.LA(1);
			if ( (LA160_0==COMMENT||LA160_0==NL||LA160_0==WS) ) {
				alt160=1;
			}
			} finally {dbg.exitDecision(160);}

			switch (alt160) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:585:25: ws
					{
					dbg.location(585,25);
					pushFollow(FOLLOW_ws_in_supportsDecl2874);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(160);}
			dbg.location(585,29);
			match(input,RPAREN,FOLLOW_RPAREN_in_supportsDecl2877); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(586, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDecl");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDecl"



	// $ANTLR start "containerAtRule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:588:1: containerAtRule options {backtrack=true; } : ( ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE | CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE );
	public final void containerAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(588, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:589:2: ( ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE | CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE )
			int alt167=2;
			try { dbg.enterDecision(167, decisionCanBacktrack[167]);

			int LA167_0 = input.LA(1);
			if ( (LA167_0==CONTAINER_SYM) ) {
				int LA167_1 = input.LA(2);
				if ( (synpred24_Css3()) ) {
					alt167=1;
				}
				else if ( (true) ) {
					alt167=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 167, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(167);}

			switch (alt167) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:2: ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE
					{
					dbg.location(590,54);
					match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_containerAtRule2911); if (state.failed) return;dbg.location(590,68);
					pushFollow(FOLLOW_ws_in_containerAtRule2913);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(590,71);
					pushFollow(FOLLOW_containerCondition_in_containerAtRule2915);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(590,90);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:90: ( ws )?
					int alt161=2;
					try { dbg.enterSubRule(161);
					try { dbg.enterDecision(161, decisionCanBacktrack[161]);

					int LA161_0 = input.LA(1);
					if ( (LA161_0==COMMENT||LA161_0==NL||LA161_0==WS) ) {
						alt161=1;
					}
					} finally {dbg.exitDecision(161);}

					switch (alt161) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:90: ws
							{
							dbg.location(590,90);
							pushFollow(FOLLOW_ws_in_containerAtRule2917);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(161);}
					dbg.location(590,94);
					match(input,LBRACE,FOLLOW_LBRACE_in_containerAtRule2920); if (state.failed) return;dbg.location(590,101);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:101: ( ws )?
					int alt162=2;
					try { dbg.enterSubRule(162);
					try { dbg.enterDecision(162, decisionCanBacktrack[162]);

					int LA162_0 = input.LA(1);
					if ( (LA162_0==COMMENT||LA162_0==NL||LA162_0==WS) ) {
						alt162=1;
					}
					} finally {dbg.exitDecision(162);}

					switch (alt162) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:101: ws
							{
							dbg.location(590,101);
							pushFollow(FOLLOW_ws_in_containerAtRule2922);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(162);}
					dbg.location(590,105);
					pushFollow(FOLLOW_syncToFollow_in_containerAtRule2925);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(590,118);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:118: ( body )?
					int alt163=2;
					try { dbg.enterSubRule(163);
					try { dbg.enterDecision(163, decisionCanBacktrack[163]);

					int LA163_0 = input.LA(1);
					if ( ((LA163_0 >= AT_IDENT && LA163_0 <= AT_SIGN)||(LA163_0 >= BOTTOMCENTER_SYM && LA163_0 <= BOTTOMRIGHT_SYM)||(LA163_0 >= CHARSET_SYM && LA163_0 <= COLON)||LA163_0==CONTAINER_SYM||LA163_0==COUNTER_STYLE_SYM||(LA163_0 >= DCOLON && LA163_0 <= DOT)||LA163_0==FONT_FACE_SYM||(LA163_0 >= GEN && LA163_0 <= GREATER)||(LA163_0 >= HASH && LA163_0 <= HASH_SYMBOL)||LA163_0==IDENT||LA163_0==IMPORT_SYM||LA163_0==KEYFRAMES_SYM||LA163_0==LAYER_SYM||(LA163_0 >= LBRACKET && LA163_0 <= LEFTTOP_SYM)||LA163_0==LESS_AND||(LA163_0 >= MEDIA_SYM && LA163_0 <= MOZ_DOCUMENT_SYM)||LA163_0==NAMESPACE_SYM||LA163_0==PAGE_SYM||(LA163_0 >= PIPE && LA163_0 <= PLUS)||(LA163_0 >= RIGHTBOTTOM_SYM && LA163_0 <= RIGHTTOP_SYM)||(LA163_0 >= SASS_AT_ROOT && LA163_0 <= SASS_DEBUG)||(LA163_0 >= SASS_EACH && LA163_0 <= SASS_ELSE)||(LA163_0 >= SASS_EXTEND && LA163_0 <= SASS_FUNCTION)||(LA163_0 >= SASS_IF && LA163_0 <= SASS_MIXIN)||(LA163_0 >= SASS_RETURN && LA163_0 <= SEMI)||LA163_0==STAR||LA163_0==SUPPORTS_SYM||LA163_0==TILDE||(LA163_0 >= TOPCENTER_SYM && LA163_0 <= TOPRIGHT_SYM)||LA163_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt163=1;
					}
					} finally {dbg.exitDecision(163);}

					switch (alt163) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:118: body
							{
							dbg.location(590,118);
							pushFollow(FOLLOW_body_in_containerAtRule2927);
							body();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(163);}
					dbg.location(590,124);
					match(input,RBRACE,FOLLOW_RBRACE_in_containerAtRule2930); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:591:4: CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE
					{
					dbg.location(591,4);
					match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_containerAtRule2935); if (state.failed) return;dbg.location(591,18);
					pushFollow(FOLLOW_ws_in_containerAtRule2937);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(591,21);
					pushFollow(FOLLOW_containerName_in_containerAtRule2939);
					containerName();
					state._fsp--;
					if (state.failed) return;dbg.location(591,35);
					pushFollow(FOLLOW_ws_in_containerAtRule2941);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(591,38);
					pushFollow(FOLLOW_containerCondition_in_containerAtRule2943);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(591,57);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:591:57: ( ws )?
					int alt164=2;
					try { dbg.enterSubRule(164);
					try { dbg.enterDecision(164, decisionCanBacktrack[164]);

					int LA164_0 = input.LA(1);
					if ( (LA164_0==COMMENT||LA164_0==NL||LA164_0==WS) ) {
						alt164=1;
					}
					} finally {dbg.exitDecision(164);}

					switch (alt164) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:591:57: ws
							{
							dbg.location(591,57);
							pushFollow(FOLLOW_ws_in_containerAtRule2945);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(164);}
					dbg.location(591,61);
					match(input,LBRACE,FOLLOW_LBRACE_in_containerAtRule2948); if (state.failed) return;dbg.location(591,68);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:591:68: ( ws )?
					int alt165=2;
					try { dbg.enterSubRule(165);
					try { dbg.enterDecision(165, decisionCanBacktrack[165]);

					int LA165_0 = input.LA(1);
					if ( (LA165_0==COMMENT||LA165_0==NL||LA165_0==WS) ) {
						alt165=1;
					}
					} finally {dbg.exitDecision(165);}

					switch (alt165) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:591:68: ws
							{
							dbg.location(591,68);
							pushFollow(FOLLOW_ws_in_containerAtRule2950);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(165);}
					dbg.location(591,72);
					pushFollow(FOLLOW_syncToFollow_in_containerAtRule2953);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(591,85);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:591:85: ( body )?
					int alt166=2;
					try { dbg.enterSubRule(166);
					try { dbg.enterDecision(166, decisionCanBacktrack[166]);

					int LA166_0 = input.LA(1);
					if ( ((LA166_0 >= AT_IDENT && LA166_0 <= AT_SIGN)||(LA166_0 >= BOTTOMCENTER_SYM && LA166_0 <= BOTTOMRIGHT_SYM)||(LA166_0 >= CHARSET_SYM && LA166_0 <= COLON)||LA166_0==CONTAINER_SYM||LA166_0==COUNTER_STYLE_SYM||(LA166_0 >= DCOLON && LA166_0 <= DOT)||LA166_0==FONT_FACE_SYM||(LA166_0 >= GEN && LA166_0 <= GREATER)||(LA166_0 >= HASH && LA166_0 <= HASH_SYMBOL)||LA166_0==IDENT||LA166_0==IMPORT_SYM||LA166_0==KEYFRAMES_SYM||LA166_0==LAYER_SYM||(LA166_0 >= LBRACKET && LA166_0 <= LEFTTOP_SYM)||LA166_0==LESS_AND||(LA166_0 >= MEDIA_SYM && LA166_0 <= MOZ_DOCUMENT_SYM)||LA166_0==NAMESPACE_SYM||LA166_0==PAGE_SYM||(LA166_0 >= PIPE && LA166_0 <= PLUS)||(LA166_0 >= RIGHTBOTTOM_SYM && LA166_0 <= RIGHTTOP_SYM)||(LA166_0 >= SASS_AT_ROOT && LA166_0 <= SASS_DEBUG)||(LA166_0 >= SASS_EACH && LA166_0 <= SASS_ELSE)||(LA166_0 >= SASS_EXTEND && LA166_0 <= SASS_FUNCTION)||(LA166_0 >= SASS_IF && LA166_0 <= SASS_MIXIN)||(LA166_0 >= SASS_RETURN && LA166_0 <= SEMI)||LA166_0==STAR||LA166_0==SUPPORTS_SYM||LA166_0==TILDE||(LA166_0 >= TOPCENTER_SYM && LA166_0 <= TOPRIGHT_SYM)||LA166_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt166=1;
					}
					} finally {dbg.exitDecision(166);}

					switch (alt166) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:591:85: body
							{
							dbg.location(591,85);
							pushFollow(FOLLOW_body_in_containerAtRule2955);
							body();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(166);}
					dbg.location(591,91);
					match(input,RBRACE,FOLLOW_RBRACE_in_containerAtRule2958); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(592, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerAtRule"



	// $ANTLR start "containerCondition"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:594:1: containerCondition : ( NOT ws containerQueryInParens | containerQueryInParens ( ws containerQueryWithOperator )? );
	public final void containerCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(594, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:595:9: ( NOT ws containerQueryInParens | containerQueryInParens ( ws containerQueryWithOperator )? )
			int alt169=2;
			try { dbg.enterDecision(169, decisionCanBacktrack[169]);

			int LA169_0 = input.LA(1);
			if ( (LA169_0==NOT) ) {
				alt169=1;
			}
			else if ( (LA169_0==IDENT||LA169_0==LPAREN) ) {
				alt169=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 169, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(169);}

			switch (alt169) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:596:9: NOT ws containerQueryInParens
					{
					dbg.location(596,9);
					match(input,NOT,FOLLOW_NOT_in_containerCondition2984); if (state.failed) return;dbg.location(596,13);
					pushFollow(FOLLOW_ws_in_containerCondition2986);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(596,16);
					pushFollow(FOLLOW_containerQueryInParens_in_containerCondition2988);
					containerQueryInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:597:11: containerQueryInParens ( ws containerQueryWithOperator )?
					{
					dbg.location(597,11);
					pushFollow(FOLLOW_containerQueryInParens_in_containerCondition3000);
					containerQueryInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(597,34);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:597:34: ( ws containerQueryWithOperator )?
					int alt168=2;
					try { dbg.enterSubRule(168);
					try { dbg.enterDecision(168, decisionCanBacktrack[168]);

					try {
						isCyclicDecision = true;
						alt168 = dfa168.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(168);}

					switch (alt168) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:597:35: ws containerQueryWithOperator
							{
							dbg.location(597,35);
							pushFollow(FOLLOW_ws_in_containerCondition3003);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(597,38);
							pushFollow(FOLLOW_containerQueryWithOperator_in_containerCondition3005);
							containerQueryWithOperator();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(168);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(598, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerCondition"



	// $ANTLR start "containerQueryWithOperator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:600:1: containerQueryWithOperator : ( containerQueryConjunction ( ws containerQueryConjunction )* | containerQueryDisjunction ( ws containerQueryDisjunction )* );
	public final void containerQueryWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(600, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:601:9: ( containerQueryConjunction ( ws containerQueryConjunction )* | containerQueryDisjunction ( ws containerQueryDisjunction )* )
			int alt172=2;
			try { dbg.enterDecision(172, decisionCanBacktrack[172]);

			int LA172_0 = input.LA(1);
			if ( (LA172_0==IDENT) ) {
				int LA172_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt172=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt172=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 172, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 172, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(172);}

			switch (alt172) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:602:9: containerQueryConjunction ( ws containerQueryConjunction )*
					{
					dbg.location(602,9);
					pushFollow(FOLLOW_containerQueryConjunction_in_containerQueryWithOperator3040);
					containerQueryConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(602,35);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:602:35: ( ws containerQueryConjunction )*
					try { dbg.enterSubRule(170);

					loop170:
					while (true) {
						int alt170=2;
						try { dbg.enterDecision(170, decisionCanBacktrack[170]);

						try {
							isCyclicDecision = true;
							alt170 = dfa170.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(170);}

						switch (alt170) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:602:36: ws containerQueryConjunction
							{
							dbg.location(602,36);
							pushFollow(FOLLOW_ws_in_containerQueryWithOperator3043);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(602,39);
							pushFollow(FOLLOW_containerQueryConjunction_in_containerQueryWithOperator3045);
							containerQueryConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop170;
						}
					}
					} finally {dbg.exitSubRule(170);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:603:11: containerQueryDisjunction ( ws containerQueryDisjunction )*
					{
					dbg.location(603,11);
					pushFollow(FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator3059);
					containerQueryDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(603,37);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:603:37: ( ws containerQueryDisjunction )*
					try { dbg.enterSubRule(171);

					loop171:
					while (true) {
						int alt171=2;
						try { dbg.enterDecision(171, decisionCanBacktrack[171]);

						try {
							isCyclicDecision = true;
							alt171 = dfa171.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(171);}

						switch (alt171) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:603:38: ws containerQueryDisjunction
							{
							dbg.location(603,38);
							pushFollow(FOLLOW_ws_in_containerQueryWithOperator3062);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(603,41);
							pushFollow(FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator3064);
							containerQueryDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop171;
						}
					}
					} finally {dbg.exitSubRule(171);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(604, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryWithOperator"



	// $ANTLR start "containerQueryConjunction"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:606:1: containerQueryConjunction : ( key_and ws containerQueryInParens ) ;
	public final void containerQueryConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(606, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:607:9: ( ( key_and ws containerQueryInParens ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:607:11: ( key_and ws containerQueryInParens )
			{
			dbg.location(607,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:607:11: ( key_and ws containerQueryInParens )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:607:12: key_and ws containerQueryInParens
			{
			dbg.location(607,12);
			pushFollow(FOLLOW_key_and_in_containerQueryConjunction3092);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(607,20);
			pushFollow(FOLLOW_ws_in_containerQueryConjunction3094);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(607,23);
			pushFollow(FOLLOW_containerQueryInParens_in_containerQueryConjunction3096);
			containerQueryInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(608, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryConjunction"



	// $ANTLR start "containerQueryDisjunction"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:610:1: containerQueryDisjunction : ( key_or ws containerQueryInParens ) ;
	public final void containerQueryDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(610, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:611:9: ( ( key_or ws containerQueryInParens ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:611:11: ( key_or ws containerQueryInParens )
			{
			dbg.location(611,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:611:11: ( key_or ws containerQueryInParens )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:611:12: key_or ws containerQueryInParens
			{
			dbg.location(611,12);
			pushFollow(FOLLOW_key_or_in_containerQueryDisjunction3123);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(611,19);
			pushFollow(FOLLOW_ws_in_containerQueryDisjunction3125);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(611,22);
			pushFollow(FOLLOW_containerQueryInParens_in_containerQueryDisjunction3127);
			containerQueryInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(612, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryDisjunction"



	// $ANTLR start "containerQueryInParens"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:614:1: containerQueryInParens options {backtrack=true; } : ( LPAREN ( ws )? containerCondition ( ws )? RPAREN | sizeFeature |{...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN | function );
	public final void containerQueryInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(614, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:615:2: ( LPAREN ( ws )? containerCondition ( ws )? RPAREN | sizeFeature |{...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN | function )
			int alt178=4;
			try { dbg.enterDecision(178, decisionCanBacktrack[178]);

			int LA178_0 = input.LA(1);
			if ( (LA178_0==LPAREN) ) {
				int LA178_1 = input.LA(2);
				if ( (synpred25_Css3()) ) {
					alt178=1;
				}
				else if ( (synpred26_Css3()) ) {
					alt178=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 178, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA178_0==IDENT) ) {
				int LA178_2 = input.LA(2);
				if ( ((synpred27_Css3()&&evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")"))) ) {
					alt178=3;
				}
				else if ( (true) ) {
					alt178=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 178, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(178);}

			switch (alt178) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:2: LPAREN ( ws )? containerCondition ( ws )? RPAREN
					{
					dbg.location(616,2);
					match(input,LPAREN,FOLLOW_LPAREN_in_containerQueryInParens3154); if (state.failed) return;dbg.location(616,9);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:9: ( ws )?
					int alt173=2;
					try { dbg.enterSubRule(173);
					try { dbg.enterDecision(173, decisionCanBacktrack[173]);

					int LA173_0 = input.LA(1);
					if ( (LA173_0==COMMENT||LA173_0==NL||LA173_0==WS) ) {
						alt173=1;
					}
					} finally {dbg.exitDecision(173);}

					switch (alt173) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:9: ws
							{
							dbg.location(616,9);
							pushFollow(FOLLOW_ws_in_containerQueryInParens3156);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(173);}
					dbg.location(616,13);
					pushFollow(FOLLOW_containerCondition_in_containerQueryInParens3159);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(616,32);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:32: ( ws )?
					int alt174=2;
					try { dbg.enterSubRule(174);
					try { dbg.enterDecision(174, decisionCanBacktrack[174]);

					int LA174_0 = input.LA(1);
					if ( (LA174_0==COMMENT||LA174_0==NL||LA174_0==WS) ) {
						alt174=1;
					}
					} finally {dbg.exitDecision(174);}

					switch (alt174) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:32: ws
							{
							dbg.location(616,32);
							pushFollow(FOLLOW_ws_in_containerQueryInParens3161);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(174);}
					dbg.location(616,36);
					match(input,RPAREN,FOLLOW_RPAREN_in_containerQueryInParens3164); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:617:4: sizeFeature
					{
					dbg.location(617,4);
					pushFollow(FOLLOW_sizeFeature_in_containerQueryInParens3169);
					sizeFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:4: {...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN
					{
					dbg.location(618,4);
					if ( !(evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "containerQueryInParens", "tokenNameEquals(\"style\")");
					}dbg.location(618,32);
					match(input,IDENT,FOLLOW_IDENT_in_containerQueryInParens3176); if (state.failed) return;dbg.location(618,38);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:38: ( ws )?
					int alt175=2;
					try { dbg.enterSubRule(175);
					try { dbg.enterDecision(175, decisionCanBacktrack[175]);

					int LA175_0 = input.LA(1);
					if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
						alt175=1;
					}
					} finally {dbg.exitDecision(175);}

					switch (alt175) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:38: ws
							{
							dbg.location(618,38);
							pushFollow(FOLLOW_ws_in_containerQueryInParens3178);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(175);}
					dbg.location(618,42);
					match(input,LPAREN,FOLLOW_LPAREN_in_containerQueryInParens3181); if (state.failed) return;dbg.location(618,49);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:49: ( ws )?
					int alt176=2;
					try { dbg.enterSubRule(176);
					try { dbg.enterDecision(176, decisionCanBacktrack[176]);

					int LA176_0 = input.LA(1);
					if ( (LA176_0==COMMENT||LA176_0==NL||LA176_0==WS) ) {
						alt176=1;
					}
					} finally {dbg.exitDecision(176);}

					switch (alt176) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:49: ws
							{
							dbg.location(618,49);
							pushFollow(FOLLOW_ws_in_containerQueryInParens3183);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(176);}
					dbg.location(618,53);
					pushFollow(FOLLOW_styleQuery_in_containerQueryInParens3186);
					styleQuery();
					state._fsp--;
					if (state.failed) return;dbg.location(618,64);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:64: ( ws )?
					int alt177=2;
					try { dbg.enterSubRule(177);
					try { dbg.enterDecision(177, decisionCanBacktrack[177]);

					int LA177_0 = input.LA(1);
					if ( (LA177_0==COMMENT||LA177_0==NL||LA177_0==WS) ) {
						alt177=1;
					}
					} finally {dbg.exitDecision(177);}

					switch (alt177) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:64: ws
							{
							dbg.location(618,64);
							pushFollow(FOLLOW_ws_in_containerQueryInParens3188);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(177);}
					dbg.location(618,68);
					match(input,RPAREN,FOLLOW_RPAREN_in_containerQueryInParens3191); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:619:11: function
					{
					dbg.location(619,11);
					pushFollow(FOLLOW_function_in_containerQueryInParens3203);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(622, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryInParens"



	// $ANTLR start "containerName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:624:1: containerName : IDENT ;
	public final void containerName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(624, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:625:9: ( IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:625:11: IDENT
			{
			dbg.location(625,11);
			match(input,IDENT,FOLLOW_IDENT_in_containerName3239); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(626, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerName"



	// $ANTLR start "styleQuery"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:628:1: styleQuery : ( styleCondition | styleFeature );
	public final void styleQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(628, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:628:11: ( styleCondition | styleFeature )
			int alt179=2;
			try { dbg.enterDecision(179, decisionCanBacktrack[179]);

			switch ( input.LA(1) ) {
			case LPAREN:
			case NOT:
				{
				alt179=1;
				}
				break;
			case IDENT:
				{
				alt179=1;
				}
				break;
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COLON:
			case CONTAINER_SYM:
			case COUNTER_STYLE_SYM:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case FONT_FACE_SYM:
			case GEN:
			case GREATER:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LAYER_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LESS_AND:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case PIPE:
			case PLUS:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STAR:
			case SUPPORTS_SYM:
			case TILDE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case VARIABLE:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt179=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 179, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(179);}

			switch (alt179) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:629:9: styleCondition
					{
					dbg.location(629,9);
					pushFollow(FOLLOW_styleCondition_in_styleQuery3263);
					styleCondition();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:630:11: styleFeature
					{
					dbg.location(630,11);
					pushFollow(FOLLOW_styleFeature_in_styleQuery3275);
					styleFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(631, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQuery"



	// $ANTLR start "styleCondition"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:633:1: styleCondition : ( NOT ws styleInParens | styleInParens ( ws styleConditionWithOperator ) );
	public final void styleCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(633, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:633:15: ( NOT ws styleInParens | styleInParens ( ws styleConditionWithOperator ) )
			int alt180=2;
			try { dbg.enterDecision(180, decisionCanBacktrack[180]);

			int LA180_0 = input.LA(1);
			if ( (LA180_0==NOT) ) {
				alt180=1;
			}
			else if ( (LA180_0==IDENT||LA180_0==LPAREN) ) {
				alt180=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 180, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(180);}

			switch (alt180) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:634:9: NOT ws styleInParens
					{
					dbg.location(634,9);
					match(input,NOT,FOLLOW_NOT_in_styleCondition3299); if (state.failed) return;dbg.location(634,13);
					pushFollow(FOLLOW_ws_in_styleCondition3301);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(634,16);
					pushFollow(FOLLOW_styleInParens_in_styleCondition3303);
					styleInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:635:11: styleInParens ( ws styleConditionWithOperator )
					{
					dbg.location(635,11);
					pushFollow(FOLLOW_styleInParens_in_styleCondition3315);
					styleInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(635,25);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:635:25: ( ws styleConditionWithOperator )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:635:26: ws styleConditionWithOperator
					{
					dbg.location(635,26);
					pushFollow(FOLLOW_ws_in_styleCondition3318);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(635,29);
					pushFollow(FOLLOW_styleConditionWithOperator_in_styleCondition3320);
					styleConditionWithOperator();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(636, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleCondition"



	// $ANTLR start "styleConditionWithOperator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:638:1: styleConditionWithOperator : ( styleQueryConjunction ( ws styleQueryConjunction )* | styleQueryDisjunction ( ws styleQueryDisjunction )* );
	public final void styleConditionWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleConditionWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(638, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:639:9: ( styleQueryConjunction ( ws styleQueryConjunction )* | styleQueryDisjunction ( ws styleQueryDisjunction )* )
			int alt183=2;
			try { dbg.enterDecision(183, decisionCanBacktrack[183]);

			int LA183_0 = input.LA(1);
			if ( (LA183_0==IDENT) ) {
				int LA183_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt183=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt183=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 183, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 183, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(183);}

			switch (alt183) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:640:9: styleQueryConjunction ( ws styleQueryConjunction )*
					{
					dbg.location(640,9);
					pushFollow(FOLLOW_styleQueryConjunction_in_styleConditionWithOperator3354);
					styleQueryConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(640,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:640:31: ( ws styleQueryConjunction )*
					try { dbg.enterSubRule(181);

					loop181:
					while (true) {
						int alt181=2;
						try { dbg.enterDecision(181, decisionCanBacktrack[181]);

						try {
							isCyclicDecision = true;
							alt181 = dfa181.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(181);}

						switch (alt181) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:640:32: ws styleQueryConjunction
							{
							dbg.location(640,32);
							pushFollow(FOLLOW_ws_in_styleConditionWithOperator3357);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(640,35);
							pushFollow(FOLLOW_styleQueryConjunction_in_styleConditionWithOperator3359);
							styleQueryConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop181;
						}
					}
					} finally {dbg.exitSubRule(181);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:641:11: styleQueryDisjunction ( ws styleQueryDisjunction )*
					{
					dbg.location(641,11);
					pushFollow(FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator3373);
					styleQueryDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(641,33);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:641:33: ( ws styleQueryDisjunction )*
					try { dbg.enterSubRule(182);

					loop182:
					while (true) {
						int alt182=2;
						try { dbg.enterDecision(182, decisionCanBacktrack[182]);

						try {
							isCyclicDecision = true;
							alt182 = dfa182.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(182);}

						switch (alt182) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:641:34: ws styleQueryDisjunction
							{
							dbg.location(641,34);
							pushFollow(FOLLOW_ws_in_styleConditionWithOperator3376);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(641,37);
							pushFollow(FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator3378);
							styleQueryDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop182;
						}
					}
					} finally {dbg.exitSubRule(182);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(642, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleConditionWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleConditionWithOperator"



	// $ANTLR start "styleQueryConjunction"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:644:1: styleQueryConjunction : ( key_and ws styleInParens ) ;
	public final void styleQueryConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQueryConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(644, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:645:9: ( ( key_and ws styleInParens ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:645:11: ( key_and ws styleInParens )
			{
			dbg.location(645,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:645:11: ( key_and ws styleInParens )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:645:12: key_and ws styleInParens
			{
			dbg.location(645,12);
			pushFollow(FOLLOW_key_and_in_styleQueryConjunction3406);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(645,20);
			pushFollow(FOLLOW_ws_in_styleQueryConjunction3408);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(645,23);
			pushFollow(FOLLOW_styleInParens_in_styleQueryConjunction3410);
			styleInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(646, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQueryConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQueryConjunction"



	// $ANTLR start "styleQueryDisjunction"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:648:1: styleQueryDisjunction : ( key_or ws styleInParens ) ;
	public final void styleQueryDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQueryDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(648, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:649:9: ( ( key_or ws styleInParens ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:649:11: ( key_or ws styleInParens )
			{
			dbg.location(649,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:649:11: ( key_or ws styleInParens )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:649:12: key_or ws styleInParens
			{
			dbg.location(649,12);
			pushFollow(FOLLOW_key_or_in_styleQueryDisjunction3437);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(649,19);
			pushFollow(FOLLOW_ws_in_styleQueryDisjunction3439);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(649,22);
			pushFollow(FOLLOW_styleInParens_in_styleQueryDisjunction3441);
			styleInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(650, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQueryDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQueryDisjunction"



	// $ANTLR start "styleInParens"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:652:1: styleInParens options {backtrack=true; } : ( LPAREN ( ws )? styleCondition ( ws )? RPAREN | LPAREN ( ws )? styleFeature ( ws )? RPAREN | function );
	public final void styleInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(652, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:653:9: ( LPAREN ( ws )? styleCondition ( ws )? RPAREN | LPAREN ( ws )? styleFeature ( ws )? RPAREN | function )
			int alt188=3;
			try { dbg.enterDecision(188, decisionCanBacktrack[188]);

			int LA188_0 = input.LA(1);
			if ( (LA188_0==LPAREN) ) {
				int LA188_1 = input.LA(2);
				if ( (synpred28_Css3()) ) {
					alt188=1;
				}
				else if ( (synpred29_Css3()) ) {
					alt188=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 188, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA188_0==IDENT) ) {
				alt188=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 188, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(188);}

			switch (alt188) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:9: LPAREN ( ws )? styleCondition ( ws )? RPAREN
					{
					dbg.location(654,9);
					match(input,LPAREN,FOLLOW_LPAREN_in_styleInParens3482); if (state.failed) return;dbg.location(654,16);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:16: ( ws )?
					int alt184=2;
					try { dbg.enterSubRule(184);
					try { dbg.enterDecision(184, decisionCanBacktrack[184]);

					int LA184_0 = input.LA(1);
					if ( (LA184_0==COMMENT||LA184_0==NL||LA184_0==WS) ) {
						alt184=1;
					}
					} finally {dbg.exitDecision(184);}

					switch (alt184) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:16: ws
							{
							dbg.location(654,16);
							pushFollow(FOLLOW_ws_in_styleInParens3484);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(184);}
					dbg.location(654,20);
					pushFollow(FOLLOW_styleCondition_in_styleInParens3487);
					styleCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(654,35);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:35: ( ws )?
					int alt185=2;
					try { dbg.enterSubRule(185);
					try { dbg.enterDecision(185, decisionCanBacktrack[185]);

					int LA185_0 = input.LA(1);
					if ( (LA185_0==COMMENT||LA185_0==NL||LA185_0==WS) ) {
						alt185=1;
					}
					} finally {dbg.exitDecision(185);}

					switch (alt185) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:35: ws
							{
							dbg.location(654,35);
							pushFollow(FOLLOW_ws_in_styleInParens3489);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(185);}
					dbg.location(654,39);
					match(input,RPAREN,FOLLOW_RPAREN_in_styleInParens3492); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:11: LPAREN ( ws )? styleFeature ( ws )? RPAREN
					{
					dbg.location(655,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_styleInParens3504); if (state.failed) return;dbg.location(655,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:18: ( ws )?
					int alt186=2;
					try { dbg.enterSubRule(186);
					try { dbg.enterDecision(186, decisionCanBacktrack[186]);

					int LA186_0 = input.LA(1);
					if ( (LA186_0==COMMENT||LA186_0==NL||LA186_0==WS) ) {
						alt186=1;
					}
					} finally {dbg.exitDecision(186);}

					switch (alt186) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:18: ws
							{
							dbg.location(655,18);
							pushFollow(FOLLOW_ws_in_styleInParens3506);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(186);}
					dbg.location(655,22);
					pushFollow(FOLLOW_styleFeature_in_styleInParens3509);
					styleFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(655,35);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:35: ( ws )?
					int alt187=2;
					try { dbg.enterSubRule(187);
					try { dbg.enterDecision(187, decisionCanBacktrack[187]);

					int LA187_0 = input.LA(1);
					if ( (LA187_0==COMMENT||LA187_0==NL||LA187_0==WS) ) {
						alt187=1;
					}
					} finally {dbg.exitDecision(187);}

					switch (alt187) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:35: ws
							{
							dbg.location(655,35);
							pushFollow(FOLLOW_ws_in_styleInParens3511);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(187);}
					dbg.location(655,39);
					match(input,RPAREN,FOLLOW_RPAREN_in_styleInParens3514); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:656:11: function
					{
					dbg.location(656,11);
					pushFollow(FOLLOW_function_in_styleInParens3526);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(659, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleInParens"



	// $ANTLR start "sizeFeature"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:661:1: sizeFeature options {backtrack=true; } : ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN );
	public final void sizeFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(661, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:662:9: ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN )
			int alt197=4;
			try { dbg.enterDecision(197, decisionCanBacktrack[197]);

			int LA197_0 = input.LA(1);
			if ( (LA197_0==LPAREN) ) {
				int LA197_1 = input.LA(2);
				if ( (synpred30_Css3()) ) {
					alt197=1;
				}
				else if ( (synpred31_Css3()) ) {
					alt197=2;
				}
				else if ( (synpred32_Css3()) ) {
					alt197=3;
				}
				else if ( (true) ) {
					alt197=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 197, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(197);}

			switch (alt197) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:9: LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN
					{
					dbg.location(663,9);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3584); if (state.failed) return;dbg.location(663,16);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:16: ( ws )?
					int alt189=2;
					try { dbg.enterSubRule(189);
					try { dbg.enterDecision(189, decisionCanBacktrack[189]);

					int LA189_0 = input.LA(1);
					if ( (LA189_0==COMMENT||LA189_0==NL||LA189_0==WS) ) {
						alt189=1;
					}
					} finally {dbg.exitDecision(189);}

					switch (alt189) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:16: ws
							{
							dbg.location(663,16);
							pushFollow(FOLLOW_ws_in_sizeFeature3586);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(189);}
					dbg.location(663,20);
					pushFollow(FOLLOW_sizeFeatureFixedValue_in_sizeFeature3589);
					sizeFeatureFixedValue();
					state._fsp--;
					if (state.failed) return;dbg.location(663,42);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:42: ( ws )?
					int alt190=2;
					try { dbg.enterSubRule(190);
					try { dbg.enterDecision(190, decisionCanBacktrack[190]);

					int LA190_0 = input.LA(1);
					if ( (LA190_0==COMMENT||LA190_0==NL||LA190_0==WS) ) {
						alt190=1;
					}
					} finally {dbg.exitDecision(190);}

					switch (alt190) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:42: ws
							{
							dbg.location(663,42);
							pushFollow(FOLLOW_ws_in_sizeFeature3591);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(190);}
					dbg.location(663,46);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3594); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:11: LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN
					{
					dbg.location(664,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3606); if (state.failed) return;dbg.location(664,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:18: ( ws )?
					int alt191=2;
					try { dbg.enterSubRule(191);
					try { dbg.enterDecision(191, decisionCanBacktrack[191]);

					int LA191_0 = input.LA(1);
					if ( (LA191_0==COMMENT||LA191_0==NL||LA191_0==WS) ) {
						alt191=1;
					}
					} finally {dbg.exitDecision(191);}

					switch (alt191) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:18: ws
							{
							dbg.location(664,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3608);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(191);}
					dbg.location(664,22);
					pushFollow(FOLLOW_sizeFeatureRangeSingle_in_sizeFeature3611);
					sizeFeatureRangeSingle();
					state._fsp--;
					if (state.failed) return;dbg.location(664,45);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:45: ( ws )?
					int alt192=2;
					try { dbg.enterSubRule(192);
					try { dbg.enterDecision(192, decisionCanBacktrack[192]);

					int LA192_0 = input.LA(1);
					if ( (LA192_0==COMMENT||LA192_0==NL||LA192_0==WS) ) {
						alt192=1;
					}
					} finally {dbg.exitDecision(192);}

					switch (alt192) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:45: ws
							{
							dbg.location(664,45);
							pushFollow(FOLLOW_ws_in_sizeFeature3613);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(192);}
					dbg.location(664,49);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3616); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:11: LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN
					{
					dbg.location(665,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3628); if (state.failed) return;dbg.location(665,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:18: ( ws )?
					int alt193=2;
					try { dbg.enterSubRule(193);
					try { dbg.enterDecision(193, decisionCanBacktrack[193]);

					int LA193_0 = input.LA(1);
					if ( (LA193_0==COMMENT||LA193_0==NL||LA193_0==WS) ) {
						alt193=1;
					}
					} finally {dbg.exitDecision(193);}

					switch (alt193) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:18: ws
							{
							dbg.location(665,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3630);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(193);}
					dbg.location(665,22);
					pushFollow(FOLLOW_sizeFeatureRangeBetweenLt_in_sizeFeature3633);
					sizeFeatureRangeBetweenLt();
					state._fsp--;
					if (state.failed) return;dbg.location(665,48);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:48: ( ws )?
					int alt194=2;
					try { dbg.enterSubRule(194);
					try { dbg.enterDecision(194, decisionCanBacktrack[194]);

					int LA194_0 = input.LA(1);
					if ( (LA194_0==COMMENT||LA194_0==NL||LA194_0==WS) ) {
						alt194=1;
					}
					} finally {dbg.exitDecision(194);}

					switch (alt194) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:48: ws
							{
							dbg.location(665,48);
							pushFollow(FOLLOW_ws_in_sizeFeature3635);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(194);}
					dbg.location(665,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3638); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:666:11: LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN
					{
					dbg.location(666,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3650); if (state.failed) return;dbg.location(666,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:666:18: ( ws )?
					int alt195=2;
					try { dbg.enterSubRule(195);
					try { dbg.enterDecision(195, decisionCanBacktrack[195]);

					int LA195_0 = input.LA(1);
					if ( (LA195_0==COMMENT||LA195_0==NL||LA195_0==WS) ) {
						alt195=1;
					}
					} finally {dbg.exitDecision(195);}

					switch (alt195) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:666:18: ws
							{
							dbg.location(666,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3652);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(195);}
					dbg.location(666,22);
					pushFollow(FOLLOW_sizeFeatureRangeBetweenGt_in_sizeFeature3655);
					sizeFeatureRangeBetweenGt();
					state._fsp--;
					if (state.failed) return;dbg.location(666,48);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:666:48: ( ws )?
					int alt196=2;
					try { dbg.enterSubRule(196);
					try { dbg.enterDecision(196, decisionCanBacktrack[196]);

					int LA196_0 = input.LA(1);
					if ( (LA196_0==COMMENT||LA196_0==NL||LA196_0==WS) ) {
						alt196=1;
					}
					} finally {dbg.exitDecision(196);}

					switch (alt196) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:666:48: ws
							{
							dbg.location(666,48);
							pushFollow(FOLLOW_ws_in_sizeFeature3657);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(196);}
					dbg.location(666,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3660); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(667, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeature"



	// $ANTLR start "sizeFeatureFixedValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:669:1: sizeFeatureFixedValue : sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )? ;
	public final void sizeFeatureFixedValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureFixedValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(669, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:670:9: ( sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:671:9: sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )?
			{
			dbg.location(671,9);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureFixedValue3693);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(671,25);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:671:25: ( ( ws )? COLON ( ws )? sizeFeatureValue )?
			int alt200=2;
			try { dbg.enterSubRule(200);
			try { dbg.enterDecision(200, decisionCanBacktrack[200]);

			try {
				isCyclicDecision = true;
				alt200 = dfa200.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(200);}

			switch (alt200) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:671:27: ( ws )? COLON ( ws )? sizeFeatureValue
					{
					dbg.location(671,27);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:671:27: ( ws )?
					int alt198=2;
					try { dbg.enterSubRule(198);
					try { dbg.enterDecision(198, decisionCanBacktrack[198]);

					int LA198_0 = input.LA(1);
					if ( (LA198_0==COMMENT||LA198_0==NL||LA198_0==WS) ) {
						alt198=1;
					}
					} finally {dbg.exitDecision(198);}

					switch (alt198) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:671:27: ws
							{
							dbg.location(671,27);
							pushFollow(FOLLOW_ws_in_sizeFeatureFixedValue3697);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(198);}
					dbg.location(671,31);
					match(input,COLON,FOLLOW_COLON_in_sizeFeatureFixedValue3700); if (state.failed) return;dbg.location(671,37);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:671:37: ( ws )?
					int alt199=2;
					try { dbg.enterSubRule(199);
					try { dbg.enterDecision(199, decisionCanBacktrack[199]);

					int LA199_0 = input.LA(1);
					if ( (LA199_0==COMMENT||LA199_0==NL||LA199_0==WS) ) {
						alt199=1;
					}
					} finally {dbg.exitDecision(199);}

					switch (alt199) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:671:37: ws
							{
							dbg.location(671,37);
							pushFollow(FOLLOW_ws_in_sizeFeatureFixedValue3702);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(199);}
					dbg.location(671,41);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureFixedValue3705);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(200);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(672, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureFixedValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureFixedValue"



	// $ANTLR start "sizeFeatureRangeSingle"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:674:1: sizeFeatureRangeSingle : ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue ) ;
	public final void sizeFeatureRangeSingle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeSingle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(674, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:675:9: ( ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:9: ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue )
			{
			dbg.location(676,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:9: ( sizeFeatureName | sizeFeatureValue )
			int alt201=2;
			try { dbg.enterSubRule(201);
			try { dbg.enterDecision(201, decisionCanBacktrack[201]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt201=1;
				}
				break;
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case DIMENSION:
			case EMS:
			case EXS:
			case FONT_FACE_SYM:
			case FREQ:
			case GEN:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case NUMBER:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STRING:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case URANGE:
			case URI:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt201=2;
				}
				break;
			case VARIABLE:
				{
				alt201=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 201, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(201);}

			switch (alt201) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:10: sizeFeatureName
					{
					dbg.location(676,10);
					pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3741);
					sizeFeatureName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:28: sizeFeatureValue
					{
					dbg.location(676,28);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3745);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(201);}
			dbg.location(676,46);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:46: ( ws )?
			int alt202=2;
			try { dbg.enterSubRule(202);
			try { dbg.enterDecision(202, decisionCanBacktrack[202]);

			int LA202_0 = input.LA(1);
			if ( (LA202_0==COMMENT||LA202_0==NL||LA202_0==WS) ) {
				alt202=1;
			}
			} finally {dbg.exitDecision(202);}

			switch (alt202) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:46: ws
					{
					dbg.location(676,46);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeSingle3748);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(202);}
			dbg.location(676,50);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(676,103);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:103: ( ws )?
			int alt203=2;
			try { dbg.enterSubRule(203);
			try { dbg.enterDecision(203, decisionCanBacktrack[203]);

			int LA203_0 = input.LA(1);
			if ( (LA203_0==COMMENT||LA203_0==NL||LA203_0==WS) ) {
				alt203=1;
			}
			} finally {dbg.exitDecision(203);}

			switch (alt203) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:103: ws
					{
					dbg.location(676,103);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeSingle3771);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(203);}
			dbg.location(676,107);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:107: ( sizeFeatureName | sizeFeatureValue )
			int alt204=2;
			try { dbg.enterSubRule(204);
			try { dbg.enterDecision(204, decisionCanBacktrack[204]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt204=1;
				}
				break;
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case DIMENSION:
			case EMS:
			case EXS:
			case FONT_FACE_SYM:
			case FREQ:
			case GEN:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case NUMBER:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STRING:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case URANGE:
			case URI:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt204=2;
				}
				break;
			case VARIABLE:
				{
				alt204=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 204, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(204);}

			switch (alt204) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:108: sizeFeatureName
					{
					dbg.location(676,108);
					pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3775);
					sizeFeatureName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:676:126: sizeFeatureValue
					{
					dbg.location(676,126);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3779);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(204);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(677, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeSingle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeSingle"



	// $ANTLR start "sizeFeatureRangeBetweenLt"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:679:1: sizeFeatureRangeBetweenLt : sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue ;
	public final void sizeFeatureRangeBetweenLt() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeBetweenLt");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(679, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:680:9: ( sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:9: sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue
			{
			dbg.location(681,9);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3813);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;dbg.location(681,26);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:26: ( ws )?
			int alt205=2;
			try { dbg.enterSubRule(205);
			try { dbg.enterDecision(205, decisionCanBacktrack[205]);

			int LA205_0 = input.LA(1);
			if ( (LA205_0==COMMENT||LA205_0==NL||LA205_0==WS) ) {
				alt205=1;
			}
			} finally {dbg.exitDecision(205);}

			switch (alt205) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:26: ws
					{
					dbg.location(681,26);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3815);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(205);}
			dbg.location(681,30);
			if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(681,50);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:50: ( ws )?
			int alt206=2;
			try { dbg.enterSubRule(206);
			try { dbg.enterDecision(206, decisionCanBacktrack[206]);

			int LA206_0 = input.LA(1);
			if ( (LA206_0==COMMENT||LA206_0==NL||LA206_0==WS) ) {
				alt206=1;
			}
			} finally {dbg.exitDecision(206);}

			switch (alt206) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:50: ws
					{
					dbg.location(681,50);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3826);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(206);}
			dbg.location(681,54);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenLt3829);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(681,70);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:70: ( ws )?
			int alt207=2;
			try { dbg.enterSubRule(207);
			try { dbg.enterDecision(207, decisionCanBacktrack[207]);

			int LA207_0 = input.LA(1);
			if ( (LA207_0==COMMENT||LA207_0==NL||LA207_0==WS) ) {
				alt207=1;
			}
			} finally {dbg.exitDecision(207);}

			switch (alt207) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:70: ws
					{
					dbg.location(681,70);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3831);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(207);}
			dbg.location(681,74);
			if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(681,94);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:94: ( ws )?
			int alt208=2;
			try { dbg.enterSubRule(208);
			try { dbg.enterDecision(208, decisionCanBacktrack[208]);

			int LA208_0 = input.LA(1);
			if ( (LA208_0==COMMENT||LA208_0==NL||LA208_0==WS) ) {
				alt208=1;
			}
			} finally {dbg.exitDecision(208);}

			switch (alt208) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:681:94: ws
					{
					dbg.location(681,94);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3842);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(208);}
			dbg.location(681,98);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3845);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(682, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeBetweenLt");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeBetweenLt"



	// $ANTLR start "sizeFeatureRangeBetweenGt"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:684:1: sizeFeatureRangeBetweenGt : sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue ;
	public final void sizeFeatureRangeBetweenGt() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeBetweenGt");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(684, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:685:9: ( sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:9: sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue
			{
			dbg.location(686,9);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3878);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;dbg.location(686,26);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:26: ( ws )?
			int alt209=2;
			try { dbg.enterSubRule(209);
			try { dbg.enterDecision(209, decisionCanBacktrack[209]);

			int LA209_0 = input.LA(1);
			if ( (LA209_0==COMMENT||LA209_0==NL||LA209_0==WS) ) {
				alt209=1;
			}
			} finally {dbg.exitDecision(209);}

			switch (alt209) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:26: ws
					{
					dbg.location(686,26);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3880);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(209);}
			dbg.location(686,30);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(686,56);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:56: ( ws )?
			int alt210=2;
			try { dbg.enterSubRule(210);
			try { dbg.enterDecision(210, decisionCanBacktrack[210]);

			int LA210_0 = input.LA(1);
			if ( (LA210_0==COMMENT||LA210_0==NL||LA210_0==WS) ) {
				alt210=1;
			}
			} finally {dbg.exitDecision(210);}

			switch (alt210) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:56: ws
					{
					dbg.location(686,56);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3891);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(210);}
			dbg.location(686,60);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenGt3894);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(686,76);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:76: ( ws )?
			int alt211=2;
			try { dbg.enterSubRule(211);
			try { dbg.enterDecision(211, decisionCanBacktrack[211]);

			int LA211_0 = input.LA(1);
			if ( (LA211_0==COMMENT||LA211_0==NL||LA211_0==WS) ) {
				alt211=1;
			}
			} finally {dbg.exitDecision(211);}

			switch (alt211) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:76: ws
					{
					dbg.location(686,76);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3896);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(211);}
			dbg.location(686,80);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(686,106);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:106: ( ws )?
			int alt212=2;
			try { dbg.enterSubRule(212);
			try { dbg.enterDecision(212, decisionCanBacktrack[212]);

			int LA212_0 = input.LA(1);
			if ( (LA212_0==COMMENT||LA212_0==NL||LA212_0==WS) ) {
				alt212=1;
			}
			} finally {dbg.exitDecision(212);}

			switch (alt212) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:686:106: ws
					{
					dbg.location(686,106);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3907);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(212);}
			dbg.location(686,110);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3910);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(687, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeBetweenGt");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeBetweenGt"



	// $ANTLR start "sizeFeatureName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:689:1: sizeFeatureName : ( IDENT | VARIABLE );
	public final void sizeFeatureName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(689, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:690:9: ( IDENT | VARIABLE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(690,9);
			if ( input.LA(1)==IDENT||input.LA(1)==VARIABLE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(693, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureName"



	// $ANTLR start "sizeFeatureValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:695:1: sizeFeatureValue : term ;
	public final void sizeFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(695, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:696:9: ( term )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:697:9: term
			{
			dbg.location(697,9);
			pushFollow(FOLLOW_term_in_sizeFeatureValue3988);
			term();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(698, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureValue"



	// $ANTLR start "styleFeature"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:700:1: styleFeature : declaration ;
	public final void styleFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(700, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:701:9: ( declaration )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:702:9: declaration
			{
			dbg.location(702,9);
			pushFollow(FOLLOW_declaration_in_styleFeature4021);
			declaration();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(703, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleFeature"



	// $ANTLR start "layerAtRule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:705:1: layerAtRule : ( layerBlock | layerStatement );
	public final void layerAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(705, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:706:9: ( layerBlock | layerStatement )
			int alt213=2;
			try { dbg.enterDecision(213, decisionCanBacktrack[213]);

			try {
				isCyclicDecision = true;
				alt213 = dfa213.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(213);}

			switch (alt213) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:707:9: layerBlock
					{
					dbg.location(707,9);
					pushFollow(FOLLOW_layerBlock_in_layerAtRule4054);
					layerBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:709:9: layerStatement
					{
					dbg.location(709,9);
					pushFollow(FOLLOW_layerStatement_in_layerAtRule4074);
					layerStatement();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(710, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerAtRule"



	// $ANTLR start "layerBlock"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:712:1: layerBlock : ( LAYER_SYM ws ( layerName )? ( ws )? layerBody ) ;
	public final void layerBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(712, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:713:9: ( ( LAYER_SYM ws ( layerName )? ( ws )? layerBody ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:714:9: ( LAYER_SYM ws ( layerName )? ( ws )? layerBody )
			{
			dbg.location(714,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:714:9: ( LAYER_SYM ws ( layerName )? ( ws )? layerBody )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:714:10: LAYER_SYM ws ( layerName )? ( ws )? layerBody
			{
			dbg.location(714,10);
			match(input,LAYER_SYM,FOLLOW_LAYER_SYM_in_layerBlock4108); if (state.failed) return;dbg.location(714,20);
			pushFollow(FOLLOW_ws_in_layerBlock4110);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(714,23);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:714:23: ( layerName )?
			int alt214=2;
			try { dbg.enterSubRule(214);
			try { dbg.enterDecision(214, decisionCanBacktrack[214]);

			int LA214_0 = input.LA(1);
			if ( (LA214_0==IDENT) ) {
				alt214=1;
			}
			} finally {dbg.exitDecision(214);}

			switch (alt214) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:714:23: layerName
					{
					dbg.location(714,23);
					pushFollow(FOLLOW_layerName_in_layerBlock4112);
					layerName();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(214);}
			dbg.location(714,34);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:714:34: ( ws )?
			int alt215=2;
			try { dbg.enterSubRule(215);
			try { dbg.enterDecision(215, decisionCanBacktrack[215]);

			int LA215_0 = input.LA(1);
			if ( (LA215_0==COMMENT||LA215_0==NL||LA215_0==WS) ) {
				alt215=1;
			}
			} finally {dbg.exitDecision(215);}

			switch (alt215) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:714:34: ws
					{
					dbg.location(714,34);
					pushFollow(FOLLOW_ws_in_layerBlock4115);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(215);}
			dbg.location(714,38);
			pushFollow(FOLLOW_layerBody_in_layerBlock4118);
			layerBody();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(715, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerBlock"



	// $ANTLR start "layerStatement"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:717:1: layerStatement : ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI ) ;
	public final void layerStatement() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerStatement");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(717, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:718:9: ( ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:9: ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI )
			{
			dbg.location(719,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:9: ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:10: LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI
			{
			dbg.location(719,10);
			match(input,LAYER_SYM,FOLLOW_LAYER_SYM_in_layerStatement4153); if (state.failed) return;dbg.location(719,20);
			pushFollow(FOLLOW_ws_in_layerStatement4155);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(719,23);
			pushFollow(FOLLOW_layerName_in_layerStatement4157);
			layerName();
			state._fsp--;
			if (state.failed) return;dbg.location(719,33);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:33: ( ( ws )? COMMA ( ws )? layerName )*
			try { dbg.enterSubRule(218);

			loop218:
			while (true) {
				int alt218=2;
				try { dbg.enterDecision(218, decisionCanBacktrack[218]);

				int LA218_0 = input.LA(1);
				if ( ((LA218_0 >= COMMA && LA218_0 <= COMMENT)||LA218_0==NL||LA218_0==WS) ) {
					alt218=1;
				}

				} finally {dbg.exitDecision(218);}

				switch (alt218) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:35: ( ws )? COMMA ( ws )? layerName
					{
					dbg.location(719,35);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:35: ( ws )?
					int alt216=2;
					try { dbg.enterSubRule(216);
					try { dbg.enterDecision(216, decisionCanBacktrack[216]);

					int LA216_0 = input.LA(1);
					if ( (LA216_0==COMMENT||LA216_0==NL||LA216_0==WS) ) {
						alt216=1;
					}
					} finally {dbg.exitDecision(216);}

					switch (alt216) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:35: ws
							{
							dbg.location(719,35);
							pushFollow(FOLLOW_ws_in_layerStatement4161);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(216);}
					dbg.location(719,39);
					match(input,COMMA,FOLLOW_COMMA_in_layerStatement4164); if (state.failed) return;dbg.location(719,45);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:45: ( ws )?
					int alt217=2;
					try { dbg.enterSubRule(217);
					try { dbg.enterDecision(217, decisionCanBacktrack[217]);

					int LA217_0 = input.LA(1);
					if ( (LA217_0==COMMENT||LA217_0==NL||LA217_0==WS) ) {
						alt217=1;
					}
					} finally {dbg.exitDecision(217);}

					switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:719:45: ws
							{
							dbg.location(719,45);
							pushFollow(FOLLOW_ws_in_layerStatement4166);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(217);}
					dbg.location(719,49);
					pushFollow(FOLLOW_layerName_in_layerStatement4169);
					layerName();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop218;
				}
			}
			} finally {dbg.exitSubRule(218);}
			dbg.location(719,61);
			match(input,SEMI,FOLLOW_SEMI_in_layerStatement4173); if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(720, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerStatement");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerStatement"



	// $ANTLR start "layerName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:722:1: layerName : IDENT ( DOT IDENT )* ;
	public final void layerName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(722, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:723:9: ( IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:724:9: IDENT ( DOT IDENT )*
			{
			dbg.location(724,9);
			match(input,IDENT,FOLLOW_IDENT_in_layerName4207); if (state.failed) return;dbg.location(724,15);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:724:15: ( DOT IDENT )*
			try { dbg.enterSubRule(219);

			loop219:
			while (true) {
				int alt219=2;
				try { dbg.enterDecision(219, decisionCanBacktrack[219]);

				int LA219_0 = input.LA(1);
				if ( (LA219_0==DOT) ) {
					alt219=1;
				}

				} finally {dbg.exitDecision(219);}

				switch (alt219) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:724:16: DOT IDENT
					{
					dbg.location(724,16);
					match(input,DOT,FOLLOW_DOT_in_layerName4210); if (state.failed) return;dbg.location(724,20);
					match(input,IDENT,FOLLOW_IDENT_in_layerName4212); if (state.failed) return;
					}
					break;

				default :
					break loop219;
				}
			}
			} finally {dbg.exitSubRule(219);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(725, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerName"



	// $ANTLR start "layerBody"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:727:1: layerBody : LBRACE ( ws )? ( body )? ( ws )? RBRACE ;
	public final void layerBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(727, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:728:9: ( LBRACE ( ws )? ( body )? ( ws )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:729:9: LBRACE ( ws )? ( body )? ( ws )? RBRACE
			{
			dbg.location(729,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_layerBody4247); if (state.failed) return;dbg.location(729,16);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:729:16: ( ws )?
			int alt220=2;
			try { dbg.enterSubRule(220);
			try { dbg.enterDecision(220, decisionCanBacktrack[220]);

			int LA220_0 = input.LA(1);
			if ( (LA220_0==COMMENT||LA220_0==NL||LA220_0==WS) ) {
				alt220=1;
			}
			} finally {dbg.exitDecision(220);}

			switch (alt220) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:729:16: ws
					{
					dbg.location(729,16);
					pushFollow(FOLLOW_ws_in_layerBody4249);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(220);}
			dbg.location(729,20);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:729:20: ( body )?
			int alt221=2;
			try { dbg.enterSubRule(221);
			try { dbg.enterDecision(221, decisionCanBacktrack[221]);

			int LA221_0 = input.LA(1);
			if ( ((LA221_0 >= AT_IDENT && LA221_0 <= AT_SIGN)||(LA221_0 >= BOTTOMCENTER_SYM && LA221_0 <= BOTTOMRIGHT_SYM)||(LA221_0 >= CHARSET_SYM && LA221_0 <= COLON)||LA221_0==CONTAINER_SYM||LA221_0==COUNTER_STYLE_SYM||(LA221_0 >= DCOLON && LA221_0 <= DOT)||LA221_0==FONT_FACE_SYM||(LA221_0 >= GEN && LA221_0 <= GREATER)||(LA221_0 >= HASH && LA221_0 <= HASH_SYMBOL)||LA221_0==IDENT||LA221_0==IMPORT_SYM||LA221_0==KEYFRAMES_SYM||LA221_0==LAYER_SYM||(LA221_0 >= LBRACKET && LA221_0 <= LEFTTOP_SYM)||LA221_0==LESS_AND||(LA221_0 >= MEDIA_SYM && LA221_0 <= MOZ_DOCUMENT_SYM)||LA221_0==NAMESPACE_SYM||LA221_0==PAGE_SYM||(LA221_0 >= PIPE && LA221_0 <= PLUS)||(LA221_0 >= RIGHTBOTTOM_SYM && LA221_0 <= RIGHTTOP_SYM)||(LA221_0 >= SASS_AT_ROOT && LA221_0 <= SASS_DEBUG)||(LA221_0 >= SASS_EACH && LA221_0 <= SASS_ELSE)||(LA221_0 >= SASS_EXTEND && LA221_0 <= SASS_FUNCTION)||(LA221_0 >= SASS_IF && LA221_0 <= SASS_MIXIN)||(LA221_0 >= SASS_RETURN && LA221_0 <= SEMI)||LA221_0==STAR||LA221_0==SUPPORTS_SYM||LA221_0==TILDE||(LA221_0 >= TOPCENTER_SYM && LA221_0 <= TOPRIGHT_SYM)||LA221_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt221=1;
			}
			} finally {dbg.exitDecision(221);}

			switch (alt221) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:729:20: body
					{
					dbg.location(729,20);
					pushFollow(FOLLOW_body_in_layerBody4252);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(221);}
			dbg.location(729,26);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:729:26: ( ws )?
			int alt222=2;
			try { dbg.enterSubRule(222);
			try { dbg.enterDecision(222, decisionCanBacktrack[222]);

			int LA222_0 = input.LA(1);
			if ( (LA222_0==COMMENT||LA222_0==NL||LA222_0==WS) ) {
				alt222=1;
			}
			} finally {dbg.exitDecision(222);}

			switch (alt222) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:729:26: ws
					{
					dbg.location(729,26);
					pushFollow(FOLLOW_ws_in_layerBody4255);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(222);}
			dbg.location(729,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_layerBody4258); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(730, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerBody"



	// $ANTLR start "at_rule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:732:1: at_rule : ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule | layerAtRule | containerAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(732, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:733:5: ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule | layerAtRule | containerAtRule )
			int alt223=8;
			try { dbg.enterDecision(223, decisionCanBacktrack[223]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt223=1;
				}
				break;
			case PAGE_SYM:
				{
				alt223=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt223=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt223=4;
				}
				break;
			case SUPPORTS_SYM:
				{
				alt223=5;
				}
				break;
			case AT_IDENT:
			case KEYFRAMES_SYM:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt223=6;
				}
				break;
			case LAYER_SYM:
				{
				alt223=7;
				}
				break;
			case CONTAINER_SYM:
				{
				alt223=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 223, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(223);}

			switch (alt223) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:734:5: media
					{
					dbg.location(734,5);
					pushFollow(FOLLOW_media_in_at_rule4283);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:735:7: page
					{
					dbg.location(735,7);
					pushFollow(FOLLOW_page_in_at_rule4291);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:736:7: counterStyle
					{
					dbg.location(736,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule4299);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:737:7: fontFace
					{
					dbg.location(737,7);
					pushFollow(FOLLOW_fontFace_in_at_rule4307);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:738:7: supportsAtRule
					{
					dbg.location(738,7);
					pushFollow(FOLLOW_supportsAtRule_in_at_rule4315);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:739:7: vendorAtRule
					{
					dbg.location(739,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule4323);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:740:7: layerAtRule
					{
					dbg.location(740,7);
					pushFollow(FOLLOW_layerAtRule_in_at_rule4331);
					layerAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:741:7: containerAtRule
					{
					dbg.location(741,7);
					pushFollow(FOLLOW_containerAtRule_in_at_rule4339);
					containerAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(742, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:744:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(744, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:745:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt224=3;
			try { dbg.enterDecision(224, decisionCanBacktrack[224]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt224=1;
				}
				break;
			case KEYFRAMES_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt224=2;
				}
				break;
			case AT_IDENT:
				{
				int LA224_4 = input.LA(2);
				if ( ((evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")||evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")"))) ) {
					alt224=2;
				}
				else if ( (evalPredicate(! tokenNameEquals("@charset"),"! tokenNameEquals(\"@charset\")")) ) {
					alt224=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 224, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 224, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(224);}

			switch (alt224) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:745:3: moz_document
					{
					dbg.location(745,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule4352);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:745:18: webkitKeyframes
					{
					dbg.location(745,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule4356);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:745:36: generic_at_rule
					{
					dbg.location(745,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule4360);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(745, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:747:1: atRuleId : ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(747, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:748:2: ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt226=3;
			try { dbg.enterDecision(226, decisionCanBacktrack[226]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA226_1 = input.LA(2);
				if ( (LA226_1==DOT) ) {
					alt226=3;
				}
				else if ( (LA226_1==COMMENT||LA226_1==LBRACE||LA226_1==NL||LA226_1==WS) ) {
					alt226=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 226, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				alt226=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt226=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 226, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(226);}

			switch (alt226) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:749:2: IDENT
					{
					dbg.location(749,2);
					match(input,IDENT,FOLLOW_IDENT_in_atRuleId4370); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:749:10: STRING
					{
					dbg.location(749,10);
					match(input,STRING,FOLLOW_STRING_in_atRuleId4374); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:749:19: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(749,19);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "atRuleId", "isCssPreprocessorSource()");
					}dbg.location(749,48);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:749:48: ( cp_variable | sass_interpolation_expression_var )
					int alt225=2;
					try { dbg.enterSubRule(225);
					try { dbg.enterDecision(225, decisionCanBacktrack[225]);

					int LA225_0 = input.LA(1);
					if ( (LA225_0==AT_IDENT||(LA225_0 >= BOTTOMCENTER_SYM && LA225_0 <= BOTTOMRIGHT_SYM)||LA225_0==CHARSET_SYM||LA225_0==COUNTER_STYLE_SYM||LA225_0==FONT_FACE_SYM||LA225_0==IDENT||LA225_0==IMPORT_SYM||LA225_0==KEYFRAMES_SYM||(LA225_0 >= LEFTBOTTOM_SYM && LA225_0 <= LEFTTOP_SYM)||LA225_0==MEDIA_SYM||LA225_0==MOZ_DOCUMENT_SYM||LA225_0==NAMESPACE_SYM||LA225_0==PAGE_SYM||(LA225_0 >= RIGHTBOTTOM_SYM && LA225_0 <= RIGHTTOP_SYM)||(LA225_0 >= SASS_AT_ROOT && LA225_0 <= SASS_DEBUG)||(LA225_0 >= SASS_EACH && LA225_0 <= SASS_ELSE)||LA225_0==SASS_EXTEND||(LA225_0 >= SASS_FOR && LA225_0 <= SASS_FUNCTION)||(LA225_0 >= SASS_IF && LA225_0 <= SASS_MIXIN)||(LA225_0 >= SASS_RETURN && LA225_0 <= SASS_WHILE)||(LA225_0 >= TOPCENTER_SYM && LA225_0 <= TOPRIGHT_SYM)||LA225_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt225=1;
					}
					else if ( (LA225_0==HASH_SYMBOL) ) {
						alt225=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 225, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(225);}

					switch (alt225) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:749:50: cp_variable
							{
							dbg.location(749,50);
							pushFollow(FOLLOW_cp_variable_in_atRuleId4382);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:749:64: sass_interpolation_expression_var
							{
							dbg.location(749,64);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_atRuleId4386);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(225);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(750, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:752:1: generic_at_rule :{...}? AT_IDENT ( (~ ( SEMI | LBRACE ) )=> componentValue )* ( ( LBRACE )=> braceBlock2 | SEMI ) ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(752, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:5: ({...}? AT_IDENT ( (~ ( SEMI | LBRACE ) )=> componentValue )* ( ( LBRACE )=> braceBlock2 | SEMI ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:7: {...}? AT_IDENT ( (~ ( SEMI | LBRACE ) )=> componentValue )* ( ( LBRACE )=> braceBlock2 | SEMI )
			{
			dbg.location(753,7);
			if ( !(evalPredicate(! tokenNameEquals("@charset"),"! tokenNameEquals(\"@charset\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "generic_at_rule", "! tokenNameEquals(\"@charset\")");
			}dbg.location(753,40);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule4404); if (state.failed) return;dbg.location(753,49);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:49: ( (~ ( SEMI | LBRACE ) )=> componentValue )*
			try { dbg.enterSubRule(227);

			loop227:
			while (true) {
				int alt227=2;
				try { dbg.enterDecision(227, decisionCanBacktrack[227]);

				int LA227_0 = input.LA(1);
				if ( (LA227_0==LBRACE) ) {
					int LA227_1 = input.LA(2);
					if ( (synpred33_Css3()) ) {
						alt227=1;
					}

				}
				else if ( (LA227_0==SEMI) ) {
					int LA227_2 = input.LA(2);
					if ( (synpred33_Css3()) ) {
						alt227=1;
					}

				}
				else if ( (LA227_0==LPAREN) && (synpred33_Css3())) {
					alt227=1;
				}
				else if ( (LA227_0==LBRACKET) && (synpred33_Css3())) {
					alt227=1;
				}
				else if ( (LA227_0==IDENT) && (synpred33_Css3())) {
					alt227=1;
				}
				else if ( ((LA227_0 >= A && LA227_0 <= I)||(LA227_0 >= IMPORTANT_SYM && LA227_0 <= LAYER_SYM)||(LA227_0 >= LEFTBOTTOM_SYM && LA227_0 <= LINE_COMMENT)||(LA227_0 >= M && LA227_0 <= R)||(LA227_0 >= REM && LA227_0 <= RIGHTTOP_SYM)||(LA227_0 >= S && LA227_0 <= SASS_WHILE)||(LA227_0 >= SOLIDUS && LA227_0 <= Z)) && (synpred33_Css3())) {
					alt227=1;
				}

				} finally {dbg.exitDecision(227);}

				switch (alt227) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:50: (~ ( SEMI | LBRACE ) )=> componentValue
					{
					dbg.location(753,74);
					pushFollow(FOLLOW_componentValue_in_generic_at_rule4422);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop227;
				}
			}
			} finally {dbg.exitSubRule(227);}
			dbg.location(753,92);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:92: ( ( LBRACE )=> braceBlock2 | SEMI )
			int alt228=2;
			try { dbg.enterSubRule(228);
			try { dbg.enterDecision(228, decisionCanBacktrack[228]);

			int LA228_0 = input.LA(1);
			if ( (LA228_0==LBRACE) && (synpred34_Css3())) {
				alt228=1;
			}
			else if ( (LA228_0==SEMI) ) {
				alt228=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 228, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(228);}

			switch (alt228) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:93: ( LBRACE )=> braceBlock2
					{
					dbg.location(753,105);
					pushFollow(FOLLOW_braceBlock2_in_generic_at_rule4434);
					braceBlock2();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:119: SEMI
					{
					dbg.location(753,119);
					match(input,SEMI,FOLLOW_SEMI_in_generic_at_rule4438); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(228);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(753, 123);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:755:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(755, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:756:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(757,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document4449); if (state.failed) return;dbg.location(757,19);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:19: ( ws )?
			int alt229=2;
			try { dbg.enterSubRule(229);
			try { dbg.enterDecision(229, decisionCanBacktrack[229]);

			int LA229_0 = input.LA(1);
			if ( (LA229_0==COMMENT||LA229_0==NL||LA229_0==WS) ) {
				alt229=1;
			}
			} finally {dbg.exitDecision(229);}

			switch (alt229) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:19: ws
					{
					dbg.location(757,19);
					pushFollow(FOLLOW_ws_in_moz_document4451);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(229);}
			dbg.location(757,23);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:25: moz_document_function ( ws )?
			{
			dbg.location(757,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document4456);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(757,47);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:47: ( ws )?
			int alt230=2;
			try { dbg.enterSubRule(230);
			try { dbg.enterDecision(230, decisionCanBacktrack[230]);

			int LA230_0 = input.LA(1);
			if ( (LA230_0==COMMENT||LA230_0==NL||LA230_0==WS) ) {
				alt230=1;
			}
			} finally {dbg.exitDecision(230);}

			switch (alt230) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:47: ws
					{
					dbg.location(757,47);
					pushFollow(FOLLOW_ws_in_moz_document4458);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(230);}

			}
			dbg.location(757,52);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(233);

			loop233:
			while (true) {
				int alt233=2;
				try { dbg.enterDecision(233, decisionCanBacktrack[233]);

				int LA233_0 = input.LA(1);
				if ( (LA233_0==COMMA) ) {
					alt233=1;
				}

				} finally {dbg.exitDecision(233);}

				switch (alt233) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(757,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document4464); if (state.failed) return;dbg.location(757,60);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:60: ( ws )?
					int alt231=2;
					try { dbg.enterSubRule(231);
					try { dbg.enterDecision(231, decisionCanBacktrack[231]);

					int LA231_0 = input.LA(1);
					if ( (LA231_0==COMMENT||LA231_0==NL||LA231_0==WS) ) {
						alt231=1;
					}
					} finally {dbg.exitDecision(231);}

					switch (alt231) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:60: ws
							{
							dbg.location(757,60);
							pushFollow(FOLLOW_ws_in_moz_document4466);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(231);}
					dbg.location(757,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document4469);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(757,86);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:86: ( ws )?
					int alt232=2;
					try { dbg.enterSubRule(232);
					try { dbg.enterDecision(232, decisionCanBacktrack[232]);

					int LA232_0 = input.LA(1);
					if ( (LA232_0==COMMENT||LA232_0==NL||LA232_0==WS) ) {
						alt232=1;
					}
					} finally {dbg.exitDecision(232);}

					switch (alt232) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:757:86: ws
							{
							dbg.location(757,86);
							pushFollow(FOLLOW_ws_in_moz_document4471);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(232);}

					}
					break;

				default :
					break loop233;
				}
			}
			} finally {dbg.exitSubRule(233);}
			dbg.location(758,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document4478); if (state.failed) return;dbg.location(758,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:758:9: ( ws )?
			int alt234=2;
			try { dbg.enterSubRule(234);
			try { dbg.enterDecision(234, decisionCanBacktrack[234]);

			int LA234_0 = input.LA(1);
			if ( (LA234_0==COMMENT||LA234_0==NL||LA234_0==WS) ) {
				alt234=1;
			}
			} finally {dbg.exitDecision(234);}

			switch (alt234) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:758:9: ws
					{
					dbg.location(758,9);
					pushFollow(FOLLOW_ws_in_moz_document4480);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(234);}
			dbg.location(759,3);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:759:3: ( body )?
			int alt235=2;
			try { dbg.enterSubRule(235);
			try { dbg.enterDecision(235, decisionCanBacktrack[235]);

			int LA235_0 = input.LA(1);
			if ( ((LA235_0 >= AT_IDENT && LA235_0 <= AT_SIGN)||(LA235_0 >= BOTTOMCENTER_SYM && LA235_0 <= BOTTOMRIGHT_SYM)||(LA235_0 >= CHARSET_SYM && LA235_0 <= COLON)||LA235_0==CONTAINER_SYM||LA235_0==COUNTER_STYLE_SYM||(LA235_0 >= DCOLON && LA235_0 <= DOT)||LA235_0==FONT_FACE_SYM||(LA235_0 >= GEN && LA235_0 <= GREATER)||(LA235_0 >= HASH && LA235_0 <= HASH_SYMBOL)||LA235_0==IDENT||LA235_0==IMPORT_SYM||LA235_0==KEYFRAMES_SYM||LA235_0==LAYER_SYM||(LA235_0 >= LBRACKET && LA235_0 <= LEFTTOP_SYM)||LA235_0==LESS_AND||(LA235_0 >= MEDIA_SYM && LA235_0 <= MOZ_DOCUMENT_SYM)||LA235_0==NAMESPACE_SYM||LA235_0==PAGE_SYM||(LA235_0 >= PIPE && LA235_0 <= PLUS)||(LA235_0 >= RIGHTBOTTOM_SYM && LA235_0 <= RIGHTTOP_SYM)||(LA235_0 >= SASS_AT_ROOT && LA235_0 <= SASS_DEBUG)||(LA235_0 >= SASS_EACH && LA235_0 <= SASS_ELSE)||(LA235_0 >= SASS_EXTEND && LA235_0 <= SASS_FUNCTION)||(LA235_0 >= SASS_IF && LA235_0 <= SASS_MIXIN)||(LA235_0 >= SASS_RETURN && LA235_0 <= SEMI)||LA235_0==STAR||LA235_0==SUPPORTS_SYM||LA235_0==TILDE||(LA235_0 >= TOPCENTER_SYM && LA235_0 <= TOPRIGHT_SYM)||LA235_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt235=1;
			}
			} finally {dbg.exitDecision(235);}

			switch (alt235) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:759:3: body
					{
					dbg.location(759,3);
					pushFollow(FOLLOW_body_in_moz_document4485);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(235);}
			dbg.location(760,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document4490); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(761, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:763:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(763, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:764:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(764,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(766, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:769:1: webkitKeyframes : ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT ) ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(769, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:770:2: ( ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT ) ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:2: ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT ) ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(771,2);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:2: ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT )
			int alt236=4;
			try { dbg.enterSubRule(236);
			try { dbg.enterDecision(236, decisionCanBacktrack[236]);

			switch ( input.LA(1) ) {
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt236=1;
				}
				break;
			case KEYFRAMES_SYM:
				{
				alt236=2;
				}
				break;
			case AT_IDENT:
				{
				int LA236_3 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")) ) {
					alt236=3;
				}
				else if ( (evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")")) ) {
					alt236=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 236, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 236, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(236);}

			switch (alt236) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:4: WEBKIT_KEYFRAMES_SYM
					{
					dbg.location(771,4);
					match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes4529); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:27: KEYFRAMES_SYM
					{
					dbg.location(771,27);
					match(input,KEYFRAMES_SYM,FOLLOW_KEYFRAMES_SYM_in_webkitKeyframes4533); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:43: {...}? AT_IDENT
					{
					dbg.location(771,43);
					if ( !(evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframes", "tokenNameEquals(\"@-moz-keyframes\")");
					}dbg.location(771,81);
					match(input,AT_IDENT,FOLLOW_AT_IDENT_in_webkitKeyframes4539); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:92: {...}? AT_IDENT
					{
					dbg.location(771,92);
					if ( !(evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframes", "tokenNameEquals(\"@-o-keyframes\")");
					}dbg.location(771,128);
					match(input,AT_IDENT,FOLLOW_AT_IDENT_in_webkitKeyframes4545); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(236);}
			dbg.location(771,139);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:139: ( ws )?
			int alt237=2;
			try { dbg.enterSubRule(237);
			try { dbg.enterDecision(237, decisionCanBacktrack[237]);

			int LA237_0 = input.LA(1);
			if ( (LA237_0==COMMENT||LA237_0==NL||LA237_0==WS) ) {
				alt237=1;
			}
			} finally {dbg.exitDecision(237);}

			switch (alt237) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:139: ws
					{
					dbg.location(771,139);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4549);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(237);}
			dbg.location(771,143);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes4552);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(771,152);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:152: ( ws )?
			int alt238=2;
			try { dbg.enterSubRule(238);
			try { dbg.enterDecision(238, decisionCanBacktrack[238]);

			int LA238_0 = input.LA(1);
			if ( (LA238_0==COMMENT||LA238_0==NL||LA238_0==WS) ) {
				alt238=1;
			}
			} finally {dbg.exitDecision(238);}

			switch (alt238) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:771:152: ws
					{
					dbg.location(771,152);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4554);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(238);}
			dbg.location(772,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes4558); if (state.failed) return;dbg.location(772,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:772:9: ( ws )?
			int alt239=2;
			try { dbg.enterSubRule(239);
			try { dbg.enterDecision(239, decisionCanBacktrack[239]);

			int LA239_0 = input.LA(1);
			if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {
				alt239=1;
			}
			} finally {dbg.exitDecision(239);}

			switch (alt239) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:772:9: ws
					{
					dbg.location(772,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4560);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(239);}
			dbg.location(773,3);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:773:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(241);

			loop241:
			while (true) {
				int alt241=2;
				try { dbg.enterDecision(241, decisionCanBacktrack[241]);

				int LA241_0 = input.LA(1);
				if ( (LA241_0==IDENT||LA241_0==PERCENTAGE||LA241_0==SASS_CONTENT) ) {
					alt241=1;
				}

				} finally {dbg.exitDecision(241);}

				switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:773:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(773,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes4567);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(773,26);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:773:26: ( ws )?
					int alt240=2;
					try { dbg.enterSubRule(240);
					try { dbg.enterDecision(240, decisionCanBacktrack[240]);

					int LA240_0 = input.LA(1);
					if ( (LA240_0==COMMENT||LA240_0==NL||LA240_0==WS) ) {
						alt240=1;
					}
					} finally {dbg.exitDecision(240);}

					switch (alt240) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:773:26: ws
							{
							dbg.location(773,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes4569);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(240);}

					}
					break;

				default :
					break loop241;
				}
			}
			} finally {dbg.exitSubRule(241);}
			dbg.location(774,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes4576); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(775, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:777:1: webkitKeyframesBlock : ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? );
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(777, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:778:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? )
			int alt246=2;
			try { dbg.enterDecision(246, decisionCanBacktrack[246]);

			int LA246_0 = input.LA(1);
			if ( (LA246_0==IDENT||LA246_0==PERCENTAGE) ) {
				alt246=1;
			}
			else if ( (LA246_0==SASS_CONTENT) ) {
				alt246=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 246, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(246);}

			switch (alt246) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:779:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(779,2);
					pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock4588);
					webkitKeyframeSelectors();
					state._fsp--;
					if (state.failed) return;dbg.location(779,26);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:779:26: ( ws )?
					int alt242=2;
					try { dbg.enterSubRule(242);
					try { dbg.enterDecision(242, decisionCanBacktrack[242]);

					int LA242_0 = input.LA(1);
					if ( (LA242_0==COMMENT||LA242_0==NL||LA242_0==WS) ) {
						alt242=1;
					}
					} finally {dbg.exitDecision(242);}

					switch (alt242) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:779:26: ws
							{
							dbg.location(779,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock4590);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(242);}
					dbg.location(780,2);
					match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock4594); if (state.failed) return;dbg.location(780,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:780:10: ( ws )?
					int alt243=2;
					try { dbg.enterSubRule(243);
					try { dbg.enterDecision(243, decisionCanBacktrack[243]);

					int LA243_0 = input.LA(1);
					if ( (LA243_0==COMMENT||LA243_0==NL||LA243_0==WS) ) {
						alt243=1;
					}
					} finally {dbg.exitDecision(243);}

					switch (alt243) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:780:10: ws
							{
							dbg.location(780,10);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock4597);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(243);}
					dbg.location(780,14);
					pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock4600);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(781,3);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:781:3: ( declarations )?
					int alt244=2;
					try { dbg.enterSubRule(244);
					try { dbg.enterDecision(244, decisionCanBacktrack[244]);

					int LA244_0 = input.LA(1);
					if ( ((LA244_0 >= AT_IDENT && LA244_0 <= AT_SIGN)||(LA244_0 >= BOTTOMCENTER_SYM && LA244_0 <= BOTTOMRIGHT_SYM)||(LA244_0 >= CHARSET_SYM && LA244_0 <= COLON)||LA244_0==CONTAINER_SYM||LA244_0==COUNTER_STYLE_SYM||(LA244_0 >= DCOLON && LA244_0 <= DOT)||LA244_0==FONT_FACE_SYM||(LA244_0 >= GEN && LA244_0 <= GREATER)||(LA244_0 >= HASH && LA244_0 <= HASH_SYMBOL)||LA244_0==IDENT||LA244_0==IMPORT_SYM||LA244_0==KEYFRAMES_SYM||LA244_0==LAYER_SYM||(LA244_0 >= LBRACKET && LA244_0 <= LEFTTOP_SYM)||LA244_0==LESS_AND||(LA244_0 >= MEDIA_SYM && LA244_0 <= MOZ_DOCUMENT_SYM)||LA244_0==NAMESPACE_SYM||LA244_0==PAGE_SYM||(LA244_0 >= PIPE && LA244_0 <= PLUS)||(LA244_0 >= RIGHTBOTTOM_SYM && LA244_0 <= RIGHTTOP_SYM)||(LA244_0 >= SASS_AT_ROOT && LA244_0 <= SASS_DEBUG)||(LA244_0 >= SASS_EACH && LA244_0 <= SASS_ELSE)||(LA244_0 >= SASS_ERROR && LA244_0 <= SASS_FUNCTION)||(LA244_0 >= SASS_IF && LA244_0 <= SASS_MIXIN)||(LA244_0 >= SASS_RETURN && LA244_0 <= SEMI)||LA244_0==STAR||LA244_0==SUPPORTS_SYM||LA244_0==TILDE||(LA244_0 >= TOPCENTER_SYM && LA244_0 <= TOPRIGHT_SYM)||LA244_0==VARIABLE||LA244_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt244=1;
					}
					} finally {dbg.exitDecision(244);}

					switch (alt244) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:781:3: declarations
							{
							dbg.location(781,3);
							pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock4604);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(244);}
					dbg.location(782,2);
					match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock4608); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:783:11: {...}?{...}? sass_content ( SEMI )?
					{
					dbg.location(783,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(783,30);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(783,48);
					pushFollow(FOLLOW_sass_content_in_webkitKeyframesBlock4625);
					sass_content();
					state._fsp--;
					if (state.failed) return;dbg.location(783,61);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:783:61: ( SEMI )?
					int alt245=2;
					try { dbg.enterSubRule(245);
					try { dbg.enterDecision(245, decisionCanBacktrack[245]);

					int LA245_0 = input.LA(1);
					if ( (LA245_0==SEMI) ) {
						alt245=1;
					}
					} finally {dbg.exitDecision(245);}

					switch (alt245) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:783:61: SEMI
							{
							dbg.location(783,61);
							match(input,SEMI,FOLLOW_SEMI_in_webkitKeyframesBlock4627); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(245);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(784, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:786:1: webkitKeyframeSelectors : ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(786, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:787:2: ( ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			{
			dbg.location(788,2);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
			int alt247=3;
			try { dbg.enterSubRule(247);
			try { dbg.enterDecision(247, decisionCanBacktrack[247]);

			int LA247_0 = input.LA(1);
			if ( (LA247_0==IDENT) ) {
				int LA247_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
					alt247=1;
				}
				else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
					alt247=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 247, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA247_0==PERCENTAGE) ) {
				alt247=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 247, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(247);}

			switch (alt247) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:4: {...}? IDENT
					{
					dbg.location(788,4);
					if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
					}dbg.location(788,31);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4644); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:39: {...}? IDENT
					{
					dbg.location(788,39);
					if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
					}dbg.location(788,64);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4650); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:72: PERCENTAGE
					{
					dbg.location(788,72);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4654); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(247);}
			dbg.location(788,85);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(251);

			loop251:
			while (true) {
				int alt251=2;
				try { dbg.enterDecision(251, decisionCanBacktrack[251]);

				try {
					isCyclicDecision = true;
					alt251 = dfa251.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(251);}

				switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:87: ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					{
					dbg.location(788,87);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:87: ( ws )?
					int alt248=2;
					try { dbg.enterSubRule(248);
					try { dbg.enterDecision(248, decisionCanBacktrack[248]);

					int LA248_0 = input.LA(1);
					if ( (LA248_0==COMMENT||LA248_0==NL||LA248_0==WS) ) {
						alt248=1;
					}
					} finally {dbg.exitDecision(248);}

					switch (alt248) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:87: ws
							{
							dbg.location(788,87);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors4660);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(248);}
					dbg.location(788,91);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors4663); if (state.failed) return;dbg.location(788,97);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:97: ( ws )?
					int alt249=2;
					try { dbg.enterSubRule(249);
					try { dbg.enterDecision(249, decisionCanBacktrack[249]);

					int LA249_0 = input.LA(1);
					if ( (LA249_0==COMMENT||LA249_0==NL||LA249_0==WS) ) {
						alt249=1;
					}
					} finally {dbg.exitDecision(249);}

					switch (alt249) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:97: ws
							{
							dbg.location(788,97);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors4665);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(249);}
					dbg.location(788,101);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:101: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					int alt250=3;
					try { dbg.enterSubRule(250);
					try { dbg.enterDecision(250, decisionCanBacktrack[250]);

					int LA250_0 = input.LA(1);
					if ( (LA250_0==IDENT) ) {
						int LA250_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
							alt250=1;
						}
						else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
							alt250=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 250, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA250_0==PERCENTAGE) ) {
						alt250=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 250, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(250);}

					switch (alt250) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:103: {...}? IDENT
							{
							dbg.location(788,103);
							if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
							}dbg.location(788,130);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4672); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:138: {...}? IDENT
							{
							dbg.location(788,138);
							if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
							}dbg.location(788,163);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4678); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:788:171: PERCENTAGE
							{
							dbg.location(788,171);
							match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4682); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(250);}

					}
					break;

				default :
					break loop251;
				}
			}
			} finally {dbg.exitSubRule(251);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(789, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:791:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE ;
	public final void page() throws RecognitionException {

		    boolean semiRequired = false;

		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(791, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE
			{
			dbg.location(795,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page4706); if (state.failed) return;dbg.location(795,16);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:16: ( ws )?
			int alt252=2;
			try { dbg.enterSubRule(252);
			try { dbg.enterDecision(252, decisionCanBacktrack[252]);

			int LA252_0 = input.LA(1);
			if ( (LA252_0==COMMENT||LA252_0==NL||LA252_0==WS) ) {
				alt252=1;
			}
			} finally {dbg.exitDecision(252);}

			switch (alt252) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:16: ws
					{
					dbg.location(795,16);
					pushFollow(FOLLOW_ws_in_page4708);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(252);}
			dbg.location(795,20);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:20: ( IDENT ( ws )? )?
			int alt254=2;
			try { dbg.enterSubRule(254);
			try { dbg.enterDecision(254, decisionCanBacktrack[254]);

			int LA254_0 = input.LA(1);
			if ( (LA254_0==IDENT) ) {
				alt254=1;
			}
			} finally {dbg.exitDecision(254);}

			switch (alt254) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:22: IDENT ( ws )?
					{
					dbg.location(795,22);
					match(input,IDENT,FOLLOW_IDENT_in_page4713); if (state.failed) return;dbg.location(795,28);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:28: ( ws )?
					int alt253=2;
					try { dbg.enterSubRule(253);
					try { dbg.enterDecision(253, decisionCanBacktrack[253]);

					int LA253_0 = input.LA(1);
					if ( (LA253_0==COMMENT||LA253_0==NL||LA253_0==WS) ) {
						alt253=1;
					}
					} finally {dbg.exitDecision(253);}

					switch (alt253) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:28: ws
							{
							dbg.location(795,28);
							pushFollow(FOLLOW_ws_in_page4715);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(253);}

					}
					break;

			}
			} finally {dbg.exitSubRule(254);}
			dbg.location(795,35);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:35: ( pseudoPage ( ws )? )?
			int alt256=2;
			try { dbg.enterSubRule(256);
			try { dbg.enterDecision(256, decisionCanBacktrack[256]);

			int LA256_0 = input.LA(1);
			if ( (LA256_0==COLON) ) {
				alt256=1;
			}
			} finally {dbg.exitDecision(256);}

			switch (alt256) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:36: pseudoPage ( ws )?
					{
					dbg.location(795,36);
					pushFollow(FOLLOW_pseudoPage_in_page4722);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(795,47);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:47: ( ws )?
					int alt255=2;
					try { dbg.enterSubRule(255);
					try { dbg.enterDecision(255, decisionCanBacktrack[255]);

					int LA255_0 = input.LA(1);
					if ( (LA255_0==COMMENT||LA255_0==NL||LA255_0==WS) ) {
						alt255=1;
					}
					} finally {dbg.exitDecision(255);}

					switch (alt255) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:795:47: ws
							{
							dbg.location(795,47);
							pushFollow(FOLLOW_ws_in_page4724);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(255);}

					}
					break;

			}
			} finally {dbg.exitSubRule(256);}
			dbg.location(796,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page4737); if (state.failed) return;dbg.location(799,13);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*
			try { dbg.enterSubRule(263);

			loop263:
			while (true) {
				int alt263=2;
				try { dbg.enterDecision(263, decisionCanBacktrack[263]);

				try {
					isCyclicDecision = true;
					alt263 = dfa263.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(263);}

				switch (alt263) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:15: ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin )
					{
					dbg.location(799,15);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:15: ( ws )?
					int alt257=2;
					try { dbg.enterSubRule(257);
					try { dbg.enterDecision(257, decisionCanBacktrack[257]);

					int LA257_0 = input.LA(1);
					if ( (LA257_0==COMMENT||LA257_0==NL||LA257_0==WS) ) {
						alt257=1;
					}
					} finally {dbg.exitDecision(257);}

					switch (alt257) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:15: ws
							{
							dbg.location(799,15);
							pushFollow(FOLLOW_ws_in_page4779);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(257);}
					dbg.location(799,19);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:19: ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? )
					int alt261=2;
					try { dbg.enterSubRule(261);
					try { dbg.enterDecision(261, decisionCanBacktrack[261]);

					int LA261_0 = input.LA(1);
					if ( (LA261_0==SEMI) ) {
						int LA261_1 = input.LA(2);
						if ( (evalPredicate(semiRequired,"semiRequired")) ) {
							alt261=1;
						}
						else if ( (true) ) {
							alt261=2;
						}

					}
					else if ( ((LA261_0 >= AT_IDENT && LA261_0 <= AT_SIGN)||(LA261_0 >= BOTTOMCENTER_SYM && LA261_0 <= BOTTOMRIGHT_SYM)||LA261_0==CHARSET_SYM||LA261_0==COUNTER_STYLE_SYM||LA261_0==FONT_FACE_SYM||LA261_0==GEN||LA261_0==HASH_SYMBOL||LA261_0==IDENT||LA261_0==IMPORT_SYM||LA261_0==KEYFRAMES_SYM||(LA261_0 >= LEFTBOTTOM_SYM && LA261_0 <= LEFTTOP_SYM)||(LA261_0 >= MEDIA_SYM && LA261_0 <= MOZ_DOCUMENT_SYM)||LA261_0==NAMESPACE_SYM||LA261_0==PAGE_SYM||(LA261_0 >= RIGHTBOTTOM_SYM && LA261_0 <= RIGHTTOP_SYM)||(LA261_0 >= SASS_AT_ROOT && LA261_0 <= SASS_DEBUG)||(LA261_0 >= SASS_EACH && LA261_0 <= SASS_ELSE)||LA261_0==SASS_EXTEND||(LA261_0 >= SASS_FOR && LA261_0 <= SASS_FUNCTION)||(LA261_0 >= SASS_IF && LA261_0 <= SASS_MIXIN)||(LA261_0 >= SASS_RETURN && LA261_0 <= SASS_WHILE)||LA261_0==STAR||(LA261_0 >= TOPCENTER_SYM && LA261_0 <= TOPRIGHT_SYM)||LA261_0==VARIABLE||LA261_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt261=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 261, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(261);}

					switch (alt261) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:20: {...}? ( SEMI ( ws )? )
							{
							dbg.location(799,20);
							if ( !(evalPredicate(semiRequired,"semiRequired")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "page", "semiRequired");
							}dbg.location(799,36);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:36: ( SEMI ( ws )? )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:37: SEMI ( ws )?
							{
							dbg.location(799,37);
							match(input,SEMI,FOLLOW_SEMI_in_page4786); if (state.failed) return;dbg.location(799,42);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:42: ( ws )?
							int alt258=2;
							try { dbg.enterSubRule(258);
							try { dbg.enterDecision(258, decisionCanBacktrack[258]);

							int LA258_0 = input.LA(1);
							if ( (LA258_0==COMMENT||LA258_0==NL||LA258_0==WS) ) {
								alt258=1;
							}
							} finally {dbg.exitDecision(258);}

							switch (alt258) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:42: ws
									{
									dbg.location(799,42);
									pushFollow(FOLLOW_ws_in_page4788);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(258);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:49: ( SEMI ( ws )? )?
							{
							dbg.location(799,49);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:49: ( SEMI ( ws )? )?
							int alt260=2;
							try { dbg.enterSubRule(260);
							try { dbg.enterDecision(260, decisionCanBacktrack[260]);

							int LA260_0 = input.LA(1);
							if ( (LA260_0==SEMI) ) {
								alt260=1;
							}
							} finally {dbg.exitDecision(260);}

							switch (alt260) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:50: SEMI ( ws )?
									{
									dbg.location(799,50);
									match(input,SEMI,FOLLOW_SEMI_in_page4795); if (state.failed) return;dbg.location(799,55);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:55: ( ws )?
									int alt259=2;
									try { dbg.enterSubRule(259);
									try { dbg.enterDecision(259, decisionCanBacktrack[259]);

									int LA259_0 = input.LA(1);
									if ( (LA259_0==COMMENT||LA259_0==NL||LA259_0==WS) ) {
										alt259=1;
									}
									} finally {dbg.exitDecision(259);}

									switch (alt259) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:55: ws
											{
											dbg.location(799,55);
											pushFollow(FOLLOW_ws_in_page4797);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(259);}

									}
									break;

							}
							} finally {dbg.exitSubRule(260);}

							}
							break;

					}
					} finally {dbg.exitSubRule(261);}
					dbg.location(799,62);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:62: ( propertyDeclaration | margin )
					int alt262=2;
					try { dbg.enterSubRule(262);
					try { dbg.enterDecision(262, decisionCanBacktrack[262]);

					try {
						isCyclicDecision = true;
						alt262 = dfa262.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(262);}

					switch (alt262) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:63: propertyDeclaration
							{
							dbg.location(799,63);
							pushFollow(FOLLOW_propertyDeclaration_in_page4804);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;dbg.location(799,82);
							if ( state.backtracking==0 ) {semiRequired=true;}
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:799:103: margin
							{
							dbg.location(799,103);
							pushFollow(FOLLOW_margin_in_page4807);
							margin();
							state._fsp--;
							if (state.failed) return;dbg.location(799,109);
							if ( state.backtracking==0 ) {semiRequired=false;}
							}
							break;

					}
					} finally {dbg.exitSubRule(262);}

					}
					break;

				default :
					break loop263;
				}
			}
			} finally {dbg.exitSubRule(263);}
			dbg.location(800,13);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:800:13: ( SEMI )?
			int alt264=2;
			try { dbg.enterSubRule(264);
			try { dbg.enterDecision(264, decisionCanBacktrack[264]);

			int LA264_0 = input.LA(1);
			if ( (LA264_0==SEMI) ) {
				alt264=1;
			}
			} finally {dbg.exitDecision(264);}

			switch (alt264) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:800:13: SEMI
					{
					dbg.location(800,13);
					match(input,SEMI,FOLLOW_SEMI_in_page4825); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(264);}
			dbg.location(801,13);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:801:13: ( ws )?
			int alt265=2;
			try { dbg.enterSubRule(265);
			try { dbg.enterDecision(265, decisionCanBacktrack[265]);

			int LA265_0 = input.LA(1);
			if ( (LA265_0==COMMENT||LA265_0==NL||LA265_0==WS) ) {
				alt265=1;
			}
			} finally {dbg.exitDecision(265);}

			switch (alt265) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:801:13: ws
					{
					dbg.location(801,13);
					pushFollow(FOLLOW_ws_in_page4840);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(265);}
			dbg.location(802,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page4851); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(803, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:805:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(805, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:806:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:806:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(806,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle4868); if (state.failed) return;dbg.location(806,25);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:806:25: ( ws )?
			int alt266=2;
			try { dbg.enterSubRule(266);
			try { dbg.enterDecision(266, decisionCanBacktrack[266]);

			int LA266_0 = input.LA(1);
			if ( (LA266_0==COMMENT||LA266_0==NL||LA266_0==WS) ) {
				alt266=1;
			}
			} finally {dbg.exitDecision(266);}

			switch (alt266) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:806:25: ws
					{
					dbg.location(806,25);
					pushFollow(FOLLOW_ws_in_counterStyle4870);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(266);}
			dbg.location(806,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle4873); if (state.failed) return;dbg.location(806,35);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:806:35: ( ws )?
			int alt267=2;
			try { dbg.enterSubRule(267);
			try { dbg.enterDecision(267, decisionCanBacktrack[267]);

			int LA267_0 = input.LA(1);
			if ( (LA267_0==COMMENT||LA267_0==NL||LA267_0==WS) ) {
				alt267=1;
			}
			} finally {dbg.exitDecision(267);}

			switch (alt267) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:806:35: ws
					{
					dbg.location(806,35);
					pushFollow(FOLLOW_ws_in_counterStyle4875);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(267);}
			dbg.location(807,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle4886); if (state.failed) return;dbg.location(807,16);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:807:16: ( ws )?
			int alt268=2;
			try { dbg.enterSubRule(268);
			try { dbg.enterDecision(268, decisionCanBacktrack[268]);

			int LA268_0 = input.LA(1);
			if ( (LA268_0==COMMENT||LA268_0==NL||LA268_0==WS) ) {
				alt268=1;
			}
			} finally {dbg.exitDecision(268);}

			switch (alt268) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:807:16: ws
					{
					dbg.location(807,16);
					pushFollow(FOLLOW_ws_in_counterStyle4888);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(268);}
			dbg.location(807,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle4891);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(808,3);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:808:3: ( declarations )?
			int alt269=2;
			try { dbg.enterSubRule(269);
			try { dbg.enterDecision(269, decisionCanBacktrack[269]);

			int LA269_0 = input.LA(1);
			if ( ((LA269_0 >= AT_IDENT && LA269_0 <= AT_SIGN)||(LA269_0 >= BOTTOMCENTER_SYM && LA269_0 <= BOTTOMRIGHT_SYM)||(LA269_0 >= CHARSET_SYM && LA269_0 <= COLON)||LA269_0==CONTAINER_SYM||LA269_0==COUNTER_STYLE_SYM||(LA269_0 >= DCOLON && LA269_0 <= DOT)||LA269_0==FONT_FACE_SYM||(LA269_0 >= GEN && LA269_0 <= GREATER)||(LA269_0 >= HASH && LA269_0 <= HASH_SYMBOL)||LA269_0==IDENT||LA269_0==IMPORT_SYM||LA269_0==KEYFRAMES_SYM||LA269_0==LAYER_SYM||(LA269_0 >= LBRACKET && LA269_0 <= LEFTTOP_SYM)||LA269_0==LESS_AND||(LA269_0 >= MEDIA_SYM && LA269_0 <= MOZ_DOCUMENT_SYM)||LA269_0==NAMESPACE_SYM||LA269_0==PAGE_SYM||(LA269_0 >= PIPE && LA269_0 <= PLUS)||(LA269_0 >= RIGHTBOTTOM_SYM && LA269_0 <= RIGHTTOP_SYM)||(LA269_0 >= SASS_AT_ROOT && LA269_0 <= SASS_DEBUG)||(LA269_0 >= SASS_EACH && LA269_0 <= SASS_ELSE)||(LA269_0 >= SASS_ERROR && LA269_0 <= SASS_FUNCTION)||(LA269_0 >= SASS_IF && LA269_0 <= SASS_MIXIN)||(LA269_0 >= SASS_RETURN && LA269_0 <= SEMI)||LA269_0==STAR||LA269_0==SUPPORTS_SYM||LA269_0==TILDE||(LA269_0 >= TOPCENTER_SYM && LA269_0 <= TOPRIGHT_SYM)||LA269_0==VARIABLE||LA269_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt269=1;
			}
			} finally {dbg.exitDecision(269);}

			switch (alt269) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:808:3: declarations
					{
					dbg.location(808,3);
					pushFollow(FOLLOW_declarations_in_counterStyle4895);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(269);}
			dbg.location(809,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle4906); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(810, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:812:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(812, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:813:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:813:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(813,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace4923); if (state.failed) return;dbg.location(813,21);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:813:21: ( ws )?
			int alt270=2;
			try { dbg.enterSubRule(270);
			try { dbg.enterDecision(270, decisionCanBacktrack[270]);

			int LA270_0 = input.LA(1);
			if ( (LA270_0==COMMENT||LA270_0==NL||LA270_0==WS) ) {
				alt270=1;
			}
			} finally {dbg.exitDecision(270);}

			switch (alt270) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:813:21: ws
					{
					dbg.location(813,21);
					pushFollow(FOLLOW_ws_in_fontFace4925);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(270);}
			dbg.location(814,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace4936); if (state.failed) return;dbg.location(814,16);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:814:16: ( ws )?
			int alt271=2;
			try { dbg.enterSubRule(271);
			try { dbg.enterDecision(271, decisionCanBacktrack[271]);

			int LA271_0 = input.LA(1);
			if ( (LA271_0==COMMENT||LA271_0==NL||LA271_0==WS) ) {
				alt271=1;
			}
			} finally {dbg.exitDecision(271);}

			switch (alt271) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:814:16: ws
					{
					dbg.location(814,16);
					pushFollow(FOLLOW_ws_in_fontFace4938);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(271);}
			dbg.location(814,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace4941);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(815,3);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:815:3: ( declarations )?
			int alt272=2;
			try { dbg.enterSubRule(272);
			try { dbg.enterDecision(272, decisionCanBacktrack[272]);

			int LA272_0 = input.LA(1);
			if ( ((LA272_0 >= AT_IDENT && LA272_0 <= AT_SIGN)||(LA272_0 >= BOTTOMCENTER_SYM && LA272_0 <= BOTTOMRIGHT_SYM)||(LA272_0 >= CHARSET_SYM && LA272_0 <= COLON)||LA272_0==CONTAINER_SYM||LA272_0==COUNTER_STYLE_SYM||(LA272_0 >= DCOLON && LA272_0 <= DOT)||LA272_0==FONT_FACE_SYM||(LA272_0 >= GEN && LA272_0 <= GREATER)||(LA272_0 >= HASH && LA272_0 <= HASH_SYMBOL)||LA272_0==IDENT||LA272_0==IMPORT_SYM||LA272_0==KEYFRAMES_SYM||LA272_0==LAYER_SYM||(LA272_0 >= LBRACKET && LA272_0 <= LEFTTOP_SYM)||LA272_0==LESS_AND||(LA272_0 >= MEDIA_SYM && LA272_0 <= MOZ_DOCUMENT_SYM)||LA272_0==NAMESPACE_SYM||LA272_0==PAGE_SYM||(LA272_0 >= PIPE && LA272_0 <= PLUS)||(LA272_0 >= RIGHTBOTTOM_SYM && LA272_0 <= RIGHTTOP_SYM)||(LA272_0 >= SASS_AT_ROOT && LA272_0 <= SASS_DEBUG)||(LA272_0 >= SASS_EACH && LA272_0 <= SASS_ELSE)||(LA272_0 >= SASS_ERROR && LA272_0 <= SASS_FUNCTION)||(LA272_0 >= SASS_IF && LA272_0 <= SASS_MIXIN)||(LA272_0 >= SASS_RETURN && LA272_0 <= SEMI)||LA272_0==STAR||LA272_0==SUPPORTS_SYM||LA272_0==TILDE||(LA272_0 >= TOPCENTER_SYM && LA272_0 <= TOPRIGHT_SYM)||LA272_0==VARIABLE||LA272_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt272=1;
			}
			} finally {dbg.exitDecision(272);}

			switch (alt272) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:815:3: declarations
					{
					dbg.location(815,3);
					pushFollow(FOLLOW_declarations_in_fontFace4945);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(272);}
			dbg.location(816,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace4956); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(817, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:819:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(819, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(820,4);
			pushFollow(FOLLOW_margin_sym_in_margin4970);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(820,15);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:15: ( ws )?
			int alt273=2;
			try { dbg.enterSubRule(273);
			try { dbg.enterDecision(273, decisionCanBacktrack[273]);

			int LA273_0 = input.LA(1);
			if ( (LA273_0==COMMENT||LA273_0==NL||LA273_0==WS) ) {
				alt273=1;
			}
			} finally {dbg.exitDecision(273);}

			switch (alt273) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:15: ws
					{
					dbg.location(820,15);
					pushFollow(FOLLOW_ws_in_margin4972);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(273);}
			dbg.location(820,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin4975); if (state.failed) return;dbg.location(820,26);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:26: ( ws )?
			int alt274=2;
			try { dbg.enterSubRule(274);
			try { dbg.enterDecision(274, decisionCanBacktrack[274]);

			int LA274_0 = input.LA(1);
			if ( (LA274_0==COMMENT||LA274_0==NL||LA274_0==WS) ) {
				alt274=1;
			}
			} finally {dbg.exitDecision(274);}

			switch (alt274) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:26: ws
					{
					dbg.location(820,26);
					pushFollow(FOLLOW_ws_in_margin4977);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(274);}
			dbg.location(820,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin4980);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(820,53);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:53: ( declarations )?
			int alt275=2;
			try { dbg.enterSubRule(275);
			try { dbg.enterDecision(275, decisionCanBacktrack[275]);

			int LA275_0 = input.LA(1);
			if ( ((LA275_0 >= AT_IDENT && LA275_0 <= AT_SIGN)||(LA275_0 >= BOTTOMCENTER_SYM && LA275_0 <= BOTTOMRIGHT_SYM)||(LA275_0 >= CHARSET_SYM && LA275_0 <= COLON)||LA275_0==CONTAINER_SYM||LA275_0==COUNTER_STYLE_SYM||(LA275_0 >= DCOLON && LA275_0 <= DOT)||LA275_0==FONT_FACE_SYM||(LA275_0 >= GEN && LA275_0 <= GREATER)||(LA275_0 >= HASH && LA275_0 <= HASH_SYMBOL)||LA275_0==IDENT||LA275_0==IMPORT_SYM||LA275_0==KEYFRAMES_SYM||LA275_0==LAYER_SYM||(LA275_0 >= LBRACKET && LA275_0 <= LEFTTOP_SYM)||LA275_0==LESS_AND||(LA275_0 >= MEDIA_SYM && LA275_0 <= MOZ_DOCUMENT_SYM)||LA275_0==NAMESPACE_SYM||LA275_0==PAGE_SYM||(LA275_0 >= PIPE && LA275_0 <= PLUS)||(LA275_0 >= RIGHTBOTTOM_SYM && LA275_0 <= RIGHTTOP_SYM)||(LA275_0 >= SASS_AT_ROOT && LA275_0 <= SASS_DEBUG)||(LA275_0 >= SASS_EACH && LA275_0 <= SASS_ELSE)||(LA275_0 >= SASS_ERROR && LA275_0 <= SASS_FUNCTION)||(LA275_0 >= SASS_IF && LA275_0 <= SASS_MIXIN)||(LA275_0 >= SASS_RETURN && LA275_0 <= SEMI)||LA275_0==STAR||LA275_0==SUPPORTS_SYM||LA275_0==TILDE||(LA275_0 >= TOPCENTER_SYM && LA275_0 <= TOPRIGHT_SYM)||LA275_0==VARIABLE||LA275_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt275=1;
			}
			} finally {dbg.exitDecision(275);}

			switch (alt275) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:820:53: declarations
					{
					dbg.location(820,53);
					pushFollow(FOLLOW_declarations_in_margin4982);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(275);}
			dbg.location(820,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin4985); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(821, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:823:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(823, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:824:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(824,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(841, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:843:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(843, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:844:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:844:7: COLON IDENT
			{
			dbg.location(844,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage5194); if (state.failed) return;dbg.location(844,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage5196); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(845, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:847:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(847, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:848:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(848,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(850, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:852:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(852, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:853:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(853,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(855, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:857:1: property : ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(857, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:858:5: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable )
			int alt276=6;
			try { dbg.enterDecision(276, decisionCanBacktrack[276]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				switch ( input.LA(2) ) {
				case DOT:
					{
					alt276=6;
					}
					break;
				case HASH_SYMBOL:
					{
					alt276=1;
					}
					break;
				case AT_SIGN:
					{
					alt276=2;
					}
					break;
				case COLON:
				case COMMENT:
				case NL:
				case WS:
					{
					alt276=4;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 276, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH_SYMBOL:
				{
				alt276=1;
				}
				break;
			case AT_SIGN:
				{
				alt276=2;
				}
				break;
			case VARIABLE:
				{
				alt276=3;
				}
				break;
			case MINUS:
				{
				int LA276_5 = input.LA(2);
				if ( (LA276_5==HASH_SYMBOL) ) {
					alt276=1;
				}
				else if ( (LA276_5==AT_SIGN) ) {
					alt276=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 276, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt276=5;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt276=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 276, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(276);}

			switch (alt276) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:862:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(862,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(862,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property5280);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:863:7: {...}? less_selector_interpolation_exp
					{
					dbg.location(863,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isLessSource()");
					}dbg.location(863,25);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_property5290);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:864:7: VARIABLE
					{
					dbg.location(864,7);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_property5298); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:865:7: IDENT
					{
					dbg.location(865,7);
					match(input,IDENT,FOLLOW_IDENT_in_property5306); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:866:7: GEN
					{
					dbg.location(866,7);
					match(input,GEN,FOLLOW_GEN_in_property5314); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:867:7: {...}? cp_variable
					{
					dbg.location(867,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(867,36);
					pushFollow(FOLLOW_cp_variable_in_property5324);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(869, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:874:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(874, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:875:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:876:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(876,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map5351);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(876,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map5353); if (state.failed) return;dbg.location(876,25);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:876:25: ( ws )?
			int alt277=2;
			try { dbg.enterSubRule(277);
			try { dbg.enterDecision(277, decisionCanBacktrack[277]);

			int LA277_0 = input.LA(1);
			if ( (LA277_0==COMMENT||LA277_0==NL||LA277_0==WS) ) {
				alt277=1;
			}
			} finally {dbg.exitDecision(277);}

			switch (alt277) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:876:25: ws
					{
					dbg.location(876,25);
					pushFollow(FOLLOW_ws_in_sass_map5355);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(277);}
			dbg.location(876,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map5358); if (state.failed) return;dbg.location(876,36);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:876:36: ( ws )?
			int alt278=2;
			try { dbg.enterSubRule(278);
			try { dbg.enterDecision(278, decisionCanBacktrack[278]);

			int LA278_0 = input.LA(1);
			if ( (LA278_0==COMMENT||LA278_0==NL||LA278_0==WS) ) {
				alt278=1;
			}
			} finally {dbg.exitDecision(278);}

			switch (alt278) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:876:36: ws
					{
					dbg.location(876,36);
					pushFollow(FOLLOW_ws_in_sass_map5360);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(278);}
			dbg.location(876,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map5363);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(878,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:878:9: ( sass_map_pairs )?
			int alt279=2;
			try { dbg.enterSubRule(279);
			try { dbg.enterDecision(279, decisionCanBacktrack[279]);

			int LA279_0 = input.LA(1);
			if ( ((LA279_0 >= AT_IDENT && LA279_0 <= AT_SIGN)||(LA279_0 >= BOTTOMCENTER_SYM && LA279_0 <= BOTTOMRIGHT_SYM)||LA279_0==CHARSET_SYM||LA279_0==COMMA||LA279_0==COUNTER_STYLE_SYM||LA279_0==FONT_FACE_SYM||LA279_0==GEN||LA279_0==HASH_SYMBOL||LA279_0==IDENT||LA279_0==IMPORT_SYM||LA279_0==KEYFRAMES_SYM||(LA279_0 >= LEFTBOTTOM_SYM && LA279_0 <= LEFTTOP_SYM)||(LA279_0 >= MEDIA_SYM && LA279_0 <= MOZ_DOCUMENT_SYM)||LA279_0==NAMESPACE_SYM||LA279_0==NUMBER||LA279_0==PAGE_SYM||(LA279_0 >= RIGHTBOTTOM_SYM && LA279_0 <= RIGHTTOP_SYM)||(LA279_0 >= SASS_AT_ROOT && LA279_0 <= SASS_DEBUG)||(LA279_0 >= SASS_EACH && LA279_0 <= SASS_ELSE)||LA279_0==SASS_EXTEND||(LA279_0 >= SASS_FOR && LA279_0 <= SASS_FUNCTION)||(LA279_0 >= SASS_IF && LA279_0 <= SASS_MIXIN)||(LA279_0 >= SASS_RETURN && LA279_0 <= SASS_WHILE)||LA279_0==STRING||(LA279_0 >= TOPCENTER_SYM && LA279_0 <= TOPRIGHT_SYM)||LA279_0==VARIABLE||LA279_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt279=1;
			}
			} finally {dbg.exitDecision(279);}

			switch (alt279) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:878:9: sass_map_pairs
					{
					dbg.location(878,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map5382);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(279);}
			dbg.location(879,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map5389); if (state.failed) return;dbg.location(879,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(282);

			loop282:
			while (true) {
				int alt282=3;
				try { dbg.enterDecision(282, decisionCanBacktrack[282]);

				try {
					isCyclicDecision = true;
					alt282 = dfa282.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(282);}

				switch (alt282) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(879,13);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(879,14);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:14: ( ws )?
					int alt280=2;
					try { dbg.enterSubRule(280);
					try { dbg.enterDecision(280, decisionCanBacktrack[280]);

					int LA280_0 = input.LA(1);
					if ( (LA280_0==COMMENT||LA280_0==NL||LA280_0==WS) ) {
						alt280=1;
					}
					} finally {dbg.exitDecision(280);}

					switch (alt280) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:14: ws
							{
							dbg.location(879,14);
							pushFollow(FOLLOW_ws_in_sass_map5393);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(280);}
					dbg.location(879,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map5396); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(879,34);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(879,35);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:35: ( ws )?
					int alt281=2;
					try { dbg.enterSubRule(281);
					try { dbg.enterDecision(281, decisionCanBacktrack[281]);

					int LA281_0 = input.LA(1);
					if ( (LA281_0==COMMENT||LA281_0==NL||LA281_0==WS) ) {
						alt281=1;
					}
					} finally {dbg.exitDecision(281);}

					switch (alt281) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:879:35: ws
							{
							dbg.location(879,35);
							pushFollow(FOLLOW_ws_in_sass_map5402);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(281);}
					dbg.location(879,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map5405); if (state.failed) return;
					}

					}
					break;

				default :
					break loop282;
				}
			}
			} finally {dbg.exitSubRule(282);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(880, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:882:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(882, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:883:5: ( cp_variable )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:884:5: cp_variable
			{
			dbg.location(884,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name5429);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(885, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:887:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(887, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:888:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:889:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(889,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:889:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt287=0;
			try { dbg.enterSubRule(287);

			loop287:
			while (true) {
				int alt287=3;
				try { dbg.enterDecision(287, decisionCanBacktrack[287]);

				int LA287_0 = input.LA(1);
				if ( ((LA287_0 >= AT_IDENT && LA287_0 <= AT_SIGN)||(LA287_0 >= BOTTOMCENTER_SYM && LA287_0 <= BOTTOMRIGHT_SYM)||LA287_0==CHARSET_SYM||LA287_0==COUNTER_STYLE_SYM||LA287_0==FONT_FACE_SYM||LA287_0==GEN||LA287_0==HASH_SYMBOL||LA287_0==IDENT||LA287_0==IMPORT_SYM||LA287_0==KEYFRAMES_SYM||(LA287_0 >= LEFTBOTTOM_SYM && LA287_0 <= LEFTTOP_SYM)||(LA287_0 >= MEDIA_SYM && LA287_0 <= MOZ_DOCUMENT_SYM)||LA287_0==NAMESPACE_SYM||LA287_0==NUMBER||LA287_0==PAGE_SYM||(LA287_0 >= RIGHTBOTTOM_SYM && LA287_0 <= RIGHTTOP_SYM)||(LA287_0 >= SASS_AT_ROOT && LA287_0 <= SASS_DEBUG)||(LA287_0 >= SASS_EACH && LA287_0 <= SASS_ELSE)||LA287_0==SASS_EXTEND||(LA287_0 >= SASS_FOR && LA287_0 <= SASS_FUNCTION)||(LA287_0 >= SASS_IF && LA287_0 <= SASS_MIXIN)||(LA287_0 >= SASS_RETURN && LA287_0 <= SASS_WHILE)||LA287_0==STRING||(LA287_0 >= TOPCENTER_SYM && LA287_0 <= TOPRIGHT_SYM)||LA287_0==VARIABLE||LA287_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt287=1;
				}
				else if ( (LA287_0==COMMA) ) {
					alt287=2;
				}

				} finally {dbg.exitDecision(287);}

				switch (alt287) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(890,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(890,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs5463);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(890,26);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt284=2;
					try { dbg.enterSubRule(284);
					try { dbg.enterDecision(284, decisionCanBacktrack[284]);

					try {
						isCyclicDecision = true;
						alt284 = dfa284.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(284);}

					switch (alt284) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(890,40);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:40: ( ws )?
							int alt283=2;
							try { dbg.enterSubRule(283);
							try { dbg.enterDecision(283, decisionCanBacktrack[283]);

							int LA283_0 = input.LA(1);
							if ( (LA283_0==COMMENT||LA283_0==NL||LA283_0==WS) ) {
								alt283=1;
							}
							} finally {dbg.exitDecision(283);}

							switch (alt283) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:40: ws
									{
									dbg.location(890,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs5473);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(283);}
							dbg.location(890,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs5476); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(284);}
					dbg.location(890,52);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:52: ( ws )?
					int alt285=2;
					try { dbg.enterSubRule(285);
					try { dbg.enterDecision(285, decisionCanBacktrack[285]);

					int LA285_0 = input.LA(1);
					if ( (LA285_0==COMMENT||LA285_0==NL||LA285_0==WS) ) {
						alt285=1;
					}
					} finally {dbg.exitDecision(285);}

					switch (alt285) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:52: ws
							{
							dbg.location(890,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs5480);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(285);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:892:10: ( COMMA ( ws )? )
					{
					dbg.location(892,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:892:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:892:12: COMMA ( ws )?
					{
					dbg.location(892,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs5507); if (state.failed) return;dbg.location(892,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:892:18: ( ws )?
					int alt286=2;
					try { dbg.enterSubRule(286);
					try { dbg.enterDecision(286, decisionCanBacktrack[286]);

					int LA286_0 = input.LA(1);
					if ( (LA286_0==COMMENT||LA286_0==NL||LA286_0==WS) ) {
						alt286=1;
					}
					} finally {dbg.exitDecision(286);}

					switch (alt286) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:892:18: ws
							{
							dbg.location(892,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs5509);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(286);}

					}

					}
					break;

				default :
					if ( cnt287 >= 1 ) break loop287;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(287, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt287++;
			}
			} finally {dbg.exitSubRule(287);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(894, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:896:1: sass_map_pair : ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(896, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:897:5: ( ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(898,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map )
			int alt290=5;
			try { dbg.enterSubRule(290);
			try { dbg.enterDecision(290, decisionCanBacktrack[290]);

			switch ( input.LA(1) ) {
			case NUMBER:
				{
				alt290=1;
				}
				break;
			case STRING:
				{
				alt290=2;
				}
				break;
			case IDENT:
				{
				int LA290_3 = input.LA(2);
				if ( (synpred36_Css3()) ) {
					alt290=3;
				}
				else if ( (true) ) {
					alt290=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt290=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 290, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case GEN:
			case HASH_SYMBOL:
			case MINUS:
			case VARIABLE:
				{
				alt290=4;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA290_9 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt290=4;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt290=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 290, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA290_10 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt290=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt290=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 290, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 290, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(290);}

			switch (alt290) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:10: NUMBER
					{
					dbg.location(898,10);
					match(input,NUMBER,FOLLOW_NUMBER_in_sass_map_pair5545); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:17: ( STRING ( ( ws )? STRING )* )
					{
					dbg.location(898,17);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:17: ( STRING ( ( ws )? STRING )* )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:18: STRING ( ( ws )? STRING )*
					{
					dbg.location(898,18);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair5548); if (state.failed) return;dbg.location(898,25);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:25: ( ( ws )? STRING )*
					try { dbg.enterSubRule(289);

					loop289:
					while (true) {
						int alt289=2;
						try { dbg.enterDecision(289, decisionCanBacktrack[289]);

						try {
							isCyclicDecision = true;
							alt289 = dfa289.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(289);}

						switch (alt289) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:26: ( ws )? STRING
							{
							dbg.location(898,26);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:26: ( ws )?
							int alt288=2;
							try { dbg.enterSubRule(288);
							try { dbg.enterDecision(288, decisionCanBacktrack[288]);

							int LA288_0 = input.LA(1);
							if ( (LA288_0==COMMENT||LA288_0==NL||LA288_0==WS) ) {
								alt288=1;
							}
							} finally {dbg.exitDecision(288);}

							switch (alt288) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:26: ws
									{
									dbg.location(898,26);
									pushFollow(FOLLOW_ws_in_sass_map_pair5551);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(288);}
							dbg.location(898,30);
							match(input,STRING,FOLLOW_STRING_in_sass_map_pair5554); if (state.failed) return;
							}
							break;

						default :
							break loop289;
						}
					}
					} finally {dbg.exitSubRule(289);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:40: ( ( function )=> function )
					{
					dbg.location(898,40);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:40: ( ( function )=> function )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:41: ( function )=> function
					{
					dbg.location(898,53);
					pushFollow(FOLLOW_function_in_sass_map_pair5564);
					function();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:63: property
					{
					dbg.location(898,63);
					pushFollow(FOLLOW_property_in_sass_map_pair5567);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:72: sass_map
					{
					dbg.location(898,72);
					pushFollow(FOLLOW_sass_map_in_sass_map_pair5569);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(290);}
			dbg.location(898,82);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:82: ( ws )?
			int alt291=2;
			try { dbg.enterSubRule(291);
			try { dbg.enterDecision(291, decisionCanBacktrack[291]);

			int LA291_0 = input.LA(1);
			if ( (LA291_0==COMMENT||LA291_0==NL||LA291_0==WS) ) {
				alt291=1;
			}
			} finally {dbg.exitDecision(291);}

			switch (alt291) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:82: ws
					{
					dbg.location(898,82);
					pushFollow(FOLLOW_ws_in_sass_map_pair5572);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(291);}
			dbg.location(898,86);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair5575); if (state.failed) return;dbg.location(898,92);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:92: ( ws )?
			int alt292=2;
			try { dbg.enterSubRule(292);
			try { dbg.enterDecision(292, decisionCanBacktrack[292]);

			int LA292_0 = input.LA(1);
			if ( (LA292_0==COMMENT||LA292_0==NL||LA292_0==WS) ) {
				alt292=1;
			}
			} finally {dbg.exitDecision(292);}

			switch (alt292) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:92: ws
					{
					dbg.location(898,92);
					pushFollow(FOLLOW_ws_in_sass_map_pair5577);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(292);}
			dbg.location(898,96);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair5580);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(898,110);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:110: ( ( ws )? prio )?
			int alt294=2;
			try { dbg.enterSubRule(294);
			try { dbg.enterDecision(294, decisionCanBacktrack[294]);

			try {
				isCyclicDecision = true;
				alt294 = dfa294.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(294);}

			switch (alt294) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:111: ( ws )? prio
					{
					dbg.location(898,111);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:111: ( ws )?
					int alt293=2;
					try { dbg.enterSubRule(293);
					try { dbg.enterDecision(293, decisionCanBacktrack[293]);

					int LA293_0 = input.LA(1);
					if ( (LA293_0==COMMENT||LA293_0==NL||LA293_0==WS) ) {
						alt293=1;
					}
					} finally {dbg.exitDecision(293);}

					switch (alt293) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:111: ws
							{
							dbg.location(898,111);
							pushFollow(FOLLOW_ws_in_sass_map_pair5583);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(293);}
					dbg.location(898,115);
					pushFollow(FOLLOW_prio_in_sass_map_pair5586);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(294);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(899, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:901:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(901, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:902:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:903:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(903,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:903:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
			int alt300=3;
			try { dbg.enterSubRule(300);
			try { dbg.enterDecision(300, decisionCanBacktrack[300]);

			try {
				isCyclicDecision = true;
				alt300 = dfa300.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(300);}

			switch (alt300) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:904:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(904,13);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:904:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:904:14: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(904,14);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule5628); if (state.failed) return;dbg.location(904,27);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:904:27: ( ws selectorsGroup )?
					int alt295=2;
					try { dbg.enterSubRule(295);
					try { dbg.enterDecision(295, decisionCanBacktrack[295]);

					try {
						isCyclicDecision = true;
						alt295 = dfa295.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(295);}

					switch (alt295) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:904:28: ws selectorsGroup
							{
							dbg.location(904,28);
							pushFollow(FOLLOW_ws_in_rule5631);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(904,31);
							pushFollow(FOLLOW_selectorsGroup_in_rule5633);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(295);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					{
					dbg.location(905,15);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:16: SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
					{
					dbg.location(905,16);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule5654); if (state.failed) return;dbg.location(905,29);
					pushFollow(FOLLOW_ws_in_rule5656);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(905,32);
					match(input,LPAREN,FOLLOW_LPAREN_in_rule5658); if (state.failed) return;dbg.location(905,39);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:39: ( ws )?
					int alt296=2;
					try { dbg.enterSubRule(296);
					try { dbg.enterDecision(296, decisionCanBacktrack[296]);

					int LA296_0 = input.LA(1);
					if ( (LA296_0==COMMENT||LA296_0==NL||LA296_0==WS) ) {
						alt296=1;
					}
					} finally {dbg.exitDecision(296);}

					switch (alt296) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:39: ws
							{
							dbg.location(905,39);
							pushFollow(FOLLOW_ws_in_rule5660);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(296);}
					dbg.location(905,43);
					if ( !(evalPredicate(tokenNameEquals("without") || tokenNameEquals("with"),"tokenNameEquals(\"without\") || tokenNameEquals(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "rule", "tokenNameEquals(\"without\") || tokenNameEquals(\"with\")");
					}dbg.location(905,100);
					match(input,IDENT,FOLLOW_IDENT_in_rule5665); if (state.failed) return;dbg.location(905,128);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:128: ( ws )?
					int alt297=2;
					try { dbg.enterSubRule(297);
					try { dbg.enterDecision(297, decisionCanBacktrack[297]);

					int LA297_0 = input.LA(1);
					if ( (LA297_0==COMMENT||LA297_0==NL||LA297_0==WS) ) {
						alt297=1;
					}
					} finally {dbg.exitDecision(297);}

					switch (alt297) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:128: ws
							{
							dbg.location(905,128);
							pushFollow(FOLLOW_ws_in_rule5669);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(297);}
					dbg.location(905,132);
					match(input,COLON,FOLLOW_COLON_in_rule5672); if (state.failed) return;dbg.location(905,138);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:138: ( ws )?
					int alt298=2;
					try { dbg.enterSubRule(298);
					try { dbg.enterDecision(298, decisionCanBacktrack[298]);

					int LA298_0 = input.LA(1);
					if ( (LA298_0==COMMENT||LA298_0==NL||LA298_0==WS) ) {
						alt298=1;
					}
					} finally {dbg.exitDecision(298);}

					switch (alt298) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:138: ws
							{
							dbg.location(905,138);
							pushFollow(FOLLOW_ws_in_rule5674);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(298);}
					dbg.location(905,142);
					match(input,IDENT,FOLLOW_IDENT_in_rule5677); if (state.failed) return;dbg.location(905,148);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:148: ( ws )?
					int alt299=2;
					try { dbg.enterSubRule(299);
					try { dbg.enterDecision(299, decisionCanBacktrack[299]);

					int LA299_0 = input.LA(1);
					if ( (LA299_0==COMMENT||LA299_0==NL||LA299_0==WS) ) {
						alt299=1;
					}
					} finally {dbg.exitDecision(299);}

					switch (alt299) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:905:148: ws
							{
							dbg.location(905,148);
							pushFollow(FOLLOW_ws_in_rule5679);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(299);}
					dbg.location(905,152);
					match(input,RPAREN,FOLLOW_RPAREN_in_rule5682); if (state.failed) return;
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:906:15: selectorsGroup
					{
					dbg.location(906,15);
					pushFollow(FOLLOW_selectorsGroup_in_rule5700);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(300);}
			dbg.location(907,11);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:907:11: ( ws )?
			int alt301=2;
			try { dbg.enterSubRule(301);
			try { dbg.enterDecision(301, decisionCanBacktrack[301]);

			int LA301_0 = input.LA(1);
			if ( (LA301_0==COMMENT||LA301_0==NL||LA301_0==WS) ) {
				alt301=1;
			}
			} finally {dbg.exitDecision(301);}

			switch (alt301) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:907:11: ws
					{
					dbg.location(907,11);
					pushFollow(FOLLOW_ws_in_rule5712);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(301);}
			dbg.location(908,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule5719); if (state.failed) return;dbg.location(908,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:908:12: ( ws )?
			int alt302=2;
			try { dbg.enterSubRule(302);
			try { dbg.enterDecision(302, decisionCanBacktrack[302]);

			int LA302_0 = input.LA(1);
			if ( (LA302_0==COMMENT||LA302_0==NL||LA302_0==WS) ) {
				alt302=1;
			}
			} finally {dbg.exitDecision(302);}

			switch (alt302) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:908:12: ws
					{
					dbg.location(908,12);
					pushFollow(FOLLOW_ws_in_rule5721);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(302);}
			dbg.location(908,16);
			pushFollow(FOLLOW_syncToFollow_in_rule5724);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(909,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:909:9: ( declarations )?
			int alt303=2;
			try { dbg.enterSubRule(303);
			try { dbg.enterDecision(303, decisionCanBacktrack[303]);

			int LA303_0 = input.LA(1);
			if ( ((LA303_0 >= AT_IDENT && LA303_0 <= AT_SIGN)||(LA303_0 >= BOTTOMCENTER_SYM && LA303_0 <= BOTTOMRIGHT_SYM)||(LA303_0 >= CHARSET_SYM && LA303_0 <= COLON)||LA303_0==CONTAINER_SYM||LA303_0==COUNTER_STYLE_SYM||(LA303_0 >= DCOLON && LA303_0 <= DOT)||LA303_0==FONT_FACE_SYM||(LA303_0 >= GEN && LA303_0 <= GREATER)||(LA303_0 >= HASH && LA303_0 <= HASH_SYMBOL)||LA303_0==IDENT||LA303_0==IMPORT_SYM||LA303_0==KEYFRAMES_SYM||LA303_0==LAYER_SYM||(LA303_0 >= LBRACKET && LA303_0 <= LEFTTOP_SYM)||LA303_0==LESS_AND||(LA303_0 >= MEDIA_SYM && LA303_0 <= MOZ_DOCUMENT_SYM)||LA303_0==NAMESPACE_SYM||LA303_0==PAGE_SYM||(LA303_0 >= PIPE && LA303_0 <= PLUS)||(LA303_0 >= RIGHTBOTTOM_SYM && LA303_0 <= RIGHTTOP_SYM)||(LA303_0 >= SASS_AT_ROOT && LA303_0 <= SASS_DEBUG)||(LA303_0 >= SASS_EACH && LA303_0 <= SASS_ELSE)||(LA303_0 >= SASS_ERROR && LA303_0 <= SASS_FUNCTION)||(LA303_0 >= SASS_IF && LA303_0 <= SASS_MIXIN)||(LA303_0 >= SASS_RETURN && LA303_0 <= SEMI)||LA303_0==STAR||LA303_0==SUPPORTS_SYM||LA303_0==TILDE||(LA303_0 >= TOPCENTER_SYM && LA303_0 <= TOPRIGHT_SYM)||LA303_0==VARIABLE||LA303_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt303=1;
			}
			} finally {dbg.exitDecision(303);}

			switch (alt303) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:909:9: declarations
					{
					dbg.location(909,9);
					pushFollow(FOLLOW_declarations_in_rule5734);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(303);}
			dbg.location(910,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule5741); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(911, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:918:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(918, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:919:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt317=2;
			try { dbg.enterDecision(317, decisionCanBacktrack[317]);

			try {
				isCyclicDecision = true;
				alt317 = dfa317.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(317);}

			switch (alt317) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(920,8);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(305);

					loop305:
					while (true) {
						int alt305=2;
						try { dbg.enterDecision(305, decisionCanBacktrack[305]);

						int LA305_0 = input.LA(1);
						if ( (LA305_0==SEMI) ) {
							alt305=1;
						}

						} finally {dbg.exitDecision(305);}

						switch (alt305) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:9: SEMI ( ws )?
							{
							dbg.location(920,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations5775); if (state.failed) return;dbg.location(920,14);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:14: ( ws )?
							int alt304=2;
							try { dbg.enterSubRule(304);
							try { dbg.enterDecision(304, decisionCanBacktrack[304]);

							int LA304_0 = input.LA(1);
							if ( (LA304_0==COMMENT||LA304_0==NL||LA304_0==WS) ) {
								alt304=1;
							}
							} finally {dbg.exitDecision(304);}

							switch (alt304) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:14: ws
									{
									dbg.location(920,14);
									pushFollow(FOLLOW_ws_in_declarations5777);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(304);}

							}
							break;

						default :
							break loop305;
						}
					}
					} finally {dbg.exitSubRule(305);}
					dbg.location(920,21);
					pushFollow(FOLLOW_declaration_in_declarations5783);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(920,33);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(310);

					loop310:
					while (true) {
						int alt310=2;
						try { dbg.enterDecision(310, decisionCanBacktrack[310]);

						try {
							isCyclicDecision = true;
							alt310 = dfa310.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(310);}

						switch (alt310) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(920,34);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt309=2;
							try { dbg.enterSubRule(309);
							try { dbg.enterDecision(309, decisionCanBacktrack[309]);

							try {
								isCyclicDecision = true;
								alt309 = dfa309.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(309);}

							switch (alt309) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(920,35);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(920,36);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:36: ( ws )?
									int alt306=2;
									try { dbg.enterSubRule(306);
									try { dbg.enterDecision(306, decisionCanBacktrack[306]);

									int LA306_0 = input.LA(1);
									if ( (LA306_0==COMMENT||LA306_0==NL||LA306_0==WS) ) {
										alt306=1;
									}
									} finally {dbg.exitDecision(306);}

									switch (alt306) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:36: ws
											{
											dbg.location(920,36);
											pushFollow(FOLLOW_ws_in_declarations5788);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(306);}
									dbg.location(920,40);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:40: ( SEMI ( ws )? )+
									int cnt308=0;
									try { dbg.enterSubRule(308);

									loop308:
									while (true) {
										int alt308=2;
										try { dbg.enterDecision(308, decisionCanBacktrack[308]);

										int LA308_0 = input.LA(1);
										if ( (LA308_0==SEMI) ) {
											alt308=1;
										}

										} finally {dbg.exitDecision(308);}

										switch (alt308) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:41: SEMI ( ws )?
											{
											dbg.location(920,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations5792); if (state.failed) return;dbg.location(920,46);
											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:46: ( ws )?
											int alt307=2;
											try { dbg.enterSubRule(307);
											try { dbg.enterDecision(307, decisionCanBacktrack[307]);

											int LA307_0 = input.LA(1);
											if ( (LA307_0==COMMENT||LA307_0==NL||LA307_0==WS) ) {
												alt307=1;
											}
											} finally {dbg.exitDecision(307);}

											switch (alt307) {
												case 1 :
													dbg.enterAlt(1);

													// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:46: ws
													{
													dbg.location(920,46);
													pushFollow(FOLLOW_ws_in_declarations5794);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(307);}

											}
											break;

										default :
											if ( cnt308 >= 1 ) break loop308;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(308, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt308++;
									}
									} finally {dbg.exitSubRule(308);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:53: ws
									{
									dbg.location(920,53);
									pushFollow(FOLLOW_ws_in_declarations5800);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(309);}
							dbg.location(920,57);
							pushFollow(FOLLOW_declaration_in_declarations5803);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop310;
						}
					}
					} finally {dbg.exitSubRule(310);}
					dbg.location(920,71);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt314=3;
					try { dbg.enterSubRule(314);
					try { dbg.enterDecision(314, decisionCanBacktrack[314]);

					try {
						isCyclicDecision = true;
						alt314 = dfa314.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(314);}

					switch (alt314) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(920,72);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(920,73);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:73: ( ws )?
							int alt311=2;
							try { dbg.enterSubRule(311);
							try { dbg.enterDecision(311, decisionCanBacktrack[311]);

							int LA311_0 = input.LA(1);
							if ( (LA311_0==COMMENT||LA311_0==NL||LA311_0==WS) ) {
								alt311=1;
							}
							} finally {dbg.exitDecision(311);}

							switch (alt311) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:73: ws
									{
									dbg.location(920,73);
									pushFollow(FOLLOW_ws_in_declarations5809);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(311);}
							dbg.location(920,77);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:77: ( SEMI ( ws )? )+
							int cnt313=0;
							try { dbg.enterSubRule(313);

							loop313:
							while (true) {
								int alt313=2;
								try { dbg.enterDecision(313, decisionCanBacktrack[313]);

								int LA313_0 = input.LA(1);
								if ( (LA313_0==SEMI) ) {
									alt313=1;
								}

								} finally {dbg.exitDecision(313);}

								switch (alt313) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:78: SEMI ( ws )?
									{
									dbg.location(920,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations5813); if (state.failed) return;dbg.location(920,83);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:83: ( ws )?
									int alt312=2;
									try { dbg.enterSubRule(312);
									try { dbg.enterDecision(312, decisionCanBacktrack[312]);

									int LA312_0 = input.LA(1);
									if ( (LA312_0==COMMENT||LA312_0==NL||LA312_0==WS) ) {
										alt312=1;
									}
									} finally {dbg.exitDecision(312);}

									switch (alt312) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:83: ws
											{
											dbg.location(920,83);
											pushFollow(FOLLOW_ws_in_declarations5815);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(312);}

									}
									break;

								default :
									if ( cnt313 >= 1 ) break loop313;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(313, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt313++;
							}
							} finally {dbg.exitSubRule(313);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:920:90: ws
							{
							dbg.location(920,90);
							pushFollow(FOLLOW_ws_in_declarations5821);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(314);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:921:8: ( SEMI ( ws )? )+
					{
					dbg.location(921,8);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:921:8: ( SEMI ( ws )? )+
					int cnt316=0;
					try { dbg.enterSubRule(316);

					loop316:
					while (true) {
						int alt316=2;
						try { dbg.enterDecision(316, decisionCanBacktrack[316]);

						int LA316_0 = input.LA(1);
						if ( (LA316_0==SEMI) ) {
							alt316=1;
						}

						} finally {dbg.exitDecision(316);}

						switch (alt316) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:921:9: SEMI ( ws )?
							{
							dbg.location(921,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations5833); if (state.failed) return;dbg.location(921,14);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:921:14: ( ws )?
							int alt315=2;
							try { dbg.enterSubRule(315);
							try { dbg.enterDecision(315, decisionCanBacktrack[315]);

							int LA315_0 = input.LA(1);
							if ( (LA315_0==COMMENT||LA315_0==NL||LA315_0==WS) ) {
								alt315=1;
							}
							} finally {dbg.exitDecision(315);}

							switch (alt315) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:921:14: ws
									{
									dbg.location(921,14);
									pushFollow(FOLLOW_ws_in_declarations5835);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(315);}

							}
							break;

						default :
							if ( cnt316 >= 1 ) break loop316;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(316, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt316++;
					}
					} finally {dbg.exitSubRule(316);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(922, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:924:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(924, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:925:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN )
			int alt322=18;
			try { dbg.enterDecision(322, decisionCanBacktrack[322]);

			int LA322_0 = input.LA(1);
			if ( (LA322_0==SASS_AT_ROOT) ) {
				int LA322_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_VAR) ) {
				int LA322_2 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred39_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==IDENT) ) {
				int LA322_3 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=2;
				}
				else if ( (synpred39_Css3()) ) {
					alt322=3;
				}
				else if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( (synpred41_Css3()) ) {
					alt322=5;
				}
				else if ( (synpred42_Css3()) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==MINUS) ) {
				int LA322_4 = input.LA(2);
				if ( ((synpred39_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt322=3;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))&&synpred40_Css3())) ) {
					alt322=4;
				}
				else if ( ((synpred41_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt322=5;
				}
				else if ( ((synpred42_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==HASH_SYMBOL) ) {
				int LA322_5 = input.LA(2);
				if ( ((synpred39_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=3;
				}
				else if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=5;
				}
				else if ( ((synpred42_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==AT_SIGN) ) {
				int LA322_6 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt322=4;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( ((synpred42_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==VARIABLE) ) {
				int LA322_7 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt322=3;
				}
				else if ( (synpred41_Css3()) ) {
					alt322=5;
				}
				else if ( (synpred42_Css3()) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==GEN) ) {
				int LA322_8 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt322=3;
				}
				else if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( (synpred41_Css3()) ) {
					alt322=5;
				}
				else if ( (synpred42_Css3()) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=18;
				}

			}
			else if ( (LA322_0==SASS_MIXIN) ) {
				int LA322_9 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( ((synpred43_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==GREATER||LA322_0==PLUS||LA322_0==TILDE) && (synpred40_Css3())) {
				alt322=4;
			}
			else if ( (LA322_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred40_Css3())) {
				alt322=4;
			}
			else if ( (LA322_0==LESS_AND) ) {
				int LA322_12 = input.LA(2);
				if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( ((synpred43_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=7;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred45_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==HASH) ) {
				int LA322_13 = input.LA(2);
				if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( ((synpred43_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=7;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred45_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==DOT) ) {
				int LA322_14 = input.LA(2);
				if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( ((synpred43_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=7;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred45_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==DIMENSION) && (synpred40_Css3())) {
				alt322=4;
			}
			else if ( (LA322_0==LBRACKET) && (synpred40_Css3())) {
				alt322=4;
			}
			else if ( (LA322_0==COLON||LA322_0==DCOLON) && (synpred40_Css3())) {
				alt322=4;
			}
			else if ( (LA322_0==STAR) ) {
				int LA322_18 = input.LA(2);
				if ( (synpred40_Css3()) ) {
					alt322=4;
				}
				else if ( (synpred41_Css3()) ) {
					alt322=5;
				}
				else if ( (synpred42_Css3()) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==PIPE) && (synpred40_Css3())) {
				alt322=4;
			}
			else if ( (LA322_0==AT_IDENT) ) {
				int LA322_20 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred45_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=9;
				}
				else if ( ((evalPredicate(! tokenNameEquals("@charset"),"! tokenNameEquals(\"@charset\")")||evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")||evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")"))) ) {
					alt322=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_INCLUDE) ) {
				int LA322_21 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=8;
				}
				else if ( ((synpred45_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt322=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==MEDIA_SYM) ) {
				int LA322_22 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=10;
				}

			}
			else if ( (LA322_0==PAGE_SYM) ) {
				int LA322_23 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=10;
				}

			}
			else if ( (LA322_0==COUNTER_STYLE_SYM) ) {
				int LA322_24 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=10;
				}

			}
			else if ( (LA322_0==FONT_FACE_SYM) ) {
				int LA322_25 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=10;
				}

			}
			else if ( (LA322_0==MOZ_DOCUMENT_SYM) ) {
				int LA322_26 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=10;
				}

			}
			else if ( (LA322_0==CONTAINER_SYM||LA322_0==LAYER_SYM||LA322_0==SUPPORTS_SYM) ) {
				alt322=10;
			}
			else if ( (LA322_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA322_28 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=10;
				}

			}
			else if ( (LA322_0==KEYFRAMES_SYM) ) {
				int LA322_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (true) ) {
					alt322=10;
				}

			}
			else if ( (LA322_0==SASS_IF) ) {
				int LA322_30 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_FOR) ) {
				int LA322_33 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_EACH) ) {
				int LA322_34 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_WHILE) ) {
				int LA322_35 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_EXTEND) ) {
				int LA322_36 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_DEBUG||LA322_0==SASS_WARN) ) {
				int LA322_37 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_CONTENT) ) {
				int LA322_38 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 38, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_RETURN) ) {
				int LA322_39 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 39, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==IMPORT_SYM) ) {
				int LA322_40 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt322=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 40, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA322_0==SASS_ERROR) ) {
				alt322=16;
			}
			else if ( ((LA322_0 >= BOTTOMCENTER_SYM && LA322_0 <= BOTTOMRIGHT_SYM)||LA322_0==CHARSET_SYM||(LA322_0 >= LEFTBOTTOM_SYM && LA322_0 <= LEFTTOP_SYM)||LA322_0==NAMESPACE_SYM||(LA322_0 >= RIGHTBOTTOM_SYM && LA322_0 <= RIGHTTOP_SYM)||LA322_0==SASS_ELSE||(LA322_0 >= SASS_FORWARD && LA322_0 <= SASS_FUNCTION)||LA322_0==SASS_USE||(LA322_0 >= TOPCENTER_SYM && LA322_0 <= TOPRIGHT_SYM)) ) {
				int LA322_42 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred37_Css3())) ) {
					alt322=1;
				}
				else if ( ((synpred38_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt322=3;
				}
				else if ( (((synpred41_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=5;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt322=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 322, 42, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 322, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(322);}

			switch (alt322) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:926:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(926,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration5864);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:927:7: ( sass_map )=> sass_map
					{
					dbg.location(927,20);
					pushFollow(FOLLOW_sass_map_in_declaration5877);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:928:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(928,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration5889);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(929,145);
					pushFollow(FOLLOW_rule_in_declaration5952);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:930:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(930,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration5964);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:932:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(932,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration6003);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:933:7: ( cp_mixin_declaration )=> cp_mixin_declaration
					{
					dbg.location(933,31);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration6015);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:934:7: ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(934,25);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration6028);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(934,39);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:934:39: ( ( ws )? IMPORTANT_SYM )?
					int alt319=2;
					try { dbg.enterSubRule(319);
					try { dbg.enterDecision(319, decisionCanBacktrack[319]);

					try {
						isCyclicDecision = true;
						alt319 = dfa319.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(319);}

					switch (alt319) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:934:40: ( ws )? IMPORTANT_SYM
							{
							dbg.location(934,40);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:934:40: ( ws )?
							int alt318=2;
							try { dbg.enterSubRule(318);
							try { dbg.enterDecision(318, decisionCanBacktrack[318]);

							int LA318_0 = input.LA(1);
							if ( (LA318_0==COMMENT||LA318_0==NL||LA318_0==WS) ) {
								alt318=1;
							}
							} finally {dbg.exitDecision(318);}

							switch (alt318) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:934:40: ws
									{
									dbg.location(934,40);
									pushFollow(FOLLOW_ws_in_declaration6031);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(318);}
							dbg.location(934,44);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration6034); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(319);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:935:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(935,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(935,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration6051);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(935,57);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:935:57: ( ( ws )? IMPORTANT_SYM )?
					int alt321=2;
					try { dbg.enterSubRule(321);
					try { dbg.enterDecision(321, decisionCanBacktrack[321]);

					try {
						isCyclicDecision = true;
						alt321 = dfa321.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(321);}

					switch (alt321) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:935:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(935,58);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:935:58: ( ws )?
							int alt320=2;
							try { dbg.enterSubRule(320);
							try { dbg.enterDecision(320, decisionCanBacktrack[320]);

							int LA320_0 = input.LA(1);
							if ( (LA320_0==COMMENT||LA320_0==NL||LA320_0==WS) ) {
								alt320=1;
							}
							} finally {dbg.exitDecision(320);}

							switch (alt320) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:935:58: ws
									{
									dbg.location(935,58);
									pushFollow(FOLLOW_ws_in_declaration6054);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(320);}
							dbg.location(935,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration6057); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(321);}

					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:936:7: at_rule
					{
					dbg.location(936,7);
					pushFollow(FOLLOW_at_rule_in_declaration6071);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:937:7: {...}? sass_control
					{
					dbg.location(937,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(937,25);
					pushFollow(FOLLOW_sass_control_in_declaration6081);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:938:7: {...}? sass_extend
					{
					dbg.location(938,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(938,25);
					pushFollow(FOLLOW_sass_extend_in_declaration6091);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:939:7: {...}? sass_debug
					{
					dbg.location(939,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(939,25);
					pushFollow(FOLLOW_sass_debug_in_declaration6101);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:940:7: {...}? sass_content
					{
					dbg.location(940,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(940,25);
					pushFollow(FOLLOW_sass_content_in_declaration6111);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:941:7: {...}? sass_function_return
					{
					dbg.location(941,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(941,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration6121);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:942:7: {...}? sass_error
					{
					dbg.location(942,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(942,25);
					pushFollow(FOLLOW_sass_error_in_declaration6131);
					sass_error();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:943:7: {...}? importItem
					{
					dbg.location(943,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(943,25);
					pushFollow(FOLLOW_importItem_in_declaration6141);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:944:7: GEN
					{
					dbg.location(944,7);
					match(input,GEN,FOLLOW_GEN_in_declaration6149); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(945, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:951:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(951, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:952:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(953,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup6183);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(953,18);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(325);

			loop325:
			while (true) {
				int alt325=2;
				try { dbg.enterDecision(325, decisionCanBacktrack[325]);

				try {
					isCyclicDecision = true;
					alt325 = dfa325.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(325);}

				switch (alt325) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(953,19);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:19: ( ws )?
					int alt323=2;
					try { dbg.enterSubRule(323);
					try { dbg.enterDecision(323, decisionCanBacktrack[323]);

					int LA323_0 = input.LA(1);
					if ( (LA323_0==COMMENT||LA323_0==NL||LA323_0==WS) ) {
						alt323=1;
					}
					} finally {dbg.exitDecision(323);}

					switch (alt323) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:19: ws
							{
							dbg.location(953,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup6186);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(323);}
					dbg.location(953,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup6189); if (state.failed) return;dbg.location(953,29);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:29: ( ws )?
					int alt324=2;
					try { dbg.enterSubRule(324);
					try { dbg.enterDecision(324, decisionCanBacktrack[324]);

					int LA324_0 = input.LA(1);
					if ( (LA324_0==COMMENT||LA324_0==NL||LA324_0==WS) ) {
						alt324=1;
					}
					} finally {dbg.exitDecision(324);}

					switch (alt324) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:29: ws
							{
							dbg.location(953,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup6191);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(324);}
					dbg.location(953,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup6194);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop325;
				}
			}
			} finally {dbg.exitSubRule(325);}
			dbg.location(953,44);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:44: ({...}? COMMA )?
			int alt326=2;
			try { dbg.enterSubRule(326);
			try { dbg.enterDecision(326, decisionCanBacktrack[326]);

			int LA326_0 = input.LA(1);
			if ( (LA326_0==COMMA) ) {
				alt326=1;
			}
			} finally {dbg.exitDecision(326);}

			switch (alt326) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:953:45: {...}? COMMA
					{
					dbg.location(953,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(953,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup6201); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(326);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(954, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:956:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(956, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator )
			int alt333=2;
			try { dbg.enterDecision(333, decisionCanBacktrack[333]);

			try {
				isCyclicDecision = true;
				alt333 = dfa333.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(333);}

			switch (alt333) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					{
					dbg.location(957,8);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:8: ( combinator ( ws )? )?
					int alt328=2;
					try { dbg.enterSubRule(328);
					try { dbg.enterDecision(328, decisionCanBacktrack[328]);

					int LA328_0 = input.LA(1);
					if ( (LA328_0==GREATER||LA328_0==PLUS||LA328_0==TILDE) ) {
						alt328=1;
					}
					} finally {dbg.exitDecision(328);}

					switch (alt328) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:9: combinator ( ws )?
							{
							dbg.location(957,9);
							pushFollow(FOLLOW_combinator_in_selector6222);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(957,20);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:20: ( ws )?
							int alt327=2;
							try { dbg.enterSubRule(327);
							try { dbg.enterDecision(327, decisionCanBacktrack[327]);

							int LA327_0 = input.LA(1);
							if ( (LA327_0==COMMENT||LA327_0==NL||LA327_0==WS) ) {
								alt327=1;
							}
							} finally {dbg.exitDecision(327);}

							switch (alt327) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:20: ws
									{
									dbg.location(957,20);
									pushFollow(FOLLOW_ws_in_selector6224);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(327);}

							}
							break;

					}
					} finally {dbg.exitSubRule(328);}
					dbg.location(957,26);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector6229);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;dbg.location(957,49);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					try { dbg.enterSubRule(332);

					loop332:
					while (true) {
						int alt332=2;
						try { dbg.enterDecision(332, decisionCanBacktrack[332]);

						try {
							isCyclicDecision = true;
							alt332 = dfa332.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(332);}

						switch (alt332) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
							{
							dbg.location(957,51);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:51: ( ( ( ws )? combinator ( ws )? ) | ws )
							int alt331=2;
							try { dbg.enterSubRule(331);
							try { dbg.enterDecision(331, decisionCanBacktrack[331]);

							try {
								isCyclicDecision = true;
								alt331 = dfa331.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(331);}

							switch (alt331) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:52: ( ( ws )? combinator ( ws )? )
									{
									dbg.location(957,52);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:52: ( ( ws )? combinator ( ws )? )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:53: ( ws )? combinator ( ws )?
									{
									dbg.location(957,53);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:53: ( ws )?
									int alt329=2;
									try { dbg.enterSubRule(329);
									try { dbg.enterDecision(329, decisionCanBacktrack[329]);

									int LA329_0 = input.LA(1);
									if ( (LA329_0==COMMENT||LA329_0==NL||LA329_0==WS) ) {
										alt329=1;
									}
									} finally {dbg.exitDecision(329);}

									switch (alt329) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:53: ws
											{
											dbg.location(957,53);
											pushFollow(FOLLOW_ws_in_selector6235);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(329);}
									dbg.location(957,57);
									pushFollow(FOLLOW_combinator_in_selector6238);
									combinator();
									state._fsp--;
									if (state.failed) return;dbg.location(957,68);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:68: ( ws )?
									int alt330=2;
									try { dbg.enterSubRule(330);
									try { dbg.enterDecision(330, decisionCanBacktrack[330]);

									int LA330_0 = input.LA(1);
									if ( (LA330_0==COMMENT||LA330_0==NL||LA330_0==WS) ) {
										alt330=1;
									}
									} finally {dbg.exitDecision(330);}

									switch (alt330) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:68: ws
											{
											dbg.location(957,68);
											pushFollow(FOLLOW_ws_in_selector6240);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(330);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:957:73: ws
									{
									dbg.location(957,73);
									pushFollow(FOLLOW_ws_in_selector6244);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(331);}
							dbg.location(957,77);
							pushFollow(FOLLOW_simpleSelectorSequence_in_selector6247);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop332;
						}
					}
					} finally {dbg.exitSubRule(332);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:958:10: {...}? combinator
					{
					dbg.location(958,10);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selector", "isScssSource()");
					}dbg.location(958,28);
					pushFollow(FOLLOW_combinator_in_selector6262);
					combinator();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(959, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:961:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(961, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:962:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(962,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(964, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:966:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(966, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:967:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt342=2;
			try { dbg.enterDecision(342, decisionCanBacktrack[342]);

			int LA342_0 = input.LA(1);
			if ( (LA342_0==AT_SIGN||LA342_0==COLON||(LA342_0 >= DCOLON && LA342_0 <= DOT)||(LA342_0 >= HASH && LA342_0 <= HASH_SYMBOL)||LA342_0==LBRACKET||LA342_0==MINUS||LA342_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt342=1;
			}
			else if ( (LA342_0==LESS_AND) ) {
				int LA342_2 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt342=1;
				}
				else if ( (synpred47_Css3()) ) {
					alt342=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 342, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA342_0==IDENT) ) {
				int LA342_3 = input.LA(2);
				if ( (LA342_3==HASH_SYMBOL) ) {
					int LA342_7 = input.LA(3);
					if ( (LA342_7==LBRACE) ) {
						alt342=1;
					}
					else if ( (LA342_7==NAME) && (synpred47_Css3())) {
						alt342=2;
					}
					else if ( (LA342_7==IDENT||LA342_7==MINUS) && (synpred47_Css3())) {
						alt342=2;
					}
					else if ( (LA342_7==AT_SIGN) && (synpred47_Css3())) {
						alt342=2;
					}

				}
				else if ( (LA342_3==AT_SIGN) ) {
					alt342=1;
				}
				else if ( (LA342_3==PIPE) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==COMMENT||LA342_3==NL||LA342_3==WS) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==SASS_EXTEND_ONLY_SELECTOR) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==LESS_AND) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==HASH) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==DOT) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==DIMENSION) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==LBRACKET) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==COLON||LA342_3==DCOLON) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==GREATER||LA342_3==PLUS||LA342_3==TILDE) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==COMMA) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==LBRACE) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==RPAREN) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==SEMI) && (synpred47_Css3())) {
					alt342=2;
				}
				else if ( (LA342_3==RBRACE) && (synpred47_Css3())) {
					alt342=2;
				}

			}
			else if ( (LA342_0==STAR) && (synpred47_Css3())) {
				alt342=2;
			}
			else if ( (LA342_0==PIPE) && (synpred47_Css3())) {
				alt342=2;
			}
			else if ( (LA342_0==GEN) && (synpred47_Css3())) {
				alt342=2;
			}

			} finally {dbg.exitDecision(342);}

			switch (alt342) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:968:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					{
					dbg.location(968,9);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:968:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
					int alt334=3;
					try { dbg.enterSubRule(334);
					try { dbg.enterDecision(334, decisionCanBacktrack[334]);

					switch ( input.LA(1) ) {
					case COLON:
					case DCOLON:
					case DIMENSION:
					case DOT:
					case HASH:
					case LBRACKET:
					case LESS_AND:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt334=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA334_2 = input.LA(2);
						if ( (LA334_2==LBRACE) ) {
							alt334=2;
						}
						else if ( (LA334_2==AT_SIGN||LA334_2==IDENT||LA334_2==MINUS||LA334_2==NAME) ) {
							alt334=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 334, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						int LA334_3 = input.LA(2);
						if ( (LA334_3==HASH_SYMBOL) ) {
							alt334=2;
						}
						else if ( (LA334_3==AT_SIGN) ) {
							alt334=3;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 334, 3, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case AT_SIGN:
						{
						alt334=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 334, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(334);}

					switch (alt334) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:968:10: elementSubsequent
							{
							dbg.location(968,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence6314);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:968:30: {...}? sass_selector_interpolation_exp
							{
							dbg.location(968,30);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(968,48);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6320);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:11: {...}? less_selector_interpolation_exp
							{
							dbg.location(969,11);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
							}dbg.location(969,29);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence6334);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(334);}
					dbg.location(969,64);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:64: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					try { dbg.enterSubRule(338);

					loop338:
					while (true) {
						int alt338=2;
						try { dbg.enterDecision(338, decisionCanBacktrack[338]);

						int LA338_0 = input.LA(1);
						if ( (LA338_0==COMMENT||LA338_0==NL||LA338_0==WS) ) {
							int LA338_1 = input.LA(2);
							if ( (synpred46_Css3()) ) {
								alt338=1;
							}

						}
						else if ( (LA338_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred46_Css3())) {
							alt338=1;
						}
						else if ( (LA338_0==LESS_AND) && (synpred46_Css3())) {
							alt338=1;
						}
						else if ( (LA338_0==HASH) && (synpred46_Css3())) {
							alt338=1;
						}
						else if ( (LA338_0==HASH_SYMBOL) && (synpred46_Css3())) {
							alt338=1;
						}
						else if ( (LA338_0==DOT) && (synpred46_Css3())) {
							alt338=1;
						}
						else if ( (LA338_0==DIMENSION) && (synpred46_Css3())) {
							alt338=1;
						}
						else if ( (LA338_0==LBRACKET) && (synpred46_Css3())) {
							alt338=1;
						}
						else if ( (LA338_0==COLON||LA338_0==DCOLON) && (synpred46_Css3())) {
							alt338=1;
						}

						} finally {dbg.exitDecision(338);}

						switch (alt338) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:65: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							{
							dbg.location(969,79);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							int alt337=2;
							try { dbg.enterSubRule(337);
							try { dbg.enterDecision(337, decisionCanBacktrack[337]);

							try {
								isCyclicDecision = true;
								alt337 = dfa337.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(337);}

							switch (alt337) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:80: ( ( ws )? elementSubsequent )
									{
									dbg.location(969,80);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:80: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:81: ( ws )? elementSubsequent
									{
									dbg.location(969,81);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:81: ( ws )?
									int alt335=2;
									try { dbg.enterSubRule(335);
									try { dbg.enterDecision(335, decisionCanBacktrack[335]);

									int LA335_0 = input.LA(1);
									if ( (LA335_0==COMMENT||LA335_0==NL||LA335_0==WS) ) {
										alt335=1;
									}
									} finally {dbg.exitDecision(335);}

									switch (alt335) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:81: ws
											{
											dbg.location(969,81);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence6349);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(335);}
									dbg.location(969,85);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence6352);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									{
									dbg.location(969,105);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:106: ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									{
									dbg.location(969,106);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence6357);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(969,109);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:109: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									int alt336=2;
									try { dbg.enterSubRule(336);
									try { dbg.enterDecision(336, decisionCanBacktrack[336]);

									switch ( input.LA(1) ) {
									case IDENT:
									case MINUS:
										{
										int LA336_1 = input.LA(2);
										if ( (LA336_1==HASH_SYMBOL) ) {
											alt336=1;
										}
										else if ( (LA336_1==AT_SIGN) ) {
											alt336=2;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return;}
											int nvaeMark = input.mark();
											try {
												input.consume();
												NoViableAltException nvae =
													new NoViableAltException("", 336, 1, input);
												dbg.recognitionException(nvae);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case HASH_SYMBOL:
										{
										alt336=1;
										}
										break;
									case AT_SIGN:
										{
										alt336=2;
										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return;}
										NoViableAltException nvae =
											new NoViableAltException("", 336, 0, input);
										dbg.recognitionException(nvae);
										throw nvae;
									}
									} finally {dbg.exitDecision(336);}

									switch (alt336) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:110: {...}? sass_selector_interpolation_exp
											{
											dbg.location(969,110);
											if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
											}dbg.location(969,128);
											pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6362);
											sass_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;
										case 2 :
											dbg.enterAlt(2);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:162: {...}? less_selector_interpolation_exp
											{
											dbg.location(969,162);
											if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
											}dbg.location(969,180);
											pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence6368);
											less_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(336);}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(337);}

							}
							break;

						default :
							break loop338;
						}
					}
					} finally {dbg.exitSubRule(338);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(970,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence6382);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(970,33);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(341);

					loop341:
					while (true) {
						int alt341=2;
						try { dbg.enterDecision(341, decisionCanBacktrack[341]);

						int LA341_0 = input.LA(1);
						if ( (LA341_0==COMMENT||LA341_0==NL||LA341_0==WS) ) {
							int LA341_1 = input.LA(2);
							if ( (synpred48_Css3()) ) {
								alt341=1;
							}

						}
						else if ( (LA341_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred48_Css3())) {
							alt341=1;
						}
						else if ( (LA341_0==LESS_AND) && (synpred48_Css3())) {
							alt341=1;
						}
						else if ( (LA341_0==HASH) && (synpred48_Css3())) {
							alt341=1;
						}
						else if ( (LA341_0==HASH_SYMBOL) && (synpred48_Css3())) {
							alt341=1;
						}
						else if ( (LA341_0==DOT) && (synpred48_Css3())) {
							alt341=1;
						}
						else if ( (LA341_0==DIMENSION) && (synpred48_Css3())) {
							alt341=1;
						}
						else if ( (LA341_0==LBRACKET) && (synpred48_Css3())) {
							alt341=1;
						}
						else if ( (LA341_0==COLON||LA341_0==DCOLON) && (synpred48_Css3())) {
							alt341=1;
						}

						} finally {dbg.exitDecision(341);}

						switch (alt341) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(970,48);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt340=2;
							try { dbg.enterSubRule(340);
							try { dbg.enterDecision(340, decisionCanBacktrack[340]);

							try {
								isCyclicDecision = true;
								alt340 = dfa340.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(340);}

							switch (alt340) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(970,49);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:50: ( ws )? elementSubsequent
									{
									dbg.location(970,50);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:50: ( ws )?
									int alt339=2;
									try { dbg.enterSubRule(339);
									try { dbg.enterDecision(339, decisionCanBacktrack[339]);

									int LA339_0 = input.LA(1);
									if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
										alt339=1;
									}
									} finally {dbg.exitDecision(339);}

									switch (alt339) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:50: ws
											{
											dbg.location(970,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence6394);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(339);}
									dbg.location(970,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence6397);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(970,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(970,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence6404);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(970,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6406);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(340);}

							}
							break;

						default :
							break loop341;
						}
					}
					} finally {dbg.exitSubRule(341);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(971, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:978:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(978, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND )
			int alt343=8;
			try { dbg.enterDecision(343, decisionCanBacktrack[343]);

			switch ( input.LA(1) ) {
			case HASH_SYMBOL:
				{
				alt343=1;
				}
				break;
			case HASH:
				{
				alt343=2;
				}
				break;
			case DOT:
				{
				alt343=3;
				}
				break;
			case LBRACKET:
				{
				alt343=4;
				}
				break;
			case COLON:
				{
				alt343=5;
				}
				break;
			case DCOLON:
				{
				alt343=6;
				}
				break;
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt343=7;
				}
				break;
			case LESS_AND:
				{
				alt343=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 343, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(343);}

			switch (alt343) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:7: HASH_SYMBOL
					{
					dbg.location(979,7);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_esPred6431); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:21: HASH
					{
					dbg.location(979,21);
					match(input,HASH,FOLLOW_HASH_in_esPred6435); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:28: DOT
					{
					dbg.location(979,28);
					match(input,DOT,FOLLOW_DOT_in_esPred6439); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:34: LBRACKET
					{
					dbg.location(979,34);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_esPred6443); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:45: COLON
					{
					dbg.location(979,45);
					match(input,COLON,FOLLOW_COLON_in_esPred6447); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:53: DCOLON
					{
					dbg.location(979,53);
					match(input,DCOLON,FOLLOW_DCOLON_in_esPred6451); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:62: SASS_EXTEND_ONLY_SELECTOR
					{
					dbg.location(979,62);
					match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred6455); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:979:90: {...}? LESS_AND
					{
					dbg.location(979,90);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "esPred", "isCssPreprocessorSource()");
					}dbg.location(979,119);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_esPred6461); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(980, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:982:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(982, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:984:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:984:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(984,6);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:984:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt344=2;
			try { dbg.enterSubRule(344);
			try { dbg.enterDecision(344, decisionCanBacktrack[344]);

			int LA344_0 = input.LA(1);
			if ( (LA344_0==IDENT) ) {
				int LA344_1 = input.LA(2);
				if ( (LA344_1==PIPE) && (synpred49_Css3())) {
					alt344=1;
				}
			}
			else if ( (LA344_0==STAR) ) {
				int LA344_2 = input.LA(2);
				if ( (LA344_2==PIPE) && (synpred49_Css3())) {
					alt344=1;
				}
			}
			else if ( (LA344_0==PIPE) && (synpred49_Css3())) {
				alt344=1;
			}
			} finally {dbg.exitDecision(344);}

			switch (alt344) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:984:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(984,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector6503);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(344);}
			dbg.location(984,49);
			pushFollow(FOLLOW_elementName_in_typeSelector6507);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(985, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:987:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(987, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:988:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:988:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(988,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:988:5: ( namespacePrefixName | STAR )?
			int alt345=3;
			try { dbg.enterSubRule(345);
			try { dbg.enterDecision(345, decisionCanBacktrack[345]);

			int LA345_0 = input.LA(1);
			if ( (LA345_0==IDENT) ) {
				alt345=1;
			}
			else if ( (LA345_0==STAR) ) {
				alt345=2;
			}
			} finally {dbg.exitDecision(345);}

			switch (alt345) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:988:7: namespacePrefixName
					{
					dbg.location(988,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix6522);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:988:29: STAR
					{
					dbg.location(988,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix6526); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(345);}
			dbg.location(988,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix6530); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(989, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:992:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(992, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:993:5: ( ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:994:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(994,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:994:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			int alt347=7;
			try { dbg.enterSubRule(347);
			try { dbg.enterDecision(347, decisionCanBacktrack[347]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt347=1;
				}
				break;
			case LESS_AND:
				{
				switch ( input.LA(2) ) {
				case IDENT:
					{
					int LA347_7 = input.LA(3);
					if ( ((LA347_7 >= COLON && LA347_7 <= COMMENT)||(LA347_7 >= DCOLON && LA347_7 <= DOT)||LA347_7==GREATER||(LA347_7 >= HASH && LA347_7 <= HASH_SYMBOL)||LA347_7==IDENT||(LA347_7 >= LBRACE && LA347_7 <= LBRACKET)||LA347_7==LESS_AND||LA347_7==NL||LA347_7==NUMBER||LA347_7==PLUS||LA347_7==RBRACE||LA347_7==RPAREN||LA347_7==SASS_EXTEND_ONLY_SELECTOR||LA347_7==SEMI||LA347_7==TILDE||LA347_7==WS) ) {
						alt347=2;
					}
					else if ( (LA347_7==AT_SIGN) ) {
						alt347=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 347, 7, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case COLON:
				case COMMA:
				case COMMENT:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case LBRACE:
				case LBRACKET:
				case LESS_AND:
				case NL:
				case NUMBER:
				case PLUS:
				case RBRACE:
				case RPAREN:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SEMI:
				case TILDE:
				case WS:
					{
					alt347=2;
					}
					break;
				case AT_SIGN:
				case MINUS:
					{
					alt347=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 347, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt347=4;
				}
				break;
			case DIMENSION:
			case DOT:
				{
				alt347=5;
				}
				break;
			case LBRACKET:
				{
				alt347=6;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt347=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 347, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(347);}

			switch (alt347) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:995:9: {...}? sass_extend_only_selector
					{
					dbg.location(995,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(995,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent6562);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:996:11: {...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					{
					dbg.location(996,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isCssPreprocessorSource()");
					}dbg.location(996,40);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent6576); if (state.failed) return;dbg.location(996,49);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:996:49: ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					try { dbg.enterSubRule(346);

					loop346:
					while (true) {
						int alt346=4;
						try { dbg.enterDecision(346, decisionCanBacktrack[346]);

						switch ( input.LA(1) ) {
						case HASH_SYMBOL:
							{
							int LA346_2 = input.LA(2);
							if ( (LA346_2==LBRACE) ) {
								alt346=3;
							}

							}
							break;
						case IDENT:
							{
							alt346=1;
							}
							break;
						case NUMBER:
							{
							alt346=2;
							}
							break;
						}
						} finally {dbg.exitDecision(346);}

						switch (alt346) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:996:50: IDENT
							{
							dbg.location(996,50);
							match(input,IDENT,FOLLOW_IDENT_in_elementSubsequent6579); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:996:58: NUMBER
							{
							dbg.location(996,58);
							match(input,NUMBER,FOLLOW_NUMBER_in_elementSubsequent6583); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:996:67: {...}? sass_interpolation_expression_var
							{
							dbg.location(996,67);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
							}dbg.location(996,85);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_elementSubsequent6589);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop346;
						}
					}
					} finally {dbg.exitSubRule(346);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:997:11: {...}? LESS_AND less_selector_interpolation_exp
					{
					dbg.location(997,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(997,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent6605); if (state.failed) return;dbg.location(997,38);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_elementSubsequent6607);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:998:8: cssId
					{
					dbg.location(998,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent6616);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:999:8: cssClass
					{
					dbg.location(999,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent6625);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1000:11: slAttribute
					{
					dbg.location(1000,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent6637);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1001:11: pseudo
					{
					dbg.location(1001,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent6649);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(347);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1003, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1006:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1006, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1007:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) )
			int alt350=2;
			try { dbg.enterDecision(350, decisionCanBacktrack[350]);

			int LA350_0 = input.LA(1);
			if ( (LA350_0==HASH) ) {
				alt350=1;
			}
			else if ( (LA350_0==HASH_SYMBOL) ) {
				alt350=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 350, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(350);}

			switch (alt350) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1007:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(1007,7);
					match(input,HASH,FOLLOW_HASH_in_cssId6673); if (state.failed) return;dbg.location(1007,12);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1007:12: ({...}? sass_selector_interpolation_exp )?
					int alt348=2;
					try { dbg.enterSubRule(348);
					try { dbg.enterDecision(348, decisionCanBacktrack[348]);

					int LA348_0 = input.LA(1);
					if ( (LA348_0==IDENT||LA348_0==MINUS) ) {
						alt348=1;
					}
					else if ( (LA348_0==HASH_SYMBOL) ) {
						int LA348_2 = input.LA(2);
						if ( (LA348_2==LBRACE) ) {
							alt348=1;
						}
					}
					} finally {dbg.exitDecision(348);}

					switch (alt348) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1007:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(1007,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(1007,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId6678);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(348);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1009:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					{
					dbg.location(1009,9);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1009:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1009:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp )
					{
					dbg.location(1009,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId6700); if (state.failed) return;dbg.location(1010,13);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1010:13: ( NAME |{...}? less_selector_interpolation_exp )
					int alt349=2;
					try { dbg.enterSubRule(349);
					try { dbg.enterDecision(349, decisionCanBacktrack[349]);

					int LA349_0 = input.LA(1);
					if ( (LA349_0==NAME) ) {
						alt349=1;
					}
					else if ( (LA349_0==AT_SIGN||LA349_0==IDENT||LA349_0==MINUS) ) {
						alt349=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 349, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(349);}

					switch (alt349) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1010:15: NAME
							{
							dbg.location(1010,15);
							match(input,NAME,FOLLOW_NAME_in_cssId6716); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1011:17: {...}? less_selector_interpolation_exp
							{
							dbg.location(1011,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(1011,35);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssId6736);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(349);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1014, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1020:1: cssClass : ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION );
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1020, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1021:5: ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION )
			int alt352=2;
			try { dbg.enterDecision(352, decisionCanBacktrack[352]);

			int LA352_0 = input.LA(1);
			if ( (LA352_0==DOT) ) {
				alt352=1;
			}
			else if ( (LA352_0==DIMENSION) ) {
				alt352=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 352, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(352);}

			switch (alt352) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1021:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					{
					dbg.location(1021,7);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1021:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1021:8: DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					{
					dbg.location(1021,8);
					match(input,DOT,FOLLOW_DOT_in_cssClass6788); if (state.failed) return;dbg.location(1022,9);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1022:9: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					int alt351=5;
					try { dbg.enterSubRule(351);
					try { dbg.enterDecision(351, decisionCanBacktrack[351]);

					switch ( input.LA(1) ) {
					case IDENT:
						{
						switch ( input.LA(2) ) {
						case HASH_SYMBOL:
							{
							int LA351_7 = input.LA(3);
							if ( (LA351_7==LBRACE) ) {
								alt351=1;
							}
							else if ( (LA351_7==AT_SIGN||LA351_7==IDENT||LA351_7==MINUS||LA351_7==NAME) ) {
								alt351=3;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 351, 7, input);
									dbg.recognitionException(nvae);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

							}
							break;
						case AT_SIGN:
							{
							alt351=2;
							}
							break;
						case COLON:
						case COMMA:
						case COMMENT:
						case DCOLON:
						case DIMENSION:
						case DOT:
						case GREATER:
						case HASH:
						case LBRACE:
						case LBRACKET:
						case LESS_AND:
						case NL:
						case PLUS:
						case RBRACE:
						case RPAREN:
						case SASS_EXTEND_ONLY_SELECTOR:
						case SEMI:
						case TILDE:
						case WS:
							{
							alt351=3;
							}
							break;
						default:
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 351, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}
						}
						break;
					case HASH_SYMBOL:
						{
						alt351=1;
						}
						break;
					case AT_SIGN:
						{
						alt351=2;
						}
						break;
					case MINUS:
						{
						int LA351_4 = input.LA(2);
						if ( (LA351_4==HASH_SYMBOL) ) {
							alt351=1;
						}
						else if ( (LA351_4==AT_SIGN) ) {
							alt351=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 351, 4, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case NOT:
						{
						alt351=4;
						}
						break;
					case GEN:
						{
						alt351=5;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 351, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(351);}

					switch (alt351) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1023:14: {...}? sass_selector_interpolation_exp
							{
							dbg.location(1023,14);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isScssSource()");
							}dbg.location(1023,33);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass6816);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1024:15: {...}? less_selector_interpolation_exp
							{
							dbg.location(1024,15);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isLessSource()");
							}dbg.location(1024,33);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssClass6834);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1025:15: IDENT
							{
							dbg.location(1025,15);
							match(input,IDENT,FOLLOW_IDENT_in_cssClass6850); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1026:15: NOT
							{
							dbg.location(1026,15);
							match(input,NOT,FOLLOW_NOT_in_cssClass6866); if (state.failed) return;
							}
							break;
						case 5 :
							dbg.enterAlt(5);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1027:15: GEN
							{
							dbg.location(1027,15);
							match(input,GEN,FOLLOW_GEN_in_cssClass6882); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(351);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1029:11: {...}? DIMENSION
					{
					dbg.location(1029,11);
					if ( !(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "tokenNameStartsWith(\".\")");
					}dbg.location(1029,39);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_cssClass6906); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1030, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1037:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1037, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1038:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(1038,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1039, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1041:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1041, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1042:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1042:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(1042,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute6962); if (state.failed) return;dbg.location(1043,6);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1043:6: ( namespacePrefix )?
			int alt353=2;
			try { dbg.enterSubRule(353);
			try { dbg.enterDecision(353, decisionCanBacktrack[353]);

			int LA353_0 = input.LA(1);
			if ( (LA353_0==IDENT) ) {
				int LA353_1 = input.LA(2);
				if ( (LA353_1==PIPE) ) {
					alt353=1;
				}
			}
			else if ( (LA353_0==PIPE||LA353_0==STAR) ) {
				alt353=1;
			}
			} finally {dbg.exitDecision(353);}

			switch (alt353) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1043:6: namespacePrefix
					{
					dbg.location(1043,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute6969);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(353);}
			dbg.location(1043,23);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1043:23: ( ws )?
			int alt354=2;
			try { dbg.enterSubRule(354);
			try { dbg.enterDecision(354, decisionCanBacktrack[354]);

			int LA354_0 = input.LA(1);
			if ( (LA354_0==COMMENT||LA354_0==NL||LA354_0==WS) ) {
				alt354=1;
			}
			} finally {dbg.exitDecision(354);}

			switch (alt354) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1043:23: ws
					{
					dbg.location(1043,23);
					pushFollow(FOLLOW_ws_in_slAttribute6972);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(354);}
			dbg.location(1044,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute6983);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(1044,25);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1044:25: ( ws )?
			int alt355=2;
			try { dbg.enterSubRule(355);
			try { dbg.enterDecision(355, decisionCanBacktrack[355]);

			int LA355_0 = input.LA(1);
			if ( (LA355_0==COMMENT||LA355_0==NL||LA355_0==WS) ) {
				alt355=1;
			}
			} finally {dbg.exitDecision(355);}

			switch (alt355) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1044:25: ws
					{
					dbg.location(1044,25);
					pushFollow(FOLLOW_ws_in_slAttribute6985);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(355);}
			dbg.location(1046,13);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1046:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt358=2;
			try { dbg.enterSubRule(358);
			try { dbg.enterDecision(358, decisionCanBacktrack[358]);

			int LA358_0 = input.LA(1);
			if ( (LA358_0==BEGINS||LA358_0==CONTAINS||LA358_0==DASHMATCH||LA358_0==ENDS||LA358_0==INCLUDES||LA358_0==OPEQ) ) {
				alt358=1;
			}
			} finally {dbg.exitDecision(358);}

			switch (alt358) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1047:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(1047,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1055,17);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1055:17: ( ws )?
					int alt356=2;
					try { dbg.enterSubRule(356);
					try { dbg.enterDecision(356, decisionCanBacktrack[356]);

					int LA356_0 = input.LA(1);
					if ( (LA356_0==COMMENT||LA356_0==NL||LA356_0==WS) ) {
						alt356=1;
					}
					} finally {dbg.exitDecision(356);}

					switch (alt356) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1055:17: ws
							{
							dbg.location(1055,17);
							pushFollow(FOLLOW_ws_in_slAttribute7199);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(356);}
					dbg.location(1056,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute7218);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1057,17);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1057:17: ( ws )?
					int alt357=2;
					try { dbg.enterSubRule(357);
					try { dbg.enterDecision(357, decisionCanBacktrack[357]);

					int LA357_0 = input.LA(1);
					if ( (LA357_0==COMMENT||LA357_0==NL||LA357_0==WS) ) {
						alt357=1;
					}
					} finally {dbg.exitDecision(357);}

					switch (alt357) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1057:17: ws
							{
							dbg.location(1057,17);
							pushFollow(FOLLOW_ws_in_slAttribute7236);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(357);}

					}
					break;

			}
			} finally {dbg.exitSubRule(358);}
			dbg.location(1060,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute7261); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1061, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1068:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1068, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1069:2: ( IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1069:4: IDENT
			{
			dbg.location(1069,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName7277); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1070, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1072:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1072, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1073:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(1073,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1078, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1080:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1080, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1081:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1081:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			{
			dbg.location(1081,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1082,14);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1082:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			int alt375=5;
			try { dbg.enterSubRule(375);
			try { dbg.enterDecision(375, decisionCanBacktrack[375]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA375_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")),""))) ) {
					alt375=1;
				}
				else if ( (evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")) ) {
					alt375=4;
				}
				else if ( ((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt375=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 375, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				alt375=2;
				}
				break;
			case NOT:
				{
				alt375=3;
				}
				break;
			case GEN:
				{
				alt375=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 375, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(375);}

			switch (alt375) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1083:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(1083,17);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1083:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1084:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(1084,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1085,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1085:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt363=2;
					try { dbg.enterSubRule(363);
					try { dbg.enterDecision(363, decisionCanBacktrack[363]);

					try {
						isCyclicDecision = true;
						alt363 = dfa363.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(363);}

					switch (alt363) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(1086,25);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:25: ( ws )?
							int alt359=2;
							try { dbg.enterSubRule(359);
							try { dbg.enterDecision(359, decisionCanBacktrack[359]);

							int LA359_0 = input.LA(1);
							if ( (LA359_0==COMMENT||LA359_0==NL||LA359_0==WS) ) {
								alt359=1;
							}
							} finally {dbg.exitDecision(359);}

							switch (alt359) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:25: ws
									{
									dbg.location(1086,25);
									pushFollow(FOLLOW_ws_in_pseudo7469);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(359);}
							dbg.location(1086,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7472); if (state.failed) return;dbg.location(1086,36);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:36: ( ws )?
							int alt360=2;
							try { dbg.enterSubRule(360);
							try { dbg.enterDecision(360, decisionCanBacktrack[360]);

							int LA360_0 = input.LA(1);
							if ( (LA360_0==COMMENT||LA360_0==NL||LA360_0==WS) ) {
								alt360=1;
							}
							} finally {dbg.exitDecision(360);}

							switch (alt360) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:36: ws
									{
									dbg.location(1086,36);
									pushFollow(FOLLOW_ws_in_pseudo7474);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(360);}
							dbg.location(1086,40);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:40: ( ( expression ( ws )? ) | STAR )?
							int alt362=3;
							try { dbg.enterSubRule(362);
							try { dbg.enterDecision(362, decisionCanBacktrack[362]);

							int LA362_0 = input.LA(1);
							if ( ((LA362_0 >= ANGLE && LA362_0 <= AT_SIGN)||(LA362_0 >= BOTTOMCENTER_SYM && LA362_0 <= BOTTOMRIGHT_SYM)||LA362_0==CHARSET_SYM||LA362_0==COUNTER_STYLE_SYM||LA362_0==DIMENSION||LA362_0==EMS||LA362_0==EXS||(LA362_0 >= FONT_FACE_SYM && LA362_0 <= FREQ)||LA362_0==GEN||(LA362_0 >= HASH && LA362_0 <= HASH_SYMBOL)||LA362_0==IDENT||LA362_0==IMPORT_SYM||LA362_0==KEYFRAMES_SYM||(LA362_0 >= LBRACKET && LA362_0 <= LENGTH)||(LA362_0 >= LESS_AND && LA362_0 <= LESS_JS_STRING)||(LA362_0 >= MEDIA_SYM && LA362_0 <= MOZ_DOCUMENT_SYM)||LA362_0==NAMESPACE_SYM||LA362_0==NUMBER||(LA362_0 >= PAGE_SYM && LA362_0 <= PERCENTAGE_SYMBOL)||LA362_0==PLUS||(LA362_0 >= REM && LA362_0 <= RIGHTTOP_SYM)||(LA362_0 >= SASS_AT_ROOT && LA362_0 <= SASS_DEBUG)||(LA362_0 >= SASS_EACH && LA362_0 <= SASS_ELSE)||LA362_0==SASS_EXTEND||(LA362_0 >= SASS_FOR && LA362_0 <= SASS_FUNCTION)||(LA362_0 >= SASS_IF && LA362_0 <= SASS_MIXIN)||(LA362_0 >= SASS_RETURN && LA362_0 <= SASS_WHILE)||LA362_0==STRING||(LA362_0 >= TILDE && LA362_0 <= TOPRIGHT_SYM)||(LA362_0 >= URANGE && LA362_0 <= URI)||LA362_0==VARIABLE||LA362_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt362=1;
							}
							else if ( (LA362_0==STAR) ) {
								alt362=2;
							}
							} finally {dbg.exitDecision(362);}

							switch (alt362) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:42: ( expression ( ws )? )
									{
									dbg.location(1086,42);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:43: expression ( ws )?
									{
									dbg.location(1086,43);
									pushFollow(FOLLOW_expression_in_pseudo7480);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(1086,54);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:54: ( ws )?
									int alt361=2;
									try { dbg.enterSubRule(361);
									try { dbg.enterDecision(361, decisionCanBacktrack[361]);

									int LA361_0 = input.LA(1);
									if ( (LA361_0==COMMENT||LA361_0==NL||LA361_0==WS) ) {
										alt361=1;
									}
									} finally {dbg.exitDecision(361);}

									switch (alt361) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:54: ws
											{
											dbg.location(1086,54);
											pushFollow(FOLLOW_ws_in_pseudo7482);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(361);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1086:61: STAR
									{
									dbg.location(1086,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo7488); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(362);}
							dbg.location(1086,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7493); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(363);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1089:19: {...}? sass_interpolation_expression_var
					{
					dbg.location(1089,19);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isScssSource()");
					}dbg.location(1089,37);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_pseudo7556);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(1090,19);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:21: NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(1090,21);
					match(input,NOT,FOLLOW_NOT_in_pseudo7578); if (state.failed) return;dbg.location(1090,25);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:25: ( ws )?
					int alt364=2;
					try { dbg.enterSubRule(364);
					try { dbg.enterDecision(364, decisionCanBacktrack[364]);

					int LA364_0 = input.LA(1);
					if ( (LA364_0==COMMENT||LA364_0==NL||LA364_0==WS) ) {
						alt364=1;
					}
					} finally {dbg.exitDecision(364);}

					switch (alt364) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:25: ws
							{
							dbg.location(1090,25);
							pushFollow(FOLLOW_ws_in_pseudo7580);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(364);}
					dbg.location(1090,29);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7583); if (state.failed) return;dbg.location(1090,36);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:36: ( ws )?
					int alt365=2;
					try { dbg.enterSubRule(365);
					try { dbg.enterDecision(365, decisionCanBacktrack[365]);

					int LA365_0 = input.LA(1);
					if ( (LA365_0==COMMENT||LA365_0==NL||LA365_0==WS) ) {
						alt365=1;
					}
					} finally {dbg.exitDecision(365);}

					switch (alt365) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:36: ws
							{
							dbg.location(1090,36);
							pushFollow(FOLLOW_ws_in_pseudo7585);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(365);}
					dbg.location(1090,40);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:40: ( selectorsGroup ( ws )? )?
					int alt367=2;
					try { dbg.enterSubRule(367);
					try { dbg.enterDecision(367, decisionCanBacktrack[367]);

					int LA367_0 = input.LA(1);
					if ( (LA367_0==AT_SIGN||LA367_0==COLON||(LA367_0 >= DCOLON && LA367_0 <= DOT)||(LA367_0 >= GEN && LA367_0 <= GREATER)||(LA367_0 >= HASH && LA367_0 <= HASH_SYMBOL)||LA367_0==IDENT||LA367_0==LBRACKET||LA367_0==LESS_AND||LA367_0==MINUS||(LA367_0 >= PIPE && LA367_0 <= PLUS)||LA367_0==SASS_EXTEND_ONLY_SELECTOR||LA367_0==STAR||LA367_0==TILDE) ) {
						alt367=1;
					}
					} finally {dbg.exitDecision(367);}

					switch (alt367) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:42: selectorsGroup ( ws )?
							{
							dbg.location(1090,42);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7590);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(1090,57);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:57: ( ws )?
							int alt366=2;
							try { dbg.enterSubRule(366);
							try { dbg.enterDecision(366, decisionCanBacktrack[366]);

							int LA366_0 = input.LA(1);
							if ( (LA366_0==COMMENT||LA366_0==NL||LA366_0==WS) ) {
								alt366=1;
							}
							} finally {dbg.exitDecision(366);}

							switch (alt366) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1090:57: ws
									{
									dbg.location(1090,57);
									pushFollow(FOLLOW_ws_in_pseudo7592);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(366);}

							}
							break;

					}
					} finally {dbg.exitSubRule(367);}
					dbg.location(1090,63);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7597); if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:19: {...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(1091,19);
					if ( !(evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")");
					}dbg.location(1091,98);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:98: ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:100: IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(1091,100);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo7623); if (state.failed) return;dbg.location(1091,106);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:106: ( ws )?
					int alt368=2;
					try { dbg.enterSubRule(368);
					try { dbg.enterDecision(368, decisionCanBacktrack[368]);

					int LA368_0 = input.LA(1);
					if ( (LA368_0==COMMENT||LA368_0==NL||LA368_0==WS) ) {
						alt368=1;
					}
					} finally {dbg.exitDecision(368);}

					switch (alt368) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:106: ws
							{
							dbg.location(1091,106);
							pushFollow(FOLLOW_ws_in_pseudo7625);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(368);}
					dbg.location(1091,110);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7628); if (state.failed) return;dbg.location(1091,117);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:117: ( ws )?
					int alt369=2;
					try { dbg.enterSubRule(369);
					try { dbg.enterDecision(369, decisionCanBacktrack[369]);

					int LA369_0 = input.LA(1);
					if ( (LA369_0==COMMENT||LA369_0==NL||LA369_0==WS) ) {
						alt369=1;
					}
					} finally {dbg.exitDecision(369);}

					switch (alt369) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:117: ws
							{
							dbg.location(1091,117);
							pushFollow(FOLLOW_ws_in_pseudo7630);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(369);}
					dbg.location(1091,121);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:121: ( selectorsGroup ( ws )? )?
					int alt371=2;
					try { dbg.enterSubRule(371);
					try { dbg.enterDecision(371, decisionCanBacktrack[371]);

					int LA371_0 = input.LA(1);
					if ( (LA371_0==AT_SIGN||LA371_0==COLON||(LA371_0 >= DCOLON && LA371_0 <= DOT)||(LA371_0 >= GEN && LA371_0 <= GREATER)||(LA371_0 >= HASH && LA371_0 <= HASH_SYMBOL)||LA371_0==IDENT||LA371_0==LBRACKET||LA371_0==LESS_AND||LA371_0==MINUS||(LA371_0 >= PIPE && LA371_0 <= PLUS)||LA371_0==SASS_EXTEND_ONLY_SELECTOR||LA371_0==STAR||LA371_0==TILDE) ) {
						alt371=1;
					}
					} finally {dbg.exitDecision(371);}

					switch (alt371) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:123: selectorsGroup ( ws )?
							{
							dbg.location(1091,123);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7635);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(1091,138);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:138: ( ws )?
							int alt370=2;
							try { dbg.enterSubRule(370);
							try { dbg.enterDecision(370, decisionCanBacktrack[370]);

							int LA370_0 = input.LA(1);
							if ( (LA370_0==COMMENT||LA370_0==NL||LA370_0==WS) ) {
								alt370=1;
							}
							} finally {dbg.exitDecision(370);}

							switch (alt370) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1091:138: ws
									{
									dbg.location(1091,138);
									pushFollow(FOLLOW_ws_in_pseudo7637);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(370);}

							}
							break;

					}
					} finally {dbg.exitSubRule(371);}
					dbg.location(1091,144);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7642); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					{
					dbg.location(1092,19);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:20: {...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN
					{
					dbg.location(1092,20);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isLessSource()");
					}dbg.location(1092,38);
					if ( !(evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"extend\")");
					}dbg.location(1092,67);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo7669); if (state.failed) return;dbg.location(1092,73);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:73: ( ws )?
					int alt372=2;
					try { dbg.enterSubRule(372);
					try { dbg.enterDecision(372, decisionCanBacktrack[372]);

					int LA372_0 = input.LA(1);
					if ( (LA372_0==COMMENT||LA372_0==NL||LA372_0==WS) ) {
						alt372=1;
					}
					} finally {dbg.exitDecision(372);}

					switch (alt372) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:73: ws
							{
							dbg.location(1092,73);
							pushFollow(FOLLOW_ws_in_pseudo7671);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(372);}
					dbg.location(1092,77);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7674); if (state.failed) return;dbg.location(1092,84);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:84: ( ws )?
					int alt373=2;
					try { dbg.enterSubRule(373);
					try { dbg.enterDecision(373, decisionCanBacktrack[373]);

					int LA373_0 = input.LA(1);
					if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
						alt373=1;
					}
					} finally {dbg.exitDecision(373);}

					switch (alt373) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:84: ws
							{
							dbg.location(1092,84);
							pushFollow(FOLLOW_ws_in_pseudo7676);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(373);}
					dbg.location(1092,88);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:88: ( selectorsGroup )?
					int alt374=2;
					try { dbg.enterSubRule(374);
					try { dbg.enterDecision(374, decisionCanBacktrack[374]);

					int LA374_0 = input.LA(1);
					if ( (LA374_0==AT_SIGN||LA374_0==COLON||(LA374_0 >= DCOLON && LA374_0 <= DOT)||(LA374_0 >= GEN && LA374_0 <= GREATER)||(LA374_0 >= HASH && LA374_0 <= HASH_SYMBOL)||LA374_0==IDENT||LA374_0==LBRACKET||LA374_0==LESS_AND||LA374_0==MINUS||(LA374_0 >= PIPE && LA374_0 <= PLUS)||LA374_0==SASS_EXTEND_ONLY_SELECTOR||LA374_0==STAR||LA374_0==TILDE) ) {
						alt374=1;
					}
					} finally {dbg.exitDecision(374);}

					switch (alt374) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1092:88: selectorsGroup
							{
							dbg.location(1092,88);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7679);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(374);}
					dbg.location(1092,104);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7682); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(375);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1094, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1096:1: propertyDeclaration : ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue |{...}? property ( ws )? COLON ( ws )? ( componentValueOuter )? | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1096, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1097:5: ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue |{...}? property ( ws )? COLON ( ws )? ( componentValueOuter )? | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? )
			int alt387=3;
			try { dbg.enterDecision(387, decisionCanBacktrack[387]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA387_1 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt387=1;
				}
				else if ( (true) ) {
					alt387=3;
				}

				}
				break;
			case IDENT:
				{
				int LA387_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt387=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt387=2;
				}
				else if ( (true) ) {
					alt387=3;
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA387_3 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt387=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt387=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt387=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 387, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA387_4 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt387=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt387=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt387=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 387, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA387_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt387=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt387=2;
				}
				else if ( (true) ) {
					alt387=3;
				}

				}
				break;
			case MINUS:
				{
				int LA387_6 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt387=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt387=2;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt387=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 387, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA387_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt387=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt387=2;
				}
				else if ( (true) ) {
					alt387=3;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA387_8 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt387=1;
				}
				else if ( (((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt387=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt387=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 387, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA387_9 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt387=1;
				}
				else if ( (((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt387=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt387=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 387, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 387, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(387);}

			switch (alt387) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1098:7: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(1098,7);
					if ( !(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")");
					}dbg.location(1098,66);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1098:66: ( STAR )?
					int alt376=2;
					try { dbg.enterSubRule(376);
					try { dbg.enterDecision(376, decisionCanBacktrack[376]);

					int LA376_0 = input.LA(1);
					if ( (LA376_0==STAR) ) {
						alt376=1;
					}
					} finally {dbg.exitDecision(376);}

					switch (alt376) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1098:66: STAR
							{
							dbg.location(1098,66);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration7724); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(376);}
					dbg.location(1098,72);
					pushFollow(FOLLOW_property_in_propertyDeclaration7727);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1098,81);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1098:81: ( ws )?
					int alt377=2;
					try { dbg.enterSubRule(377);
					try { dbg.enterDecision(377, decisionCanBacktrack[377]);

					int LA377_0 = input.LA(1);
					if ( (LA377_0==COMMENT||LA377_0==NL||LA377_0==WS) ) {
						alt377=1;
					}
					} finally {dbg.exitDecision(377);}

					switch (alt377) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1098:81: ws
							{
							dbg.location(1098,81);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7729);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(377);}
					dbg.location(1098,85);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7732); if (state.failed) return;dbg.location(1098,91);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1098:91: ( ws )?
					int alt378=2;
					try { dbg.enterSubRule(378);
					try { dbg.enterDecision(378, decisionCanBacktrack[378]);

					int LA378_0 = input.LA(1);
					if ( (LA378_0==COMMENT||LA378_0==NL||LA378_0==WS) ) {
						alt378=1;
					}
					} finally {dbg.exitDecision(378);}

					switch (alt378) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1098:91: ws
							{
							dbg.location(1098,91);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7734);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(378);}
					dbg.location(1098,95);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration7737);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1099:7: {...}? property ( ws )? COLON ( ws )? ( componentValueOuter )?
					{
					dbg.location(1099,7);
					if ( !(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "tokenNameStartsWith(\"--\")");
					}dbg.location(1099,36);
					pushFollow(FOLLOW_property_in_propertyDeclaration7748);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1099,45);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1099:45: ( ws )?
					int alt379=2;
					try { dbg.enterSubRule(379);
					try { dbg.enterDecision(379, decisionCanBacktrack[379]);

					int LA379_0 = input.LA(1);
					if ( (LA379_0==COMMENT||LA379_0==NL||LA379_0==WS) ) {
						alt379=1;
					}
					} finally {dbg.exitDecision(379);}

					switch (alt379) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1099:45: ws
							{
							dbg.location(1099,45);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7750);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(379);}
					dbg.location(1099,49);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7753); if (state.failed) return;dbg.location(1099,55);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1099:55: ( ws )?
					int alt380=2;
					try { dbg.enterSubRule(380);
					try { dbg.enterDecision(380, decisionCanBacktrack[380]);

					int LA380_0 = input.LA(1);
					if ( (LA380_0==COMMENT||LA380_0==NL||LA380_0==WS) ) {
						alt380=1;
					}
					} finally {dbg.exitDecision(380);}

					switch (alt380) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1099:55: ws
							{
							dbg.location(1099,55);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7755);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(380);}
					dbg.location(1099,59);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1099:59: ( componentValueOuter )?
					int alt381=2;
					try { dbg.enterSubRule(381);
					try { dbg.enterDecision(381, decisionCanBacktrack[381]);

					switch ( input.LA(1) ) {
						case LBRACE:
						case LPAREN:
							{
							alt381=1;
							}
							break;
						case LBRACKET:
							{
							alt381=1;
							}
							break;
						case IDENT:
							{
							alt381=1;
							}
							break;
						case COMMENT:
						case NL:
						case WS:
							{
							alt381=1;
							}
							break;
						case LESS_AND:
							{
							alt381=1;
							}
							break;
						case DOT:
							{
							alt381=1;
							}
							break;
						case HASH:
							{
							alt381=1;
							}
							break;
						case SASS_MIXIN:
							{
							alt381=1;
							}
							break;
						case AT_IDENT:
							{
							alt381=1;
							}
							break;
						case SASS_INCLUDE:
							{
							alt381=1;
							}
							break;
						case SASS_AT_ROOT:
							{
							alt381=1;
							}
							break;
						case GREATER:
						case PLUS:
						case TILDE:
							{
							alt381=1;
							}
							break;
						case SASS_EXTEND_ONLY_SELECTOR:
							{
							int LA381_16 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(isScssSource(),"isScssSource()"),""))) ) {
								alt381=1;
							}
							}
							break;
						case HASH_SYMBOL:
							{
							alt381=1;
							}
							break;
						case DIMENSION:
							{
							int LA381_18 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt381=1;
							}
							}
							break;
						case COLON:
						case DCOLON:
							{
							alt381=1;
							}
							break;
						case MINUS:
							{
							alt381=1;
							}
							break;
						case AT_SIGN:
							{
							alt381=1;
							}
							break;
						case STAR:
							{
							alt381=1;
							}
							break;
						case PIPE:
							{
							alt381=1;
							}
							break;
						case GEN:
							{
							alt381=1;
							}
							break;
						case VARIABLE:
							{
							alt381=1;
							}
							break;
						case SASS_DEBUG:
						case SASS_WARN:
							{
							alt381=1;
							}
							break;
						case SASS_VAR:
							{
							alt381=1;
							}
							break;
						case SUPPORTS_SYM:
							{
							alt381=1;
							}
							break;
						case SASS_IF:
							{
							alt381=1;
							}
							break;
						case SASS_FOR:
							{
							alt381=1;
							}
							break;
						case SASS_EACH:
							{
							alt381=1;
							}
							break;
						case SASS_WHILE:
							{
							alt381=1;
							}
							break;
						case A:
						case ANGLE:
						case B:
						case BEGINS:
						case C:
						case CDC:
						case CDO:
						case COMMA:
						case CONTAINER_SYM:
						case CONTAINS:
						case CP_DOTS:
						case CP_EQ:
						case CP_NOT_EQ:
						case D:
						case DASHMATCH:
						case E:
						case EMS:
						case ENDS:
						case ESCAPE:
						case EXCLAMATION_MARK:
						case EXS:
						case F:
						case FREQ:
						case G:
						case GREATER_OR_EQ:
						case H:
						case HEXCHAR:
						case HEXCHAR_WILDCARD:
						case I:
						case IMPORTANT_SYM:
						case INCLUDES:
						case INVALID:
						case J:
						case K:
						case L:
						case LAYER_SYM:
						case LENGTH:
						case LESS:
						case LESS_JS_STRING:
						case LESS_OR_EQ:
						case LESS_REST:
						case LINE_COMMENT:
						case M:
						case MOZ_DOMAIN:
						case MOZ_REGEXP:
						case MOZ_URL_PREFIX:
						case N:
						case NAME:
						case NMCHAR:
						case NMSTART:
						case NONASCII:
						case NOT:
						case NUMBER:
						case O:
						case OPEQ:
						case P:
						case PERCENTAGE:
						case PERCENTAGE_SYMBOL:
						case Q:
						case R:
						case REM:
						case RESOLUTION:
						case S:
						case SASS_CONTENT:
						case SASS_DEFAULT:
						case SASS_ELSEIF:
						case SASS_ERROR:
						case SASS_GLOBAL:
						case SASS_OPTIONAL:
						case SOLIDUS:
						case STRING:
						case T:
						case TIME:
						case U:
						case UNICODE:
						case URANGE:
						case URI:
						case URL:
						case V:
						case W:
						case X:
						case Y:
						case Z:
							{
							alt381=1;
							}
							break;
						case IMPORT_SYM:
							{
							alt381=1;
							}
							break;
						case PAGE_SYM:
							{
							alt381=1;
							}
							break;
						case FONT_FACE_SYM:
							{
							alt381=1;
							}
							break;
						case MOZ_DOCUMENT_SYM:
							{
							alt381=1;
							}
							break;
						case WEBKIT_KEYFRAMES_SYM:
							{
							alt381=1;
							}
							break;
						case KEYFRAMES_SYM:
							{
							alt381=1;
							}
							break;
						case MEDIA_SYM:
							{
							alt381=1;
							}
							break;
						case SASS_EXTEND:
							{
							alt381=1;
							}
							break;
						case BOTTOMCENTER_SYM:
						case BOTTOMLEFTCORNER_SYM:
						case BOTTOMLEFT_SYM:
						case BOTTOMRIGHTCORNER_SYM:
						case BOTTOMRIGHT_SYM:
						case LEFTBOTTOM_SYM:
						case LEFTMIDDLE_SYM:
						case LEFTTOP_SYM:
						case RIGHTBOTTOM_SYM:
						case RIGHTMIDDLE_SYM:
						case RIGHTTOP_SYM:
						case TOPCENTER_SYM:
						case TOPLEFTCORNER_SYM:
						case TOPLEFT_SYM:
						case TOPRIGHTCORNER_SYM:
						case TOPRIGHT_SYM:
							{
							alt381=1;
							}
							break;
						case CHARSET_SYM:
						case COUNTER_STYLE_SYM:
						case NAMESPACE_SYM:
						case SASS_ELSE:
						case SASS_FORWARD:
						case SASS_FUNCTION:
						case SASS_RETURN:
						case SASS_USE:
							{
							alt381=1;
							}
							break;
					}
					} finally {dbg.exitDecision(381);}

					switch (alt381) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1099:59: componentValueOuter
							{
							dbg.location(1099,59);
							pushFollow(FOLLOW_componentValueOuter_in_propertyDeclaration7758);
							componentValueOuter();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(381);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:7: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(1100,7);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:7: ( STAR )?
					int alt382=2;
					try { dbg.enterSubRule(382);
					try { dbg.enterDecision(382, decisionCanBacktrack[382]);

					int LA382_0 = input.LA(1);
					if ( (LA382_0==STAR) ) {
						alt382=1;
					}
					} finally {dbg.exitDecision(382);}

					switch (alt382) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:7: STAR
							{
							dbg.location(1100,7);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration7767); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(382);}
					dbg.location(1100,13);
					pushFollow(FOLLOW_property_in_propertyDeclaration7770);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1100,22);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:22: ( ws )?
					int alt383=2;
					try { dbg.enterSubRule(383);
					try { dbg.enterDecision(383, decisionCanBacktrack[383]);

					int LA383_0 = input.LA(1);
					if ( (LA383_0==COMMENT||LA383_0==NL||LA383_0==WS) ) {
						alt383=1;
					}
					} finally {dbg.exitDecision(383);}

					switch (alt383) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:22: ws
							{
							dbg.location(1100,22);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7772);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(383);}
					dbg.location(1100,26);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7775); if (state.failed) return;dbg.location(1100,32);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:32: ( ws )?
					int alt384=2;
					try { dbg.enterSubRule(384);
					try { dbg.enterDecision(384, decisionCanBacktrack[384]);

					int LA384_0 = input.LA(1);
					if ( (LA384_0==COMMENT||LA384_0==NL||LA384_0==WS) ) {
						alt384=1;
					}
					} finally {dbg.exitDecision(384);}

					switch (alt384) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:32: ws
							{
							dbg.location(1100,32);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7777);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(384);}
					dbg.location(1100,36);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration7780);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1100,50);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:50: ( ( ws )? prio )?
					int alt386=2;
					try { dbg.enterSubRule(386);
					try { dbg.enterDecision(386, decisionCanBacktrack[386]);

					try {
						isCyclicDecision = true;
						alt386 = dfa386.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(386);}

					switch (alt386) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:51: ( ws )? prio
							{
							dbg.location(1100,51);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:51: ( ws )?
							int alt385=2;
							try { dbg.enterSubRule(385);
							try { dbg.enterDecision(385, decisionCanBacktrack[385]);

							int LA385_0 = input.LA(1);
							if ( (LA385_0==COMMENT||LA385_0==NL||LA385_0==WS) ) {
								alt385=1;
							}
							} finally {dbg.exitDecision(385);}

							switch (alt385) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1100:51: ws
									{
									dbg.location(1100,51);
									pushFollow(FOLLOW_ws_in_propertyDeclaration7783);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(385);}
							dbg.location(1100,55);
							pushFollow(FOLLOW_prio_in_propertyDeclaration7786);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(386);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1102, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1111:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1111, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1112:5: ({...}? cp_expression_list | propertyValue )
			int alt388=2;
			try { dbg.enterDecision(388, decisionCanBacktrack[388]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt388=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA388_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case IDENT:
				{
				int LA388_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case VARIABLE:
				{
				int LA388_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case LBRACKET:
				{
				int LA388_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA388_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case URANGE:
				{
				int LA388_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA388_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA388_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case EMS:
				{
				int LA388_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case REM:
				{
				int LA388_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case EXS:
				{
				int LA388_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA388_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case TIME:
				{
				int LA388_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case FREQ:
				{
				int LA388_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA388_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA388_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case STRING:
				{
				int LA388_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case TILDE:
				{
				int LA388_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA388_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case GEN:
				{
				int LA388_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case URI:
				{
				int LA388_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case HASH:
				{
				int LA388_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (true) ) {
					alt388=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA388_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt388=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt388=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 388, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA388_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt388=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt388=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 388, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA388_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt388=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt388=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 388, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA388_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt388=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt388=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 388, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA388_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt388=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt388=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 388, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA388_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt388=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 388, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 388, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(388);}

			switch (alt388) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1113:5: {...}? cp_expression_list
					{
					dbg.location(1113,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(1113,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue7826);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1114:7: propertyValue
					{
					dbg.location(1114,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue7834);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1115, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1117:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1117, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1118:2: ( expression )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1119:9: expression
			{
			dbg.location(1119,9);
			pushFollow(FOLLOW_expression_in_propertyValue7856);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1120, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1123:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1123, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1125:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1126:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(1126,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1126:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt389=0;
			try { dbg.enterSubRule(389);

			loop389:
			while (true) {
				int alt389=2;
				try { dbg.enterDecision(389, decisionCanBacktrack[389]);

				int LA389_0 = input.LA(1);
				if ( ((LA389_0 >= A && LA389_0 <= ANGLE)||(LA389_0 >= AT_SIGN && LA389_0 <= LAYER_SYM)||(LA389_0 >= LBRACKET && LA389_0 <= R)||(LA389_0 >= RBRACKET && LA389_0 <= SASS_USE)||(LA389_0 >= SASS_WARN && LA389_0 <= SASS_WHILE)||(LA389_0 >= STRING && LA389_0 <= Z)) ) {
					alt389=1;
				}

				} finally {dbg.exitDecision(389);}

				switch (alt389) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
					{
					dbg.location(1126,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_USE)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt389 >= 1 ) break loop389;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(389, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt389++;
			}
			} finally {dbg.exitSubRule(389);}
			dbg.location(1126,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1127, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "preservedToken"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1129:1: preservedToken : ~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET ) ;
	public final void preservedToken() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "preservedToken");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1129, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1129:15: (~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(1129,15);
			if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LINE_COMMENT)||(input.LA(1) >= M && input.LA(1) <= R)||(input.LA(1) >= REM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1129, 75);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "preservedToken");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "preservedToken"



	// $ANTLR start "preservedTokenTopLevel"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1131:1: preservedTokenTopLevel : ~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET | SEMI ) ;
	public final void preservedTokenTopLevel() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "preservedTokenTopLevel");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1131, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1131:23: (~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET | SEMI ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(1131,23);
			if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LINE_COMMENT)||(input.LA(1) >= M && input.LA(1) <= R)||(input.LA(1) >= REM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1131, 91);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "preservedTokenTopLevel");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "preservedTokenTopLevel"



	// $ANTLR start "braceBlock2"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1134:1: braceBlock2 : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void braceBlock2() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "braceBlock2");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1134, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1134:12: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1135:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1135,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_braceBlock28017); if (state.failed) return;dbg.location(1135,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1135:12: ( ws )?
			int alt390=2;
			try { dbg.enterSubRule(390);
			try { dbg.enterDecision(390, decisionCanBacktrack[390]);

			int LA390_0 = input.LA(1);
			if ( (LA390_0==COMMENT||LA390_0==NL||LA390_0==WS) ) {
				alt390=1;
			}
			} finally {dbg.exitDecision(390);}

			switch (alt390) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1135:12: ws
					{
					dbg.location(1135,12);
					pushFollow(FOLLOW_ws_in_braceBlock28019);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(390);}
			dbg.location(1136,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1136:9: ( declarations )?
			int alt391=2;
			try { dbg.enterSubRule(391);
			try { dbg.enterDecision(391, decisionCanBacktrack[391]);

			int LA391_0 = input.LA(1);
			if ( ((LA391_0 >= AT_IDENT && LA391_0 <= AT_SIGN)||(LA391_0 >= BOTTOMCENTER_SYM && LA391_0 <= BOTTOMRIGHT_SYM)||(LA391_0 >= CHARSET_SYM && LA391_0 <= COLON)||LA391_0==CONTAINER_SYM||LA391_0==COUNTER_STYLE_SYM||(LA391_0 >= DCOLON && LA391_0 <= DOT)||LA391_0==FONT_FACE_SYM||(LA391_0 >= GEN && LA391_0 <= GREATER)||(LA391_0 >= HASH && LA391_0 <= HASH_SYMBOL)||LA391_0==IDENT||LA391_0==IMPORT_SYM||LA391_0==KEYFRAMES_SYM||LA391_0==LAYER_SYM||(LA391_0 >= LBRACKET && LA391_0 <= LEFTTOP_SYM)||LA391_0==LESS_AND||(LA391_0 >= MEDIA_SYM && LA391_0 <= MOZ_DOCUMENT_SYM)||LA391_0==NAMESPACE_SYM||LA391_0==PAGE_SYM||(LA391_0 >= PIPE && LA391_0 <= PLUS)||(LA391_0 >= RIGHTBOTTOM_SYM && LA391_0 <= RIGHTTOP_SYM)||(LA391_0 >= SASS_AT_ROOT && LA391_0 <= SASS_DEBUG)||(LA391_0 >= SASS_EACH && LA391_0 <= SASS_ELSE)||(LA391_0 >= SASS_ERROR && LA391_0 <= SASS_FUNCTION)||(LA391_0 >= SASS_IF && LA391_0 <= SASS_MIXIN)||(LA391_0 >= SASS_RETURN && LA391_0 <= SEMI)||LA391_0==STAR||LA391_0==SUPPORTS_SYM||LA391_0==TILDE||(LA391_0 >= TOPCENTER_SYM && LA391_0 <= TOPRIGHT_SYM)||LA391_0==VARIABLE||LA391_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt391=1;
			}
			} finally {dbg.exitDecision(391);}

			switch (alt391) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1136:9: declarations
					{
					dbg.location(1136,9);
					pushFollow(FOLLOW_declarations_in_braceBlock28030);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(391);}
			dbg.location(1137,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_braceBlock28037); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1138, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "braceBlock2");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "braceBlock2"



	// $ANTLR start "braceBlock"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1141:1: braceBlock : LBRACE ( componentValue )* RBRACE ;
	public final void braceBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "braceBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1141, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1141:11: ( LBRACE ( componentValue )* RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1141:13: LBRACE ( componentValue )* RBRACE
			{
			dbg.location(1141,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_braceBlock8050); if (state.failed) return;dbg.location(1141,20);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1141:20: ( componentValue )*
			try { dbg.enterSubRule(392);

			loop392:
			while (true) {
				int alt392=2;
				try { dbg.enterDecision(392, decisionCanBacktrack[392]);

				int LA392_0 = input.LA(1);
				if ( ((LA392_0 >= A && LA392_0 <= R)||(LA392_0 >= REM && LA392_0 <= RIGHTTOP_SYM)||(LA392_0 >= S && LA392_0 <= Z)) ) {
					alt392=1;
				}

				} finally {dbg.exitDecision(392);}

				switch (alt392) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1141:20: componentValue
					{
					dbg.location(1141,20);
					pushFollow(FOLLOW_componentValue_in_braceBlock8052);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop392;
				}
			}
			} finally {dbg.exitSubRule(392);}
			dbg.location(1141,36);
			match(input,RBRACE,FOLLOW_RBRACE_in_braceBlock8055); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1141, 41);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "braceBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "braceBlock"



	// $ANTLR start "bracketBlock"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1143:1: bracketBlock : LBRACKET ( componentValue )+ RBRACKET ;
	public final void bracketBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bracketBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1143, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1143:13: ( LBRACKET ( componentValue )+ RBRACKET )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1143:15: LBRACKET ( componentValue )+ RBRACKET
			{
			dbg.location(1143,15);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_bracketBlock8062); if (state.failed) return;dbg.location(1143,24);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1143:24: ( componentValue )+
			int cnt393=0;
			try { dbg.enterSubRule(393);

			loop393:
			while (true) {
				int alt393=2;
				try { dbg.enterDecision(393, decisionCanBacktrack[393]);

				int LA393_0 = input.LA(1);
				if ( ((LA393_0 >= A && LA393_0 <= R)||(LA393_0 >= REM && LA393_0 <= RIGHTTOP_SYM)||(LA393_0 >= S && LA393_0 <= Z)) ) {
					alt393=1;
				}

				} finally {dbg.exitDecision(393);}

				switch (alt393) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1143:24: componentValue
					{
					dbg.location(1143,24);
					pushFollow(FOLLOW_componentValue_in_bracketBlock8064);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					if ( cnt393 >= 1 ) break loop393;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(393, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt393++;
			}
			} finally {dbg.exitSubRule(393);}
			dbg.location(1143,40);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_bracketBlock8067); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1143, 47);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bracketBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bracketBlock"



	// $ANTLR start "parenBlock"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1145:1: parenBlock : LPAREN ( componentValue )+ RPAREN ;
	public final void parenBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "parenBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1145, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1145:11: ( LPAREN ( componentValue )+ RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1145:13: LPAREN ( componentValue )+ RPAREN
			{
			dbg.location(1145,13);
			match(input,LPAREN,FOLLOW_LPAREN_in_parenBlock8074); if (state.failed) return;dbg.location(1145,20);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1145:20: ( componentValue )+
			int cnt394=0;
			try { dbg.enterSubRule(394);

			loop394:
			while (true) {
				int alt394=2;
				try { dbg.enterDecision(394, decisionCanBacktrack[394]);

				int LA394_0 = input.LA(1);
				if ( ((LA394_0 >= A && LA394_0 <= R)||(LA394_0 >= REM && LA394_0 <= RIGHTTOP_SYM)||(LA394_0 >= S && LA394_0 <= Z)) ) {
					alt394=1;
				}

				} finally {dbg.exitDecision(394);}

				switch (alt394) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1145:20: componentValue
					{
					dbg.location(1145,20);
					pushFollow(FOLLOW_componentValue_in_parenBlock8076);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					if ( cnt394 >= 1 ) break loop394;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(394, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt394++;
			}
			} finally {dbg.exitSubRule(394);}
			dbg.location(1145,36);
			match(input,RPAREN,FOLLOW_RPAREN_in_parenBlock8079); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1145, 41);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "parenBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "parenBlock"



	// $ANTLR start "componentValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:1: componentValue : ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedToken );
	public final void componentValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "componentValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1147, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:15: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedToken )
			int alt395=5;
			try { dbg.enterDecision(395, decisionCanBacktrack[395]);

			switch ( input.LA(1) ) {
			case LPAREN:
				{
				alt395=1;
				}
				break;
			case LBRACE:
				{
				alt395=2;
				}
				break;
			case LBRACKET:
				{
				alt395=3;
				}
				break;
			case IDENT:
				{
				int LA395_4 = input.LA(2);
				if ( (synpred50_Css3()) ) {
					alt395=4;
				}
				else if ( (true) ) {
					alt395=5;
				}

				}
				break;
			case A:
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case B:
			case BEGINS:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case C:
			case CDC:
			case CDO:
			case CHARSET_SYM:
			case COLON:
			case COMMA:
			case COMMENT:
			case CONTAINER_SYM:
			case CONTAINS:
			case COUNTER_STYLE_SYM:
			case CP_DOTS:
			case CP_EQ:
			case CP_NOT_EQ:
			case D:
			case DASHMATCH:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case E:
			case EMS:
			case ENDS:
			case ESCAPE:
			case EXCLAMATION_MARK:
			case EXS:
			case F:
			case FONT_FACE_SYM:
			case FREQ:
			case G:
			case GEN:
			case GREATER:
			case GREATER_OR_EQ:
			case H:
			case HASH:
			case HASH_SYMBOL:
			case HEXCHAR:
			case HEXCHAR_WILDCARD:
			case I:
			case IMPORTANT_SYM:
			case IMPORT_SYM:
			case INCLUDES:
			case INVALID:
			case J:
			case K:
			case KEYFRAMES_SYM:
			case L:
			case LAYER_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS:
			case LESS_AND:
			case LESS_JS_STRING:
			case LESS_OR_EQ:
			case LESS_REST:
			case LINE_COMMENT:
			case M:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case MOZ_DOMAIN:
			case MOZ_REGEXP:
			case MOZ_URL_PREFIX:
			case N:
			case NAME:
			case NAMESPACE_SYM:
			case NL:
			case NMCHAR:
			case NMSTART:
			case NONASCII:
			case NOT:
			case NUMBER:
			case O:
			case OPEQ:
			case P:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PIPE:
			case PLUS:
			case Q:
			case R:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case S:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_DEFAULT:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ELSEIF:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_GLOBAL:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_OPTIONAL:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case SEMI:
			case SOLIDUS:
			case STAR:
			case STRING:
			case SUPPORTS_SYM:
			case T:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case U:
			case UNICODE:
			case URANGE:
			case URI:
			case URL:
			case V:
			case VARIABLE:
			case W:
			case WEBKIT_KEYFRAMES_SYM:
			case WS:
			case X:
			case Y:
			case Z:
				{
				alt395=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 395, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(395);}

			switch (alt395) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:17: parenBlock
					{
					dbg.location(1147,17);
					pushFollow(FOLLOW_parenBlock_in_componentValue8086);
					parenBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:30: braceBlock
					{
					dbg.location(1147,30);
					pushFollow(FOLLOW_braceBlock_in_componentValue8090);
					braceBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:43: bracketBlock
					{
					dbg.location(1147,43);
					pushFollow(FOLLOW_bracketBlock_in_componentValue8094);
					bracketBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:58: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1147,87);
					pushFollow(FOLLOW_function_in_componentValue8109);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:98: preservedToken
					{
					dbg.location(1147,98);
					pushFollow(FOLLOW_preservedToken_in_componentValue8113);
					preservedToken();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1147, 111);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "componentValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "componentValue"



	// $ANTLR start "componentValueOuter"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:1: componentValueOuter : ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )* ;
	public final void componentValueOuter() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "componentValueOuter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1149, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:20: ( ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:22: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )*
			{
			dbg.location(1149,22);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:22: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel )
			int alt396=5;
			try { dbg.enterSubRule(396);
			try { dbg.enterDecision(396, decisionCanBacktrack[396]);

			switch ( input.LA(1) ) {
			case LPAREN:
				{
				alt396=1;
				}
				break;
			case LBRACE:
				{
				alt396=2;
				}
				break;
			case LBRACKET:
				{
				alt396=3;
				}
				break;
			case IDENT:
				{
				int LA396_4 = input.LA(2);
				if ( (synpred51_Css3()) ) {
					alt396=4;
				}
				else if ( (true) ) {
					alt396=5;
				}

				}
				break;
			case A:
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case B:
			case BEGINS:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case C:
			case CDC:
			case CDO:
			case CHARSET_SYM:
			case COLON:
			case COMMA:
			case COMMENT:
			case CONTAINER_SYM:
			case CONTAINS:
			case COUNTER_STYLE_SYM:
			case CP_DOTS:
			case CP_EQ:
			case CP_NOT_EQ:
			case D:
			case DASHMATCH:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case E:
			case EMS:
			case ENDS:
			case ESCAPE:
			case EXCLAMATION_MARK:
			case EXS:
			case F:
			case FONT_FACE_SYM:
			case FREQ:
			case G:
			case GEN:
			case GREATER:
			case GREATER_OR_EQ:
			case H:
			case HASH:
			case HASH_SYMBOL:
			case HEXCHAR:
			case HEXCHAR_WILDCARD:
			case I:
			case IMPORTANT_SYM:
			case IMPORT_SYM:
			case INCLUDES:
			case INVALID:
			case J:
			case K:
			case KEYFRAMES_SYM:
			case L:
			case LAYER_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS:
			case LESS_AND:
			case LESS_JS_STRING:
			case LESS_OR_EQ:
			case LESS_REST:
			case LINE_COMMENT:
			case M:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case MOZ_DOMAIN:
			case MOZ_REGEXP:
			case MOZ_URL_PREFIX:
			case N:
			case NAME:
			case NAMESPACE_SYM:
			case NL:
			case NMCHAR:
			case NMSTART:
			case NONASCII:
			case NOT:
			case NUMBER:
			case O:
			case OPEQ:
			case P:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PIPE:
			case PLUS:
			case Q:
			case R:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case S:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_DEFAULT:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ELSEIF:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_GLOBAL:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_OPTIONAL:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case SOLIDUS:
			case STAR:
			case STRING:
			case SUPPORTS_SYM:
			case T:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case U:
			case UNICODE:
			case URANGE:
			case URI:
			case URL:
			case V:
			case VARIABLE:
			case W:
			case WEBKIT_KEYFRAMES_SYM:
			case WS:
			case X:
			case Y:
			case Z:
				{
				alt396=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 396, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(396);}

			switch (alt396) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:23: parenBlock
					{
					dbg.location(1149,23);
					pushFollow(FOLLOW_parenBlock_in_componentValueOuter8121);
					parenBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:36: braceBlock
					{
					dbg.location(1149,36);
					pushFollow(FOLLOW_braceBlock_in_componentValueOuter8125);
					braceBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:49: bracketBlock
					{
					dbg.location(1149,49);
					pushFollow(FOLLOW_bracketBlock_in_componentValueOuter8129);
					bracketBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:64: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1149,93);
					pushFollow(FOLLOW_function_in_componentValueOuter8144);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:104: preservedTokenTopLevel
					{
					dbg.location(1149,104);
					pushFollow(FOLLOW_preservedTokenTopLevel_in_componentValueOuter8148);
					preservedTokenTopLevel();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(396);}
			dbg.location(1149,128);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:128: ( componentValueOuter )*
			try { dbg.enterSubRule(397);

			loop397:
			while (true) {
				int alt397=2;
				try { dbg.enterDecision(397, decisionCanBacktrack[397]);

				switch ( input.LA(1) ) {
				case COMMENT:
				case NL:
				case WS:
					{
					alt397=1;
					}
					break;
				case LESS_AND:
					{
					alt397=1;
					}
					break;
				case DOT:
					{
					alt397=1;
					}
					break;
				case HASH:
					{
					alt397=1;
					}
					break;
				case SASS_MIXIN:
					{
					alt397=1;
					}
					break;
				case AT_IDENT:
					{
					alt397=1;
					}
					break;
				case SASS_INCLUDE:
					{
					alt397=1;
					}
					break;
				case SASS_AT_ROOT:
					{
					alt397=1;
					}
					break;
				case GREATER:
				case PLUS:
				case TILDE:
					{
					alt397=1;
					}
					break;
				case SASS_EXTEND_ONLY_SELECTOR:
					{
					alt397=1;
					}
					break;
				case HASH_SYMBOL:
					{
					alt397=1;
					}
					break;
				case DIMENSION:
					{
					alt397=1;
					}
					break;
				case LBRACKET:
					{
					alt397=1;
					}
					break;
				case COLON:
				case DCOLON:
					{
					alt397=1;
					}
					break;
				case IDENT:
					{
					alt397=1;
					}
					break;
				case AT_SIGN:
					{
					alt397=1;
					}
					break;
				case MINUS:
					{
					alt397=1;
					}
					break;
				case STAR:
					{
					alt397=1;
					}
					break;
				case PIPE:
					{
					alt397=1;
					}
					break;
				case GEN:
					{
					alt397=1;
					}
					break;
				case VARIABLE:
					{
					alt397=1;
					}
					break;
				case SASS_DEBUG:
				case SASS_WARN:
					{
					alt397=1;
					}
					break;
				case SASS_VAR:
					{
					alt397=1;
					}
					break;
				case SASS_IF:
					{
					alt397=1;
					}
					break;
				case SASS_FOR:
					{
					alt397=1;
					}
					break;
				case SASS_EACH:
					{
					alt397=1;
					}
					break;
				case SASS_WHILE:
					{
					alt397=1;
					}
					break;
				case SASS_CONTENT:
					{
					alt397=1;
					}
					break;
				case IMPORT_SYM:
					{
					alt397=1;
					}
					break;
				case PAGE_SYM:
					{
					alt397=1;
					}
					break;
				case FONT_FACE_SYM:
					{
					alt397=1;
					}
					break;
				case MOZ_DOCUMENT_SYM:
					{
					alt397=1;
					}
					break;
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt397=1;
					}
					break;
				case KEYFRAMES_SYM:
					{
					alt397=1;
					}
					break;
				case MEDIA_SYM:
					{
					alt397=1;
					}
					break;
				case SASS_EXTEND:
					{
					alt397=1;
					}
					break;
				case SUPPORTS_SYM:
					{
					alt397=1;
					}
					break;
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
					{
					alt397=1;
					}
					break;
				case CHARSET_SYM:
				case COUNTER_STYLE_SYM:
				case NAMESPACE_SYM:
				case SASS_ELSE:
				case SASS_FORWARD:
				case SASS_FUNCTION:
				case SASS_RETURN:
				case SASS_USE:
					{
					alt397=1;
					}
					break;
				case LPAREN:
					{
					alt397=1;
					}
					break;
				case LBRACE:
					{
					alt397=1;
					}
					break;
				case A:
				case ANGLE:
				case B:
				case BEGINS:
				case C:
				case CDC:
				case CDO:
				case COMMA:
				case CONTAINER_SYM:
				case CONTAINS:
				case CP_DOTS:
				case CP_EQ:
				case CP_NOT_EQ:
				case D:
				case DASHMATCH:
				case E:
				case EMS:
				case ENDS:
				case ESCAPE:
				case EXCLAMATION_MARK:
				case EXS:
				case F:
				case FREQ:
				case G:
				case GREATER_OR_EQ:
				case H:
				case HEXCHAR:
				case HEXCHAR_WILDCARD:
				case I:
				case IMPORTANT_SYM:
				case INCLUDES:
				case INVALID:
				case J:
				case K:
				case L:
				case LAYER_SYM:
				case LENGTH:
				case LESS:
				case LESS_JS_STRING:
				case LESS_OR_EQ:
				case LESS_REST:
				case LINE_COMMENT:
				case M:
				case MOZ_DOMAIN:
				case MOZ_REGEXP:
				case MOZ_URL_PREFIX:
				case N:
				case NAME:
				case NMCHAR:
				case NMSTART:
				case NONASCII:
				case NOT:
				case NUMBER:
				case O:
				case OPEQ:
				case P:
				case PERCENTAGE:
				case PERCENTAGE_SYMBOL:
				case Q:
				case R:
				case REM:
				case RESOLUTION:
				case S:
				case SASS_DEFAULT:
				case SASS_ELSEIF:
				case SASS_ERROR:
				case SASS_GLOBAL:
				case SASS_OPTIONAL:
				case SOLIDUS:
				case STRING:
				case T:
				case TIME:
				case U:
				case UNICODE:
				case URANGE:
				case URI:
				case URL:
				case V:
				case W:
				case X:
				case Y:
				case Z:
					{
					alt397=1;
					}
					break;
				}
				} finally {dbg.exitDecision(397);}

				switch (alt397) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:128: componentValueOuter
					{
					dbg.location(1149,128);
					pushFollow(FOLLOW_componentValueOuter_in_componentValueOuter8151);
					componentValueOuter();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop397;
				}
			}
			} finally {dbg.exitSubRule(397);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1149, 147);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "componentValueOuter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "componentValueOuter"



	// $ANTLR start "syncToDeclarationsRule"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1153:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1153, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1158:6: ()
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1159:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1159, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1161:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1161, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1165:6: ()
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1166:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1166, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1168:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1168, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1172:6: ( SEMI )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1173:13: SEMI
			{
			dbg.location(1173,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI8240); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1174, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1177:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1177, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1181:6: ()
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1182:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1182, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1184:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1184, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1185:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1185:7: IMPORTANT_SYM
			{
			dbg.location(1185,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio8285); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1186, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1188:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1188, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(1189,7);
			pushFollow(FOLLOW_term_in_expression8302);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(1189,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(401);

			loop401:
			while (true) {
				int alt401=2;
				try { dbg.enterDecision(401, decisionCanBacktrack[401]);

				try {
					isCyclicDecision = true;
					alt401 = dfa401.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(401);}

				switch (alt401) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(1189,66);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt400=3;
					try { dbg.enterSubRule(400);
					try { dbg.enterDecision(400, decisionCanBacktrack[400]);

					try {
						isCyclicDecision = true;
						alt400 = dfa400.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(400);}

					switch (alt400) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:68: ws
							{
							dbg.location(1189,68);
							pushFollow(FOLLOW_ws_in_expression8334);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(1189,73);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:74: ( ws )? operator ( ws )?
							{
							dbg.location(1189,74);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:74: ( ws )?
							int alt398=2;
							try { dbg.enterSubRule(398);
							try { dbg.enterDecision(398, decisionCanBacktrack[398]);

							int LA398_0 = input.LA(1);
							if ( (LA398_0==COMMENT||LA398_0==NL||LA398_0==WS) ) {
								alt398=1;
							}
							} finally {dbg.exitDecision(398);}

							switch (alt398) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:74: ws
									{
									dbg.location(1189,74);
									pushFollow(FOLLOW_ws_in_expression8339);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(398);}
							dbg.location(1189,78);
							pushFollow(FOLLOW_operator_in_expression8342);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1189,87);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:87: ( ws )?
							int alt399=2;
							try { dbg.enterSubRule(399);
							try { dbg.enterDecision(399, decisionCanBacktrack[399]);

							int LA399_0 = input.LA(1);
							if ( (LA399_0==COMMENT||LA399_0==NL||LA399_0==WS) ) {
								alt399=1;
							}
							} finally {dbg.exitDecision(399);}

							switch (alt399) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:87: ws
									{
									dbg.location(1189,87);
									pushFollow(FOLLOW_ws_in_expression8344);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(399);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(400);}
					dbg.location(1189,109);
					pushFollow(FOLLOW_term_in_expression8353);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop401;
				}
			}
			} finally {dbg.exitSubRule(401);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1190, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1192:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1192, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1193:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1194:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			{
			dbg.location(1194,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1194:5: ( unaryOperator ( ws )? )?
			int alt403=2;
			try { dbg.enterSubRule(403);
			try { dbg.enterDecision(403, decisionCanBacktrack[403]);

			int LA403_0 = input.LA(1);
			if ( (LA403_0==MINUS||LA403_0==PLUS) ) {
				alt403=1;
			}
			} finally {dbg.exitDecision(403);}

			switch (alt403) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1194:7: unaryOperator ( ws )?
					{
					dbg.location(1194,7);
					pushFollow(FOLLOW_unaryOperator_in_term8378);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(1194,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1194:21: ( ws )?
					int alt402=2;
					try { dbg.enterSubRule(402);
					try { dbg.enterDecision(402, decisionCanBacktrack[402]);

					int LA402_0 = input.LA(1);
					if ( (LA402_0==COMMENT||LA402_0==NL||LA402_0==WS) ) {
						alt402=1;
					}
					} finally {dbg.exitDecision(402);}

					switch (alt402) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1194:21: ws
							{
							dbg.location(1194,21);
							pushFollow(FOLLOW_ws_in_term8380);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(402);}

					}
					break;

			}
			} finally {dbg.exitSubRule(403);}
			dbg.location(1195,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1195:5: ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			int alt407=27;
			try { dbg.enterSubRule(407);
			try { dbg.enterDecision(407, decisionCanBacktrack[407]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA407_1 = input.LA(2);
				if ( (synpred53_Css3()) ) {
					alt407=1;
				}
				else if ( (evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
					alt407=3;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt407=23;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 407, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				alt407=2;
				}
				break;
			case LBRACKET:
				{
				alt407=4;
				}
				break;
			case NUMBER:
				{
				alt407=5;
				}
				break;
			case URANGE:
				{
				alt407=6;
				}
				break;
			case PERCENTAGE:
				{
				alt407=7;
				}
				break;
			case LENGTH:
				{
				alt407=8;
				}
				break;
			case EMS:
				{
				alt407=9;
				}
				break;
			case REM:
				{
				alt407=10;
				}
				break;
			case EXS:
				{
				alt407=11;
				}
				break;
			case ANGLE:
				{
				alt407=12;
				}
				break;
			case TIME:
				{
				alt407=13;
				}
				break;
			case FREQ:
				{
				alt407=14;
				}
				break;
			case RESOLUTION:
				{
				alt407=15;
				}
				break;
			case DIMENSION:
				{
				alt407=16;
				}
				break;
			case STRING:
				{
				alt407=17;
				}
				break;
			case TILDE:
				{
				alt407=18;
				}
				break;
			case LESS_JS_STRING:
				{
				alt407=19;
				}
				break;
			case GEN:
				{
				alt407=20;
				}
				break;
			case URI:
				{
				alt407=21;
				}
				break;
			case HASH:
				{
				alt407=22;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt407=23;
				}
				break;
			case LESS_AND:
				{
				alt407=24;
				}
				break;
			case HASH_SYMBOL:
				{
				alt407=25;
				}
				break;
			case AT_SIGN:
				{
				alt407=26;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt407=27;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 407, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(407);}

			switch (alt407) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1196:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1196,36);
					pushFollow(FOLLOW_function_in_term8409);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1197:11: VARIABLE
					{
					dbg.location(1197,11);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_term8422); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1198:11: {...}? IDENT
					{
					dbg.location(1198,11);
					if ( !(evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "! (isScssSource() && tokenNameEquals2(\".\"))");
					}dbg.location(1198,58);
					match(input,IDENT,FOLLOW_IDENT_in_term8436); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					{
					dbg.location(1199,11);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:12: LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET
					{
					dbg.location(1199,12);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_term8449); if (state.failed) return;dbg.location(1199,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:21: ( WS )?
					int alt404=2;
					try { dbg.enterSubRule(404);
					try { dbg.enterDecision(404, decisionCanBacktrack[404]);

					int LA404_0 = input.LA(1);
					if ( (LA404_0==WS) ) {
						alt404=1;
					}
					} finally {dbg.exitDecision(404);}

					switch (alt404) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:21: WS
							{
							dbg.location(1199,21);
							match(input,WS,FOLLOW_WS_in_term8451); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(404);}
					dbg.location(1199,25);
					match(input,IDENT,FOLLOW_IDENT_in_term8454); if (state.failed) return;dbg.location(1199,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:31: ( WS IDENT )*
					try { dbg.enterSubRule(405);

					loop405:
					while (true) {
						int alt405=2;
						try { dbg.enterDecision(405, decisionCanBacktrack[405]);

						int LA405_0 = input.LA(1);
						if ( (LA405_0==WS) ) {
							int LA405_1 = input.LA(2);
							if ( (LA405_1==IDENT) ) {
								alt405=1;
							}

						}

						} finally {dbg.exitDecision(405);}

						switch (alt405) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:32: WS IDENT
							{
							dbg.location(1199,32);
							match(input,WS,FOLLOW_WS_in_term8457); if (state.failed) return;dbg.location(1199,35);
							match(input,IDENT,FOLLOW_IDENT_in_term8459); if (state.failed) return;
							}
							break;

						default :
							break loop405;
						}
					}
					} finally {dbg.exitSubRule(405);}
					dbg.location(1199,43);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:43: ( WS )?
					int alt406=2;
					try { dbg.enterSubRule(406);
					try { dbg.enterDecision(406, decisionCanBacktrack[406]);

					int LA406_0 = input.LA(1);
					if ( (LA406_0==WS) ) {
						alt406=1;
					}
					} finally {dbg.exitDecision(406);}

					switch (alt406) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1199:43: WS
							{
							dbg.location(1199,43);
							match(input,WS,FOLLOW_WS_in_term8463); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(406);}
					dbg.location(1199,47);
					match(input,RBRACKET,FOLLOW_RBRACKET_in_term8466); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1200:11: NUMBER
					{
					dbg.location(1200,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term8479); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1201:11: URANGE
					{
					dbg.location(1201,11);
					match(input,URANGE,FOLLOW_URANGE_in_term8491); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1202:11: PERCENTAGE
					{
					dbg.location(1202,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term8503); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1203:11: LENGTH
					{
					dbg.location(1203,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term8515); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1204:11: EMS
					{
					dbg.location(1204,11);
					match(input,EMS,FOLLOW_EMS_in_term8527); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1205:11: REM
					{
					dbg.location(1205,11);
					match(input,REM,FOLLOW_REM_in_term8539); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1206:11: EXS
					{
					dbg.location(1206,11);
					match(input,EXS,FOLLOW_EXS_in_term8551); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1207:11: ANGLE
					{
					dbg.location(1207,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term8563); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1208:11: TIME
					{
					dbg.location(1208,11);
					match(input,TIME,FOLLOW_TIME_in_term8575); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1209:11: FREQ
					{
					dbg.location(1209,11);
					match(input,FREQ,FOLLOW_FREQ_in_term8587); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1210:11: RESOLUTION
					{
					dbg.location(1210,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term8599); if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1211:11: DIMENSION
					{
					dbg.location(1211,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term8611); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1212:11: STRING
					{
					dbg.location(1212,11);
					match(input,STRING,FOLLOW_STRING_in_term8628); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1213:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(1213,11);
					match(input,TILDE,FOLLOW_TILDE_in_term8640); if (state.failed) return;dbg.location(1213,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1214:11: LESS_JS_STRING
					{
					dbg.location(1214,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term8663); if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1215:11: GEN
					{
					dbg.location(1215,11);
					match(input,GEN,FOLLOW_GEN_in_term8678); if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1216:11: URI
					{
					dbg.location(1216,11);
					match(input,URI,FOLLOW_URI_in_term8690); if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1217:11: hexColor
					{
					dbg.location(1217,11);
					pushFollow(FOLLOW_hexColor_in_term8702);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 23 :
					dbg.enterAlt(23);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1218:11: {...}? cp_variable
					{
					dbg.location(1218,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1218,40);
					pushFollow(FOLLOW_cp_variable_in_term8716);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 24 :
					dbg.enterAlt(24);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1219:11: {...}? LESS_AND
					{
					dbg.location(1219,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1219,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_term8730); if (state.failed) return;
					}
					break;
				case 25 :
					dbg.enterAlt(25);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1220:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(1220,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1220,29);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term8744);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 26 :
					dbg.enterAlt(26);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1221:11: {...}? less_selector_interpolation
					{
					dbg.location(1221,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isLessSource()");
					}dbg.location(1221,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_term8758);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 27 :
					dbg.enterAlt(27);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1222:11: {...}? cp_term_symbol
					{
					dbg.location(1222,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1222,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term8772);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(407);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1224, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1229:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1229, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1230:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1230:7: PERCENTAGE_SYMBOL
			{
			dbg.location(1230,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol8799); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1231, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1233:1: function : functionName LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1233, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1234:2: ( functionName LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1234:5: functionName LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(1234,5);
			pushFollow(FOLLOW_functionName_in_function8815);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(1235,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function8819); if (state.failed) return;dbg.location(1235,10);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1235:10: ( ws )?
			int alt408=2;
			try { dbg.enterSubRule(408);
			try { dbg.enterDecision(408, decisionCanBacktrack[408]);

			int LA408_0 = input.LA(1);
			if ( (LA408_0==COMMENT||LA408_0==NL||LA408_0==WS) ) {
				alt408=1;
			}
			} finally {dbg.exitDecision(408);}

			switch (alt408) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1235:10: ws
					{
					dbg.location(1235,10);
					pushFollow(FOLLOW_ws_in_function8821);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(408);}
			dbg.location(1236,3);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1236:3: ( fnAttributes |)
			int alt409=2;
			try { dbg.enterSubRule(409);
			try { dbg.enterDecision(409, decisionCanBacktrack[409]);

			int LA409_0 = input.LA(1);
			if ( ((LA409_0 >= ANGLE && LA409_0 <= AT_SIGN)||(LA409_0 >= BOTTOMCENTER_SYM && LA409_0 <= BOTTOMRIGHT_SYM)||LA409_0==CHARSET_SYM||LA409_0==COUNTER_STYLE_SYM||LA409_0==DIMENSION||LA409_0==EMS||LA409_0==EXS||(LA409_0 >= FONT_FACE_SYM && LA409_0 <= FREQ)||LA409_0==GEN||(LA409_0 >= HASH && LA409_0 <= HASH_SYMBOL)||(LA409_0 >= IDENT && LA409_0 <= IMPORT_SYM)||LA409_0==KEYFRAMES_SYM||(LA409_0 >= LBRACE && LA409_0 <= LENGTH)||(LA409_0 >= LESS_AND && LA409_0 <= LESS_JS_STRING)||LA409_0==LPAREN||(LA409_0 >= MEDIA_SYM && LA409_0 <= MOZ_DOCUMENT_SYM)||LA409_0==NAMESPACE_SYM||(LA409_0 >= NOT && LA409_0 <= NUMBER)||(LA409_0 >= PAGE_SYM && LA409_0 <= PERCENTAGE_SYMBOL)||LA409_0==PLUS||(LA409_0 >= REM && LA409_0 <= RIGHTTOP_SYM)||(LA409_0 >= SASS_AT_ROOT && LA409_0 <= SASS_DEBUG)||(LA409_0 >= SASS_EACH && LA409_0 <= SASS_ELSE)||LA409_0==SASS_EXTEND||(LA409_0 >= SASS_FOR && LA409_0 <= SASS_FUNCTION)||(LA409_0 >= SASS_IF && LA409_0 <= SASS_MIXIN)||(LA409_0 >= SASS_RETURN && LA409_0 <= SASS_WHILE)||LA409_0==STRING||(LA409_0 >= TILDE && LA409_0 <= TOPRIGHT_SYM)||(LA409_0 >= URANGE && LA409_0 <= URI)||LA409_0==VARIABLE||LA409_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt409=1;
			}
			else if ( (LA409_0==RPAREN) ) {
				alt409=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 409, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(409);}

			switch (alt409) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1237:21: fnAttributes
					{
					dbg.location(1237,21);
					pushFollow(FOLLOW_fnAttributes_in_function8848);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1239:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(409);}
			dbg.location(1240,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function8879); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1241, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1247:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1247, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1251:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1252:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(1252,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1252:9: ( IDENT COLON )?
			int alt410=2;
			try { dbg.enterSubRule(410);
			try { dbg.enterDecision(410, decisionCanBacktrack[410]);

			int LA410_0 = input.LA(1);
			if ( (LA410_0==IDENT) ) {
				int LA410_1 = input.LA(2);
				if ( (LA410_1==COLON) ) {
					alt410=1;
				}
			}
			} finally {dbg.exitDecision(410);}

			switch (alt410) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1252:10: IDENT COLON
					{
					dbg.location(1252,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName8931); if (state.failed) return;dbg.location(1252,16);
					match(input,COLON,FOLLOW_COLON_in_functionName8933); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(410);}
			dbg.location(1252,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName8937); if (state.failed) return;dbg.location(1252,30);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1252:30: ( DOT IDENT )*
			try { dbg.enterSubRule(411);

			loop411:
			while (true) {
				int alt411=2;
				try { dbg.enterDecision(411, decisionCanBacktrack[411]);

				int LA411_0 = input.LA(1);
				if ( (LA411_0==DOT) ) {
					alt411=1;
				}

				} finally {dbg.exitDecision(411);}

				switch (alt411) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1252:31: DOT IDENT
					{
					dbg.location(1252,31);
					match(input,DOT,FOLLOW_DOT_in_functionName8940); if (state.failed) return;dbg.location(1252,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName8942); if (state.failed) return;
					}
					break;

				default :
					break loop411;
				}
			}
			} finally {dbg.exitSubRule(411);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1253, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1255:1: fnAttributes : fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1255, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1256:5: ( fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:5: fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(1257,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes8966);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(1257,17);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*
			try { dbg.enterSubRule(415);

			loop415:
			while (true) {
				int alt415=2;
				try { dbg.enterDecision(415, decisionCanBacktrack[415]);

				try {
					isCyclicDecision = true;
					alt415 = dfa415.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(415);}

				switch (alt415) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:18: ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute
					{
					dbg.location(1257,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:18: ( ws )?
					int alt412=2;
					try { dbg.enterSubRule(412);
					try { dbg.enterDecision(412, decisionCanBacktrack[412]);

					int LA412_0 = input.LA(1);
					if ( (LA412_0==COMMENT||LA412_0==NL||LA412_0==WS) ) {
						alt412=1;
					}
					} finally {dbg.exitDecision(412);}

					switch (alt412) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:18: ws
							{
							dbg.location(1257,18);
							pushFollow(FOLLOW_ws_in_fnAttributes8969);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(412);}
					dbg.location(1257,22);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:22: ( COMMA |{...}? SEMI )
					int alt413=2;
					try { dbg.enterSubRule(413);
					try { dbg.enterDecision(413, decisionCanBacktrack[413]);

					int LA413_0 = input.LA(1);
					if ( (LA413_0==COMMA) ) {
						alt413=1;
					}
					else if ( (LA413_0==SEMI) ) {
						alt413=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 413, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(413);}

					switch (alt413) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:23: COMMA
							{
							dbg.location(1257,23);
							match(input,COMMA,FOLLOW_COMMA_in_fnAttributes8973); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:31: {...}? SEMI
							{
							dbg.location(1257,31);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "fnAttributes", "isLessSource()");
							}dbg.location(1257,49);
							match(input,SEMI,FOLLOW_SEMI_in_fnAttributes8979); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(413);}
					dbg.location(1257,55);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:55: ( ws )?
					int alt414=2;
					try { dbg.enterSubRule(414);
					try { dbg.enterDecision(414, decisionCanBacktrack[414]);

					int LA414_0 = input.LA(1);
					if ( (LA414_0==COMMENT||LA414_0==NL||LA414_0==WS) ) {
						alt414=1;
					}
					} finally {dbg.exitDecision(414);}

					switch (alt414) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:55: ws
							{
							dbg.location(1257,55);
							pushFollow(FOLLOW_ws_in_fnAttributes8982);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(414);}
					dbg.location(1257,59);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes8985);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop415;
				}
			}
			} finally {dbg.exitSubRule(415);}
			dbg.location(1257,73);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:73: ( ws )?
			int alt416=2;
			try { dbg.enterSubRule(416);
			try { dbg.enterDecision(416, decisionCanBacktrack[416]);

			int LA416_0 = input.LA(1);
			if ( (LA416_0==COMMENT||LA416_0==NL||LA416_0==WS) ) {
				alt416=1;
			}
			} finally {dbg.exitDecision(416);}

			switch (alt416) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1257:73: ws
					{
					dbg.location(1257,73);
					pushFollow(FOLLOW_ws_in_fnAttributes8989);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(416);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1258, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1260:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1260, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1261:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt419=3;
			try { dbg.enterDecision(419, decisionCanBacktrack[419]);

			int LA419_0 = input.LA(1);
			if ( (LA419_0==IDENT) ) {
				int LA419_1 = input.LA(2);
				if ( (synpred54_Css3()) ) {
					alt419=1;
				}
				else if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==AT_IDENT||(LA419_0 >= BOTTOMCENTER_SYM && LA419_0 <= BOTTOMRIGHT_SYM)||LA419_0==CHARSET_SYM||LA419_0==COUNTER_STYLE_SYM||LA419_0==FONT_FACE_SYM||LA419_0==IMPORT_SYM||LA419_0==KEYFRAMES_SYM||(LA419_0 >= LEFTBOTTOM_SYM && LA419_0 <= LEFTTOP_SYM)||LA419_0==MEDIA_SYM||LA419_0==MOZ_DOCUMENT_SYM||LA419_0==NAMESPACE_SYM||LA419_0==PAGE_SYM||(LA419_0 >= RIGHTBOTTOM_SYM && LA419_0 <= RIGHTTOP_SYM)||(LA419_0 >= SASS_AT_ROOT && LA419_0 <= SASS_DEBUG)||(LA419_0 >= SASS_EACH && LA419_0 <= SASS_ELSE)||LA419_0==SASS_EXTEND||(LA419_0 >= SASS_FOR && LA419_0 <= SASS_FUNCTION)||(LA419_0 >= SASS_IF && LA419_0 <= SASS_MIXIN)||(LA419_0 >= SASS_RETURN && LA419_0 <= SASS_USE)||(LA419_0 >= SASS_WARN && LA419_0 <= SASS_WHILE)||(LA419_0 >= TOPCENTER_SYM && LA419_0 <= TOPRIGHT_SYM)||LA419_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA419_2 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred54_Css3())) ) {
					alt419=1;
				}
				else if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt419=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt419=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 419, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA419_0==SASS_VAR) ) {
				int LA419_3 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred54_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt419=1;
				}
				else if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt419=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt419=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 419, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA419_0==LBRACE) && (synpred55_Css3())) {
				alt419=2;
			}
			else if ( (LA419_0==NOT) && (synpred55_Css3())) {
				alt419=2;
			}
			else if ( (LA419_0==MINUS||LA419_0==PLUS) ) {
				int LA419_6 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==VARIABLE) ) {
				int LA419_7 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==LBRACKET) ) {
				int LA419_8 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==NUMBER) ) {
				int LA419_9 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==URANGE) ) {
				int LA419_10 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==PERCENTAGE) ) {
				int LA419_11 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==LENGTH) ) {
				int LA419_12 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==EMS) ) {
				int LA419_13 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==REM) ) {
				int LA419_14 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==EXS) ) {
				int LA419_15 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==ANGLE) ) {
				int LA419_16 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==TIME) ) {
				int LA419_17 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==FREQ) ) {
				int LA419_18 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==RESOLUTION) ) {
				int LA419_19 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==DIMENSION) ) {
				int LA419_20 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==STRING) ) {
				int LA419_21 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==TILDE) ) {
				int LA419_22 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==LESS_JS_STRING) ) {
				int LA419_23 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==GEN) ) {
				int LA419_24 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==URI) ) {
				int LA419_25 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==HASH) ) {
				int LA419_26 = input.LA(2);
				if ( (synpred55_Css3()) ) {
					alt419=2;
				}
				else if ( (true) ) {
					alt419=3;
				}

			}
			else if ( (LA419_0==LESS_AND) ) {
				int LA419_27 = input.LA(2);
				if ( ((synpred55_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt419=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt419=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 419, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA419_0==HASH_SYMBOL) ) {
				int LA419_28 = input.LA(2);
				if ( ((synpred55_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt419=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt419=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 419, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA419_0==AT_SIGN) ) {
				int LA419_29 = input.LA(2);
				if ( ((synpred55_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt419=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt419=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 419, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA419_0==PERCENTAGE_SYMBOL) ) {
				int LA419_30 = input.LA(2);
				if ( ((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt419=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt419=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 419, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA419_0==IMPORTANT_SYM) && (synpred55_Css3())) {
				alt419=2;
			}
			else if ( (LA419_0==LPAREN) && (synpred55_Css3())) {
				alt419=2;
			}

			} finally {dbg.exitDecision(419);}

			switch (alt419) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(1262,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute9026);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(1262,62);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:62: ( ws )?
					int alt417=2;
					try { dbg.enterSubRule(417);
					try { dbg.enterDecision(417, decisionCanBacktrack[417]);

					int LA417_0 = input.LA(1);
					if ( (LA417_0==COMMENT||LA417_0==NL||LA417_0==WS) ) {
						alt417=1;
					}
					} finally {dbg.exitDecision(417);}

					switch (alt417) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:62: ws
							{
							dbg.location(1262,62);
							pushFollow(FOLLOW_ws_in_fnAttribute9028);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(417);}
					dbg.location(1262,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1262,79);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:79: ( ws )?
					int alt418=2;
					try { dbg.enterSubRule(418);
					try { dbg.enterDecision(418, decisionCanBacktrack[418]);

					int LA418_0 = input.LA(1);
					if ( (LA418_0==COMMENT||LA418_0==NL||LA418_0==WS) ) {
						alt418=1;
					}
					} finally {dbg.exitDecision(418);}

					switch (alt418) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:79: ws
							{
							dbg.location(1262,79);
							pushFollow(FOLLOW_ws_in_fnAttribute9037);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(418);}
					dbg.location(1262,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute9040);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1263:11: ( cp_expression )=> cp_expression
					{
					dbg.location(1263,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute9057);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1264:11: expression
					{
					dbg.location(1264,11);
					pushFollow(FOLLOW_expression_in_fnAttribute9069);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1265, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1267:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1267, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1268:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt421=2;
			try { dbg.enterDecision(421, decisionCanBacktrack[421]);

			int LA421_0 = input.LA(1);
			if ( (LA421_0==IDENT) ) {
				int LA421_1 = input.LA(2);
				if ( (LA421_1==DOT) ) {
					int LA421_3 = input.LA(3);
					if ( (LA421_3==SASS_VAR) ) {
						alt421=2;
					}
					else if ( (LA421_3==IDENT) ) {
						alt421=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 421, 3, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA421_1==COLON||LA421_1==COMMENT||LA421_1==NL||LA421_1==OPEQ||LA421_1==WS) ) {
					alt421=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 421, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA421_0==AT_IDENT||(LA421_0 >= BOTTOMCENTER_SYM && LA421_0 <= BOTTOMRIGHT_SYM)||LA421_0==CHARSET_SYM||LA421_0==COUNTER_STYLE_SYM||LA421_0==FONT_FACE_SYM||LA421_0==IMPORT_SYM||LA421_0==KEYFRAMES_SYM||(LA421_0 >= LEFTBOTTOM_SYM && LA421_0 <= LEFTTOP_SYM)||LA421_0==MEDIA_SYM||LA421_0==MOZ_DOCUMENT_SYM||LA421_0==NAMESPACE_SYM||LA421_0==PAGE_SYM||(LA421_0 >= RIGHTBOTTOM_SYM && LA421_0 <= RIGHTTOP_SYM)||(LA421_0 >= SASS_AT_ROOT && LA421_0 <= SASS_DEBUG)||(LA421_0 >= SASS_EACH && LA421_0 <= SASS_ELSE)||LA421_0==SASS_EXTEND||(LA421_0 >= SASS_FOR && LA421_0 <= SASS_FUNCTION)||(LA421_0 >= SASS_IF && LA421_0 <= SASS_MIXIN)||(LA421_0 >= SASS_RETURN && LA421_0 <= SASS_WHILE)||(LA421_0 >= TOPCENTER_SYM && LA421_0 <= TOPRIGHT_SYM)||LA421_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt421=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 421, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(421);}

			switch (alt421) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1269:13: IDENT ( DOT IDENT )*
					{
					dbg.location(1269,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName9092); if (state.failed) return;dbg.location(1269,19);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1269:19: ( DOT IDENT )*
					try { dbg.enterSubRule(420);

					loop420:
					while (true) {
						int alt420=2;
						try { dbg.enterDecision(420, decisionCanBacktrack[420]);

						int LA420_0 = input.LA(1);
						if ( (LA420_0==DOT) ) {
							alt420=1;
						}

						} finally {dbg.exitDecision(420);}

						switch (alt420) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1269:20: DOT IDENT
							{
							dbg.location(1269,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName9095); if (state.failed) return;dbg.location(1269,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName9097); if (state.failed) return;
							}
							break;

						default :
							break loop420;
						}
					}
					} finally {dbg.exitSubRule(420);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1270:15: {...}? cp_variable
					{
					dbg.location(1270,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(1270,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName9117);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1271, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1273:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1273, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1274:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt426=2;
			try { dbg.enterDecision(426, decisionCanBacktrack[426]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA426_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA426_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA426_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LBRACKET:
				{
				int LA426_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA426_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URANGE:
				{
				int LA426_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA426_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA426_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA426_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA426_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA426_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA426_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA426_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA426_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA426_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA426_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA426_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA426_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA426_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA426_20 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA426_21 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA426_22 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA426_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt426=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA426_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt426=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA426_25 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt426=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA426_26 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt426=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA426_27 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt426=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA426_28 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt426=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 426, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt426=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 426, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(426);}

			switch (alt426) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(1275,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue9140);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(1275,18);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(425);

					loop425:
					while (true) {
						int alt425=2;
						try { dbg.enterDecision(425, decisionCanBacktrack[425]);

						try {
							isCyclicDecision = true;
							alt425 = dfa425.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(425);}

						switch (alt425) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(1275,71);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt424=3;
							try { dbg.enterSubRule(424);
							try { dbg.enterDecision(424, decisionCanBacktrack[424]);

							try {
								isCyclicDecision = true;
								alt424 = dfa424.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(424);}

							switch (alt424) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:73: ws
									{
									dbg.location(1275,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue9172);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(1275,78);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(1275,79);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:79: ( ws )?
									int alt422=2;
									try { dbg.enterSubRule(422);
									try { dbg.enterDecision(422, decisionCanBacktrack[422]);

									int LA422_0 = input.LA(1);
									if ( (LA422_0==COMMENT||LA422_0==NL||LA422_0==WS) ) {
										alt422=1;
									}
									} finally {dbg.exitDecision(422);}

									switch (alt422) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:79: ws
											{
											dbg.location(1275,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue9177);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(422);}
									dbg.location(1275,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue9180); if (state.failed) return;dbg.location(1275,91);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:91: ( ws )?
									int alt423=2;
									try { dbg.enterSubRule(423);
									try { dbg.enterDecision(423, decisionCanBacktrack[423]);

									int LA423_0 = input.LA(1);
									if ( (LA423_0==COMMENT||LA423_0==NL||LA423_0==WS) ) {
										alt423=1;
									}
									} finally {dbg.exitDecision(423);}

									switch (alt423) {
										case 1 :
											dbg.enterAlt(1);

											// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:91: ws
											{
											dbg.location(1275,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue9182);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(423);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(424);}
							dbg.location(1275,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue9191);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop425;
						}
					}
					} finally {dbg.exitSubRule(425);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1276:15: {...}? cp_math_expression
					{
					dbg.location(1276,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(1276,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue9212);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1277, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1279:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1279, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1280:5: ( HASH )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1280:7: HASH
			{
			dbg.location(1280,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor9226); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1281, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1283:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1283, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1284:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1284:7: ( WS | NL | COMMENT )+
			{
			dbg.location(1284,7);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1284:7: ( WS | NL | COMMENT )+
			int cnt427=0;
			try { dbg.enterSubRule(427);

			loop427:
			while (true) {
				int alt427=2;
				try { dbg.enterDecision(427, decisionCanBacktrack[427]);

				int LA427_0 = input.LA(1);
				if ( (LA427_0==COMMENT||LA427_0==NL||LA427_0==WS) ) {
					alt427=1;
				}

				} finally {dbg.exitDecision(427);}

				switch (alt427) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
					{
					dbg.location(1284,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt427 >= 1 ) break loop427;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(427, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt427++;
			}
			} finally {dbg.exitSubRule(427);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1285, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1290:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1290, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1291:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt435=2;
			try { dbg.enterDecision(435, decisionCanBacktrack[435]);

			switch ( input.LA(1) ) {
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA435_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt435=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt435=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 435, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA435_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt435=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt435=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 435, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA435_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt435=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt435=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 435, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 435, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(435);}

			switch (alt435) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1292:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1292,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1292,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration9286);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1292,39);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1292:39: ( ws )?
					int alt428=2;
					try { dbg.enterSubRule(428);
					try { dbg.enterDecision(428, decisionCanBacktrack[428]);

					int LA428_0 = input.LA(1);
					if ( (LA428_0==COMMENT||LA428_0==NL||LA428_0==WS) ) {
						alt428=1;
					}
					} finally {dbg.exitDecision(428);}

					switch (alt428) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1292:39: ws
							{
							dbg.location(1292,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration9288);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(428);}
					dbg.location(1292,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration9291); if (state.failed) return;dbg.location(1292,49);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1292:49: ( ws )?
					int alt429=2;
					try { dbg.enterSubRule(429);
					try { dbg.enterDecision(429, decisionCanBacktrack[429]);

					int LA429_0 = input.LA(1);
					if ( (LA429_0==COMMENT||LA429_0==NL||LA429_0==WS) ) {
						alt429=1;
					}
					} finally {dbg.exitDecision(429);}

					switch (alt429) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1292:49: ws
							{
							dbg.location(1292,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration9293);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(429);}
					dbg.location(1292,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration9296);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1294,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1294,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration9318);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1294,39);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:39: ( ws )?
					int alt430=2;
					try { dbg.enterSubRule(430);
					try { dbg.enterDecision(430, decisionCanBacktrack[430]);

					int LA430_0 = input.LA(1);
					if ( (LA430_0==COMMENT||LA430_0==NL||LA430_0==WS) ) {
						alt430=1;
					}
					} finally {dbg.exitDecision(430);}

					switch (alt430) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:39: ws
							{
							dbg.location(1294,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration9320);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(430);}
					dbg.location(1294,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration9323); if (state.failed) return;dbg.location(1294,49);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:49: ( ws )?
					int alt431=2;
					try { dbg.enterSubRule(431);
					try { dbg.enterDecision(431, decisionCanBacktrack[431]);

					int LA431_0 = input.LA(1);
					if ( (LA431_0==COMMENT||LA431_0==NL||LA431_0==WS) ) {
						alt431=1;
					}
					} finally {dbg.exitDecision(431);}

					switch (alt431) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:49: ws
							{
							dbg.location(1294,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration9325);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(431);}
					dbg.location(1294,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration9328);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1294,72);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(434);

					loop434:
					while (true) {
						int alt434=3;
						try { dbg.enterDecision(434, decisionCanBacktrack[434]);

						try {
							isCyclicDecision = true;
							alt434 = dfa434.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(434);}

						switch (alt434) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1294,73);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1294,74);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:74: ( ws )?
							int alt432=2;
							try { dbg.enterSubRule(432);
							try { dbg.enterDecision(432, decisionCanBacktrack[432]);

							int LA432_0 = input.LA(1);
							if ( (LA432_0==COMMENT||LA432_0==NL||LA432_0==WS) ) {
								alt432=1;
							}
							} finally {dbg.exitDecision(432);}

							switch (alt432) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:74: ws
									{
									dbg.location(1294,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration9332);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(432);}
							dbg.location(1294,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration9335); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1294,94);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1294,95);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:95: ( ws )?
							int alt433=2;
							try { dbg.enterSubRule(433);
							try { dbg.enterDecision(433, decisionCanBacktrack[433]);

							int LA433_0 = input.LA(1);
							if ( (LA433_0==COMMENT||LA433_0==NL||LA433_0==WS) ) {
								alt433=1;
							}
							} finally {dbg.exitDecision(433);}

							switch (alt433) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1294:95: ws
									{
									dbg.location(1294,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration9341);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(433);}
							dbg.location(1294,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration9344); if (state.failed) return;
							}

							}
							break;

						default :
							break loop434;
						}
					}
					} finally {dbg.exitSubRule(434);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1295, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1298:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD | KEYFRAMES_SYM ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1298, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1299:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD | KEYFRAMES_SYM ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) )
			int alt437=2;
			try { dbg.enterDecision(437, decisionCanBacktrack[437]);

			int LA437_0 = input.LA(1);
			if ( (LA437_0==AT_IDENT||(LA437_0 >= BOTTOMCENTER_SYM && LA437_0 <= BOTTOMRIGHT_SYM)||LA437_0==CHARSET_SYM||LA437_0==COUNTER_STYLE_SYM||LA437_0==FONT_FACE_SYM||LA437_0==IMPORT_SYM||LA437_0==KEYFRAMES_SYM||(LA437_0 >= LEFTBOTTOM_SYM && LA437_0 <= LEFTTOP_SYM)||LA437_0==MEDIA_SYM||LA437_0==MOZ_DOCUMENT_SYM||LA437_0==NAMESPACE_SYM||LA437_0==PAGE_SYM||(LA437_0 >= RIGHTBOTTOM_SYM && LA437_0 <= RIGHTTOP_SYM)||(LA437_0 >= SASS_AT_ROOT && LA437_0 <= SASS_DEBUG)||(LA437_0 >= SASS_EACH && LA437_0 <= SASS_ELSE)||LA437_0==SASS_EXTEND||(LA437_0 >= SASS_FOR && LA437_0 <= SASS_FUNCTION)||(LA437_0 >= SASS_IF && LA437_0 <= SASS_MIXIN)||(LA437_0 >= SASS_RETURN && LA437_0 <= SASS_USE)||(LA437_0 >= SASS_WARN && LA437_0 <= SASS_WHILE)||(LA437_0 >= TOPCENTER_SYM && LA437_0 <= TOPRIGHT_SYM)||LA437_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt437=1;
			}
			else if ( (LA437_0==IDENT||LA437_0==SASS_VAR) ) {
				alt437=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 437, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(437);}

			switch (alt437) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1301:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD | KEYFRAMES_SYM )
					{
					dbg.location(1301,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1301,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||input.LA(1)==KEYFRAMES_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||(input.LA(1) >= SASS_RETURN && input.LA(1) <= SASS_USE)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1303:9: {...}? ( SASS_VAR | IDENT DOT SASS_VAR )
					{
					dbg.location(1303,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1303,27);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1303:27: ( SASS_VAR | IDENT DOT SASS_VAR )
					int alt436=2;
					try { dbg.enterSubRule(436);
					try { dbg.enterDecision(436, decisionCanBacktrack[436]);

					int LA436_0 = input.LA(1);
					if ( (LA436_0==SASS_VAR) ) {
						alt436=1;
					}
					else if ( (LA436_0==IDENT) ) {
						alt436=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 436, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(436);}

					switch (alt436) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1303:29: SASS_VAR
							{
							dbg.location(1303,29);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable9580); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1303:40: IDENT DOT SASS_VAR
							{
							dbg.location(1303,40);
							match(input,IDENT,FOLLOW_IDENT_in_cp_variable9584); if (state.failed) return;dbg.location(1303,46);
							match(input,DOT,FOLLOW_DOT_in_cp_variable9586); if (state.failed) return;dbg.location(1303,50);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable9588); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(436);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1304, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1307:1: cp_expression_list : ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1307, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1308:5: ( ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1309:5: ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1309,24);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list9618);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1310,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(440);

			loop440:
			while (true) {
				int alt440=2;
				try { dbg.enterDecision(440, decisionCanBacktrack[440]);

				try {
					isCyclicDecision = true;
					alt440 = dfa440.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(440);}

				switch (alt440) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1310,37);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:37: ( ws )?
					int alt438=2;
					try { dbg.enterSubRule(438);
					try { dbg.enterDecision(438, decisionCanBacktrack[438]);

					int LA438_0 = input.LA(1);
					if ( (LA438_0==COMMENT||LA438_0==NL||LA438_0==WS) ) {
						alt438=1;
					}
					} finally {dbg.exitDecision(438);}

					switch (alt438) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:37: ws
							{
							dbg.location(1310,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list9637);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(438);}
					dbg.location(1310,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list9640); if (state.failed) return;dbg.location(1310,47);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:47: ( ws )?
					int alt439=2;
					try { dbg.enterSubRule(439);
					try { dbg.enterDecision(439, decisionCanBacktrack[439]);

					int LA439_0 = input.LA(1);
					if ( (LA439_0==COMMENT||LA439_0==NL||LA439_0==WS) ) {
						alt439=1;
					}
					} finally {dbg.exitDecision(439);}

					switch (alt439) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:47: ws
							{
							dbg.location(1310,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list9642);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(439);}
					dbg.location(1310,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list9645);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop440;
				}
			}
			} finally {dbg.exitSubRule(440);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1311, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1323:1: cp_expression : ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN );
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1323, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1324:5: ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			int alt449=3;
			try { dbg.enterDecision(449, decisionCanBacktrack[449]);

			int LA449_0 = input.LA(1);
			if ( (LA449_0==LBRACE) ) {
				alt449=1;
			}
			else if ( (LA449_0==NOT) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==MINUS||LA449_0==PLUS) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==IDENT) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==VARIABLE) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==LBRACKET) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==NUMBER) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==URANGE) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==PERCENTAGE) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==LENGTH) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==EMS) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==REM) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==EXS) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==ANGLE) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==TIME) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==FREQ) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==RESOLUTION) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==DIMENSION) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==STRING) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==TILDE) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==LESS_JS_STRING) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==GEN) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==URI) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==HASH) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==AT_IDENT||(LA449_0 >= BOTTOMCENTER_SYM && LA449_0 <= BOTTOMRIGHT_SYM)||LA449_0==CHARSET_SYM||LA449_0==COUNTER_STYLE_SYM||LA449_0==FONT_FACE_SYM||LA449_0==IMPORT_SYM||LA449_0==KEYFRAMES_SYM||(LA449_0 >= LEFTBOTTOM_SYM && LA449_0 <= LEFTTOP_SYM)||LA449_0==MEDIA_SYM||LA449_0==MOZ_DOCUMENT_SYM||LA449_0==NAMESPACE_SYM||LA449_0==PAGE_SYM||(LA449_0 >= RIGHTBOTTOM_SYM && LA449_0 <= RIGHTTOP_SYM)||(LA449_0 >= SASS_AT_ROOT && LA449_0 <= SASS_DEBUG)||(LA449_0 >= SASS_EACH && LA449_0 <= SASS_ELSE)||LA449_0==SASS_EXTEND||(LA449_0 >= SASS_FOR && LA449_0 <= SASS_FUNCTION)||(LA449_0 >= SASS_IF && LA449_0 <= SASS_MIXIN)||(LA449_0 >= SASS_RETURN && LA449_0 <= SASS_USE)||(LA449_0 >= SASS_WARN && LA449_0 <= SASS_WHILE)||(LA449_0 >= TOPCENTER_SYM && LA449_0 <= TOPRIGHT_SYM)||LA449_0==WEBKIT_KEYFRAMES_SYM) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==SASS_VAR) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==LESS_AND) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==HASH_SYMBOL) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==AT_SIGN) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==PERCENTAGE_SYMBOL) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==IMPORTANT_SYM) && (synpred59_Css3())) {
				alt449=2;
			}
			else if ( (LA449_0==LPAREN) ) {
				int LA449_32 = input.LA(2);
				if ( (synpred59_Css3()) ) {
					alt449=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt449=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 449, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 449, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(449);}

			switch (alt449) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1325:5: {...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					{
					dbg.location(1325,5);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isLessSource()");
					}dbg.location(1325,23);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1325:23: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1325:24: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(1325,24);
					match(input,LBRACE,FOLLOW_LBRACE_in_cp_expression9681); if (state.failed) return;dbg.location(1325,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1325:31: ( ws )?
					int alt441=2;
					try { dbg.enterSubRule(441);
					try { dbg.enterDecision(441, decisionCanBacktrack[441]);

					int LA441_0 = input.LA(1);
					if ( (LA441_0==COMMENT||LA441_0==NL||LA441_0==WS) ) {
						alt441=1;
					}
					} finally {dbg.exitDecision(441);}

					switch (alt441) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1325:31: ws
							{
							dbg.location(1325,31);
							pushFollow(FOLLOW_ws_in_cp_expression9683);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(441);}
					dbg.location(1325,35);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression9686);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1325,48);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1325:48: ( declarations )?
					int alt442=2;
					try { dbg.enterSubRule(442);
					try { dbg.enterDecision(442, decisionCanBacktrack[442]);

					int LA442_0 = input.LA(1);
					if ( ((LA442_0 >= AT_IDENT && LA442_0 <= AT_SIGN)||(LA442_0 >= BOTTOMCENTER_SYM && LA442_0 <= BOTTOMRIGHT_SYM)||(LA442_0 >= CHARSET_SYM && LA442_0 <= COLON)||LA442_0==CONTAINER_SYM||LA442_0==COUNTER_STYLE_SYM||(LA442_0 >= DCOLON && LA442_0 <= DOT)||LA442_0==FONT_FACE_SYM||(LA442_0 >= GEN && LA442_0 <= GREATER)||(LA442_0 >= HASH && LA442_0 <= HASH_SYMBOL)||LA442_0==IDENT||LA442_0==IMPORT_SYM||LA442_0==KEYFRAMES_SYM||LA442_0==LAYER_SYM||(LA442_0 >= LBRACKET && LA442_0 <= LEFTTOP_SYM)||LA442_0==LESS_AND||(LA442_0 >= MEDIA_SYM && LA442_0 <= MOZ_DOCUMENT_SYM)||LA442_0==NAMESPACE_SYM||LA442_0==PAGE_SYM||(LA442_0 >= PIPE && LA442_0 <= PLUS)||(LA442_0 >= RIGHTBOTTOM_SYM && LA442_0 <= RIGHTTOP_SYM)||(LA442_0 >= SASS_AT_ROOT && LA442_0 <= SASS_DEBUG)||(LA442_0 >= SASS_EACH && LA442_0 <= SASS_ELSE)||(LA442_0 >= SASS_ERROR && LA442_0 <= SASS_FUNCTION)||(LA442_0 >= SASS_IF && LA442_0 <= SASS_MIXIN)||(LA442_0 >= SASS_RETURN && LA442_0 <= SEMI)||LA442_0==STAR||LA442_0==SUPPORTS_SYM||LA442_0==TILDE||(LA442_0 >= TOPCENTER_SYM && LA442_0 <= TOPRIGHT_SYM)||LA442_0==VARIABLE||LA442_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt442=1;
					}
					} finally {dbg.exitDecision(442);}

					switch (alt442) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1325:48: declarations
							{
							dbg.location(1325,48);
							pushFollow(FOLLOW_declarations_in_cp_expression9688);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(442);}
					dbg.location(1325,62);
					match(input,RBRACE,FOLLOW_RBRACE_in_cp_expression9691); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1326:7: ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					{
					dbg.location(1326,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1326:31: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1326:32: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					{
					dbg.location(1326,32);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9707);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;dbg.location(1327,5);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1327:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					try { dbg.enterSubRule(446);

					loop446:
					while (true) {
						int alt446=3;
						try { dbg.enterDecision(446, decisionCanBacktrack[446]);

						try {
							isCyclicDecision = true;
							alt446 = dfa446.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(446);}

						switch (alt446) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
							{
							dbg.location(1328,39);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:39: ( ( ws )? cp_expression_operator ( ws )? )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:40: ( ws )? cp_expression_operator ( ws )?
							{
							dbg.location(1328,40);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:40: ( ws )?
							int alt443=2;
							try { dbg.enterSubRule(443);
							try { dbg.enterDecision(443, decisionCanBacktrack[443]);

							int LA443_0 = input.LA(1);
							if ( (LA443_0==COMMENT||LA443_0==NL||LA443_0==WS) ) {
								alt443=1;
							}
							} finally {dbg.exitDecision(443);}

							switch (alt443) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:40: ws
									{
									dbg.location(1328,40);
									pushFollow(FOLLOW_ws_in_cp_expression9731);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(443);}
							dbg.location(1328,44);
							pushFollow(FOLLOW_cp_expression_operator_in_cp_expression9734);
							cp_expression_operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1328,67);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:67: ( ws )?
							int alt444=2;
							try { dbg.enterSubRule(444);
							try { dbg.enterDecision(444, decisionCanBacktrack[444]);

							int LA444_0 = input.LA(1);
							if ( (LA444_0==COMMENT||LA444_0==NL||LA444_0==WS) ) {
								alt444=1;
							}
							} finally {dbg.exitDecision(444);}

							switch (alt444) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:67: ws
									{
									dbg.location(1328,67);
									pushFollow(FOLLOW_ws_in_cp_expression9736);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(444);}

							}
							dbg.location(1328,72);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9740);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1329:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
							{
							dbg.location(1329,37);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1329:37: ( ws )?
							int alt445=2;
							try { dbg.enterSubRule(445);
							try { dbg.enterDecision(445, decisionCanBacktrack[445]);

							int LA445_0 = input.LA(1);
							if ( (LA445_0==COMMENT||LA445_0==NL||LA445_0==WS) ) {
								alt445=1;
							}
							} finally {dbg.exitDecision(445);}

							switch (alt445) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1329:37: ws
									{
									dbg.location(1329,37);
									pushFollow(FOLLOW_ws_in_cp_expression9759);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(445);}
							dbg.location(1329,41);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9762);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop446;
						}
					}
					} finally {dbg.exitSubRule(446);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1331:7: {...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
					{
					dbg.location(1331,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isScssSource()");
					}dbg.location(1331,25);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression9780); if (state.failed) return;dbg.location(1331,32);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1331:32: ( ws )?
					int alt447=2;
					try { dbg.enterSubRule(447);
					try { dbg.enterDecision(447, decisionCanBacktrack[447]);

					int LA447_0 = input.LA(1);
					if ( (LA447_0==COMMENT||LA447_0==NL||LA447_0==WS) ) {
						alt447=1;
					}
					} finally {dbg.exitDecision(447);}

					switch (alt447) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1331:32: ws
							{
							dbg.location(1331,32);
							pushFollow(FOLLOW_ws_in_cp_expression9782);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(447);}
					dbg.location(1331,36);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression9785);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1331,49);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1331:49: ( sass_map_pairs )?
					int alt448=2;
					try { dbg.enterSubRule(448);
					try { dbg.enterDecision(448, decisionCanBacktrack[448]);

					int LA448_0 = input.LA(1);
					if ( ((LA448_0 >= AT_IDENT && LA448_0 <= AT_SIGN)||(LA448_0 >= BOTTOMCENTER_SYM && LA448_0 <= BOTTOMRIGHT_SYM)||LA448_0==CHARSET_SYM||LA448_0==COMMA||LA448_0==COUNTER_STYLE_SYM||LA448_0==FONT_FACE_SYM||LA448_0==GEN||LA448_0==HASH_SYMBOL||LA448_0==IDENT||LA448_0==IMPORT_SYM||LA448_0==KEYFRAMES_SYM||(LA448_0 >= LEFTBOTTOM_SYM && LA448_0 <= LEFTTOP_SYM)||(LA448_0 >= MEDIA_SYM && LA448_0 <= MOZ_DOCUMENT_SYM)||LA448_0==NAMESPACE_SYM||LA448_0==NUMBER||LA448_0==PAGE_SYM||(LA448_0 >= RIGHTBOTTOM_SYM && LA448_0 <= RIGHTTOP_SYM)||(LA448_0 >= SASS_AT_ROOT && LA448_0 <= SASS_DEBUG)||(LA448_0 >= SASS_EACH && LA448_0 <= SASS_ELSE)||LA448_0==SASS_EXTEND||(LA448_0 >= SASS_FOR && LA448_0 <= SASS_FUNCTION)||(LA448_0 >= SASS_IF && LA448_0 <= SASS_MIXIN)||(LA448_0 >= SASS_RETURN && LA448_0 <= SASS_WHILE)||LA448_0==STRING||(LA448_0 >= TOPCENTER_SYM && LA448_0 <= TOPRIGHT_SYM)||LA448_0==VARIABLE||LA448_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt448=1;
					}
					} finally {dbg.exitDecision(448);}

					switch (alt448) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1331:49: sass_map_pairs
							{
							dbg.location(1331,49);
							pushFollow(FOLLOW_sass_map_pairs_in_cp_expression9787);
							sass_map_pairs();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(448);}
					dbg.location(1331,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression9790); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1332, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1334:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1334, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1335:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt450=8;
			try { dbg.enterDecision(450, decisionCanBacktrack[450]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA450_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt450=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt450=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 450, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt450=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt450=4;
				}
				break;
			case LESS:
				{
				alt450=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt450=6;
				}
				break;
			case GREATER:
				{
				alt450=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt450=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 450, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(450);}

			switch (alt450) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:5: key_or
					{
					dbg.location(1336,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator9811);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:14: key_and
					{
					dbg.location(1336,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator9815);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:25: CP_EQ
					{
					dbg.location(1336,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator9820); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:33: CP_NOT_EQ
					{
					dbg.location(1336,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator9824); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:45: LESS
					{
					dbg.location(1336,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator9828); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:52: LESS_OR_EQ
					{
					dbg.location(1336,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator9832); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:65: GREATER
					{
					dbg.location(1336,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator9836); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1336:75: GREATER_OR_EQ
					{
					dbg.location(1336,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator9840); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1337, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1339:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1339, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1340:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1341:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1341,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1341:9: ( NOT ( ws )? )?
			int alt452=2;
			try { dbg.enterSubRule(452);
			try { dbg.enterDecision(452, decisionCanBacktrack[452]);

			int LA452_0 = input.LA(1);
			if ( (LA452_0==NOT) ) {
				alt452=1;
			}
			} finally {dbg.exitDecision(452);}

			switch (alt452) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1341:10: NOT ( ws )?
					{
					dbg.location(1341,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom9866); if (state.failed) return;dbg.location(1341,14);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1341:14: ( ws )?
					int alt451=2;
					try { dbg.enterSubRule(451);
					try { dbg.enterDecision(451, decisionCanBacktrack[451]);

					int LA451_0 = input.LA(1);
					if ( (LA451_0==COMMENT||LA451_0==NL||LA451_0==WS) ) {
						alt451=1;
					}
					} finally {dbg.exitDecision(451);}

					switch (alt451) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1341:14: ws
							{
							dbg.location(1341,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom9868);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(451);}

					}
					break;

			}
			} finally {dbg.exitSubRule(452);}
			dbg.location(1342,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1342:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt456=2;
			try { dbg.enterSubRule(456);
			try { dbg.enterDecision(456, decisionCanBacktrack[456]);

			int LA456_0 = input.LA(1);
			if ( (LA456_0==MINUS||LA456_0==PLUS) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==IDENT) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==VARIABLE) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==LBRACKET) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==NUMBER) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==URANGE) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==PERCENTAGE) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==LENGTH) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==EMS) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==REM) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==EXS) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==ANGLE) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==TIME) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==FREQ) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==RESOLUTION) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==DIMENSION) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==STRING) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==TILDE) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==LESS_JS_STRING) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==GEN) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==URI) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==HASH) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==AT_IDENT||(LA456_0 >= BOTTOMCENTER_SYM && LA456_0 <= BOTTOMRIGHT_SYM)||LA456_0==CHARSET_SYM||LA456_0==COUNTER_STYLE_SYM||LA456_0==FONT_FACE_SYM||LA456_0==IMPORT_SYM||LA456_0==KEYFRAMES_SYM||(LA456_0 >= LEFTBOTTOM_SYM && LA456_0 <= LEFTTOP_SYM)||LA456_0==MEDIA_SYM||LA456_0==MOZ_DOCUMENT_SYM||LA456_0==NAMESPACE_SYM||LA456_0==PAGE_SYM||(LA456_0 >= RIGHTBOTTOM_SYM && LA456_0 <= RIGHTTOP_SYM)||(LA456_0 >= SASS_AT_ROOT && LA456_0 <= SASS_DEBUG)||(LA456_0 >= SASS_EACH && LA456_0 <= SASS_ELSE)||LA456_0==SASS_EXTEND||(LA456_0 >= SASS_FOR && LA456_0 <= SASS_FUNCTION)||(LA456_0 >= SASS_IF && LA456_0 <= SASS_MIXIN)||(LA456_0 >= SASS_RETURN && LA456_0 <= SASS_USE)||(LA456_0 >= SASS_WARN && LA456_0 <= SASS_WHILE)||(LA456_0 >= TOPCENTER_SYM && LA456_0 <= TOPRIGHT_SYM)||LA456_0==WEBKIT_KEYFRAMES_SYM) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==SASS_VAR) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==LESS_AND) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==HASH_SYMBOL) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==AT_SIGN) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==PERCENTAGE_SYMBOL) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==IMPORTANT_SYM) && (synpred62_Css3())) {
				alt456=1;
			}
			else if ( (LA456_0==LPAREN) ) {
				int LA456_30 = input.LA(2);
				if ( (synpred62_Css3()) ) {
					alt456=1;
				}
				else if ( (true) ) {
					alt456=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 456, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(456);}

			switch (alt456) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1343:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1343,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom9899);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1344:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1344,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom9915); if (state.failed) return;dbg.location(1344,22);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1344:22: ( ws )?
					int alt453=2;
					try { dbg.enterSubRule(453);
					try { dbg.enterDecision(453, decisionCanBacktrack[453]);

					int LA453_0 = input.LA(1);
					if ( (LA453_0==COMMENT||LA453_0==NL||LA453_0==WS) ) {
						alt453=1;
					}
					} finally {dbg.exitDecision(453);}

					switch (alt453) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1344:22: ws
							{
							dbg.location(1344,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom9917);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(453);}
					dbg.location(1344,26);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1344:26: ( cp_expression_list ( ws )? )?
					int alt455=2;
					try { dbg.enterSubRule(455);
					try { dbg.enterDecision(455, decisionCanBacktrack[455]);

					int LA455_0 = input.LA(1);
					if ( ((LA455_0 >= ANGLE && LA455_0 <= AT_SIGN)||(LA455_0 >= BOTTOMCENTER_SYM && LA455_0 <= BOTTOMRIGHT_SYM)||LA455_0==CHARSET_SYM||LA455_0==COUNTER_STYLE_SYM||LA455_0==DIMENSION||LA455_0==EMS||LA455_0==EXS||(LA455_0 >= FONT_FACE_SYM && LA455_0 <= FREQ)||LA455_0==GEN||(LA455_0 >= HASH && LA455_0 <= HASH_SYMBOL)||(LA455_0 >= IDENT && LA455_0 <= IMPORT_SYM)||LA455_0==KEYFRAMES_SYM||(LA455_0 >= LBRACE && LA455_0 <= LENGTH)||(LA455_0 >= LESS_AND && LA455_0 <= LESS_JS_STRING)||LA455_0==LPAREN||(LA455_0 >= MEDIA_SYM && LA455_0 <= MOZ_DOCUMENT_SYM)||LA455_0==NAMESPACE_SYM||(LA455_0 >= NOT && LA455_0 <= NUMBER)||(LA455_0 >= PAGE_SYM && LA455_0 <= PERCENTAGE_SYMBOL)||LA455_0==PLUS||(LA455_0 >= REM && LA455_0 <= RIGHTTOP_SYM)||(LA455_0 >= SASS_AT_ROOT && LA455_0 <= SASS_DEBUG)||(LA455_0 >= SASS_EACH && LA455_0 <= SASS_ELSE)||LA455_0==SASS_EXTEND||(LA455_0 >= SASS_FOR && LA455_0 <= SASS_FUNCTION)||(LA455_0 >= SASS_IF && LA455_0 <= SASS_MIXIN)||(LA455_0 >= SASS_RETURN && LA455_0 <= SASS_WHILE)||LA455_0==STRING||(LA455_0 >= TILDE && LA455_0 <= TOPRIGHT_SYM)||(LA455_0 >= URANGE && LA455_0 <= URI)||LA455_0==VARIABLE||LA455_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt455=1;
					}
					} finally {dbg.exitDecision(455);}

					switch (alt455) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1344:27: cp_expression_list ( ws )?
							{
							dbg.location(1344,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom9921);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1344,46);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1344:46: ( ws )?
							int alt454=2;
							try { dbg.enterSubRule(454);
							try { dbg.enterDecision(454, decisionCanBacktrack[454]);

							int LA454_0 = input.LA(1);
							if ( (LA454_0==COMMENT||LA454_0==NL||LA454_0==WS) ) {
								alt454=1;
							}
							} finally {dbg.exitDecision(454);}

							switch (alt454) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1344:46: ws
									{
									dbg.location(1344,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom9923);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(454);}

							}
							break;

					}
					} finally {dbg.exitSubRule(455);}
					dbg.location(1344,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom9928); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(456);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1346, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1349:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1349, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1350:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1351:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1351,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions9960);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1352,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1352:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(457);

			loop457:
			while (true) {
				int alt457=2;
				try { dbg.enterDecision(457, decisionCanBacktrack[457]);

				int LA457_0 = input.LA(1);
				if ( (LA457_0==COMMENT||LA457_0==NL||LA457_0==WS) ) {
					alt457=1;
				}

				} finally {dbg.exitDecision(457);}

				switch (alt457) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1352:6: ws cp_math_expression
					{
					dbg.location(1352,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions9967);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1352,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions9969);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop457;
				}
			}
			} finally {dbg.exitSubRule(457);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1353, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1367:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1367, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1368:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1368:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1368,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression10003);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1369,10);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1369:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(460);

			loop460:
			while (true) {
				int alt460=2;
				try { dbg.enterDecision(460, decisionCanBacktrack[460]);

				try {
					isCyclicDecision = true;
					alt460 = dfa460.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(460);}

				switch (alt460) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1370,48);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:48: ( ws )?
					int alt458=2;
					try { dbg.enterSubRule(458);
					try { dbg.enterDecision(458, decisionCanBacktrack[458]);

					int LA458_0 = input.LA(1);
					if ( (LA458_0==COMMENT||LA458_0==NL||LA458_0==WS) ) {
						alt458=1;
					}
					} finally {dbg.exitDecision(458);}

					switch (alt458) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:48: ws
							{
							dbg.location(1370,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression10045);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(458);}
					dbg.location(1370,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1370,78);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:78: ( ws )?
					int alt459=2;
					try { dbg.enterSubRule(459);
					try { dbg.enterDecision(459, decisionCanBacktrack[459]);

					int LA459_0 = input.LA(1);
					if ( (LA459_0==COMMENT||LA459_0==NL||LA459_0==WS) ) {
						alt459=1;
					}
					} finally {dbg.exitDecision(459);}

					switch (alt459) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:78: ws
							{
							dbg.location(1370,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression10058);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(459);}
					dbg.location(1370,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression10061);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop460;
				}
			}
			} finally {dbg.exitSubRule(460);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1372, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1374:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1374, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1375:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt465=3;
			try { dbg.enterDecision(465, decisionCanBacktrack[465]);

			try {
				isCyclicDecision = true;
				alt465 = dfa465.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(465);}

			switch (alt465) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1376:5: term
					{
					dbg.location(1376,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom10094);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1377:7: IMPORTANT_SYM
					{
					dbg.location(1377,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom10102); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1378,7);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:7: ( unaryOperator ( ws )? )?
					int alt462=2;
					try { dbg.enterSubRule(462);
					try { dbg.enterDecision(462, decisionCanBacktrack[462]);

					int LA462_0 = input.LA(1);
					if ( (LA462_0==MINUS||LA462_0==PLUS) ) {
						alt462=1;
					}
					} finally {dbg.exitDecision(462);}

					switch (alt462) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:9: unaryOperator ( ws )?
							{
							dbg.location(1378,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom10113);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1378,23);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:23: ( ws )?
							int alt461=2;
							try { dbg.enterSubRule(461);
							try { dbg.enterDecision(461, decisionCanBacktrack[461]);

							int LA461_0 = input.LA(1);
							if ( (LA461_0==COMMENT||LA461_0==NL||LA461_0==WS) ) {
								alt461=1;
							}
							} finally {dbg.exitDecision(461);}

							switch (alt461) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:23: ws
									{
									dbg.location(1378,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom10115);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(461);}

							}
							break;

					}
					} finally {dbg.exitSubRule(462);}
					dbg.location(1378,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom10121); if (state.failed) return;dbg.location(1378,37);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:37: ( ws )?
					int alt463=2;
					try { dbg.enterSubRule(463);
					try { dbg.enterDecision(463, decisionCanBacktrack[463]);

					int LA463_0 = input.LA(1);
					if ( (LA463_0==COMMENT||LA463_0==NL||LA463_0==WS) ) {
						alt463=1;
					}
					} finally {dbg.exitDecision(463);}

					switch (alt463) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:37: ws
							{
							dbg.location(1378,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom10123);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(463);}
					dbg.location(1378,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom10126);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1378,60);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:60: ( ws )?
					int alt464=2;
					try { dbg.enterSubRule(464);
					try { dbg.enterDecision(464, decisionCanBacktrack[464]);

					int LA464_0 = input.LA(1);
					if ( (LA464_0==COMMENT||LA464_0==NL||LA464_0==WS) ) {
						alt464=1;
					}
					} finally {dbg.exitDecision(464);}

					switch (alt464) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1378:60: ws
							{
							dbg.location(1378,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom10128);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(464);}
					dbg.location(1378,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom10131); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1379, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1387:1: cp_mixin_declaration : ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1387, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1388:5: ( ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1389:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1389,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1389:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt477=2;
			try { dbg.enterSubRule(477);
			try { dbg.enterDecision(477, decisionCanBacktrack[477]);

			int LA477_0 = input.LA(1);
			if ( (LA477_0==DOT||LA477_0==HASH||LA477_0==LESS_AND) ) {
				alt477=1;
			}
			else if ( (LA477_0==SASS_MIXIN) ) {
				alt477=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 477, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(477);}

			switch (alt477) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:9: {...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1390,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1390,27);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:27: ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) )
					int alt470=2;
					try { dbg.enterSubRule(470);
					try { dbg.enterDecision(470, decisionCanBacktrack[470]);

					int LA470_0 = input.LA(1);
					if ( (LA470_0==LESS_AND) ) {
						alt470=1;
					}
					else if ( (LA470_0==DOT||LA470_0==HASH) ) {
						alt470=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 470, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(470);}

					switch (alt470) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:28: LESS_AND
							{
							dbg.location(1390,28);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_declaration10171); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							{
							dbg.location(1390,39);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:40: ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1390,40);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:40: ( ( DOT cp_mixin_name ) | HASH )
							int alt466=2;
							try { dbg.enterSubRule(466);
							try { dbg.enterDecision(466, decisionCanBacktrack[466]);

							int LA466_0 = input.LA(1);
							if ( (LA466_0==DOT) ) {
								alt466=1;
							}
							else if ( (LA466_0==HASH) ) {
								alt466=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 466, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(466);}

							switch (alt466) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:41: ( DOT cp_mixin_name )
									{
									dbg.location(1390,41);
									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:41: ( DOT cp_mixin_name )
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:42: DOT cp_mixin_name
									{
									dbg.location(1390,42);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration10178); if (state.failed) return;dbg.location(1390,46);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration10180);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:63: HASH
									{
									dbg.location(1390,63);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_declaration10185); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(466);}
							dbg.location(1390,69);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:69: ( ws )?
							int alt467=2;
							try { dbg.enterSubRule(467);
							try { dbg.enterDecision(467, decisionCanBacktrack[467]);

							int LA467_0 = input.LA(1);
							if ( (LA467_0==COMMENT||LA467_0==NL||LA467_0==WS) ) {
								alt467=1;
							}
							} finally {dbg.exitDecision(467);}

							switch (alt467) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:69: ws
									{
									dbg.location(1390,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration10188);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(467);}
							dbg.location(1390,73);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration10191); if (state.failed) return;dbg.location(1390,80);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:80: ( ws )?
							int alt468=2;
							try { dbg.enterSubRule(468);
							try { dbg.enterDecision(468, decisionCanBacktrack[468]);

							int LA468_0 = input.LA(1);
							if ( (LA468_0==COMMENT||LA468_0==NL||LA468_0==WS) ) {
								alt468=1;
							}
							} finally {dbg.exitDecision(468);}

							switch (alt468) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:80: ws
									{
									dbg.location(1390,80);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration10193);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(468);}
							dbg.location(1390,84);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:84: ( cp_args_list )?
							int alt469=2;
							try { dbg.enterSubRule(469);
							try { dbg.enterDecision(469, decisionCanBacktrack[469]);

							int LA469_0 = input.LA(1);
							if ( (LA469_0==AT_IDENT||(LA469_0 >= BOTTOMCENTER_SYM && LA469_0 <= BOTTOMRIGHT_SYM)||LA469_0==CHARSET_SYM||(LA469_0 >= COUNTER_STYLE_SYM && LA469_0 <= CP_DOTS)||LA469_0==FONT_FACE_SYM||LA469_0==IDENT||LA469_0==IMPORT_SYM||LA469_0==KEYFRAMES_SYM||(LA469_0 >= LEFTBOTTOM_SYM && LA469_0 <= LEFTTOP_SYM)||LA469_0==LESS_REST||LA469_0==MEDIA_SYM||LA469_0==MOZ_DOCUMENT_SYM||LA469_0==NAMESPACE_SYM||LA469_0==PAGE_SYM||(LA469_0 >= RIGHTBOTTOM_SYM && LA469_0 <= RIGHTTOP_SYM)||(LA469_0 >= SASS_AT_ROOT && LA469_0 <= SASS_DEBUG)||(LA469_0 >= SASS_EACH && LA469_0 <= SASS_ELSE)||LA469_0==SASS_EXTEND||(LA469_0 >= SASS_FOR && LA469_0 <= SASS_FUNCTION)||(LA469_0 >= SASS_IF && LA469_0 <= SASS_MIXIN)||(LA469_0 >= SASS_RETURN && LA469_0 <= SASS_WHILE)||(LA469_0 >= TOPCENTER_SYM && LA469_0 <= TOPRIGHT_SYM)||LA469_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt469=1;
							}
							} finally {dbg.exitDecision(469);}

							switch (alt469) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:84: cp_args_list
									{
									dbg.location(1390,84);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration10196);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(469);}
							dbg.location(1390,98);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration10199); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(470);}
					dbg.location(1390,107);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:107: ( ( ws )? less_mixin_guarded )?
					int alt472=2;
					try { dbg.enterSubRule(472);
					try { dbg.enterDecision(472, decisionCanBacktrack[472]);

					try {
						isCyclicDecision = true;
						alt472 = dfa472.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(472);}

					switch (alt472) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:108: ( ws )? less_mixin_guarded
							{
							dbg.location(1390,108);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:108: ( ws )?
							int alt471=2;
							try { dbg.enterSubRule(471);
							try { dbg.enterDecision(471, decisionCanBacktrack[471]);

							int LA471_0 = input.LA(1);
							if ( (LA471_0==COMMENT||LA471_0==NL||LA471_0==WS) ) {
								alt471=1;
							}
							} finally {dbg.exitDecision(471);}

							switch (alt471) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1390:108: ws
									{
									dbg.location(1390,108);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration10204);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(471);}
							dbg.location(1390,112);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration10207);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(472);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1392,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1392,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration10231); if (state.failed) return;dbg.location(1392,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration10233);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1392,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration10235);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1392,55);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt476=2;
					try { dbg.enterSubRule(476);
					try { dbg.enterDecision(476, decisionCanBacktrack[476]);

					try {
						isCyclicDecision = true;
						alt476 = dfa476.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(476);}

					switch (alt476) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1392,56);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:56: ( ws )?
							int alt473=2;
							try { dbg.enterSubRule(473);
							try { dbg.enterDecision(473, decisionCanBacktrack[473]);

							int LA473_0 = input.LA(1);
							if ( (LA473_0==COMMENT||LA473_0==NL||LA473_0==WS) ) {
								alt473=1;
							}
							} finally {dbg.exitDecision(473);}

							switch (alt473) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:56: ws
									{
									dbg.location(1392,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration10238);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(473);}
							dbg.location(1392,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration10241); if (state.failed) return;dbg.location(1392,67);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:67: ( ws )?
							int alt474=2;
							try { dbg.enterSubRule(474);
							try { dbg.enterDecision(474, decisionCanBacktrack[474]);

							int LA474_0 = input.LA(1);
							if ( (LA474_0==COMMENT||LA474_0==NL||LA474_0==WS) ) {
								alt474=1;
							}
							} finally {dbg.exitDecision(474);}

							switch (alt474) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:67: ws
									{
									dbg.location(1392,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration10243);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(474);}
							dbg.location(1392,71);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:71: ( cp_args_list )?
							int alt475=2;
							try { dbg.enterSubRule(475);
							try { dbg.enterDecision(475, decisionCanBacktrack[475]);

							int LA475_0 = input.LA(1);
							if ( (LA475_0==AT_IDENT||(LA475_0 >= BOTTOMCENTER_SYM && LA475_0 <= BOTTOMRIGHT_SYM)||LA475_0==CHARSET_SYM||(LA475_0 >= COUNTER_STYLE_SYM && LA475_0 <= CP_DOTS)||LA475_0==FONT_FACE_SYM||LA475_0==IDENT||LA475_0==IMPORT_SYM||LA475_0==KEYFRAMES_SYM||(LA475_0 >= LEFTBOTTOM_SYM && LA475_0 <= LEFTTOP_SYM)||LA475_0==LESS_REST||LA475_0==MEDIA_SYM||LA475_0==MOZ_DOCUMENT_SYM||LA475_0==NAMESPACE_SYM||LA475_0==PAGE_SYM||(LA475_0 >= RIGHTBOTTOM_SYM && LA475_0 <= RIGHTTOP_SYM)||(LA475_0 >= SASS_AT_ROOT && LA475_0 <= SASS_DEBUG)||(LA475_0 >= SASS_EACH && LA475_0 <= SASS_ELSE)||LA475_0==SASS_EXTEND||(LA475_0 >= SASS_FOR && LA475_0 <= SASS_FUNCTION)||(LA475_0 >= SASS_IF && LA475_0 <= SASS_MIXIN)||(LA475_0 >= SASS_RETURN && LA475_0 <= SASS_WHILE)||(LA475_0 >= TOPCENTER_SYM && LA475_0 <= TOPRIGHT_SYM)||LA475_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt475=1;
							}
							} finally {dbg.exitDecision(475);}

							switch (alt475) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1392:71: cp_args_list
									{
									dbg.location(1392,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration10246);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(475);}
							dbg.location(1392,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration10249); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(476);}

					}
					break;

			}
			} finally {dbg.exitSubRule(477);}
			dbg.location(1394,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1394:5: ( ws )?
			int alt478=2;
			try { dbg.enterSubRule(478);
			try { dbg.enterDecision(478, decisionCanBacktrack[478]);

			int LA478_0 = input.LA(1);
			if ( (LA478_0==COMMENT||LA478_0==NL||LA478_0==WS) ) {
				alt478=1;
			}
			} finally {dbg.exitDecision(478);}

			switch (alt478) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1394:5: ws
					{
					dbg.location(1394,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration10263);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(478);}
			dbg.location(1394,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration10266);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1395, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1399:1: cp_mixin_call : ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1399, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1400:5: ( ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1401:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1401,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1401:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt494=2;
			try { dbg.enterSubRule(494);
			try { dbg.enterDecision(494, decisionCanBacktrack[494]);

			int LA494_0 = input.LA(1);
			if ( (LA494_0==AT_IDENT||LA494_0==DOT||LA494_0==HASH||LA494_0==LESS_AND) ) {
				alt494=1;
			}
			else if ( (LA494_0==SASS_INCLUDE) ) {
				alt494=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 494, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(494);}

			switch (alt494) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:9: {...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					{
					dbg.location(1402,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1402,27);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:27: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
					int alt479=4;
					try { dbg.enterSubRule(479);
					try { dbg.enterDecision(479, decisionCanBacktrack[479]);

					switch ( input.LA(1) ) {
					case DOT:
						{
						alt479=1;
						}
						break;
					case HASH:
						{
						alt479=2;
						}
						break;
					case AT_IDENT:
						{
						alt479=3;
						}
						break;
					case LESS_AND:
						{
						alt479=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 479, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(479);}

					switch (alt479) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:28: DOT cp_mixin_name
							{
							dbg.location(1402,28);
							match(input,DOT,FOLLOW_DOT_in_cp_mixin_call10302); if (state.failed) return;dbg.location(1402,32);
							pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call10304);
							cp_mixin_name();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:48: HASH
							{
							dbg.location(1402,48);
							match(input,HASH,FOLLOW_HASH_in_cp_mixin_call10308); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:55: AT_IDENT
							{
							dbg.location(1402,55);
							match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call10312); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:66: LESS_AND
							{
							dbg.location(1402,66);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call10316); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(479);}
					dbg.location(1402,76);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:76: ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )*
					try { dbg.enterSubRule(483);

					loop483:
					while (true) {
						int alt483=2;
						try { dbg.enterDecision(483, decisionCanBacktrack[483]);

						int LA483_0 = input.LA(1);
						if ( (LA483_0==COMMENT||LA483_0==NL||LA483_0==WS) ) {
							int LA483_2 = input.LA(2);
							if ( (synpred64_Css3()) ) {
								alt483=1;
							}

						}
						else if ( (LA483_0==GREATER||LA483_0==PLUS||LA483_0==TILDE) ) {
							int LA483_14 = input.LA(2);
							if ( (synpred64_Css3()) ) {
								alt483=1;
							}

						}

						} finally {dbg.exitDecision(483);}

						switch (alt483) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:77: ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							{
							dbg.location(1402,101);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:101: ( ws )?
							int alt480=2;
							try { dbg.enterSubRule(480);
							try { dbg.enterDecision(480, decisionCanBacktrack[480]);

							int LA480_0 = input.LA(1);
							if ( (LA480_0==COMMENT||LA480_0==NL||LA480_0==WS) ) {
								alt480=1;
							}
							} finally {dbg.exitDecision(480);}

							switch (alt480) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:101: ws
									{
									dbg.location(1402,101);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10332);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(480);}
							dbg.location(1402,105);
							pushFollow(FOLLOW_combinator_in_cp_mixin_call10335);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(1402,116);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:116: ( ws )?
							int alt481=2;
							try { dbg.enterSubRule(481);
							try { dbg.enterDecision(481, decisionCanBacktrack[481]);

							int LA481_0 = input.LA(1);
							if ( (LA481_0==COMMENT||LA481_0==NL||LA481_0==WS) ) {
								alt481=1;
							}
							} finally {dbg.exitDecision(481);}

							switch (alt481) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:116: ws
									{
									dbg.location(1402,116);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10337);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(481);}
							dbg.location(1402,120);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:120: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							int alt482=4;
							try { dbg.enterSubRule(482);
							try { dbg.enterDecision(482, decisionCanBacktrack[482]);

							switch ( input.LA(1) ) {
							case DOT:
								{
								alt482=1;
								}
								break;
							case HASH:
								{
								alt482=2;
								}
								break;
							case AT_IDENT:
								{
								alt482=3;
								}
								break;
							case LESS_AND:
								{
								alt482=4;
								}
								break;
							default:
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 482, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(482);}

							switch (alt482) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:121: DOT cp_mixin_name
									{
									dbg.location(1402,121);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_call10341); if (state.failed) return;dbg.location(1402,125);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call10343);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:141: HASH
									{
									dbg.location(1402,141);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_call10347); if (state.failed) return;
									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:148: AT_IDENT
									{
									dbg.location(1402,148);
									match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call10351); if (state.failed) return;
									}
									break;
								case 4 :
									dbg.enterAlt(4);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:159: LESS_AND
									{
									dbg.location(1402,159);
									match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call10355); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(482);}

							}
							break;

						default :
							break loop483;
						}
					}
					} finally {dbg.exitSubRule(483);}
					dbg.location(1402,171);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:171: ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					int alt487=3;
					try { dbg.enterSubRule(487);
					try { dbg.enterDecision(487, decisionCanBacktrack[487]);

					int LA487_0 = input.LA(1);
					if ( (LA487_0==COLON||LA487_0==DCOLON) ) {
						int LA487_1 = input.LA(2);
						if ( (synpred65_Css3()) ) {
							alt487=1;
						}
					}
					else if ( (LA487_0==COMMENT||LA487_0==NL||LA487_0==WS) ) {
						int LA487_2 = input.LA(2);
						if ( (synpred66_Css3()) ) {
							alt487=2;
						}
					}
					else if ( (LA487_0==LPAREN) && (synpred66_Css3())) {
						alt487=2;
					}
					} finally {dbg.exitDecision(487);}

					switch (alt487) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:172: ( pseudo )=> pseudo
							{
							dbg.location(1402,182);
							pushFollow(FOLLOW_pseudo_in_cp_mixin_call10365);
							pseudo();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:191: ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							{
							dbg.location(1402,205);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:205: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:206: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1402,206);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:206: ( ws )?
							int alt484=2;
							try { dbg.enterSubRule(484);
							try { dbg.enterDecision(484, decisionCanBacktrack[484]);

							int LA484_0 = input.LA(1);
							if ( (LA484_0==COMMENT||LA484_0==NL||LA484_0==WS) ) {
								alt484=1;
							}
							} finally {dbg.exitDecision(484);}

							switch (alt484) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:206: ws
									{
									dbg.location(1402,206);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10377);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(484);}
							dbg.location(1402,210);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call10380); if (state.failed) return;dbg.location(1402,217);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:217: ( ws )?
							int alt485=2;
							try { dbg.enterSubRule(485);
							try { dbg.enterDecision(485, decisionCanBacktrack[485]);

							int LA485_0 = input.LA(1);
							if ( (LA485_0==COMMENT||LA485_0==NL||LA485_0==WS) ) {
								alt485=1;
							}
							} finally {dbg.exitDecision(485);}

							switch (alt485) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:217: ws
									{
									dbg.location(1402,217);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10382);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(485);}
							dbg.location(1402,221);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:221: ( cp_mixin_call_args )?
							int alt486=2;
							try { dbg.enterSubRule(486);
							try { dbg.enterDecision(486, decisionCanBacktrack[486]);

							int LA486_0 = input.LA(1);
							if ( ((LA486_0 >= ANGLE && LA486_0 <= AT_SIGN)||(LA486_0 >= BOTTOMCENTER_SYM && LA486_0 <= BOTTOMRIGHT_SYM)||LA486_0==CHARSET_SYM||LA486_0==COUNTER_STYLE_SYM||LA486_0==DIMENSION||LA486_0==EMS||LA486_0==EXS||(LA486_0 >= FONT_FACE_SYM && LA486_0 <= FREQ)||LA486_0==GEN||(LA486_0 >= HASH && LA486_0 <= HASH_SYMBOL)||(LA486_0 >= IDENT && LA486_0 <= IMPORT_SYM)||LA486_0==KEYFRAMES_SYM||(LA486_0 >= LBRACE && LA486_0 <= LENGTH)||(LA486_0 >= LESS_AND && LA486_0 <= LESS_JS_STRING)||LA486_0==LPAREN||(LA486_0 >= MEDIA_SYM && LA486_0 <= MOZ_DOCUMENT_SYM)||LA486_0==NAMESPACE_SYM||(LA486_0 >= NOT && LA486_0 <= NUMBER)||(LA486_0 >= PAGE_SYM && LA486_0 <= PERCENTAGE_SYMBOL)||LA486_0==PLUS||(LA486_0 >= REM && LA486_0 <= RIGHTTOP_SYM)||(LA486_0 >= SASS_AT_ROOT && LA486_0 <= SASS_DEBUG)||(LA486_0 >= SASS_EACH && LA486_0 <= SASS_ELSE)||LA486_0==SASS_EXTEND||(LA486_0 >= SASS_FOR && LA486_0 <= SASS_FUNCTION)||(LA486_0 >= SASS_IF && LA486_0 <= SASS_MIXIN)||(LA486_0 >= SASS_RETURN && LA486_0 <= SASS_WHILE)||LA486_0==STRING||(LA486_0 >= TILDE && LA486_0 <= TOPRIGHT_SYM)||(LA486_0 >= URANGE && LA486_0 <= URI)||LA486_0==VARIABLE||LA486_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt486=1;
							}
							} finally {dbg.exitDecision(486);}

							switch (alt486) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:221: cp_mixin_call_args
									{
									dbg.location(1402,221);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call10385);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(486);}
							dbg.location(1402,241);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call10388); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(487);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1404,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1404,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call10413); if (state.failed) return;dbg.location(1404,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call10415);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1404,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call10417);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1404,57);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt491=2;
					try { dbg.enterSubRule(491);
					try { dbg.enterDecision(491, decisionCanBacktrack[491]);

					try {
						isCyclicDecision = true;
						alt491 = dfa491.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(491);}

					switch (alt491) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1404,58);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:58: ( ws )?
							int alt488=2;
							try { dbg.enterSubRule(488);
							try { dbg.enterDecision(488, decisionCanBacktrack[488]);

							int LA488_0 = input.LA(1);
							if ( (LA488_0==COMMENT||LA488_0==NL||LA488_0==WS) ) {
								alt488=1;
							}
							} finally {dbg.exitDecision(488);}

							switch (alt488) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:58: ws
									{
									dbg.location(1404,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10420);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(488);}
							dbg.location(1404,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call10423); if (state.failed) return;dbg.location(1404,69);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:69: ( ws )?
							int alt489=2;
							try { dbg.enterSubRule(489);
							try { dbg.enterDecision(489, decisionCanBacktrack[489]);

							int LA489_0 = input.LA(1);
							if ( (LA489_0==COMMENT||LA489_0==NL||LA489_0==WS) ) {
								alt489=1;
							}
							} finally {dbg.exitDecision(489);}

							switch (alt489) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:69: ws
									{
									dbg.location(1404,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10425);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(489);}
							dbg.location(1404,73);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:73: ( cp_mixin_call_args )?
							int alt490=2;
							try { dbg.enterSubRule(490);
							try { dbg.enterDecision(490, decisionCanBacktrack[490]);

							int LA490_0 = input.LA(1);
							if ( ((LA490_0 >= ANGLE && LA490_0 <= AT_SIGN)||(LA490_0 >= BOTTOMCENTER_SYM && LA490_0 <= BOTTOMRIGHT_SYM)||LA490_0==CHARSET_SYM||LA490_0==COUNTER_STYLE_SYM||LA490_0==DIMENSION||LA490_0==EMS||LA490_0==EXS||(LA490_0 >= FONT_FACE_SYM && LA490_0 <= FREQ)||LA490_0==GEN||(LA490_0 >= HASH && LA490_0 <= HASH_SYMBOL)||(LA490_0 >= IDENT && LA490_0 <= IMPORT_SYM)||LA490_0==KEYFRAMES_SYM||(LA490_0 >= LBRACE && LA490_0 <= LENGTH)||(LA490_0 >= LESS_AND && LA490_0 <= LESS_JS_STRING)||LA490_0==LPAREN||(LA490_0 >= MEDIA_SYM && LA490_0 <= MOZ_DOCUMENT_SYM)||LA490_0==NAMESPACE_SYM||(LA490_0 >= NOT && LA490_0 <= NUMBER)||(LA490_0 >= PAGE_SYM && LA490_0 <= PERCENTAGE_SYMBOL)||LA490_0==PLUS||(LA490_0 >= REM && LA490_0 <= RIGHTTOP_SYM)||(LA490_0 >= SASS_AT_ROOT && LA490_0 <= SASS_DEBUG)||(LA490_0 >= SASS_EACH && LA490_0 <= SASS_ELSE)||LA490_0==SASS_EXTEND||(LA490_0 >= SASS_FOR && LA490_0 <= SASS_FUNCTION)||(LA490_0 >= SASS_IF && LA490_0 <= SASS_MIXIN)||(LA490_0 >= SASS_RETURN && LA490_0 <= SASS_WHILE)||LA490_0==STRING||(LA490_0 >= TILDE && LA490_0 <= TOPRIGHT_SYM)||(LA490_0 >= URANGE && LA490_0 <= URI)||LA490_0==VARIABLE||LA490_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt490=1;
							}
							} finally {dbg.exitDecision(490);}

							switch (alt490) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:73: cp_mixin_call_args
									{
									dbg.location(1404,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call10428);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(490);}
							dbg.location(1404,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call10431); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(491);}
					dbg.location(1404,102);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:102: ( ( ws )? cp_mixin_block )?
					int alt493=2;
					try { dbg.enterSubRule(493);
					try { dbg.enterDecision(493, decisionCanBacktrack[493]);

					try {
						isCyclicDecision = true;
						alt493 = dfa493.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(493);}

					switch (alt493) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:103: ( ws )? cp_mixin_block
							{
							dbg.location(1404,103);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:103: ( ws )?
							int alt492=2;
							try { dbg.enterSubRule(492);
							try { dbg.enterDecision(492, decisionCanBacktrack[492]);

							int LA492_0 = input.LA(1);
							if ( (LA492_0==COMMENT||LA492_0==NL||LA492_0==WS) ) {
								alt492=1;
							}
							} finally {dbg.exitDecision(492);}

							switch (alt492) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1404:103: ws
									{
									dbg.location(1404,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10436);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(492);}
							dbg.location(1404,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call10439);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(493);}

					}
					break;

			}
			} finally {dbg.exitSubRule(494);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1406, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1408:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1408, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1409:5: ( LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1410:5: LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE
			{
			dbg.location(1410,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block10468); if (state.failed) return;dbg.location(1410,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1410:12: ( ws )?
			int alt495=2;
			try { dbg.enterSubRule(495);
			try { dbg.enterDecision(495, decisionCanBacktrack[495]);

			int LA495_0 = input.LA(1);
			if ( (LA495_0==COMMENT||LA495_0==NL||LA495_0==WS) ) {
				alt495=1;
			}
			} finally {dbg.exitDecision(495);}

			switch (alt495) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1410:12: ws
					{
					dbg.location(1410,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block10470);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(495);}
			dbg.location(1410,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block10473);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1411,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1411:9: ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )?
			int alt498=3;
			try { dbg.enterSubRule(498);
			try { dbg.enterDecision(498, decisionCanBacktrack[498]);

			int LA498_0 = input.LA(1);
			if ( ((LA498_0 >= AT_IDENT && LA498_0 <= AT_SIGN)||(LA498_0 >= BOTTOMCENTER_SYM && LA498_0 <= BOTTOMRIGHT_SYM)||(LA498_0 >= CHARSET_SYM && LA498_0 <= COLON)||LA498_0==CONTAINER_SYM||LA498_0==COUNTER_STYLE_SYM||(LA498_0 >= DCOLON && LA498_0 <= DOT)||LA498_0==FONT_FACE_SYM||(LA498_0 >= GEN && LA498_0 <= GREATER)||(LA498_0 >= HASH && LA498_0 <= HASH_SYMBOL)||LA498_0==IMPORT_SYM||LA498_0==KEYFRAMES_SYM||LA498_0==LAYER_SYM||(LA498_0 >= LBRACKET && LA498_0 <= LEFTTOP_SYM)||LA498_0==LESS_AND||(LA498_0 >= MEDIA_SYM && LA498_0 <= MOZ_DOCUMENT_SYM)||LA498_0==NAMESPACE_SYM||LA498_0==PAGE_SYM||(LA498_0 >= PIPE && LA498_0 <= PLUS)||(LA498_0 >= RIGHTBOTTOM_SYM && LA498_0 <= RIGHTTOP_SYM)||LA498_0==SASS_AT_ROOT||LA498_0==SASS_DEBUG||(LA498_0 >= SASS_EACH && LA498_0 <= SASS_ELSE)||(LA498_0 >= SASS_ERROR && LA498_0 <= SASS_FUNCTION)||(LA498_0 >= SASS_IF && LA498_0 <= SASS_MIXIN)||(LA498_0 >= SASS_RETURN && LA498_0 <= SEMI)||LA498_0==STAR||LA498_0==SUPPORTS_SYM||LA498_0==TILDE||(LA498_0 >= TOPCENTER_SYM && LA498_0 <= TOPRIGHT_SYM)||LA498_0==VARIABLE||LA498_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt498=1;
			}
			else if ( (LA498_0==IDENT) ) {
				int LA498_4 = input.LA(2);
				if ( (true) ) {
					alt498=1;
				}
				else if ( (((evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")||evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")"))&&synpred67_Css3())) ) {
					alt498=2;
				}
			}
			else if ( (LA498_0==SASS_CONTENT) ) {
				int LA498_39 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt498=1;
				}
				else if ( ((synpred67_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt498=2;
				}
			}
			else if ( (LA498_0==PERCENTAGE) && (synpred67_Css3())) {
				alt498=2;
			}
			else if ( (LA498_0==RBRACE) ) {
				int LA498_45 = input.LA(2);
				if ( (synpred67_Css3()) ) {
					alt498=2;
				}
			}
			} finally {dbg.exitDecision(498);}

			switch (alt498) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1411:10: declarations
					{
					dbg.location(1411,10);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block10484);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1411:25: ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )*
					{
					dbg.location(1412,3);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1412:3: ( webkitKeyframesBlock ( ws )? )*
					try { dbg.enterSubRule(497);

					loop497:
					while (true) {
						int alt497=2;
						try { dbg.enterDecision(497, decisionCanBacktrack[497]);

						int LA497_0 = input.LA(1);
						if ( (LA497_0==IDENT||LA497_0==PERCENTAGE||LA497_0==SASS_CONTENT) ) {
							alt497=1;
						}

						} finally {dbg.exitDecision(497);}

						switch (alt497) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1412:5: webkitKeyframesBlock ( ws )?
							{
							dbg.location(1412,5);
							pushFollow(FOLLOW_webkitKeyframesBlock_in_cp_mixin_block10499);
							webkitKeyframesBlock();
							state._fsp--;
							if (state.failed) return;dbg.location(1412,26);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1412:26: ( ws )?
							int alt496=2;
							try { dbg.enterSubRule(496);
							try { dbg.enterDecision(496, decisionCanBacktrack[496]);

							int LA496_0 = input.LA(1);
							if ( (LA496_0==COMMENT||LA496_0==NL||LA496_0==WS) ) {
								alt496=1;
							}
							} finally {dbg.exitDecision(496);}

							switch (alt496) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1412:26: ws
									{
									dbg.location(1412,26);
									pushFollow(FOLLOW_ws_in_cp_mixin_block10501);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(496);}

							}
							break;

						default :
							break loop497;
						}
					}
					} finally {dbg.exitSubRule(497);}

					}
					break;

			}
			} finally {dbg.exitSubRule(498);}
			dbg.location(1413,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block10513); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1414, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1416:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1416, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1417:5: ( IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1418:5: IDENT
			{
			dbg.location(1418,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name10534); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1419, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1421:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1421, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1422:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )?
			{
			dbg.location(1425,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10565);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1425,23);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(500);

			loop500:
			while (true) {
				int alt500=2;
				try { dbg.enterDecision(500, decisionCanBacktrack[500]);

				int LA500_0 = input.LA(1);
				if ( (LA500_0==SEMI) ) {
					int LA500_2 = input.LA(2);
					if ( ((LA500_2 >= ANGLE && LA500_2 <= AT_SIGN)||(LA500_2 >= BOTTOMCENTER_SYM && LA500_2 <= BOTTOMRIGHT_SYM)||LA500_2==CHARSET_SYM||LA500_2==COMMENT||LA500_2==COUNTER_STYLE_SYM||LA500_2==DIMENSION||LA500_2==EMS||LA500_2==EXS||(LA500_2 >= FONT_FACE_SYM && LA500_2 <= FREQ)||LA500_2==GEN||(LA500_2 >= HASH && LA500_2 <= HASH_SYMBOL)||(LA500_2 >= IDENT && LA500_2 <= IMPORT_SYM)||LA500_2==KEYFRAMES_SYM||(LA500_2 >= LBRACE && LA500_2 <= LENGTH)||(LA500_2 >= LESS_AND && LA500_2 <= LESS_JS_STRING)||LA500_2==LPAREN||(LA500_2 >= MEDIA_SYM && LA500_2 <= MOZ_DOCUMENT_SYM)||(LA500_2 >= NAMESPACE_SYM && LA500_2 <= NL)||(LA500_2 >= NOT && LA500_2 <= NUMBER)||(LA500_2 >= PAGE_SYM && LA500_2 <= PERCENTAGE_SYMBOL)||LA500_2==PLUS||(LA500_2 >= REM && LA500_2 <= RIGHTTOP_SYM)||(LA500_2 >= SASS_AT_ROOT && LA500_2 <= SASS_DEBUG)||(LA500_2 >= SASS_EACH && LA500_2 <= SASS_ELSE)||LA500_2==SASS_EXTEND||(LA500_2 >= SASS_FOR && LA500_2 <= SASS_FUNCTION)||(LA500_2 >= SASS_IF && LA500_2 <= SASS_MIXIN)||(LA500_2 >= SASS_RETURN && LA500_2 <= SASS_WHILE)||LA500_2==STRING||(LA500_2 >= TILDE && LA500_2 <= TOPRIGHT_SYM)||(LA500_2 >= URANGE && LA500_2 <= URI)||LA500_2==VARIABLE||(LA500_2 >= WEBKIT_KEYFRAMES_SYM && LA500_2 <= WS)) ) {
						alt500=1;
					}

				}
				else if ( (LA500_0==COMMA) ) {
					alt500=1;
				}

				} finally {dbg.exitDecision(500);}

				switch (alt500) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1425,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1425,40);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:40: ( ws )?
					int alt499=2;
					try { dbg.enterSubRule(499);
					try { dbg.enterDecision(499, decisionCanBacktrack[499]);

					int LA499_0 = input.LA(1);
					if ( (LA499_0==COMMENT||LA499_0==NL||LA499_0==WS) ) {
						alt499=1;
					}
					} finally {dbg.exitDecision(499);}

					switch (alt499) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:40: ws
							{
							dbg.location(1425,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args10577);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(499);}
					dbg.location(1425,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10580);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop500;
				}
			}
			} finally {dbg.exitSubRule(500);}
			dbg.location(1425,65);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:65: ( CP_DOTS ( ws )? )?
			int alt502=2;
			try { dbg.enterSubRule(502);
			try { dbg.enterDecision(502, decisionCanBacktrack[502]);

			int LA502_0 = input.LA(1);
			if ( (LA502_0==CP_DOTS) ) {
				alt502=1;
			}
			} finally {dbg.exitDecision(502);}

			switch (alt502) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:66: CP_DOTS ( ws )?
					{
					dbg.location(1425,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args10586); if (state.failed) return;dbg.location(1425,74);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:74: ( ws )?
					int alt501=2;
					try { dbg.enterSubRule(501);
					try { dbg.enterDecision(501, decisionCanBacktrack[501]);

					int LA501_0 = input.LA(1);
					if ( (LA501_0==COMMENT||LA501_0==NL||LA501_0==WS) ) {
						alt501=1;
					}
					} finally {dbg.exitDecision(501);}

					switch (alt501) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:74: ws
							{
							dbg.location(1425,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args10588);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(501);}

					}
					break;

			}
			} finally {dbg.exitSubRule(502);}
			dbg.location(1425,80);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:80: ( SEMI )?
			int alt503=2;
			try { dbg.enterSubRule(503);
			try { dbg.enterDecision(503, decisionCanBacktrack[503]);

			int LA503_0 = input.LA(1);
			if ( (LA503_0==SEMI) ) {
				alt503=1;
			}
			} finally {dbg.exitDecision(503);}

			switch (alt503) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1425:80: SEMI
					{
					dbg.location(1425,80);
					match(input,SEMI,FOLLOW_SEMI_in_cp_mixin_call_args10593); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(503);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1426, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1428:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1428, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1429:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1430:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1430,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1430:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt506=2;
			try { dbg.enterSubRule(506);
			try { dbg.enterDecision(506, decisionCanBacktrack[506]);

			try {
				isCyclicDecision = true;
				alt506 = dfa506.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(506);}

			switch (alt506) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1431:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1431,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg10625);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1431,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1431:21: ( ws )?
					int alt504=2;
					try { dbg.enterSubRule(504);
					try { dbg.enterDecision(504, decisionCanBacktrack[504]);

					int LA504_0 = input.LA(1);
					if ( (LA504_0==COMMENT||LA504_0==NL||LA504_0==WS) ) {
						alt504=1;
					}
					} finally {dbg.exitDecision(504);}

					switch (alt504) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1431:21: ws
							{
							dbg.location(1431,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10627);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(504);}
					dbg.location(1431,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg10630); if (state.failed) return;dbg.location(1431,31);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1431:31: ( ws )?
					int alt505=2;
					try { dbg.enterSubRule(505);
					try { dbg.enterDecision(505, decisionCanBacktrack[505]);

					int LA505_0 = input.LA(1);
					if ( (LA505_0==COMMENT||LA505_0==NL||LA505_0==WS) ) {
						alt505=1;
					}
					} finally {dbg.exitDecision(505);}

					switch (alt505) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1431:31: ws
							{
							dbg.location(1431,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10632);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(505);}
					dbg.location(1431,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg10635);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1432:11: cp_expression
					{
					dbg.location(1432,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg10647);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(506);}
			dbg.location(1433,7);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1433:7: ( ws )?
			int alt507=2;
			try { dbg.enterSubRule(507);
			try { dbg.enterDecision(507, decisionCanBacktrack[507]);

			int LA507_0 = input.LA(1);
			if ( (LA507_0==COMMENT||LA507_0==NL||LA507_0==WS) ) {
				alt507=1;
			}
			} finally {dbg.exitDecision(507);}

			switch (alt507) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1433:7: ws
					{
					dbg.location(1433,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10655);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(507);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1434, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1437:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1437, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1438:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt515=2;
			try { dbg.enterDecision(515, decisionCanBacktrack[515]);

			int LA515_0 = input.LA(1);
			if ( (LA515_0==AT_IDENT||(LA515_0 >= BOTTOMCENTER_SYM && LA515_0 <= BOTTOMRIGHT_SYM)||LA515_0==CHARSET_SYM||LA515_0==COUNTER_STYLE_SYM||LA515_0==FONT_FACE_SYM||LA515_0==IDENT||LA515_0==IMPORT_SYM||LA515_0==KEYFRAMES_SYM||(LA515_0 >= LEFTBOTTOM_SYM && LA515_0 <= LEFTTOP_SYM)||LA515_0==MEDIA_SYM||LA515_0==MOZ_DOCUMENT_SYM||LA515_0==NAMESPACE_SYM||LA515_0==PAGE_SYM||(LA515_0 >= RIGHTBOTTOM_SYM && LA515_0 <= RIGHTTOP_SYM)||(LA515_0 >= SASS_AT_ROOT && LA515_0 <= SASS_DEBUG)||(LA515_0 >= SASS_EACH && LA515_0 <= SASS_ELSE)||LA515_0==SASS_EXTEND||(LA515_0 >= SASS_FOR && LA515_0 <= SASS_FUNCTION)||(LA515_0 >= SASS_IF && LA515_0 <= SASS_MIXIN)||(LA515_0 >= SASS_RETURN && LA515_0 <= SASS_WHILE)||(LA515_0 >= TOPCENTER_SYM && LA515_0 <= TOPRIGHT_SYM)||LA515_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt515=1;
			}
			else if ( (LA515_0==CP_DOTS||LA515_0==LESS_REST) ) {
				alt515=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 515, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(515);}

			switch (alt515) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1445,5);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1445,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list10702);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1445,14);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(509);

					loop509:
					while (true) {
						int alt509=2;
						try { dbg.enterDecision(509, decisionCanBacktrack[509]);

						try {
							isCyclicDecision = true;
							alt509 = dfa509.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(509);}

						switch (alt509) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1445,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1445,33);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:33: ( ws )?
							int alt508=2;
							try { dbg.enterSubRule(508);
							try { dbg.enterDecision(508, decisionCanBacktrack[508]);

							int LA508_0 = input.LA(1);
							if ( (LA508_0==COMMENT||LA508_0==NL||LA508_0==WS) ) {
								alt508=1;
							}
							} finally {dbg.exitDecision(508);}

							switch (alt508) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:33: ws
									{
									dbg.location(1445,33);
									pushFollow(FOLLOW_ws_in_cp_args_list10716);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(508);}
							dbg.location(1445,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list10719);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop509;
						}
					}
					} finally {dbg.exitSubRule(509);}
					dbg.location(1445,47);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt511=2;
					try { dbg.enterSubRule(511);
					try { dbg.enterDecision(511, decisionCanBacktrack[511]);

					int LA511_0 = input.LA(1);
					if ( (LA511_0==COMMA||LA511_0==SEMI) ) {
						alt511=1;
					}
					} finally {dbg.exitDecision(511);}

					switch (alt511) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1445,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1445,64);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:64: ( ws )?
							int alt510=2;
							try { dbg.enterSubRule(510);
							try { dbg.enterDecision(510, decisionCanBacktrack[510]);

							int LA510_0 = input.LA(1);
							if ( (LA510_0==COMMENT||LA510_0==NL||LA510_0==WS) ) {
								alt510=1;
							}
							} finally {dbg.exitDecision(510);}

							switch (alt510) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:64: ws
									{
									dbg.location(1445,64);
									pushFollow(FOLLOW_ws_in_cp_args_list10734);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(510);}

							}
							break;

					}
					} finally {dbg.exitSubRule(511);}
					dbg.location(1445,71);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt513=2;
					try { dbg.enterSubRule(513);
					try { dbg.enterDecision(513, decisionCanBacktrack[513]);

					int LA513_0 = input.LA(1);
					if ( (LA513_0==CP_DOTS||LA513_0==LESS_REST) ) {
						alt513=1;
					}
					} finally {dbg.exitDecision(513);}

					switch (alt513) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1445,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1445,95);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:95: ( ws )?
							int alt512=2;
							try { dbg.enterSubRule(512);
							try { dbg.enterDecision(512, decisionCanBacktrack[512]);

							int LA512_0 = input.LA(1);
							if ( (LA512_0==COMMENT||LA512_0==NL||LA512_0==WS) ) {
								alt512=1;
							}
							} finally {dbg.exitDecision(512);}

							switch (alt512) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1445:95: ws
									{
									dbg.location(1445,95);
									pushFollow(FOLLOW_ws_in_cp_args_list10750);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(512);}

							}
							break;

					}
					} finally {dbg.exitSubRule(513);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1447:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1447,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1447,27);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1447:27: ( ws )?
					int alt514=2;
					try { dbg.enterSubRule(514);
					try { dbg.enterDecision(514, decisionCanBacktrack[514]);

					int LA514_0 = input.LA(1);
					if ( (LA514_0==COMMENT||LA514_0==NL||LA514_0==WS) ) {
						alt514=1;
					}
					} finally {dbg.exitDecision(514);}

					switch (alt514) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1447:27: ws
							{
							dbg.location(1447,27);
							pushFollow(FOLLOW_ws_in_cp_args_list10775);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(514);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1448, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1451:1: cp_arg : ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT );
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1451, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1452:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT )
			int alt520=2;
			try { dbg.enterDecision(520, decisionCanBacktrack[520]);

			int LA520_0 = input.LA(1);
			if ( (LA520_0==AT_IDENT||(LA520_0 >= BOTTOMCENTER_SYM && LA520_0 <= BOTTOMRIGHT_SYM)||LA520_0==CHARSET_SYM||LA520_0==COUNTER_STYLE_SYM||LA520_0==FONT_FACE_SYM||LA520_0==IMPORT_SYM||LA520_0==KEYFRAMES_SYM||(LA520_0 >= LEFTBOTTOM_SYM && LA520_0 <= LEFTTOP_SYM)||LA520_0==MEDIA_SYM||LA520_0==MOZ_DOCUMENT_SYM||LA520_0==NAMESPACE_SYM||LA520_0==PAGE_SYM||(LA520_0 >= RIGHTBOTTOM_SYM && LA520_0 <= RIGHTTOP_SYM)||(LA520_0 >= SASS_AT_ROOT && LA520_0 <= SASS_DEBUG)||(LA520_0 >= SASS_EACH && LA520_0 <= SASS_ELSE)||LA520_0==SASS_EXTEND||(LA520_0 >= SASS_FOR && LA520_0 <= SASS_FUNCTION)||(LA520_0 >= SASS_IF && LA520_0 <= SASS_MIXIN)||(LA520_0 >= SASS_RETURN && LA520_0 <= SASS_WHILE)||(LA520_0 >= TOPCENTER_SYM && LA520_0 <= TOPRIGHT_SYM)||LA520_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt520=1;
			}
			else if ( (LA520_0==IDENT) ) {
				int LA520_2 = input.LA(2);
				if ( (LA520_2==DOT) ) {
					alt520=1;
				}
				else if ( (LA520_2==COMMA||LA520_2==CP_DOTS||LA520_2==LESS_REST||LA520_2==RPAREN||LA520_2==SEMI) ) {
					alt520=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 520, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 520, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(520);}

			switch (alt520) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
					{
					dbg.location(1453,5);
					pushFollow(FOLLOW_cp_variable_in_cp_arg10798);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1453,17);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:17: ( ws )?
					int alt516=2;
					try { dbg.enterSubRule(516);
					try { dbg.enterDecision(516, decisionCanBacktrack[516]);

					int LA516_0 = input.LA(1);
					if ( (LA516_0==COMMENT||LA516_0==NL||LA516_0==WS) ) {
						alt516=1;
					}
					} finally {dbg.exitDecision(516);}

					switch (alt516) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:17: ws
							{
							dbg.location(1453,17);
							pushFollow(FOLLOW_ws_in_cp_arg10800);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(516);}
					dbg.location(1453,21);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:21: ( COLON ( ws )? cp_expression ( ws )? )?
					int alt519=2;
					try { dbg.enterSubRule(519);
					try { dbg.enterDecision(519, decisionCanBacktrack[519]);

					int LA519_0 = input.LA(1);
					if ( (LA519_0==COLON) ) {
						alt519=1;
					}
					} finally {dbg.exitDecision(519);}

					switch (alt519) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:23: COLON ( ws )? cp_expression ( ws )?
							{
							dbg.location(1453,23);
							match(input,COLON,FOLLOW_COLON_in_cp_arg10805); if (state.failed) return;dbg.location(1453,29);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:29: ( ws )?
							int alt517=2;
							try { dbg.enterSubRule(517);
							try { dbg.enterDecision(517, decisionCanBacktrack[517]);

							int LA517_0 = input.LA(1);
							if ( (LA517_0==COMMENT||LA517_0==NL||LA517_0==WS) ) {
								alt517=1;
							}
							} finally {dbg.exitDecision(517);}

							switch (alt517) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:29: ws
									{
									dbg.location(1453,29);
									pushFollow(FOLLOW_ws_in_cp_arg10807);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(517);}
							dbg.location(1453,33);
							pushFollow(FOLLOW_cp_expression_in_cp_arg10810);
							cp_expression();
							state._fsp--;
							if (state.failed) return;dbg.location(1453,47);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:47: ( ws )?
							int alt518=2;
							try { dbg.enterSubRule(518);
							try { dbg.enterDecision(518, decisionCanBacktrack[518]);

							int LA518_0 = input.LA(1);
							if ( (LA518_0==COMMENT||LA518_0==NL||LA518_0==WS) ) {
								alt518=1;
							}
							} finally {dbg.exitDecision(518);}

							switch (alt518) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1453:47: ws
									{
									dbg.location(1453,47);
									pushFollow(FOLLOW_ws_in_cp_arg10812);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(518);}

							}
							break;

					}
					} finally {dbg.exitSubRule(519);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1454:7: {...}? IDENT
					{
					dbg.location(1454,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_arg", "isLessSource()");
					}dbg.location(1454,25);
					match(input,IDENT,FOLLOW_IDENT_in_cp_arg10825); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1455, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1459:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1459, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1460:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1461,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded10848);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1461,15);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:15: ( ws )?
			int alt521=2;
			try { dbg.enterSubRule(521);
			try { dbg.enterDecision(521, decisionCanBacktrack[521]);

			int LA521_0 = input.LA(1);
			if ( (LA521_0==COMMENT||LA521_0==NL||LA521_0==WS) ) {
				alt521=1;
			}
			} finally {dbg.exitDecision(521);}

			switch (alt521) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:15: ws
					{
					dbg.location(1461,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded10850);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(521);}
			dbg.location(1461,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded10853);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1461,34);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(525);

			loop525:
			while (true) {
				int alt525=2;
				try { dbg.enterDecision(525, decisionCanBacktrack[525]);

				try {
					isCyclicDecision = true;
					alt525 = dfa525.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(525);}

				switch (alt525) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1461,35);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:35: ( ws )?
					int alt522=2;
					try { dbg.enterSubRule(522);
					try { dbg.enterDecision(522, decisionCanBacktrack[522]);

					int LA522_0 = input.LA(1);
					if ( (LA522_0==COMMENT||LA522_0==NL||LA522_0==WS) ) {
						alt522=1;
					}
					} finally {dbg.exitDecision(522);}

					switch (alt522) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:35: ws
							{
							dbg.location(1461,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded10856);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(522);}
					dbg.location(1461,39);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:39: ( COMMA | key_and )
					int alt523=2;
					try { dbg.enterSubRule(523);
					try { dbg.enterDecision(523, decisionCanBacktrack[523]);

					int LA523_0 = input.LA(1);
					if ( (LA523_0==COMMA) ) {
						alt523=1;
					}
					else if ( (LA523_0==IDENT) ) {
						alt523=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 523, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(523);}

					switch (alt523) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:40: COMMA
							{
							dbg.location(1461,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded10860); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:48: key_and
							{
							dbg.location(1461,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded10864);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(523);}
					dbg.location(1461,57);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:57: ( ws )?
					int alt524=2;
					try { dbg.enterSubRule(524);
					try { dbg.enterDecision(524, decisionCanBacktrack[524]);

					int LA524_0 = input.LA(1);
					if ( (LA524_0==COMMENT||LA524_0==NL||LA524_0==WS) ) {
						alt524=1;
					}
					} finally {dbg.exitDecision(524);}

					switch (alt524) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1461:57: ws
							{
							dbg.location(1461,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded10867);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(524);}
					dbg.location(1461,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded10870);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop525;
				}
			}
			} finally {dbg.exitSubRule(525);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1462, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1466:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1466, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1467:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1468:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1468,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1468:5: ( NOT ( ws )? )?
			int alt527=2;
			try { dbg.enterSubRule(527);
			try { dbg.enterDecision(527, decisionCanBacktrack[527]);

			int LA527_0 = input.LA(1);
			if ( (LA527_0==NOT) ) {
				alt527=1;
			}
			} finally {dbg.exitDecision(527);}

			switch (alt527) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1468:6: NOT ( ws )?
					{
					dbg.location(1468,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition10896); if (state.failed) return;dbg.location(1468,10);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1468:10: ( ws )?
					int alt526=2;
					try { dbg.enterSubRule(526);
					try { dbg.enterDecision(526, decisionCanBacktrack[526]);

					int LA526_0 = input.LA(1);
					if ( (LA526_0==COMMENT||LA526_0==NL||LA526_0==WS) ) {
						alt526=1;
					}
					} finally {dbg.exitDecision(526);}

					switch (alt526) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1468:10: ws
							{
							dbg.location(1468,10);
							pushFollow(FOLLOW_ws_in_less_condition10898);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(526);}

					}
					break;

			}
			} finally {dbg.exitSubRule(527);}
			dbg.location(1469,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition10907); if (state.failed) return;dbg.location(1469,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1469:12: ( ws )?
			int alt528=2;
			try { dbg.enterSubRule(528);
			try { dbg.enterDecision(528, decisionCanBacktrack[528]);

			int LA528_0 = input.LA(1);
			if ( (LA528_0==COMMENT||LA528_0==NL||LA528_0==WS) ) {
				alt528=1;
			}
			} finally {dbg.exitDecision(528);}

			switch (alt528) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1469:12: ws
					{
					dbg.location(1469,12);
					pushFollow(FOLLOW_ws_in_less_condition10909);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(528);}
			dbg.location(1470,9);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1470:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1471,14);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:14: ( cp_variable | less_function_in_condition )
			int alt529=2;
			try { dbg.enterSubRule(529);
			try { dbg.enterDecision(529, decisionCanBacktrack[529]);

			int LA529_0 = input.LA(1);
			if ( (LA529_0==AT_IDENT||(LA529_0 >= BOTTOMCENTER_SYM && LA529_0 <= BOTTOMRIGHT_SYM)||LA529_0==CHARSET_SYM||LA529_0==COUNTER_STYLE_SYM||LA529_0==FONT_FACE_SYM||LA529_0==IMPORT_SYM||LA529_0==KEYFRAMES_SYM||(LA529_0 >= LEFTBOTTOM_SYM && LA529_0 <= LEFTTOP_SYM)||LA529_0==MEDIA_SYM||LA529_0==MOZ_DOCUMENT_SYM||LA529_0==NAMESPACE_SYM||LA529_0==PAGE_SYM||(LA529_0 >= RIGHTBOTTOM_SYM && LA529_0 <= RIGHTTOP_SYM)||(LA529_0 >= SASS_AT_ROOT && LA529_0 <= SASS_DEBUG)||(LA529_0 >= SASS_EACH && LA529_0 <= SASS_ELSE)||LA529_0==SASS_EXTEND||(LA529_0 >= SASS_FOR && LA529_0 <= SASS_FUNCTION)||(LA529_0 >= SASS_IF && LA529_0 <= SASS_MIXIN)||(LA529_0 >= SASS_RETURN && LA529_0 <= SASS_WHILE)||(LA529_0 >= TOPCENTER_SYM && LA529_0 <= TOPRIGHT_SYM)||LA529_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt529=1;
			}
			else if ( (LA529_0==IDENT) ) {
				int LA529_2 = input.LA(2);
				if ( (LA529_2==DOT) ) {
					alt529=1;
				}
				else if ( (LA529_2==COMMENT||LA529_2==LPAREN||LA529_2==NL||LA529_2==WS) ) {
					alt529=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 529, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 529, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(529);}

			switch (alt529) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:15: cp_variable
					{
					dbg.location(1471,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition10936);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:29: less_function_in_condition
					{
					dbg.location(1471,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition10940);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(529);}
			dbg.location(1471,57);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:57: ( ws )?
			int alt530=2;
			try { dbg.enterSubRule(530);
			try { dbg.enterDecision(530, decisionCanBacktrack[530]);

			int LA530_0 = input.LA(1);
			if ( (LA530_0==COMMENT||LA530_0==NL||LA530_0==WS) ) {
				alt530=1;
			}
			} finally {dbg.exitDecision(530);}

			switch (alt530) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:57: ws
					{
					dbg.location(1471,57);
					pushFollow(FOLLOW_ws_in_less_condition10943);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(530);}
			dbg.location(1471,61);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt532=2;
			try { dbg.enterSubRule(532);
			try { dbg.enterDecision(532, decisionCanBacktrack[532]);

			int LA532_0 = input.LA(1);
			if ( ((LA532_0 >= GREATER && LA532_0 <= GREATER_OR_EQ)||LA532_0==LESS||LA532_0==LESS_OR_EQ||LA532_0==OPEQ) ) {
				alt532=1;
			}
			} finally {dbg.exitDecision(532);}

			switch (alt532) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1471,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition10947);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1471,86);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:86: ( ws )?
					int alt531=2;
					try { dbg.enterSubRule(531);
					try { dbg.enterDecision(531, decisionCanBacktrack[531]);

					int LA531_0 = input.LA(1);
					if ( (LA531_0==COMMENT||LA531_0==NL||LA531_0==WS) ) {
						alt531=1;
					}
					} finally {dbg.exitDecision(531);}

					switch (alt531) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1471:86: ws
							{
							dbg.location(1471,86);
							pushFollow(FOLLOW_ws_in_less_condition10949);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(531);}
					dbg.location(1471,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition10952);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(532);}

			}
			dbg.location(1473,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition10970); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1474, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1477:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1477, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1478:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1479:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1479,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition10992);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1479,18);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1479:18: ( ws )?
			int alt533=2;
			try { dbg.enterSubRule(533);
			try { dbg.enterDecision(533, decisionCanBacktrack[533]);

			int LA533_0 = input.LA(1);
			if ( (LA533_0==COMMENT||LA533_0==NL||LA533_0==WS) ) {
				alt533=1;
			}
			} finally {dbg.exitDecision(533);}

			switch (alt533) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1479:18: ws
					{
					dbg.location(1479,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10994);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(533);}
			dbg.location(1479,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition10997); if (state.failed) return;dbg.location(1479,29);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1479:29: ( ws )?
			int alt534=2;
			try { dbg.enterSubRule(534);
			try { dbg.enterDecision(534, decisionCanBacktrack[534]);

			int LA534_0 = input.LA(1);
			if ( (LA534_0==COMMENT||LA534_0==NL||LA534_0==WS) ) {
				alt534=1;
			}
			} finally {dbg.exitDecision(534);}

			switch (alt534) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1479:29: ws
					{
					dbg.location(1479,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10999);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(534);}
			dbg.location(1479,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition11002);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1479,45);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1479:45: ( ws )?
			int alt535=2;
			try { dbg.enterSubRule(535);
			try { dbg.enterDecision(535, decisionCanBacktrack[535]);

			int LA535_0 = input.LA(1);
			if ( (LA535_0==COMMENT||LA535_0==NL||LA535_0==WS) ) {
				alt535=1;
			}
			} finally {dbg.exitDecision(535);}

			switch (alt535) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1479:45: ws
					{
					dbg.location(1479,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition11004);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(535);}
			dbg.location(1479,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition11007); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1480, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1483:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1483, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1484:5: ( IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1485:5: IDENT
			{
			dbg.location(1485,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name11029); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1486, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1488:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1488, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1489:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
			{
			dbg.location(1489,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1491, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation_exp"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1493:1: less_selector_interpolation_exp : ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void less_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1493, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1493:33: ( ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1494:5: ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1494,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1494:5: ( IDENT | MINUS )?
			int alt536=2;
			try { dbg.enterSubRule(536);
			try { dbg.enterDecision(536, decisionCanBacktrack[536]);

			int LA536_0 = input.LA(1);
			if ( (LA536_0==IDENT||LA536_0==MINUS) ) {
				alt536=1;
			}
			} finally {dbg.exitDecision(536);}

			switch (alt536) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
					{
					dbg.location(1494,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(536);}
			dbg.location(1494,22);
			pushFollow(FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp11092);
			less_selector_interpolation();
			state._fsp--;
			if (state.failed) return;dbg.location(1494,50);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1494:50: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt538=3;
			try { dbg.enterSubRule(538);
			try { dbg.enterDecision(538, decisionCanBacktrack[538]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA538_1 = input.LA(2);
					if ( (LA538_1==AT_SIGN) ) {
						alt538=1;
					}
					else if ( ((LA538_1 >= COLON && LA538_1 <= COMMENT)||(LA538_1 >= DCOLON && LA538_1 <= DOT)||LA538_1==GREATER||(LA538_1 >= HASH && LA538_1 <= HASH_SYMBOL)||LA538_1==IDENT||(LA538_1 >= LBRACE && LA538_1 <= LBRACKET)||LA538_1==LENGTH||LA538_1==LESS_AND||LA538_1==MINUS||LA538_1==NL||LA538_1==PLUS||LA538_1==RBRACE||LA538_1==RPAREN||LA538_1==SASS_EXTEND_ONLY_SELECTOR||LA538_1==SEMI||LA538_1==TILDE||LA538_1==WS) ) {
						alt538=2;
					}
					}
					break;
				case AT_SIGN:
					{
					alt538=1;
					}
					break;
				case DIMENSION:
					{
					int LA538_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt538=2;
					}
					}
					break;
				case LENGTH:
					{
					alt538=2;
					}
					break;
			}
			} finally {dbg.exitDecision(538);}

			switch (alt538) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1494:51: less_selector_interpolation_exp
					{
					dbg.location(1494,51);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp11095);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1494:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1494,85);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1494:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt537=0;
					try { dbg.enterSubRule(537);

					loop537:
					while (true) {
						int alt537=2;
						try { dbg.enterDecision(537, decisionCanBacktrack[537]);

						int LA537_0 = input.LA(1);
						if ( (LA537_0==DIMENSION) ) {
							int LA537_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt537=1;
							}

						}
						else if ( (LA537_0==IDENT||LA537_0==LENGTH||LA537_0==MINUS) ) {
							alt537=1;
						}

						} finally {dbg.exitDecision(537);}

						switch (alt537) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
							{
							dbg.location(1494,85);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt537 >= 1 ) break loop537;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(537, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt537++;
					}
					} finally {dbg.exitSubRule(537);}

					}
					break;

			}
			} finally {dbg.exitSubRule(538);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1495, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation_exp"



	// $ANTLR start "less_selector_interpolation"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1497:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1497, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1498:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1499:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1499,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation11138); if (state.failed) return;dbg.location(1499,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation11140); if (state.failed) return;dbg.location(1499,20);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1499:20: ( ws )?
			int alt539=2;
			try { dbg.enterSubRule(539);
			try { dbg.enterDecision(539, decisionCanBacktrack[539]);

			int LA539_0 = input.LA(1);
			if ( (LA539_0==COMMENT||LA539_0==NL||LA539_0==WS) ) {
				alt539=1;
			}
			} finally {dbg.exitDecision(539);}

			switch (alt539) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1499:20: ws
					{
					dbg.location(1499,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation11142);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(539);}
			dbg.location(1499,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation11145); if (state.failed) return;dbg.location(1499,30);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1499:30: ( ws )?
			int alt540=2;
			try { dbg.enterSubRule(540);
			try { dbg.enterDecision(540, decisionCanBacktrack[540]);

			int LA540_0 = input.LA(1);
			if ( (LA540_0==COMMENT||LA540_0==NL||LA540_0==WS) ) {
				alt540=1;
			}
			} finally {dbg.exitDecision(540);}

			switch (alt540) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1499:30: ws
					{
					dbg.location(1499,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation11147);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(540);}
			dbg.location(1499,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation11150); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1500, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1503:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1503, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1503:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1504:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1504,5);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1504:5: ( IDENT | MINUS )?
			int alt541=2;
			try { dbg.enterSubRule(541);
			try { dbg.enterDecision(541, decisionCanBacktrack[541]);

			int LA541_0 = input.LA(1);
			if ( (LA541_0==IDENT||LA541_0==MINUS) ) {
				alt541=1;
			}
			} finally {dbg.exitDecision(541);}

			switch (alt541) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
					{
					dbg.location(1504,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(541);}
			dbg.location(1504,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp11177);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1504,56);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1504:56: ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt543=3;
			try { dbg.enterSubRule(543);
			try { dbg.enterDecision(543, decisionCanBacktrack[543]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA543_1 = input.LA(2);
					if ( (LA543_1==HASH_SYMBOL) ) {
						int LA543_6 = input.LA(3);
						if ( (LA543_6==LBRACE) ) {
							alt543=1;
						}
						else if ( (LA543_6==AT_SIGN||LA543_6==IDENT||LA543_6==MINUS||LA543_6==NAME) ) {
							alt543=2;
						}
					}
					else if ( ((LA543_1 >= COLON && LA543_1 <= COMMENT)||(LA543_1 >= DCOLON && LA543_1 <= DOT)||LA543_1==GREATER||LA543_1==HASH||LA543_1==IDENT||(LA543_1 >= LBRACE && LA543_1 <= LBRACKET)||LA543_1==LENGTH||LA543_1==LESS_AND||LA543_1==MINUS||LA543_1==NL||LA543_1==PLUS||LA543_1==RBRACE||LA543_1==RPAREN||LA543_1==SASS_EXTEND_ONLY_SELECTOR||LA543_1==SEMI||LA543_1==TILDE||LA543_1==WS) ) {
						alt543=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA543_2 = input.LA(2);
					if ( (LA543_2==LBRACE) ) {
						alt543=1;
					}
					}
					break;
				case DIMENSION:
					{
					int LA543_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt543=2;
					}
					}
					break;
				case LENGTH:
					{
					alt543=2;
					}
					break;
			}
			} finally {dbg.exitDecision(543);}

			switch (alt543) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1504:57: sass_selector_interpolation_exp
					{
					dbg.location(1504,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp11180);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1504:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1504,91);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1504:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt542=0;
					try { dbg.enterSubRule(542);

					loop542:
					while (true) {
						int alt542=2;
						try { dbg.enterDecision(542, decisionCanBacktrack[542]);

						int LA542_0 = input.LA(1);
						if ( (LA542_0==DIMENSION) ) {
							int LA542_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt542=1;
							}

						}
						else if ( (LA542_0==IDENT||LA542_0==LENGTH||LA542_0==MINUS) ) {
							alt542=1;
						}

						} finally {dbg.exitDecision(542);}

						switch (alt542) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
							{
							dbg.location(1504,91);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt542 >= 1 ) break loop542;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(542, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt542++;
					}
					} finally {dbg.exitSubRule(542);}

					}
					break;

			}
			} finally {dbg.exitSubRule(543);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1505, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1507:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1507, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1508:5: ( HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1509:9: HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE
			{
			dbg.location(1509,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var11227); if (state.failed) return;dbg.location(1509,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var11229); if (state.failed) return;dbg.location(1509,28);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1509:28: ( WS )?
			int alt544=2;
			try { dbg.enterSubRule(544);
			try { dbg.enterDecision(544, decisionCanBacktrack[544]);

			int LA544_0 = input.LA(1);
			if ( (LA544_0==WS) ) {
				alt544=1;
			}
			} finally {dbg.exitDecision(544);}

			switch (alt544) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1509:28: WS
					{
					dbg.location(1509,28);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var11231); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(544);}
			dbg.location(1509,32);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var11234);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1509,46);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1509:46: ( WS )?
			int alt545=2;
			try { dbg.enterSubRule(545);
			try { dbg.enterDecision(545, decisionCanBacktrack[545]);

			int LA545_0 = input.LA(1);
			if ( (LA545_0==WS) ) {
				alt545=1;
			}
			} finally {dbg.exitDecision(545);}

			switch (alt545) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1509:46: WS
					{
					dbg.location(1509,46);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var11236); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(545);}
			dbg.location(1509,50);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var11239); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1510, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1530:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1530, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1531:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1532,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties11279);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1532,14);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:14: ( ws )?
			int alt546=2;
			try { dbg.enterSubRule(546);
			try { dbg.enterDecision(546, decisionCanBacktrack[546]);

			int LA546_0 = input.LA(1);
			if ( (LA546_0==COMMENT||LA546_0==NL||LA546_0==WS) ) {
				alt546=1;
			}
			} finally {dbg.exitDecision(546);}

			switch (alt546) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:14: ws
					{
					dbg.location(1532,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties11281);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(546);}
			dbg.location(1532,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties11284); if (state.failed) return;dbg.location(1532,24);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:24: ( ws )?
			int alt547=2;
			try { dbg.enterSubRule(547);
			try { dbg.enterDecision(547, decisionCanBacktrack[547]);

			int LA547_0 = input.LA(1);
			if ( (LA547_0==COMMENT||LA547_0==NL||LA547_0==WS) ) {
				alt547=1;
			}
			} finally {dbg.exitDecision(547);}

			switch (alt547) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:24: ws
					{
					dbg.location(1532,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties11286);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(547);}
			dbg.location(1532,28);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:28: ( propertyValue ( ws )? )?
			int alt549=2;
			try { dbg.enterSubRule(549);
			try { dbg.enterDecision(549, decisionCanBacktrack[549]);

			int LA549_0 = input.LA(1);
			if ( ((LA549_0 >= ANGLE && LA549_0 <= AT_SIGN)||(LA549_0 >= BOTTOMCENTER_SYM && LA549_0 <= BOTTOMRIGHT_SYM)||LA549_0==CHARSET_SYM||LA549_0==COUNTER_STYLE_SYM||LA549_0==DIMENSION||LA549_0==EMS||LA549_0==EXS||(LA549_0 >= FONT_FACE_SYM && LA549_0 <= FREQ)||LA549_0==GEN||(LA549_0 >= HASH && LA549_0 <= HASH_SYMBOL)||LA549_0==IDENT||LA549_0==IMPORT_SYM||LA549_0==KEYFRAMES_SYM||(LA549_0 >= LBRACKET && LA549_0 <= LENGTH)||(LA549_0 >= LESS_AND && LA549_0 <= LESS_JS_STRING)||(LA549_0 >= MEDIA_SYM && LA549_0 <= MOZ_DOCUMENT_SYM)||LA549_0==NAMESPACE_SYM||LA549_0==NUMBER||(LA549_0 >= PAGE_SYM && LA549_0 <= PERCENTAGE_SYMBOL)||LA549_0==PLUS||(LA549_0 >= REM && LA549_0 <= RIGHTTOP_SYM)||(LA549_0 >= SASS_AT_ROOT && LA549_0 <= SASS_DEBUG)||(LA549_0 >= SASS_EACH && LA549_0 <= SASS_ELSE)||LA549_0==SASS_EXTEND||(LA549_0 >= SASS_FOR && LA549_0 <= SASS_FUNCTION)||(LA549_0 >= SASS_IF && LA549_0 <= SASS_MIXIN)||(LA549_0 >= SASS_RETURN && LA549_0 <= SASS_WHILE)||LA549_0==STRING||(LA549_0 >= TILDE && LA549_0 <= TOPRIGHT_SYM)||(LA549_0 >= URANGE && LA549_0 <= URI)||LA549_0==VARIABLE||LA549_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt549=1;
			}
			} finally {dbg.exitDecision(549);}

			switch (alt549) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:29: propertyValue ( ws )?
					{
					dbg.location(1532,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties11290);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1532,43);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:43: ( ws )?
					int alt548=2;
					try { dbg.enterSubRule(548);
					try { dbg.enterDecision(548, decisionCanBacktrack[548]);

					int LA548_0 = input.LA(1);
					if ( (LA548_0==COMMENT||LA548_0==NL||LA548_0==WS) ) {
						alt548=1;
					}
					} finally {dbg.exitDecision(548);}

					switch (alt548) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:43: ws
							{
							dbg.location(1532,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties11292);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(548);}

					}
					break;

			}
			} finally {dbg.exitSubRule(549);}
			dbg.location(1532,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties11297); if (state.failed) return;dbg.location(1532,56);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:56: ( ws )?
			int alt550=2;
			try { dbg.enterSubRule(550);
			try { dbg.enterDecision(550, decisionCanBacktrack[550]);

			int LA550_0 = input.LA(1);
			if ( (LA550_0==COMMENT||LA550_0==NL||LA550_0==WS) ) {
				alt550=1;
			}
			} finally {dbg.exitDecision(550);}

			switch (alt550) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:56: ws
					{
					dbg.location(1532,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties11299);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(550);}
			dbg.location(1532,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties11302);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1532,73);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:73: ( declarations )?
			int alt551=2;
			try { dbg.enterSubRule(551);
			try { dbg.enterDecision(551, decisionCanBacktrack[551]);

			int LA551_0 = input.LA(1);
			if ( ((LA551_0 >= AT_IDENT && LA551_0 <= AT_SIGN)||(LA551_0 >= BOTTOMCENTER_SYM && LA551_0 <= BOTTOMRIGHT_SYM)||(LA551_0 >= CHARSET_SYM && LA551_0 <= COLON)||LA551_0==CONTAINER_SYM||LA551_0==COUNTER_STYLE_SYM||(LA551_0 >= DCOLON && LA551_0 <= DOT)||LA551_0==FONT_FACE_SYM||(LA551_0 >= GEN && LA551_0 <= GREATER)||(LA551_0 >= HASH && LA551_0 <= HASH_SYMBOL)||LA551_0==IDENT||LA551_0==IMPORT_SYM||LA551_0==KEYFRAMES_SYM||LA551_0==LAYER_SYM||(LA551_0 >= LBRACKET && LA551_0 <= LEFTTOP_SYM)||LA551_0==LESS_AND||(LA551_0 >= MEDIA_SYM && LA551_0 <= MOZ_DOCUMENT_SYM)||LA551_0==NAMESPACE_SYM||LA551_0==PAGE_SYM||(LA551_0 >= PIPE && LA551_0 <= PLUS)||(LA551_0 >= RIGHTBOTTOM_SYM && LA551_0 <= RIGHTTOP_SYM)||(LA551_0 >= SASS_AT_ROOT && LA551_0 <= SASS_DEBUG)||(LA551_0 >= SASS_EACH && LA551_0 <= SASS_ELSE)||(LA551_0 >= SASS_ERROR && LA551_0 <= SASS_FUNCTION)||(LA551_0 >= SASS_IF && LA551_0 <= SASS_MIXIN)||(LA551_0 >= SASS_RETURN && LA551_0 <= SEMI)||LA551_0==STAR||LA551_0==SUPPORTS_SYM||LA551_0==TILDE||(LA551_0 >= TOPCENTER_SYM && LA551_0 <= TOPRIGHT_SYM)||LA551_0==VARIABLE||LA551_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt551=1;
			}
			} finally {dbg.exitDecision(551);}

			switch (alt551) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1532:73: declarations
					{
					dbg.location(1532,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties11304);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(551);}
			dbg.location(1532,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties11307); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1533, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1535:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1535, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1536:5: ( SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:5: SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )?
			{
			dbg.location(1537,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend11328); if (state.failed) return;dbg.location(1537,17);
			pushFollow(FOLLOW_ws_in_sass_extend11330);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend11332);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1537,43);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*
			try { dbg.enterSubRule(554);

			loop554:
			while (true) {
				int alt554=2;
				try { dbg.enterDecision(554, decisionCanBacktrack[554]);

				try {
					isCyclicDecision = true;
					alt554 = dfa554.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(554);}

				switch (alt554) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:44: ( ws )? COMMA ( ws )? simpleSelectorSequence
					{
					dbg.location(1537,44);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:44: ( ws )?
					int alt552=2;
					try { dbg.enterSubRule(552);
					try { dbg.enterDecision(552, decisionCanBacktrack[552]);

					int LA552_0 = input.LA(1);
					if ( (LA552_0==COMMENT||LA552_0==NL||LA552_0==WS) ) {
						alt552=1;
					}
					} finally {dbg.exitDecision(552);}

					switch (alt552) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:44: ws
							{
							dbg.location(1537,44);
							pushFollow(FOLLOW_ws_in_sass_extend11335);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(552);}
					dbg.location(1537,48);
					match(input,COMMA,FOLLOW_COMMA_in_sass_extend11338); if (state.failed) return;dbg.location(1537,54);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:54: ( ws )?
					int alt553=2;
					try { dbg.enterSubRule(553);
					try { dbg.enterDecision(553, decisionCanBacktrack[553]);

					int LA553_0 = input.LA(1);
					if ( (LA553_0==COMMENT||LA553_0==NL||LA553_0==WS) ) {
						alt553=1;
					}
					} finally {dbg.exitDecision(553);}

					switch (alt553) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:54: ws
							{
							dbg.location(1537,54);
							pushFollow(FOLLOW_ws_in_sass_extend11340);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(553);}
					dbg.location(1537,58);
					pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend11343);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop554;
				}
			}
			} finally {dbg.exitSubRule(554);}
			dbg.location(1537,83);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:83: ( ws SASS_OPTIONAL )?
			int alt555=2;
			try { dbg.enterSubRule(555);
			try { dbg.enterDecision(555, decisionCanBacktrack[555]);

			try {
				isCyclicDecision = true;
				alt555 = dfa555.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(555);}

			switch (alt555) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1537:84: ws SASS_OPTIONAL
					{
					dbg.location(1537,84);
					pushFollow(FOLLOW_ws_in_sass_extend11348);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1537,87);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend11350); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(555);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1538, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1540:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1540, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1541:5: ( SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1542:5: SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )?
			{
			dbg.location(1542,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector11373); if (state.failed) return;dbg.location(1542,31);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1542:31: ( sass_selector_interpolation_exp )?
			int alt556=2;
			try { dbg.enterSubRule(556);
			try { dbg.enterDecision(556, decisionCanBacktrack[556]);

			int LA556_0 = input.LA(1);
			if ( (LA556_0==IDENT||LA556_0==MINUS) ) {
				alt556=1;
			}
			else if ( (LA556_0==HASH_SYMBOL) ) {
				int LA556_2 = input.LA(2);
				if ( (LA556_2==LBRACE) ) {
					alt556=1;
				}
			}
			} finally {dbg.exitDecision(556);}

			switch (alt556) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1542:31: sass_selector_interpolation_exp
					{
					dbg.location(1542,31);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector11375);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(556);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1543, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1545:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1545, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1546:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1547:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1547,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1547,32);
			pushFollow(FOLLOW_ws_in_sass_debug11407);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1547,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug11409);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1548, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_error"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1550:1: sass_error : SASS_ERROR ws STRING ;
	public final void sass_error() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_error");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1550, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1551:5: ( SASS_ERROR ws STRING )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1552:5: SASS_ERROR ws STRING
			{
			dbg.location(1552,5);
			match(input,SASS_ERROR,FOLLOW_SASS_ERROR_in_sass_error11430); if (state.failed) return;dbg.location(1552,16);
			pushFollow(FOLLOW_ws_in_sass_error11432);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1552,19);
			match(input,STRING,FOLLOW_STRING_in_sass_error11434); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1553, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_error");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_error"



	// $ANTLR start "sass_control"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1555:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1555, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1556:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt557=4;
			try { dbg.enterDecision(557, decisionCanBacktrack[557]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt557=1;
				}
				break;
			case SASS_FOR:
				{
				alt557=2;
				}
				break;
			case SASS_EACH:
				{
				alt557=3;
				}
				break;
			case SASS_WHILE:
				{
				alt557=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 557, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(557);}

			switch (alt557) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1557:5: sass_if
					{
					dbg.location(1557,5);
					pushFollow(FOLLOW_sass_if_in_sass_control11455);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1557:15: sass_for
					{
					dbg.location(1557,15);
					pushFollow(FOLLOW_sass_for_in_sass_control11459);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1557:26: sass_each
					{
					dbg.location(1557,26);
					pushFollow(FOLLOW_sass_each_in_sass_control11463);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1557:38: sass_while
					{
					dbg.location(1557,38);
					pushFollow(FOLLOW_sass_while_in_sass_control11467);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1558, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1560:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1560, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1561:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1562,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if11488); if (state.failed) return;dbg.location(1562,13);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:13: ( ws )?
			int alt558=2;
			try { dbg.enterSubRule(558);
			try { dbg.enterDecision(558, decisionCanBacktrack[558]);

			int LA558_0 = input.LA(1);
			if ( (LA558_0==COMMENT||LA558_0==NL||LA558_0==WS) ) {
				alt558=1;
			}
			} finally {dbg.exitDecision(558);}

			switch (alt558) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:13: ws
					{
					dbg.location(1562,13);
					pushFollow(FOLLOW_ws_in_sass_if11490);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(558);}
			dbg.location(1562,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if11493);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1562,41);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:41: ( ws )?
			int alt559=2;
			try { dbg.enterSubRule(559);
			try { dbg.enterDecision(559, decisionCanBacktrack[559]);

			int LA559_0 = input.LA(1);
			if ( (LA559_0==COMMENT||LA559_0==NL||LA559_0==WS) ) {
				alt559=1;
			}
			} finally {dbg.exitDecision(559);}

			switch (alt559) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:41: ws
					{
					dbg.location(1562,41);
					pushFollow(FOLLOW_ws_in_sass_if11495);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(559);}
			dbg.location(1562,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if11498);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1562,64);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:64: ( ( ws )? sass_else )?
			int alt561=2;
			try { dbg.enterSubRule(561);
			try { dbg.enterDecision(561, decisionCanBacktrack[561]);

			try {
				isCyclicDecision = true;
				alt561 = dfa561.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(561);}

			switch (alt561) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:65: ( ws )? sass_else
					{
					dbg.location(1562,65);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:65: ( ws )?
					int alt560=2;
					try { dbg.enterSubRule(560);
					try { dbg.enterDecision(560, decisionCanBacktrack[560]);

					int LA560_0 = input.LA(1);
					if ( (LA560_0==COMMENT||LA560_0==NL||LA560_0==WS) ) {
						alt560=1;
					}
					} finally {dbg.exitDecision(560);}

					switch (alt560) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1562:65: ws
							{
							dbg.location(1562,65);
							pushFollow(FOLLOW_ws_in_sass_if11501);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(560);}
					dbg.location(1562,69);
					pushFollow(FOLLOW_sass_else_in_sass_if11504);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(561);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1563, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1565:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1565, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1566:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt569=2;
			try { dbg.enterDecision(569, decisionCanBacktrack[569]);

			try {
				isCyclicDecision = true;
				alt569 = dfa569.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(569);}

			switch (alt569) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1567:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1567,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else11527); if (state.failed) return;dbg.location(1567,15);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1567:15: ( ws )?
					int alt562=2;
					try { dbg.enterSubRule(562);
					try { dbg.enterDecision(562, decisionCanBacktrack[562]);

					int LA562_0 = input.LA(1);
					if ( (LA562_0==COMMENT||LA562_0==NL||LA562_0==WS) ) {
						alt562=1;
					}
					} finally {dbg.exitDecision(562);}

					switch (alt562) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1567:15: ws
							{
							dbg.location(1567,15);
							pushFollow(FOLLOW_ws_in_sass_else11529);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(562);}
					dbg.location(1567,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else11532);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1569,5);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt564=2;
					try { dbg.enterSubRule(564);
					try { dbg.enterDecision(564, decisionCanBacktrack[564]);

					int LA564_0 = input.LA(1);
					if ( (LA564_0==SASS_ELSE) ) {
						alt564=1;
					}
					else if ( (LA564_0==SASS_ELSEIF) ) {
						alt564=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 564, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(564);}

					switch (alt564) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1569,6);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1569,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else11546); if (state.failed) return;dbg.location(1569,17);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:17: ( ws )?
							int alt563=2;
							try { dbg.enterSubRule(563);
							try { dbg.enterDecision(563, decisionCanBacktrack[563]);

							int LA563_0 = input.LA(1);
							if ( (LA563_0==COMMENT||LA563_0==NL||LA563_0==WS) ) {
								alt563=1;
							}
							} finally {dbg.exitDecision(563);}

							switch (alt563) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:17: ws
									{
									dbg.location(1569,17);
									pushFollow(FOLLOW_ws_in_sass_else11548);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(563);}
							dbg.location(1569,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1569,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else11553); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:64: SASS_ELSEIF
							{
							dbg.location(1569,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else11560); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(564);}
					dbg.location(1569,77);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:77: ( ws )?
					int alt565=2;
					try { dbg.enterSubRule(565);
					try { dbg.enterDecision(565, decisionCanBacktrack[565]);

					int LA565_0 = input.LA(1);
					if ( (LA565_0==COMMENT||LA565_0==NL||LA565_0==WS) ) {
						alt565=1;
					}
					} finally {dbg.exitDecision(565);}

					switch (alt565) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:77: ws
							{
							dbg.location(1569,77);
							pushFollow(FOLLOW_ws_in_sass_else11563);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(565);}
					dbg.location(1569,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else11566);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1569,105);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:105: ( ws )?
					int alt566=2;
					try { dbg.enterSubRule(566);
					try { dbg.enterDecision(566, decisionCanBacktrack[566]);

					int LA566_0 = input.LA(1);
					if ( (LA566_0==COMMENT||LA566_0==NL||LA566_0==WS) ) {
						alt566=1;
					}
					} finally {dbg.exitDecision(566);}

					switch (alt566) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:105: ws
							{
							dbg.location(1569,105);
							pushFollow(FOLLOW_ws_in_sass_else11568);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(566);}
					dbg.location(1569,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else11571);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1569,128);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:128: ( ( ws )? sass_else )?
					int alt568=2;
					try { dbg.enterSubRule(568);
					try { dbg.enterDecision(568, decisionCanBacktrack[568]);

					try {
						isCyclicDecision = true;
						alt568 = dfa568.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(568);}

					switch (alt568) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:129: ( ws )? sass_else
							{
							dbg.location(1569,129);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:129: ( ws )?
							int alt567=2;
							try { dbg.enterSubRule(567);
							try { dbg.enterDecision(567, decisionCanBacktrack[567]);

							int LA567_0 = input.LA(1);
							if ( (LA567_0==COMMENT||LA567_0==NL||LA567_0==WS) ) {
								alt567=1;
							}
							} finally {dbg.exitDecision(567);}

							switch (alt567) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1569:129: ws
									{
									dbg.location(1569,129);
									pushFollow(FOLLOW_ws_in_sass_else11574);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(567);}
							dbg.location(1569,133);
							pushFollow(FOLLOW_sass_else_in_sass_else11577);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(568);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1570, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1572:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1572, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1573:5: ( cp_expression )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1574:5: cp_expression
			{
			dbg.location(1574,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression11600);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1575, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1577:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1577, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1578:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1579:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1579,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for11621); if (state.failed) return;dbg.location(1579,14);
			pushFollow(FOLLOW_ws_in_sass_for11623);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for11625);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,29);
			pushFollow(FOLLOW_ws_in_sass_for11627);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1579,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for11631); if (state.failed) return;dbg.location(1579,74);
			pushFollow(FOLLOW_ws_in_sass_for11635);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for11637);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,96);
			pushFollow(FOLLOW_ws_in_sass_for11639);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1579,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for11643); if (state.failed) return;dbg.location(1579,173);
			pushFollow(FOLLOW_ws_in_sass_for11647);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for11649);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1579,195);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1579:195: ( ws )?
			int alt570=2;
			try { dbg.enterSubRule(570);
			try { dbg.enterDecision(570, decisionCanBacktrack[570]);

			int LA570_0 = input.LA(1);
			if ( (LA570_0==COMMENT||LA570_0==NL||LA570_0==WS) ) {
				alt570=1;
			}
			} finally {dbg.exitDecision(570);}

			switch (alt570) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1579:195: ws
					{
					dbg.location(1579,195);
					pushFollow(FOLLOW_ws_in_sass_for11651);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(570);}
			dbg.location(1579,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for11654);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1580, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1582:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1582, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1583:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block
			{
			dbg.location(1584,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each11675); if (state.failed) return;dbg.location(1584,15);
			pushFollow(FOLLOW_ws_in_sass_each11677);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1584,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each11679);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1584,38);
			pushFollow(FOLLOW_ws_in_sass_each11681);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1584,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1584,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each11685); if (state.failed) return;dbg.location(1584,79);
			pushFollow(FOLLOW_ws_in_sass_each11689);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1584,82);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:82: ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+
			int cnt574=0;
			try { dbg.enterSubRule(574);

			loop574:
			while (true) {
				int alt574=2;
				try { dbg.enterDecision(574, decisionCanBacktrack[574]);

				int LA574_0 = input.LA(1);
				if ( (LA574_0==LBRACE) ) {
					int LA574_1 = input.LA(2);
					if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
						alt574=1;
					}

				}
				else if ( ((LA574_0 >= ANGLE && LA574_0 <= AT_SIGN)||(LA574_0 >= BOTTOMCENTER_SYM && LA574_0 <= BOTTOMRIGHT_SYM)||LA574_0==CHARSET_SYM||LA574_0==COUNTER_STYLE_SYM||LA574_0==DIMENSION||LA574_0==EMS||LA574_0==EXS||(LA574_0 >= FONT_FACE_SYM && LA574_0 <= FREQ)||LA574_0==GEN||(LA574_0 >= HASH && LA574_0 <= HASH_SYMBOL)||(LA574_0 >= IDENT && LA574_0 <= IMPORT_SYM)||LA574_0==KEYFRAMES_SYM||(LA574_0 >= LBRACKET && LA574_0 <= LENGTH)||(LA574_0 >= LESS_AND && LA574_0 <= LESS_JS_STRING)||LA574_0==LPAREN||(LA574_0 >= MEDIA_SYM && LA574_0 <= MOZ_DOCUMENT_SYM)||LA574_0==NAMESPACE_SYM||(LA574_0 >= NOT && LA574_0 <= NUMBER)||(LA574_0 >= PAGE_SYM && LA574_0 <= PERCENTAGE_SYMBOL)||LA574_0==PLUS||(LA574_0 >= REM && LA574_0 <= RIGHTTOP_SYM)||(LA574_0 >= SASS_AT_ROOT && LA574_0 <= SASS_DEBUG)||(LA574_0 >= SASS_EACH && LA574_0 <= SASS_ELSE)||LA574_0==SASS_EXTEND||(LA574_0 >= SASS_FOR && LA574_0 <= SASS_FUNCTION)||(LA574_0 >= SASS_IF && LA574_0 <= SASS_MIXIN)||(LA574_0 >= SASS_RETURN && LA574_0 <= SASS_WHILE)||LA574_0==STRING||(LA574_0 >= TILDE && LA574_0 <= TOPRIGHT_SYM)||(LA574_0 >= URANGE && LA574_0 <= URI)||LA574_0==VARIABLE||LA574_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt574=1;
				}

				} finally {dbg.exitDecision(574);}

				switch (alt574) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:83: cp_expression_list ( ( ws )? COMMA )? ( ws )?
					{
					dbg.location(1584,83);
					pushFollow(FOLLOW_cp_expression_list_in_sass_each11692);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1584,102);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:102: ( ( ws )? COMMA )?
					int alt572=2;
					try { dbg.enterSubRule(572);
					try { dbg.enterDecision(572, decisionCanBacktrack[572]);

					try {
						isCyclicDecision = true;
						alt572 = dfa572.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(572);}

					switch (alt572) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:103: ( ws )? COMMA
							{
							dbg.location(1584,103);
							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:103: ( ws )?
							int alt571=2;
							try { dbg.enterSubRule(571);
							try { dbg.enterDecision(571, decisionCanBacktrack[571]);

							int LA571_0 = input.LA(1);
							if ( (LA571_0==COMMENT||LA571_0==NL||LA571_0==WS) ) {
								alt571=1;
							}
							} finally {dbg.exitDecision(571);}

							switch (alt571) {
								case 1 :
									dbg.enterAlt(1);

									// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:103: ws
									{
									dbg.location(1584,103);
									pushFollow(FOLLOW_ws_in_sass_each11695);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(571);}
							dbg.location(1584,107);
							match(input,COMMA,FOLLOW_COMMA_in_sass_each11698); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(572);}
					dbg.location(1584,115);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:115: ( ws )?
					int alt573=2;
					try { dbg.enterSubRule(573);
					try { dbg.enterDecision(573, decisionCanBacktrack[573]);

					int LA573_0 = input.LA(1);
					if ( (LA573_0==COMMENT||LA573_0==NL||LA573_0==WS) ) {
						alt573=1;
					}
					} finally {dbg.exitDecision(573);}

					switch (alt573) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1584:115: ws
							{
							dbg.location(1584,115);
							pushFollow(FOLLOW_ws_in_sass_each11702);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(573);}

					}
					break;

				default :
					if ( cnt574 >= 1 ) break loop574;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(574, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt574++;
			}
			} finally {dbg.exitSubRule(574);}
			dbg.location(1584,122);
			pushFollow(FOLLOW_sass_control_block_in_sass_each11708);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1585, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1587:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1587, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1588:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1589,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables11729);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1589,17);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(577);

			loop577:
			while (true) {
				int alt577=2;
				try { dbg.enterDecision(577, decisionCanBacktrack[577]);

				try {
					isCyclicDecision = true;
					alt577 = dfa577.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(577);}

				switch (alt577) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1589,33);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:33: ( ws )?
					int alt575=2;
					try { dbg.enterSubRule(575);
					try { dbg.enterDecision(575, decisionCanBacktrack[575]);

					int LA575_0 = input.LA(1);
					if ( (LA575_0==COMMENT||LA575_0==NL||LA575_0==WS) ) {
						alt575=1;
					}
					} finally {dbg.exitDecision(575);}

					switch (alt575) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:33: ws
							{
							dbg.location(1589,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables11741);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(575);}
					dbg.location(1589,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables11744); if (state.failed) return;dbg.location(1589,43);
					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:43: ( ws )?
					int alt576=2;
					try { dbg.enterSubRule(576);
					try { dbg.enterDecision(576, decisionCanBacktrack[576]);

					int LA576_0 = input.LA(1);
					if ( (LA576_0==COMMENT||LA576_0==NL||LA576_0==WS) ) {
						alt576=1;
					}
					} finally {dbg.exitDecision(576);}

					switch (alt576) {
						case 1 :
							dbg.enterAlt(1);

							// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:43: ws
							{
							dbg.location(1589,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables11746);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(576);}
					dbg.location(1589,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables11749);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop577;
				}
			}
			} finally {dbg.exitSubRule(577);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1590, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1592:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1592, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1593:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1594:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1594,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while11774); if (state.failed) return;dbg.location(1594,16);
			pushFollow(FOLLOW_ws_in_sass_while11776);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1594,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while11778);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1594,43);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1594:43: ( ws )?
			int alt578=2;
			try { dbg.enterSubRule(578);
			try { dbg.enterDecision(578, decisionCanBacktrack[578]);

			int LA578_0 = input.LA(1);
			if ( (LA578_0==COMMENT||LA578_0==NL||LA578_0==WS) ) {
				alt578=1;
			}
			} finally {dbg.exitDecision(578);}

			switch (alt578) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1594:43: ws
					{
					dbg.location(1594,43);
					pushFollow(FOLLOW_ws_in_sass_while11780);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(578);}
			dbg.location(1594,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while11783);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1595, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1597:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1597, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1598:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1599:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1599,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block11804); if (state.failed) return;dbg.location(1599,12);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1599:12: ( ws )?
			int alt579=2;
			try { dbg.enterSubRule(579);
			try { dbg.enterDecision(579, decisionCanBacktrack[579]);

			int LA579_0 = input.LA(1);
			if ( (LA579_0==COMMENT||LA579_0==NL||LA579_0==WS) ) {
				alt579=1;
			}
			} finally {dbg.exitDecision(579);}

			switch (alt579) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1599:12: ws
					{
					dbg.location(1599,12);
					pushFollow(FOLLOW_ws_in_sass_control_block11806);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(579);}
			dbg.location(1599,16);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1599:16: ( declarations )?
			int alt580=2;
			try { dbg.enterSubRule(580);
			try { dbg.enterDecision(580, decisionCanBacktrack[580]);

			int LA580_0 = input.LA(1);
			if ( ((LA580_0 >= AT_IDENT && LA580_0 <= AT_SIGN)||(LA580_0 >= BOTTOMCENTER_SYM && LA580_0 <= BOTTOMRIGHT_SYM)||(LA580_0 >= CHARSET_SYM && LA580_0 <= COLON)||LA580_0==CONTAINER_SYM||LA580_0==COUNTER_STYLE_SYM||(LA580_0 >= DCOLON && LA580_0 <= DOT)||LA580_0==FONT_FACE_SYM||(LA580_0 >= GEN && LA580_0 <= GREATER)||(LA580_0 >= HASH && LA580_0 <= HASH_SYMBOL)||LA580_0==IDENT||LA580_0==IMPORT_SYM||LA580_0==KEYFRAMES_SYM||LA580_0==LAYER_SYM||(LA580_0 >= LBRACKET && LA580_0 <= LEFTTOP_SYM)||LA580_0==LESS_AND||(LA580_0 >= MEDIA_SYM && LA580_0 <= MOZ_DOCUMENT_SYM)||LA580_0==NAMESPACE_SYM||LA580_0==PAGE_SYM||(LA580_0 >= PIPE && LA580_0 <= PLUS)||(LA580_0 >= RIGHTBOTTOM_SYM && LA580_0 <= RIGHTTOP_SYM)||(LA580_0 >= SASS_AT_ROOT && LA580_0 <= SASS_DEBUG)||(LA580_0 >= SASS_EACH && LA580_0 <= SASS_ELSE)||(LA580_0 >= SASS_ERROR && LA580_0 <= SASS_FUNCTION)||(LA580_0 >= SASS_IF && LA580_0 <= SASS_MIXIN)||(LA580_0 >= SASS_RETURN && LA580_0 <= SEMI)||LA580_0==STAR||LA580_0==SUPPORTS_SYM||LA580_0==TILDE||(LA580_0 >= TOPCENTER_SYM && LA580_0 <= TOPRIGHT_SYM)||LA580_0==VARIABLE||LA580_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt580=1;
			}
			} finally {dbg.exitDecision(580);}

			switch (alt580) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1599:16: declarations
					{
					dbg.location(1599,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block11809);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(580);}
			dbg.location(1599,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block11812); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1600, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1602:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1602, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1603:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1608,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration11854); if (state.failed) return;dbg.location(1608,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration11856);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1608,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration11858);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1608,41);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:41: ( ws )?
			int alt581=2;
			try { dbg.enterSubRule(581);
			try { dbg.enterDecision(581, decisionCanBacktrack[581]);

			int LA581_0 = input.LA(1);
			if ( (LA581_0==COMMENT||LA581_0==NL||LA581_0==WS) ) {
				alt581=1;
			}
			} finally {dbg.exitDecision(581);}

			switch (alt581) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:41: ws
					{
					dbg.location(1608,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11860);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(581);}
			dbg.location(1608,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration11863); if (state.failed) return;dbg.location(1608,52);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:52: ( ws )?
			int alt582=2;
			try { dbg.enterSubRule(582);
			try { dbg.enterDecision(582, decisionCanBacktrack[582]);

			int LA582_0 = input.LA(1);
			if ( (LA582_0==COMMENT||LA582_0==NL||LA582_0==WS) ) {
				alt582=1;
			}
			} finally {dbg.exitDecision(582);}

			switch (alt582) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:52: ws
					{
					dbg.location(1608,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11865);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(582);}
			dbg.location(1608,56);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:56: ( cp_args_list )?
			int alt583=2;
			try { dbg.enterSubRule(583);
			try { dbg.enterDecision(583, decisionCanBacktrack[583]);

			int LA583_0 = input.LA(1);
			if ( (LA583_0==AT_IDENT||(LA583_0 >= BOTTOMCENTER_SYM && LA583_0 <= BOTTOMRIGHT_SYM)||LA583_0==CHARSET_SYM||(LA583_0 >= COUNTER_STYLE_SYM && LA583_0 <= CP_DOTS)||LA583_0==FONT_FACE_SYM||LA583_0==IDENT||LA583_0==IMPORT_SYM||LA583_0==KEYFRAMES_SYM||(LA583_0 >= LEFTBOTTOM_SYM && LA583_0 <= LEFTTOP_SYM)||LA583_0==LESS_REST||LA583_0==MEDIA_SYM||LA583_0==MOZ_DOCUMENT_SYM||LA583_0==NAMESPACE_SYM||LA583_0==PAGE_SYM||(LA583_0 >= RIGHTBOTTOM_SYM && LA583_0 <= RIGHTTOP_SYM)||(LA583_0 >= SASS_AT_ROOT && LA583_0 <= SASS_DEBUG)||(LA583_0 >= SASS_EACH && LA583_0 <= SASS_ELSE)||LA583_0==SASS_EXTEND||(LA583_0 >= SASS_FOR && LA583_0 <= SASS_FUNCTION)||(LA583_0 >= SASS_IF && LA583_0 <= SASS_MIXIN)||(LA583_0 >= SASS_RETURN && LA583_0 <= SASS_WHILE)||(LA583_0 >= TOPCENTER_SYM && LA583_0 <= TOPRIGHT_SYM)||LA583_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt583=1;
			}
			} finally {dbg.exitDecision(583);}

			switch (alt583) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:56: cp_args_list
					{
					dbg.location(1608,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration11868);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(583);}
			dbg.location(1608,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration11871); if (state.failed) return;dbg.location(1608,77);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:77: ( ws )?
			int alt584=2;
			try { dbg.enterSubRule(584);
			try { dbg.enterDecision(584, decisionCanBacktrack[584]);

			int LA584_0 = input.LA(1);
			if ( (LA584_0==COMMENT||LA584_0==NL||LA584_0==WS) ) {
				alt584=1;
			}
			} finally {dbg.exitDecision(584);}

			switch (alt584) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:77: ws
					{
					dbg.location(1608,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11873);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(584);}
			dbg.location(1608,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration11876); if (state.failed) return;dbg.location(1608,88);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:88: ( ws )?
			int alt585=2;
			try { dbg.enterSubRule(585);
			try { dbg.enterDecision(585, decisionCanBacktrack[585]);

			int LA585_0 = input.LA(1);
			if ( (LA585_0==COMMENT||LA585_0==NL||LA585_0==WS) ) {
				alt585=1;
			}
			} finally {dbg.exitDecision(585);}

			switch (alt585) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:88: ws
					{
					dbg.location(1608,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11878);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(585);}
			dbg.location(1608,92);
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:92: ( declarations )?
			int alt586=2;
			try { dbg.enterSubRule(586);
			try { dbg.enterDecision(586, decisionCanBacktrack[586]);

			int LA586_0 = input.LA(1);
			if ( ((LA586_0 >= AT_IDENT && LA586_0 <= AT_SIGN)||(LA586_0 >= BOTTOMCENTER_SYM && LA586_0 <= BOTTOMRIGHT_SYM)||(LA586_0 >= CHARSET_SYM && LA586_0 <= COLON)||LA586_0==CONTAINER_SYM||LA586_0==COUNTER_STYLE_SYM||(LA586_0 >= DCOLON && LA586_0 <= DOT)||LA586_0==FONT_FACE_SYM||(LA586_0 >= GEN && LA586_0 <= GREATER)||(LA586_0 >= HASH && LA586_0 <= HASH_SYMBOL)||LA586_0==IDENT||LA586_0==IMPORT_SYM||LA586_0==KEYFRAMES_SYM||LA586_0==LAYER_SYM||(LA586_0 >= LBRACKET && LA586_0 <= LEFTTOP_SYM)||LA586_0==LESS_AND||(LA586_0 >= MEDIA_SYM && LA586_0 <= MOZ_DOCUMENT_SYM)||LA586_0==NAMESPACE_SYM||LA586_0==PAGE_SYM||(LA586_0 >= PIPE && LA586_0 <= PLUS)||(LA586_0 >= RIGHTBOTTOM_SYM && LA586_0 <= RIGHTTOP_SYM)||(LA586_0 >= SASS_AT_ROOT && LA586_0 <= SASS_DEBUG)||(LA586_0 >= SASS_EACH && LA586_0 <= SASS_ELSE)||(LA586_0 >= SASS_ERROR && LA586_0 <= SASS_FUNCTION)||(LA586_0 >= SASS_IF && LA586_0 <= SASS_MIXIN)||(LA586_0 >= SASS_RETURN && LA586_0 <= SEMI)||LA586_0==STAR||LA586_0==SUPPORTS_SYM||LA586_0==TILDE||(LA586_0 >= TOPCENTER_SYM && LA586_0 <= TOPRIGHT_SYM)||LA586_0==VARIABLE||LA586_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt586=1;
			}
			} finally {dbg.exitDecision(586);}

			switch (alt586) {
				case 1 :
					dbg.enterAlt(1);

					// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1608:92: declarations
					{
					dbg.location(1608,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration11881);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(586);}
			dbg.location(1608,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration11884); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1609, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1611:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1611, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1612:5: ( IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1613:5: IDENT
			{
			dbg.location(1613,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name11905); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1614, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1616:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1616, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1617:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1618:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1618,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return11926); if (state.failed) return;dbg.location(1618,17);
			pushFollow(FOLLOW_ws_in_sass_function_return11928);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1618,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return11930);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1619, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1621:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1621, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1622:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1623:5: SASS_CONTENT
			{
			dbg.location(1623,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content11951); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1624, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1626:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1626, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1626:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1627:5: {...}? IDENT
			{
			dbg.location(1627,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE", "OPTIONAL"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\", \"OPTIONAL\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\", \"OPTIONAL\"})");
			}dbg.location(1627,104);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types11970); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1628, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1633:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1633, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1633:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1634:5: {...}? IDENT
			{
			dbg.location(1634,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1634,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when11993); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1635, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1637:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1637, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1637:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1638:5: {...}? IDENT
			{
			dbg.location(1638,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1638,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and12012); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1639, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1641:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1641, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1641:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1642:5: {...}? IDENT
			{
			dbg.location(1642,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1642,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or12030); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1643, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1645:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1645, 0);

		try {
			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1645:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1646:5: {...}? IDENT
			{
			dbg.location(1646,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1646,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only12048); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1647, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:61: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:62: ( ws )? mediaQueryList
		{
		dbg.location(333,62);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:62: ( ws )?
		int alt587=2;
		try { dbg.enterSubRule(587);
		try { dbg.enterDecision(587, decisionCanBacktrack[587]);

		int LA587_0 = input.LA(1);
		if ( (LA587_0==COMMENT||LA587_0==NL||LA587_0==WS) ) {
			alt587=1;
		}
		} finally {dbg.exitDecision(587);}

		switch (alt587) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:333:62: ws
				{
				dbg.location(333,62);
				pushFollow(FOLLOW_ws_in_synpred1_Css3470);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(587);}
		dbg.location(333,66);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3473);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:115: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:116: ( ws )? mediaQueryList
		{
		dbg.location(336,116);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:116: ( ws )?
		int alt588=2;
		try { dbg.enterSubRule(588);
		try { dbg.enterDecision(588, decisionCanBacktrack[588]);

		int LA588_0 = input.LA(1);
		if ( (LA588_0==COMMENT||LA588_0==NL||LA588_0==WS) ) {
			alt588=1;
		}
		} finally {dbg.exitDecision(588);}

		switch (alt588) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:336:116: ws
				{
				dbg.location(336,116);
				pushFollow(FOLLOW_ws_in_synpred2_Css3540);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(588);}
		dbg.location(336,120);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3543);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:118: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:119: ( ws )? mediaQueryList
		{
		dbg.location(338,119);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:119: ( ws )?
		int alt589=2;
		try { dbg.enterSubRule(589);
		try { dbg.enterDecision(589, decisionCanBacktrack[589]);

		int LA589_0 = input.LA(1);
		if ( (LA589_0==COMMENT||LA589_0==NL||LA589_0==WS) ) {
			alt589=1;
		}
		} finally {dbg.exitDecision(589);}

		switch (alt589) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:338:119: ws
				{
				dbg.location(338,119);
				pushFollow(FOLLOW_ws_in_synpred3_Css3600);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(589);}
		dbg.location(338,123);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3603);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:28: ( ws )? SEMI
		{
		dbg.location(410,28);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:28: ( ws )?
		int alt590=2;
		try { dbg.enterSubRule(590);
		try { dbg.enterDecision(590, decisionCanBacktrack[590]);

		int LA590_0 = input.LA(1);
		if ( (LA590_0==COMMENT||LA590_0==NL||LA590_0==WS) ) {
			alt590=1;
		}
		} finally {dbg.exitDecision(590);}

		switch (alt590) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:410:28: ws
				{
				dbg.location(410,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css31170);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(590);}
		dbg.location(410,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css31173); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt595=2;
		try { dbg.enterDecision(595, decisionCanBacktrack[595]);

		int LA595_0 = input.LA(1);
		if ( (LA595_0==SASS_MIXIN) ) {
			alt595=1;
		}
		else if ( (LA595_0==DOT||LA595_0==HASH) ) {
			alt595=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 595, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(595);}

		switch (alt595) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:6: SASS_MIXIN
				{
				dbg.location(419,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css31271); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(419,19);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:20: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(419,20);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:20: ( ( DOT IDENT ) | HASH )
				int alt591=2;
				try { dbg.enterSubRule(591);
				try { dbg.enterDecision(591, decisionCanBacktrack[591]);

				int LA591_0 = input.LA(1);
				if ( (LA591_0==DOT) ) {
					alt591=1;
				}
				else if ( (LA591_0==HASH) ) {
					alt591=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 591, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(591);}

				switch (alt591) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:21: ( DOT IDENT )
						{
						dbg.location(419,21);
						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:21: ( DOT IDENT )
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:22: DOT IDENT
						{
						dbg.location(419,22);
						match(input,DOT,FOLLOW_DOT_in_synpred5_Css31278); if (state.failed) return;dbg.location(419,26);
						match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css31280); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:35: HASH
						{
						dbg.location(419,35);
						match(input,HASH,FOLLOW_HASH_in_synpred5_Css31285); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(591);}
				dbg.location(419,41);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:41: ( ws )?
				int alt592=2;
				try { dbg.enterSubRule(592);
				try { dbg.enterDecision(592, decisionCanBacktrack[592]);

				int LA592_0 = input.LA(1);
				if ( (LA592_0==COMMENT||LA592_0==NL||LA592_0==WS) ) {
					alt592=1;
				}
				} finally {dbg.exitDecision(592);}

				switch (alt592) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:41: ws
						{
						dbg.location(419,41);
						pushFollow(FOLLOW_ws_in_synpred5_Css31288);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(592);}
				dbg.location(419,45);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css31291); if (state.failed) return;dbg.location(419,52);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:52: (~ RPAREN )*
				try { dbg.enterSubRule(593);

				loop593:
				while (true) {
					int alt593=2;
					try { dbg.enterDecision(593, decisionCanBacktrack[593]);

					int LA593_0 = input.LA(1);
					if ( ((LA593_0 >= A && LA593_0 <= RIGHTTOP_SYM)||(LA593_0 >= S && LA593_0 <= Z)) ) {
						alt593=1;
					}

					} finally {dbg.exitDecision(593);}

					switch (alt593) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
						{
						dbg.location(419,52);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop593;
					}
				}
				} finally {dbg.exitSubRule(593);}
				dbg.location(419,63);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css31299); if (state.failed) return;dbg.location(419,70);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:419:70: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(594);

				loop594:
				while (true) {
					int alt594=2;
					try { dbg.enterDecision(594, decisionCanBacktrack[594]);

					int LA594_0 = input.LA(1);
					if ( ((LA594_0 >= A && LA594_0 <= LAYER_SYM)||(LA594_0 >= LBRACKET && LA594_0 <= SASS_WHILE)||(LA594_0 >= SOLIDUS && LA594_0 <= Z)) ) {
						alt594=1;
					}

					} finally {dbg.exitDecision(594);}

					switch (alt594) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
						{
						dbg.location(419,70);
						if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop594;
					}
				}
				} finally {dbg.exitSubRule(594);}
				dbg.location(419,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css31309); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(421,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css31327);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(421,22);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:22: ( ( ws )? IMPORTANT_SYM )?
		int alt597=2;
		try { dbg.enterSubRule(597);
		try { dbg.enterDecision(597, decisionCanBacktrack[597]);

		try {
			isCyclicDecision = true;
			alt597 = dfa597.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(597);}

		switch (alt597) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(421,23);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:23: ( ws )?
				int alt596=2;
				try { dbg.enterSubRule(596);
				try { dbg.enterDecision(596, decisionCanBacktrack[596]);

				int LA596_0 = input.LA(1);
				if ( (LA596_0==COMMENT||LA596_0==NL||LA596_0==WS) ) {
					alt596=1;
				}
				} finally {dbg.exitDecision(596);}

				switch (alt596) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:23: ws
						{
						dbg.location(421,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css31330);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(596);}
				dbg.location(421,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css31333); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(597);}
		dbg.location(421,43);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:43: ( ws )?
		int alt598=2;
		try { dbg.enterSubRule(598);
		try { dbg.enterDecision(598, decisionCanBacktrack[598]);

		int LA598_0 = input.LA(1);
		if ( (LA598_0==COMMENT||LA598_0==NL||LA598_0==WS) ) {
			alt598=1;
		}
		} finally {dbg.exitDecision(598);}

		switch (alt598) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:421:43: ws
				{
				dbg.location(421,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css31337);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(598);}
		dbg.location(421,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css31340); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:422:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:422:8: cp_mixin_call
		{
		dbg.location(422,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css31363);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(423,8);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt604=3;
		try { dbg.enterSubRule(604);
		try { dbg.enterDecision(604, decisionCanBacktrack[604]);

		try {
			isCyclicDecision = true;
			alt604 = dfa604.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(604);}

		switch (alt604) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(423,9);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(423,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31388); if (state.failed) return;dbg.location(423,23);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:23: ( ws selectorsGroup )?
				int alt599=2;
				try { dbg.enterSubRule(599);
				try { dbg.enterDecision(599, decisionCanBacktrack[599]);

				try {
					isCyclicDecision = true;
					alt599 = dfa599.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(599);}

				switch (alt599) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:24: ws selectorsGroup
						{
						dbg.location(423,24);
						pushFollow(FOLLOW_ws_in_synpred8_Css31391);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(423,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31393);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(599);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(423,48);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(423,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31402); if (state.failed) return;dbg.location(423,62);
				pushFollow(FOLLOW_ws_in_synpred8_Css31404);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(423,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred8_Css31406); if (state.failed) return;dbg.location(423,72);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:72: ( ws )?
				int alt600=2;
				try { dbg.enterSubRule(600);
				try { dbg.enterDecision(600, decisionCanBacktrack[600]);

				int LA600_0 = input.LA(1);
				if ( (LA600_0==COMMENT||LA600_0==NL||LA600_0==WS) ) {
					alt600=1;
				}
				} finally {dbg.exitDecision(600);}

				switch (alt600) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:72: ws
						{
						dbg.location(423,72);
						pushFollow(FOLLOW_ws_in_synpred8_Css31408);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(600);}
				dbg.location(423,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31411); if (state.failed) return;dbg.location(423,82);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:82: ( ws )?
				int alt601=2;
				try { dbg.enterSubRule(601);
				try { dbg.enterDecision(601, decisionCanBacktrack[601]);

				int LA601_0 = input.LA(1);
				if ( (LA601_0==COMMENT||LA601_0==NL||LA601_0==WS) ) {
					alt601=1;
				}
				} finally {dbg.exitDecision(601);}

				switch (alt601) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:82: ws
						{
						dbg.location(423,82);
						pushFollow(FOLLOW_ws_in_synpred8_Css31413);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(601);}
				dbg.location(423,86);
				match(input,COLON,FOLLOW_COLON_in_synpred8_Css31416); if (state.failed) return;dbg.location(423,92);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:92: ( ws )?
				int alt602=2;
				try { dbg.enterSubRule(602);
				try { dbg.enterDecision(602, decisionCanBacktrack[602]);

				int LA602_0 = input.LA(1);
				if ( (LA602_0==COMMENT||LA602_0==NL||LA602_0==WS) ) {
					alt602=1;
				}
				} finally {dbg.exitDecision(602);}

				switch (alt602) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:92: ws
						{
						dbg.location(423,92);
						pushFollow(FOLLOW_ws_in_synpred8_Css31418);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(602);}
				dbg.location(423,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31421); if (state.failed) return;dbg.location(423,102);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:102: ( ws )?
				int alt603=2;
				try { dbg.enterSubRule(603);
				try { dbg.enterDecision(603, decisionCanBacktrack[603]);

				int LA603_0 = input.LA(1);
				if ( (LA603_0==COMMENT||LA603_0==NL||LA603_0==WS) ) {
					alt603=1;
				}
				} finally {dbg.exitDecision(603);}

				switch (alt603) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:102: ws
						{
						dbg.location(423,102);
						pushFollow(FOLLOW_ws_in_synpred8_Css31423);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(603);}
				dbg.location(423,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred8_Css31426); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:116: selectorsGroup
				{
				dbg.location(423,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31431);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(604);}
		dbg.location(423,132);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:132: ( ws )?
		int alt605=2;
		try { dbg.enterSubRule(605);
		try { dbg.enterDecision(605, decisionCanBacktrack[605]);

		int LA605_0 = input.LA(1);
		if ( (LA605_0==COMMENT||LA605_0==NL||LA605_0==WS) ) {
			alt605=1;
		}
		} finally {dbg.exitDecision(605);}

		switch (alt605) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:423:132: ws
				{
				dbg.location(423,132);
				pushFollow(FOLLOW_ws_in_synpred8_Css31434);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(605);}
		dbg.location(423,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred8_Css31437); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:424:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:424:8: propertyDeclaration
		{
		dbg.location(424,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred9_Css31449);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:18: ( ws )? COMMA
		{
		dbg.location(439,18);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:18: ( ws )?
		int alt606=2;
		try { dbg.enterSubRule(606);
		try { dbg.enterDecision(606, decisionCanBacktrack[606]);

		int LA606_0 = input.LA(1);
		if ( (LA606_0==COMMENT||LA606_0==NL||LA606_0==WS) ) {
			alt606=1;
		}
		} finally {dbg.exitDecision(606);}

		switch (alt606) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:439:18: ws
				{
				dbg.location(439,18);
				pushFollow(FOLLOW_ws_in_synpred10_Css31564);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(606);}
		dbg.location(439,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred10_Css31567); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:46: ( ( ws )? key_and )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:47: ( ws )? key_and
		{
		dbg.location(445,47);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:47: ( ws )?
		int alt607=2;
		try { dbg.enterSubRule(607);
		try { dbg.enterDecision(607, decisionCanBacktrack[607]);

		int LA607_0 = input.LA(1);
		if ( (LA607_0==COMMENT||LA607_0==NL||LA607_0==WS) ) {
			alt607=1;
		}
		} finally {dbg.exitDecision(607);}

		switch (alt607) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:445:47: ws
				{
				dbg.location(445,47);
				pushFollow(FOLLOW_ws_in_synpred11_Css31622);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(607);}
		dbg.location(445,51);
		pushFollow(FOLLOW_key_and_in_synpred11_Css31625);
		key_and();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:469:7: ( HASH )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:469:8: HASH
		{
		dbg.location(469,8);
		match(input,HASH,FOLLOW_HASH_in_synpred12_Css31843); if (state.failed) return;
		}

	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:484:7: ( HASH )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:484:8: HASH
		{
		dbg.location(484,8);
		match(input,HASH,FOLLOW_HASH_in_synpred13_Css31951); if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:5: ( mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:6: mediaFeatureValue ( ws )? ( LESS | LESS_OR_EQ )
		{
		dbg.location(505,6);
		pushFollow(FOLLOW_mediaFeatureValue_in_synpred14_Css32093);
		mediaFeatureValue();
		state._fsp--;
		if (state.failed) return;dbg.location(505,24);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:24: ( ws )?
		int alt608=2;
		try { dbg.enterSubRule(608);
		try { dbg.enterDecision(608, decisionCanBacktrack[608]);

		int LA608_0 = input.LA(1);
		if ( (LA608_0==COMMENT||LA608_0==NL||LA608_0==WS) ) {
			alt608=1;
		}
		} finally {dbg.exitDecision(608);}

		switch (alt608) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:505:24: ws
				{
				dbg.location(505,24);
				pushFollow(FOLLOW_ws_in_synpred14_Css32095);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(608);}
		dbg.location(505,28);
		if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:7: ( mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:8: mediaFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ )
		{
		dbg.location(506,8);
		pushFollow(FOLLOW_mediaFeatureValue_in_synpred15_Css32155);
		mediaFeatureValue();
		state._fsp--;
		if (state.failed) return;dbg.location(506,26);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:26: ( ws )?
		int alt609=2;
		try { dbg.enterSubRule(609);
		try { dbg.enterDecision(609, decisionCanBacktrack[609]);

		int LA609_0 = input.LA(1);
		if ( (LA609_0==COMMENT||LA609_0==NL||LA609_0==WS) ) {
			alt609=1;
		}
		} finally {dbg.exitDecision(609);}

		switch (alt609) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:506:26: ws
				{
				dbg.location(506,26);
				pushFollow(FOLLOW_ws_in_synpred15_Css32157);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(609);}
		dbg.location(506,30);
		if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:23: ( ws )? SEMI
		{
		dbg.location(517,23);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:23: ( ws )?
		int alt610=2;
		try { dbg.enterSubRule(610);
		try { dbg.enterDecision(610, decisionCanBacktrack[610]);

		int LA610_0 = input.LA(1);
		if ( (LA610_0==COMMENT||LA610_0==NL||LA610_0==WS) ) {
			alt610=1;
		}
		} finally {dbg.exitDecision(610);}

		switch (alt610) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:517:23: ws
				{
				dbg.location(517,23);
				pushFollow(FOLLOW_ws_in_synpred16_Css32290);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(610);}
		dbg.location(517,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred16_Css32293); if (state.failed) return;
		}

	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt615=2;
		try { dbg.enterDecision(615, decisionCanBacktrack[615]);

		int LA615_0 = input.LA(1);
		if ( (LA615_0==SASS_MIXIN) ) {
			alt615=1;
		}
		else if ( (LA615_0==DOT||LA615_0==HASH) ) {
			alt615=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 615, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(615);}

		switch (alt615) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:10: SASS_MIXIN
				{
				dbg.location(525,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred17_Css32368); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(525,23);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:24: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(525,24);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:24: ( ( DOT IDENT ) | HASH )
				int alt611=2;
				try { dbg.enterSubRule(611);
				try { dbg.enterDecision(611, decisionCanBacktrack[611]);

				int LA611_0 = input.LA(1);
				if ( (LA611_0==DOT) ) {
					alt611=1;
				}
				else if ( (LA611_0==HASH) ) {
					alt611=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 611, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(611);}

				switch (alt611) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:25: ( DOT IDENT )
						{
						dbg.location(525,25);
						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:25: ( DOT IDENT )
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:26: DOT IDENT
						{
						dbg.location(525,26);
						match(input,DOT,FOLLOW_DOT_in_synpred17_Css32375); if (state.failed) return;dbg.location(525,30);
						match(input,IDENT,FOLLOW_IDENT_in_synpred17_Css32377); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:39: HASH
						{
						dbg.location(525,39);
						match(input,HASH,FOLLOW_HASH_in_synpred17_Css32382); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(611);}
				dbg.location(525,45);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:45: ( ws )?
				int alt612=2;
				try { dbg.enterSubRule(612);
				try { dbg.enterDecision(612, decisionCanBacktrack[612]);

				int LA612_0 = input.LA(1);
				if ( (LA612_0==COMMENT||LA612_0==NL||LA612_0==WS) ) {
					alt612=1;
				}
				} finally {dbg.exitDecision(612);}

				switch (alt612) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:45: ws
						{
						dbg.location(525,45);
						pushFollow(FOLLOW_ws_in_synpred17_Css32385);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(612);}
				dbg.location(525,49);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred17_Css32388); if (state.failed) return;dbg.location(525,56);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:56: (~ RPAREN )*
				try { dbg.enterSubRule(613);

				loop613:
				while (true) {
					int alt613=2;
					try { dbg.enterDecision(613, decisionCanBacktrack[613]);

					int LA613_0 = input.LA(1);
					if ( ((LA613_0 >= A && LA613_0 <= RIGHTTOP_SYM)||(LA613_0 >= S && LA613_0 <= Z)) ) {
						alt613=1;
					}

					} finally {dbg.exitDecision(613);}

					switch (alt613) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
						{
						dbg.location(525,56);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop613;
					}
				}
				} finally {dbg.exitSubRule(613);}
				dbg.location(525,67);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred17_Css32396); if (state.failed) return;dbg.location(525,74);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:525:74: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(614);

				loop614:
				while (true) {
					int alt614=2;
					try { dbg.enterDecision(614, decisionCanBacktrack[614]);

					int LA614_0 = input.LA(1);
					if ( ((LA614_0 >= A && LA614_0 <= LAYER_SYM)||(LA614_0 >= LBRACKET && LA614_0 <= R)||(LA614_0 >= RBRACKET && LA614_0 <= SASS_WHILE)||(LA614_0 >= SOLIDUS && LA614_0 <= Z)) ) {
						alt614=1;
					}

					} finally {dbg.exitDecision(614);}

					switch (alt614) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
						{
						dbg.location(525,74);
						if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop614;
					}
				}
				} finally {dbg.exitSubRule(614);}
				dbg.location(525,97);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred17_Css32408); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:527:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:527:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(527,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred18_Css32434);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(527,26);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:527:26: ( ws )?
		int alt616=2;
		try { dbg.enterSubRule(616);
		try { dbg.enterDecision(616, decisionCanBacktrack[616]);

		int LA616_0 = input.LA(1);
		if ( (LA616_0==COMMENT||LA616_0==NL||LA616_0==WS) ) {
			alt616=1;
		}
		} finally {dbg.exitDecision(616);}

		switch (alt616) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:527:26: ws
				{
				dbg.location(527,26);
				pushFollow(FOLLOW_ws_in_synpred18_Css32436);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(616);}
		dbg.location(527,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred18_Css32439); if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:528:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:528:12: cp_mixin_call
		{
		dbg.location(528,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred19_Css32458);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:530:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:530:12: cp_variable ( ws )? COLON
		{
		dbg.location(530,12);
		pushFollow(FOLLOW_cp_variable_in_synpred20_Css32486);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(530,24);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:530:24: ( ws )?
		int alt617=2;
		try { dbg.enterSubRule(617);
		try { dbg.enterDecision(617, decisionCanBacktrack[617]);

		int LA617_0 = input.LA(1);
		if ( (LA617_0==COMMENT||LA617_0==NL||LA617_0==WS) ) {
			alt617=1;
		}
		} finally {dbg.exitDecision(617);}

		switch (alt617) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:530:24: ws
				{
				dbg.location(530,24);
				pushFollow(FOLLOW_ws_in_synpred20_Css32488);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(617);}
		dbg.location(530,28);
		match(input,COLON,FOLLOW_COLON_in_synpred20_Css32491); if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:531:11: ( sass_map )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:531:12: sass_map
		{
		dbg.location(531,12);
		pushFollow(FOLLOW_sass_map_in_synpred21_Css32508);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:2: ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:2: LPAREN ( ws )? supportsCondition ( ws )? RPAREN
		{
		dbg.location(571,2);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred22_Css32798); if (state.failed) return;dbg.location(571,9);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:9: ( ws )?
		int alt618=2;
		try { dbg.enterSubRule(618);
		try { dbg.enterDecision(618, decisionCanBacktrack[618]);

		int LA618_0 = input.LA(1);
		if ( (LA618_0==COMMENT||LA618_0==NL||LA618_0==WS) ) {
			alt618=1;
		}
		} finally {dbg.exitDecision(618);}

		switch (alt618) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:9: ws
				{
				dbg.location(571,9);
				pushFollow(FOLLOW_ws_in_synpred22_Css32800);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(618);}
		dbg.location(571,13);
		pushFollow(FOLLOW_supportsCondition_in_synpred22_Css32803);
		supportsCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(571,31);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:31: ( ws )?
		int alt619=2;
		try { dbg.enterSubRule(619);
		try { dbg.enterDecision(619, decisionCanBacktrack[619]);

		int LA619_0 = input.LA(1);
		if ( (LA619_0==COMMENT||LA619_0==NL||LA619_0==WS) ) {
			alt619=1;
		}
		} finally {dbg.exitDecision(619);}

		switch (alt619) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:571:31: ws
				{
				dbg.location(571,31);
				pushFollow(FOLLOW_ws_in_synpred22_Css32805);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(619);}
		dbg.location(571,35);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred22_Css32808); if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:572:4: ( supportsFeature )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:572:4: supportsFeature
		{
		dbg.location(572,4);
		pushFollow(FOLLOW_supportsFeature_in_synpred23_Css32813);
		supportsFeature();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:2: ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:3: CONTAINER_SYM ws containerCondition ( ws )? LBRACE
		{
		dbg.location(590,3);
		match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_synpred24_Css32897); if (state.failed) return;dbg.location(590,17);
		pushFollow(FOLLOW_ws_in_synpred24_Css32899);
		ws();
		state._fsp--;
		if (state.failed) return;dbg.location(590,20);
		pushFollow(FOLLOW_containerCondition_in_synpred24_Css32901);
		containerCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(590,39);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:39: ( ws )?
		int alt620=2;
		try { dbg.enterSubRule(620);
		try { dbg.enterDecision(620, decisionCanBacktrack[620]);

		int LA620_0 = input.LA(1);
		if ( (LA620_0==COMMENT||LA620_0==NL||LA620_0==WS) ) {
			alt620=1;
		}
		} finally {dbg.exitDecision(620);}

		switch (alt620) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:590:39: ws
				{
				dbg.location(590,39);
				pushFollow(FOLLOW_ws_in_synpred24_Css32903);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(620);}
		dbg.location(590,43);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred24_Css32906); if (state.failed) return;
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:2: ( LPAREN ( ws )? containerCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:2: LPAREN ( ws )? containerCondition ( ws )? RPAREN
		{
		dbg.location(616,2);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred25_Css33154); if (state.failed) return;dbg.location(616,9);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:9: ( ws )?
		int alt621=2;
		try { dbg.enterSubRule(621);
		try { dbg.enterDecision(621, decisionCanBacktrack[621]);

		int LA621_0 = input.LA(1);
		if ( (LA621_0==COMMENT||LA621_0==NL||LA621_0==WS) ) {
			alt621=1;
		}
		} finally {dbg.exitDecision(621);}

		switch (alt621) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:9: ws
				{
				dbg.location(616,9);
				pushFollow(FOLLOW_ws_in_synpred25_Css33156);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(621);}
		dbg.location(616,13);
		pushFollow(FOLLOW_containerCondition_in_synpred25_Css33159);
		containerCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(616,32);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:32: ( ws )?
		int alt622=2;
		try { dbg.enterSubRule(622);
		try { dbg.enterDecision(622, decisionCanBacktrack[622]);

		int LA622_0 = input.LA(1);
		if ( (LA622_0==COMMENT||LA622_0==NL||LA622_0==WS) ) {
			alt622=1;
		}
		} finally {dbg.exitDecision(622);}

		switch (alt622) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:616:32: ws
				{
				dbg.location(616,32);
				pushFollow(FOLLOW_ws_in_synpred25_Css33161);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(622);}
		dbg.location(616,36);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred25_Css33164); if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:617:4: ( sizeFeature )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:617:4: sizeFeature
		{
		dbg.location(617,4);
		pushFollow(FOLLOW_sizeFeature_in_synpred26_Css33169);
		sizeFeature();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:4: ({...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:4: {...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN
		{
		dbg.location(618,4);
		if ( !(evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")")) ) {
			if (state.backtracking>0) {state.failed=true; return;}
			throw new FailedPredicateException(input, "synpred27_Css3", "tokenNameEquals(\"style\")");
		}dbg.location(618,32);
		match(input,IDENT,FOLLOW_IDENT_in_synpred27_Css33176); if (state.failed) return;dbg.location(618,38);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:38: ( ws )?
		int alt623=2;
		try { dbg.enterSubRule(623);
		try { dbg.enterDecision(623, decisionCanBacktrack[623]);

		int LA623_0 = input.LA(1);
		if ( (LA623_0==COMMENT||LA623_0==NL||LA623_0==WS) ) {
			alt623=1;
		}
		} finally {dbg.exitDecision(623);}

		switch (alt623) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:38: ws
				{
				dbg.location(618,38);
				pushFollow(FOLLOW_ws_in_synpred27_Css33178);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(623);}
		dbg.location(618,42);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred27_Css33181); if (state.failed) return;dbg.location(618,49);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:49: ( ws )?
		int alt624=2;
		try { dbg.enterSubRule(624);
		try { dbg.enterDecision(624, decisionCanBacktrack[624]);

		int LA624_0 = input.LA(1);
		if ( (LA624_0==COMMENT||LA624_0==NL||LA624_0==WS) ) {
			alt624=1;
		}
		} finally {dbg.exitDecision(624);}

		switch (alt624) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:49: ws
				{
				dbg.location(618,49);
				pushFollow(FOLLOW_ws_in_synpred27_Css33183);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(624);}
		dbg.location(618,53);
		pushFollow(FOLLOW_styleQuery_in_synpred27_Css33186);
		styleQuery();
		state._fsp--;
		if (state.failed) return;dbg.location(618,64);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:64: ( ws )?
		int alt625=2;
		try { dbg.enterSubRule(625);
		try { dbg.enterDecision(625, decisionCanBacktrack[625]);

		int LA625_0 = input.LA(1);
		if ( (LA625_0==COMMENT||LA625_0==NL||LA625_0==WS) ) {
			alt625=1;
		}
		} finally {dbg.exitDecision(625);}

		switch (alt625) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:618:64: ws
				{
				dbg.location(618,64);
				pushFollow(FOLLOW_ws_in_synpred27_Css33188);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(625);}
		dbg.location(618,68);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred27_Css33191); if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:9: ( LPAREN ( ws )? styleCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:9: LPAREN ( ws )? styleCondition ( ws )? RPAREN
		{
		dbg.location(654,9);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred28_Css33482); if (state.failed) return;dbg.location(654,16);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:16: ( ws )?
		int alt626=2;
		try { dbg.enterSubRule(626);
		try { dbg.enterDecision(626, decisionCanBacktrack[626]);

		int LA626_0 = input.LA(1);
		if ( (LA626_0==COMMENT||LA626_0==NL||LA626_0==WS) ) {
			alt626=1;
		}
		} finally {dbg.exitDecision(626);}

		switch (alt626) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:16: ws
				{
				dbg.location(654,16);
				pushFollow(FOLLOW_ws_in_synpred28_Css33484);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(626);}
		dbg.location(654,20);
		pushFollow(FOLLOW_styleCondition_in_synpred28_Css33487);
		styleCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(654,35);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:35: ( ws )?
		int alt627=2;
		try { dbg.enterSubRule(627);
		try { dbg.enterDecision(627, decisionCanBacktrack[627]);

		int LA627_0 = input.LA(1);
		if ( (LA627_0==COMMENT||LA627_0==NL||LA627_0==WS) ) {
			alt627=1;
		}
		} finally {dbg.exitDecision(627);}

		switch (alt627) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:654:35: ws
				{
				dbg.location(654,35);
				pushFollow(FOLLOW_ws_in_synpred28_Css33489);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(627);}
		dbg.location(654,39);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred28_Css33492); if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:11: ( LPAREN ( ws )? styleFeature ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:11: LPAREN ( ws )? styleFeature ( ws )? RPAREN
		{
		dbg.location(655,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred29_Css33504); if (state.failed) return;dbg.location(655,18);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:18: ( ws )?
		int alt628=2;
		try { dbg.enterSubRule(628);
		try { dbg.enterDecision(628, decisionCanBacktrack[628]);

		int LA628_0 = input.LA(1);
		if ( (LA628_0==COMMENT||LA628_0==NL||LA628_0==WS) ) {
			alt628=1;
		}
		} finally {dbg.exitDecision(628);}

		switch (alt628) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:18: ws
				{
				dbg.location(655,18);
				pushFollow(FOLLOW_ws_in_synpred29_Css33506);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(628);}
		dbg.location(655,22);
		pushFollow(FOLLOW_styleFeature_in_synpred29_Css33509);
		styleFeature();
		state._fsp--;
		if (state.failed) return;dbg.location(655,35);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:35: ( ws )?
		int alt629=2;
		try { dbg.enterSubRule(629);
		try { dbg.enterDecision(629, decisionCanBacktrack[629]);

		int LA629_0 = input.LA(1);
		if ( (LA629_0==COMMENT||LA629_0==NL||LA629_0==WS) ) {
			alt629=1;
		}
		} finally {dbg.exitDecision(629);}

		switch (alt629) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:655:35: ws
				{
				dbg.location(655,35);
				pushFollow(FOLLOW_ws_in_synpred29_Css33511);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(629);}
		dbg.location(655,39);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred29_Css33514); if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:9: ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:9: LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN
		{
		dbg.location(663,9);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred30_Css33584); if (state.failed) return;dbg.location(663,16);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:16: ( ws )?
		int alt630=2;
		try { dbg.enterSubRule(630);
		try { dbg.enterDecision(630, decisionCanBacktrack[630]);

		int LA630_0 = input.LA(1);
		if ( (LA630_0==COMMENT||LA630_0==NL||LA630_0==WS) ) {
			alt630=1;
		}
		} finally {dbg.exitDecision(630);}

		switch (alt630) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:16: ws
				{
				dbg.location(663,16);
				pushFollow(FOLLOW_ws_in_synpred30_Css33586);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(630);}
		dbg.location(663,20);
		pushFollow(FOLLOW_sizeFeatureFixedValue_in_synpred30_Css33589);
		sizeFeatureFixedValue();
		state._fsp--;
		if (state.failed) return;dbg.location(663,42);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:42: ( ws )?
		int alt631=2;
		try { dbg.enterSubRule(631);
		try { dbg.enterDecision(631, decisionCanBacktrack[631]);

		int LA631_0 = input.LA(1);
		if ( (LA631_0==COMMENT||LA631_0==NL||LA631_0==WS) ) {
			alt631=1;
		}
		} finally {dbg.exitDecision(631);}

		switch (alt631) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:663:42: ws
				{
				dbg.location(663,42);
				pushFollow(FOLLOW_ws_in_synpred30_Css33591);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(631);}
		dbg.location(663,46);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred30_Css33594); if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:11: ( LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:11: LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN
		{
		dbg.location(664,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred31_Css33606); if (state.failed) return;dbg.location(664,18);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:18: ( ws )?
		int alt632=2;
		try { dbg.enterSubRule(632);
		try { dbg.enterDecision(632, decisionCanBacktrack[632]);

		int LA632_0 = input.LA(1);
		if ( (LA632_0==COMMENT||LA632_0==NL||LA632_0==WS) ) {
			alt632=1;
		}
		} finally {dbg.exitDecision(632);}

		switch (alt632) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:18: ws
				{
				dbg.location(664,18);
				pushFollow(FOLLOW_ws_in_synpred31_Css33608);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(632);}
		dbg.location(664,22);
		pushFollow(FOLLOW_sizeFeatureRangeSingle_in_synpred31_Css33611);
		sizeFeatureRangeSingle();
		state._fsp--;
		if (state.failed) return;dbg.location(664,45);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:45: ( ws )?
		int alt633=2;
		try { dbg.enterSubRule(633);
		try { dbg.enterDecision(633, decisionCanBacktrack[633]);

		int LA633_0 = input.LA(1);
		if ( (LA633_0==COMMENT||LA633_0==NL||LA633_0==WS) ) {
			alt633=1;
		}
		} finally {dbg.exitDecision(633);}

		switch (alt633) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:664:45: ws
				{
				dbg.location(664,45);
				pushFollow(FOLLOW_ws_in_synpred31_Css33613);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(633);}
		dbg.location(664,49);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred31_Css33616); if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:11: ( LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:11: LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN
		{
		dbg.location(665,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred32_Css33628); if (state.failed) return;dbg.location(665,18);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:18: ( ws )?
		int alt634=2;
		try { dbg.enterSubRule(634);
		try { dbg.enterDecision(634, decisionCanBacktrack[634]);

		int LA634_0 = input.LA(1);
		if ( (LA634_0==COMMENT||LA634_0==NL||LA634_0==WS) ) {
			alt634=1;
		}
		} finally {dbg.exitDecision(634);}

		switch (alt634) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:18: ws
				{
				dbg.location(665,18);
				pushFollow(FOLLOW_ws_in_synpred32_Css33630);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(634);}
		dbg.location(665,22);
		pushFollow(FOLLOW_sizeFeatureRangeBetweenLt_in_synpred32_Css33633);
		sizeFeatureRangeBetweenLt();
		state._fsp--;
		if (state.failed) return;dbg.location(665,48);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:48: ( ws )?
		int alt635=2;
		try { dbg.enterSubRule(635);
		try { dbg.enterDecision(635, decisionCanBacktrack[635]);

		int LA635_0 = input.LA(1);
		if ( (LA635_0==COMMENT||LA635_0==NL||LA635_0==WS) ) {
			alt635=1;
		}
		} finally {dbg.exitDecision(635);}

		switch (alt635) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:665:48: ws
				{
				dbg.location(665,48);
				pushFollow(FOLLOW_ws_in_synpred32_Css33635);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(635);}
		dbg.location(665,52);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred32_Css33638); if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:50: (~ ( SEMI | LBRACE ) )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
		{
		dbg.location(753,50);
		if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:93: ( LBRACE )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:753:94: LBRACE
		{
		dbg.location(753,94);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred34_Css34429); if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:28: ( ws )? COMMA
		{
		dbg.location(890,28);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:28: ( ws )?
		int alt636=2;
		try { dbg.enterSubRule(636);
		try { dbg.enterDecision(636, decisionCanBacktrack[636]);

		int LA636_0 = input.LA(1);
		if ( (LA636_0==COMMENT||LA636_0==NL||LA636_0==WS) ) {
			alt636=1;
		}
		} finally {dbg.exitDecision(636);}

		switch (alt636) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:890:28: ws
				{
				dbg.location(890,28);
				pushFollow(FOLLOW_ws_in_synpred35_Css35467);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(636);}
		dbg.location(890,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred35_Css35470); if (state.failed) return;
		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:41: ( function )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:898:42: function
		{
		dbg.location(898,42);
		pushFollow(FOLLOW_function_in_synpred36_Css35561);
		function();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred37_Css3
	public final void synpred37_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:926:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:926:6: cp_variable_declaration
		{
		dbg.location(926,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred37_Css35861);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:927:7: ( sass_map )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:927:8: sass_map
		{
		dbg.location(927,8);
		pushFollow(FOLLOW_sass_map_in_synpred38_Css35873);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:928:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:928:8: sass_nested_properties
		{
		dbg.location(928,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred39_Css35886);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(929,8);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt642=3;
		try { dbg.enterSubRule(642);
		try { dbg.enterDecision(642, decisionCanBacktrack[642]);

		try {
			isCyclicDecision = true;
			alt642 = dfa642.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(642);}

		switch (alt642) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(929,9);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(929,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred40_Css35900); if (state.failed) return;dbg.location(929,23);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:23: ( ws selectorsGroup )?
				int alt637=2;
				try { dbg.enterSubRule(637);
				try { dbg.enterDecision(637, decisionCanBacktrack[637]);

				try {
					isCyclicDecision = true;
					alt637 = dfa637.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(637);}

				switch (alt637) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:24: ws selectorsGroup
						{
						dbg.location(929,24);
						pushFollow(FOLLOW_ws_in_synpred40_Css35903);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(929,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred40_Css35905);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(637);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(929,48);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(929,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred40_Css35914); if (state.failed) return;dbg.location(929,62);
				pushFollow(FOLLOW_ws_in_synpred40_Css35916);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(929,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred40_Css35918); if (state.failed) return;dbg.location(929,72);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:72: ( ws )?
				int alt638=2;
				try { dbg.enterSubRule(638);
				try { dbg.enterDecision(638, decisionCanBacktrack[638]);

				int LA638_0 = input.LA(1);
				if ( (LA638_0==COMMENT||LA638_0==NL||LA638_0==WS) ) {
					alt638=1;
				}
				} finally {dbg.exitDecision(638);}

				switch (alt638) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:72: ws
						{
						dbg.location(929,72);
						pushFollow(FOLLOW_ws_in_synpred40_Css35920);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(638);}
				dbg.location(929,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred40_Css35923); if (state.failed) return;dbg.location(929,82);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:82: ( ws )?
				int alt639=2;
				try { dbg.enterSubRule(639);
				try { dbg.enterDecision(639, decisionCanBacktrack[639]);

				int LA639_0 = input.LA(1);
				if ( (LA639_0==COMMENT||LA639_0==NL||LA639_0==WS) ) {
					alt639=1;
				}
				} finally {dbg.exitDecision(639);}

				switch (alt639) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:82: ws
						{
						dbg.location(929,82);
						pushFollow(FOLLOW_ws_in_synpred40_Css35925);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(639);}
				dbg.location(929,86);
				match(input,COLON,FOLLOW_COLON_in_synpred40_Css35928); if (state.failed) return;dbg.location(929,92);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:92: ( ws )?
				int alt640=2;
				try { dbg.enterSubRule(640);
				try { dbg.enterDecision(640, decisionCanBacktrack[640]);

				int LA640_0 = input.LA(1);
				if ( (LA640_0==COMMENT||LA640_0==NL||LA640_0==WS) ) {
					alt640=1;
				}
				} finally {dbg.exitDecision(640);}

				switch (alt640) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:92: ws
						{
						dbg.location(929,92);
						pushFollow(FOLLOW_ws_in_synpred40_Css35930);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(640);}
				dbg.location(929,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred40_Css35933); if (state.failed) return;dbg.location(929,102);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:102: ( ws )?
				int alt641=2;
				try { dbg.enterSubRule(641);
				try { dbg.enterDecision(641, decisionCanBacktrack[641]);

				int LA641_0 = input.LA(1);
				if ( (LA641_0==COMMENT||LA641_0==NL||LA641_0==WS) ) {
					alt641=1;
				}
				} finally {dbg.exitDecision(641);}

				switch (alt641) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:102: ws
						{
						dbg.location(929,102);
						pushFollow(FOLLOW_ws_in_synpred40_Css35935);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(641);}
				dbg.location(929,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred40_Css35938); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:116: selectorsGroup
				{
				dbg.location(929,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred40_Css35943);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(642);}
		dbg.location(929,132);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:132: ( ws )?
		int alt643=2;
		try { dbg.enterSubRule(643);
		try { dbg.enterDecision(643, decisionCanBacktrack[643]);

		int LA643_0 = input.LA(1);
		if ( (LA643_0==COMMENT||LA643_0==NL||LA643_0==WS) ) {
			alt643=1;
		}
		} finally {dbg.exitDecision(643);}

		switch (alt643) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:929:132: ws
				{
				dbg.location(929,132);
				pushFollow(FOLLOW_ws_in_synpred40_Css35946);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(643);}
		dbg.location(929,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred40_Css35949); if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred41_Css3
	public final void synpred41_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:930:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:930:8: propertyDeclaration
		{
		dbg.location(930,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred41_Css35961);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred41_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:932:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:932:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(932,8);
		pushFollow(FOLLOW_property_in_synpred42_Css35978);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(932,17);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:932:17: ( ws )?
		int alt644=2;
		try { dbg.enterSubRule(644);
		try { dbg.enterDecision(644, decisionCanBacktrack[644]);

		int LA644_0 = input.LA(1);
		if ( (LA644_0==COMMENT||LA644_0==NL||LA644_0==WS) ) {
			alt644=1;
		}
		} finally {dbg.exitDecision(644);}

		switch (alt644) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:932:17: ws
				{
				dbg.location(932,17);
				pushFollow(FOLLOW_ws_in_synpred42_Css35980);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(644);}
		dbg.location(932,21);
		match(input,COLON,FOLLOW_COLON_in_synpred42_Css35983); if (state.failed) return;dbg.location(932,27);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:932:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(645);

		loop645:
		while (true) {
			int alt645=2;
			try { dbg.enterDecision(645, decisionCanBacktrack[645]);

			int LA645_0 = input.LA(1);
			if ( ((LA645_0 >= A && LA645_0 <= LAYER_SYM)||(LA645_0 >= LBRACKET && LA645_0 <= R)||(LA645_0 >= RBRACKET && LA645_0 <= SASS_WHILE)||(LA645_0 >= SOLIDUS && LA645_0 <= Z)) ) {
				alt645=1;
			}

			} finally {dbg.exitDecision(645);}

			switch (alt645) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
				{
				dbg.location(932,27);
				if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop645;
			}
		}
		} finally {dbg.exitSubRule(645);}
		dbg.location(932,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:933:7: ( cp_mixin_declaration )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:933:8: cp_mixin_declaration
		{
		dbg.location(933,8);
		pushFollow(FOLLOW_cp_mixin_declaration_in_synpred43_Css36012);
		cp_mixin_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:934:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:934:8: cp_mixin_call
		{
		dbg.location(934,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred44_Css36024);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:935:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:935:8: cp_mixin_call
		{
		dbg.location(935,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred45_Css36045);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred45_Css3

	// $ANTLR start synpred46_Css3
	public final void synpred46_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:65: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:66: ( ws )? esPred
		{
		dbg.location(969,66);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:66: ( ws )?
		int alt646=2;
		try { dbg.enterSubRule(646);
		try { dbg.enterDecision(646, decisionCanBacktrack[646]);

		int LA646_0 = input.LA(1);
		if ( (LA646_0==COMMENT||LA646_0==NL||LA646_0==WS) ) {
			alt646=1;
		}
		} finally {dbg.exitDecision(646);}

		switch (alt646) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:969:66: ws
				{
				dbg.location(969,66);
				pushFollow(FOLLOW_ws_in_synpred46_Css36341);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(646);}
		dbg.location(969,70);
		pushFollow(FOLLOW_esPred_in_synpred46_Css36344);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred46_Css3

	// $ANTLR start synpred47_Css3
	public final void synpred47_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:4: ( typeSelector )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:5: typeSelector
		{
		dbg.location(970,5);
		pushFollow(FOLLOW_typeSelector_in_synpred47_Css36379);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred47_Css3

	// $ANTLR start synpred48_Css3
	public final void synpred48_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:35: ( ws )? esPred
		{
		dbg.location(970,35);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:35: ( ws )?
		int alt647=2;
		try { dbg.enterSubRule(647);
		try { dbg.enterDecision(647, decisionCanBacktrack[647]);

		int LA647_0 = input.LA(1);
		if ( (LA647_0==COMMENT||LA647_0==NL||LA647_0==WS) ) {
			alt647=1;
		}
		} finally {dbg.exitDecision(647);}

		switch (alt647) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:970:35: ws
				{
				dbg.location(970,35);
				pushFollow(FOLLOW_ws_in_synpred48_Css36386);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(647);}
		dbg.location(970,39);
		pushFollow(FOLLOW_esPred_in_synpred48_Css36389);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred48_Css3

	// $ANTLR start synpred49_Css3
	public final void synpred49_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:984:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:984:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(984,8);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:984:8: ( IDENT | STAR )?
		int alt648=2;
		try { dbg.enterSubRule(648);
		try { dbg.enterDecision(648, decisionCanBacktrack[648]);

		int LA648_0 = input.LA(1);
		if ( (LA648_0==IDENT||LA648_0==STAR) ) {
			alt648=1;
		}
		} finally {dbg.exitDecision(648);}

		switch (alt648) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:
				{
				dbg.location(984,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(648);}
		dbg.location(984,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred49_Css36500); if (state.failed) return;
		}

	}
	// $ANTLR end synpred49_Css3

	// $ANTLR start synpred50_Css3
	public final void synpred50_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:58: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:59: functionName ( ws )? LPAREN
		{
		dbg.location(1147,59);
		pushFollow(FOLLOW_functionName_in_synpred50_Css38099);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1147,72);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:72: ( ws )?
		int alt649=2;
		try { dbg.enterSubRule(649);
		try { dbg.enterDecision(649, decisionCanBacktrack[649]);

		int LA649_0 = input.LA(1);
		if ( (LA649_0==COMMENT||LA649_0==NL||LA649_0==WS) ) {
			alt649=1;
		}
		} finally {dbg.exitDecision(649);}

		switch (alt649) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1147:72: ws
				{
				dbg.location(1147,72);
				pushFollow(FOLLOW_ws_in_synpred50_Css38101);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(649);}
		dbg.location(1147,76);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred50_Css38104); if (state.failed) return;
		}

	}
	// $ANTLR end synpred50_Css3

	// $ANTLR start synpred51_Css3
	public final void synpred51_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:64: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:65: functionName ( ws )? LPAREN
		{
		dbg.location(1149,65);
		pushFollow(FOLLOW_functionName_in_synpred51_Css38134);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1149,78);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:78: ( ws )?
		int alt650=2;
		try { dbg.enterSubRule(650);
		try { dbg.enterDecision(650, decisionCanBacktrack[650]);

		int LA650_0 = input.LA(1);
		if ( (LA650_0==COMMENT||LA650_0==NL||LA650_0==WS) ) {
			alt650=1;
		}
		} finally {dbg.exitDecision(650);}

		switch (alt650) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1149:78: ws
				{
				dbg.location(1149,78);
				pushFollow(FOLLOW_ws_in_synpred51_Css38136);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(650);}
		dbg.location(1149,82);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred51_Css38139); if (state.failed) return;
		}

	}
	// $ANTLR end synpred51_Css3

	// $ANTLR start synpred52_Css3
	public final void synpred52_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(1189,15);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt653=3;
		try { dbg.enterSubRule(653);
		try { dbg.enterDecision(653, decisionCanBacktrack[653]);

		try {
			isCyclicDecision = true;
			alt653 = dfa653.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(653);}

		switch (alt653) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:17: ws
				{
				dbg.location(1189,17);
				pushFollow(FOLLOW_ws_in_synpred52_Css38309);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(1189,22);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:23: ( ws )? operator ( ws )?
				{
				dbg.location(1189,23);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:23: ( ws )?
				int alt651=2;
				try { dbg.enterSubRule(651);
				try { dbg.enterDecision(651, decisionCanBacktrack[651]);

				int LA651_0 = input.LA(1);
				if ( (LA651_0==COMMENT||LA651_0==NL||LA651_0==WS) ) {
					alt651=1;
				}
				} finally {dbg.exitDecision(651);}

				switch (alt651) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:23: ws
						{
						dbg.location(1189,23);
						pushFollow(FOLLOW_ws_in_synpred52_Css38314);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(651);}
				dbg.location(1189,27);
				pushFollow(FOLLOW_operator_in_synpred52_Css38317);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(1189,36);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:36: ( ws )?
				int alt652=2;
				try { dbg.enterSubRule(652);
				try { dbg.enterDecision(652, decisionCanBacktrack[652]);

				int LA652_0 = input.LA(1);
				if ( (LA652_0==COMMENT||LA652_0==NL||LA652_0==WS) ) {
					alt652=1;
				}
				} finally {dbg.exitDecision(652);}

				switch (alt652) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:36: ws
						{
						dbg.location(1189,36);
						pushFollow(FOLLOW_ws_in_synpred52_Css38319);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(652);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1189:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(653);}
		dbg.location(1189,58);
		pushFollow(FOLLOW_term_in_synpred52_Css38328);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred52_Css3

	// $ANTLR start synpred53_Css3
	public final void synpred53_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1196:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1196:10: functionName ( ws )? LPAREN
		{
		dbg.location(1196,10);
		pushFollow(FOLLOW_functionName_in_synpred53_Css38401);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1196,23);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1196:23: ( ws )?
		int alt654=2;
		try { dbg.enterSubRule(654);
		try { dbg.enterDecision(654, decisionCanBacktrack[654]);

		int LA654_0 = input.LA(1);
		if ( (LA654_0==COMMENT||LA654_0==NL||LA654_0==WS) ) {
			alt654=1;
		}
		} finally {dbg.exitDecision(654);}

		switch (alt654) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1196:23: ws
				{
				dbg.location(1196,23);
				pushFollow(FOLLOW_ws_in_synpred53_Css38403);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(654);}
		dbg.location(1196,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred53_Css38406); if (state.failed) return;
		}

	}
	// $ANTLR end synpred53_Css3

	// $ANTLR start synpred54_Css3
	public final void synpred54_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(1262,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred54_Css39013);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(1262,26);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:26: ( ws )?
		int alt655=2;
		try { dbg.enterSubRule(655);
		try { dbg.enterDecision(655, decisionCanBacktrack[655]);

		int LA655_0 = input.LA(1);
		if ( (LA655_0==COMMENT||LA655_0==NL||LA655_0==WS) ) {
			alt655=1;
		}
		} finally {dbg.exitDecision(655);}

		switch (alt655) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1262:26: ws
				{
				dbg.location(1262,26);
				pushFollow(FOLLOW_ws_in_synpred54_Css39015);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(655);}
		dbg.location(1262,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred54_Css3

	// $ANTLR start synpred55_Css3
	public final void synpred55_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1263:11: ( cp_expression )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1263:12: cp_expression
		{
		dbg.location(1263,12);
		pushFollow(FOLLOW_cp_expression_in_synpred55_Css39053);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred55_Css3

	// $ANTLR start synpred56_Css3
	public final void synpred56_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(1275,21);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt658=3;
		try { dbg.enterSubRule(658);
		try { dbg.enterDecision(658, decisionCanBacktrack[658]);

		try {
			isCyclicDecision = true;
			alt658 = dfa658.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(658);}

		switch (alt658) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:23: ws
				{
				dbg.location(1275,23);
				pushFollow(FOLLOW_ws_in_synpred56_Css39147);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(1275,28);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(1275,29);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:29: ( ws )?
				int alt656=2;
				try { dbg.enterSubRule(656);
				try { dbg.enterDecision(656, decisionCanBacktrack[656]);

				int LA656_0 = input.LA(1);
				if ( (LA656_0==COMMENT||LA656_0==NL||LA656_0==WS) ) {
					alt656=1;
				}
				} finally {dbg.exitDecision(656);}

				switch (alt656) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:29: ws
						{
						dbg.location(1275,29);
						pushFollow(FOLLOW_ws_in_synpred56_Css39152);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(656);}
				dbg.location(1275,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred56_Css39155); if (state.failed) return;dbg.location(1275,41);
				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:41: ( ws )?
				int alt657=2;
				try { dbg.enterSubRule(657);
				try { dbg.enterDecision(657, decisionCanBacktrack[657]);

				int LA657_0 = input.LA(1);
				if ( (LA657_0==COMMENT||LA657_0==NL||LA657_0==WS) ) {
					alt657=1;
				}
				} finally {dbg.exitDecision(657);}

				switch (alt657) {
					case 1 :
						dbg.enterAlt(1);

						// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:41: ws
						{
						dbg.location(1275,41);
						pushFollow(FOLLOW_ws_in_synpred56_Css39157);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(657);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1275:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(658);}
		dbg.location(1275,63);
		pushFollow(FOLLOW_term_in_synpred56_Css39166);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred56_Css3

	// $ANTLR start synpred58_Css3
	public final void synpred58_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1310,7);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:7: ( ws )?
		int alt659=2;
		try { dbg.enterSubRule(659);
		try { dbg.enterDecision(659, decisionCanBacktrack[659]);

		int LA659_0 = input.LA(1);
		if ( (LA659_0==COMMENT||LA659_0==NL||LA659_0==WS) ) {
			alt659=1;
		}
		} finally {dbg.exitDecision(659);}

		switch (alt659) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:7: ws
				{
				dbg.location(1310,7);
				pushFollow(FOLLOW_ws_in_synpred58_Css39626);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(659);}
		dbg.location(1310,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred58_Css39629); if (state.failed) return;dbg.location(1310,17);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:17: ( ws )?
		int alt660=2;
		try { dbg.enterSubRule(660);
		try { dbg.enterDecision(660, decisionCanBacktrack[660]);

		int LA660_0 = input.LA(1);
		if ( (LA660_0==COMMENT||LA660_0==NL||LA660_0==WS) ) {
			alt660=1;
		}
		} finally {dbg.exitDecision(660);}

		switch (alt660) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1310:17: ws
				{
				dbg.location(1310,17);
				pushFollow(FOLLOW_ws_in_synpred58_Css39631);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(660);}
		dbg.location(1310,21);
		pushFollow(FOLLOW_cp_expression_in_synpred58_Css39634);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred58_Css3

	// $ANTLR start synpred59_Css3
	public final void synpred59_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1326:7: ( cp_expression_atom )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1326:8: cp_expression_atom
		{
		dbg.location(1326,8);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred59_Css39701);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred59_Css3

	// $ANTLR start synpred60_Css3
	public final void synpred60_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:10: ( ws )? cp_expression_operator
		{
		dbg.location(1328,10);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:10: ( ws )?
		int alt661=2;
		try { dbg.enterSubRule(661);
		try { dbg.enterDecision(661, decisionCanBacktrack[661]);

		int LA661_0 = input.LA(1);
		if ( (LA661_0==COMMENT||LA661_0==NL||LA661_0==WS) ) {
			alt661=1;
		}
		} finally {dbg.exitDecision(661);}

		switch (alt661) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1328:10: ws
				{
				dbg.location(1328,10);
				pushFollow(FOLLOW_ws_in_synpred60_Css39724);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(661);}
		dbg.location(1328,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred60_Css39727);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred60_Css3

	// $ANTLR start synpred61_Css3
	public final void synpred61_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1329:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1329:12: ( ws )? cp_expression_atom
		{
		dbg.location(1329,12);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1329:12: ( ws )?
		int alt662=2;
		try { dbg.enterSubRule(662);
		try { dbg.enterDecision(662, decisionCanBacktrack[662]);

		int LA662_0 = input.LA(1);
		if ( (LA662_0==COMMENT||LA662_0==NL||LA662_0==WS) ) {
			alt662=1;
		}
		} finally {dbg.exitDecision(662);}

		switch (alt662) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1329:12: ws
				{
				dbg.location(1329,12);
				pushFollow(FOLLOW_ws_in_synpred61_Css39753);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(662);}
		dbg.location(1329,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred61_Css39756);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred61_Css3

	// $ANTLR start synpred62_Css3
	public final void synpred62_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1343:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1343:14: cp_math_expression
		{
		dbg.location(1343,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred62_Css39896);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred62_Css3

	// $ANTLR start synpred63_Css3
	public final void synpred63_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1370,14);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:14: ( ws )?
		int alt663=2;
		try { dbg.enterSubRule(663);
		try { dbg.enterDecision(663, decisionCanBacktrack[663]);

		int LA663_0 = input.LA(1);
		if ( (LA663_0==COMMENT||LA663_0==NL||LA663_0==WS) ) {
			alt663=1;
		}
		} finally {dbg.exitDecision(663);}

		switch (alt663) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1370:14: ws
				{
				dbg.location(1370,14);
				pushFollow(FOLLOW_ws_in_synpred63_Css310029);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(663);}
		dbg.location(1370,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred63_Css3

	// $ANTLR start synpred64_Css3
	public final void synpred64_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:77: ( ( ws )? combinator ( ws )? )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:78: ( ws )? combinator ( ws )?
		{
		dbg.location(1402,78);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:78: ( ws )?
		int alt664=2;
		try { dbg.enterSubRule(664);
		try { dbg.enterDecision(664, decisionCanBacktrack[664]);

		int LA664_0 = input.LA(1);
		if ( (LA664_0==COMMENT||LA664_0==NL||LA664_0==WS) ) {
			alt664=1;
		}
		} finally {dbg.exitDecision(664);}

		switch (alt664) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:78: ws
				{
				dbg.location(1402,78);
				pushFollow(FOLLOW_ws_in_synpred64_Css310321);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(664);}
		dbg.location(1402,82);
		pushFollow(FOLLOW_combinator_in_synpred64_Css310324);
		combinator();
		state._fsp--;
		if (state.failed) return;dbg.location(1402,93);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:93: ( ws )?
		int alt665=2;
		try { dbg.enterSubRule(665);
		try { dbg.enterDecision(665, decisionCanBacktrack[665]);

		int LA665_0 = input.LA(1);
		if ( (LA665_0==COMMENT||LA665_0==NL||LA665_0==WS) ) {
			alt665=1;
		}
		} finally {dbg.exitDecision(665);}

		switch (alt665) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:93: ws
				{
				dbg.location(1402,93);
				pushFollow(FOLLOW_ws_in_synpred64_Css310326);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(665);}

		}

	}
	// $ANTLR end synpred64_Css3

	// $ANTLR start synpred65_Css3
	public final void synpred65_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:172: ( pseudo )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:173: pseudo
		{
		dbg.location(1402,173);
		pushFollow(FOLLOW_pseudo_in_synpred65_Css310362);
		pseudo();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred65_Css3

	// $ANTLR start synpred66_Css3
	public final void synpred66_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:191: ( ( ws )? LPAREN )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:192: ( ws )? LPAREN
		{
		dbg.location(1402,192);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:192: ( ws )?
		int alt666=2;
		try { dbg.enterSubRule(666);
		try { dbg.enterDecision(666, decisionCanBacktrack[666]);

		int LA666_0 = input.LA(1);
		if ( (LA666_0==COMMENT||LA666_0==NL||LA666_0==WS) ) {
			alt666=1;
		}
		} finally {dbg.exitDecision(666);}

		switch (alt666) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1402:192: ws
				{
				dbg.location(1402,192);
				pushFollow(FOLLOW_ws_in_synpred66_Css310370);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(666);}
		dbg.location(1402,196);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred66_Css310373); if (state.failed) return;
		}

	}
	// $ANTLR end synpred66_Css3

	// $ANTLR start synpred67_Css3
	public final void synpred67_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1411:25: ( webkitKeyframeSelectors )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1411:26: webkitKeyframeSelectors
		{
		dbg.location(1411,26);
		pushFollow(FOLLOW_webkitKeyframeSelectors_in_synpred67_Css310489);
		webkitKeyframeSelectors();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred67_Css3

	// $ANTLR start synpred68_Css3
	public final void synpred68_Css3_fragment() throws RecognitionException {
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:20: ( ws )? COMMA
		{
		dbg.location(1589,20);
		// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:20: ( ws )?
		int alt667=2;
		try { dbg.enterSubRule(667);
		try { dbg.enterDecision(667, decisionCanBacktrack[667]);

		int LA667_0 = input.LA(1);
		if ( (LA667_0==COMMENT||LA667_0==NL||LA667_0==WS) ) {
			alt667=1;
		}
		} finally {dbg.exitDecision(667);}

		switch (alt667) {
			case 1 :
				dbg.enterAlt(1);

				// ide\\css.lib\\src\\org\\netbeans\\modules\\css\\lib\\Css3.g:1589:20: ws
				{
				dbg.location(1589,20);
				pushFollow(FOLLOW_ws_in_synpred68_Css311734);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(667);}
		dbg.location(1589,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred68_Css311737); if (state.failed) return;
		}

	}
	// $ANTLR end synpred68_Css3

	// Delegated rules

	public final boolean synpred53_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred53_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred59_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred59_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred67_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred67_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred61_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred61_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred62_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred62_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred68_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred68_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred54_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred54_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred46_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred46_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred50_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred50_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred56_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred56_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred48_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred48_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred64_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred64_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred51_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred51_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred49_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred49_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred65_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred65_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred63_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred63_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred66_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred66_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred41_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred58_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred58_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred55_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred55_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred47_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred47_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred60_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred60_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred52_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred52_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA7 dfa7 = new DFA7(this);
	protected DFA10 dfa10 = new DFA10(this);
	protected DFA44 dfa44 = new DFA44(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA47 dfa47 = new DFA47(this);
	protected DFA48 dfa48 = new DFA48(this);
	protected DFA49 dfa49 = new DFA49(this);
	protected DFA54 dfa54 = new DFA54(this);
	protected DFA59 dfa59 = new DFA59(this);
	protected DFA58 dfa58 = new DFA58(this);
	protected DFA60 dfa60 = new DFA60(this);
	protected DFA61 dfa61 = new DFA61(this);
	protected DFA66 dfa66 = new DFA66(this);
	protected DFA72 dfa72 = new DFA72(this);
	protected DFA75 dfa75 = new DFA75(this);
	protected DFA81 dfa81 = new DFA81(this);
	protected DFA87 dfa87 = new DFA87(this);
	protected DFA89 dfa89 = new DFA89(this);
	protected DFA93 dfa93 = new DFA93(this);
	protected DFA99 dfa99 = new DFA99(this);
	protected DFA110 dfa110 = new DFA110(this);
	protected DFA108 dfa108 = new DFA108(this);
	protected DFA114 dfa114 = new DFA114(this);
	protected DFA123 dfa123 = new DFA123(this);
	protected DFA130 dfa130 = new DFA130(this);
	protected DFA135 dfa135 = new DFA135(this);
	protected DFA142 dfa142 = new DFA142(this);
	protected DFA151 dfa151 = new DFA151(this);
	protected DFA153 dfa153 = new DFA153(this);
	protected DFA154 dfa154 = new DFA154(this);
	protected DFA168 dfa168 = new DFA168(this);
	protected DFA170 dfa170 = new DFA170(this);
	protected DFA171 dfa171 = new DFA171(this);
	protected DFA181 dfa181 = new DFA181(this);
	protected DFA182 dfa182 = new DFA182(this);
	protected DFA200 dfa200 = new DFA200(this);
	protected DFA213 dfa213 = new DFA213(this);
	protected DFA251 dfa251 = new DFA251(this);
	protected DFA263 dfa263 = new DFA263(this);
	protected DFA262 dfa262 = new DFA262(this);
	protected DFA282 dfa282 = new DFA282(this);
	protected DFA284 dfa284 = new DFA284(this);
	protected DFA289 dfa289 = new DFA289(this);
	protected DFA294 dfa294 = new DFA294(this);
	protected DFA300 dfa300 = new DFA300(this);
	protected DFA295 dfa295 = new DFA295(this);
	protected DFA317 dfa317 = new DFA317(this);
	protected DFA310 dfa310 = new DFA310(this);
	protected DFA309 dfa309 = new DFA309(this);
	protected DFA314 dfa314 = new DFA314(this);
	protected DFA319 dfa319 = new DFA319(this);
	protected DFA321 dfa321 = new DFA321(this);
	protected DFA325 dfa325 = new DFA325(this);
	protected DFA333 dfa333 = new DFA333(this);
	protected DFA332 dfa332 = new DFA332(this);
	protected DFA331 dfa331 = new DFA331(this);
	protected DFA337 dfa337 = new DFA337(this);
	protected DFA340 dfa340 = new DFA340(this);
	protected DFA363 dfa363 = new DFA363(this);
	protected DFA386 dfa386 = new DFA386(this);
	protected DFA401 dfa401 = new DFA401(this);
	protected DFA400 dfa400 = new DFA400(this);
	protected DFA415 dfa415 = new DFA415(this);
	protected DFA425 dfa425 = new DFA425(this);
	protected DFA424 dfa424 = new DFA424(this);
	protected DFA434 dfa434 = new DFA434(this);
	protected DFA440 dfa440 = new DFA440(this);
	protected DFA446 dfa446 = new DFA446(this);
	protected DFA460 dfa460 = new DFA460(this);
	protected DFA465 dfa465 = new DFA465(this);
	protected DFA472 dfa472 = new DFA472(this);
	protected DFA476 dfa476 = new DFA476(this);
	protected DFA491 dfa491 = new DFA491(this);
	protected DFA493 dfa493 = new DFA493(this);
	protected DFA506 dfa506 = new DFA506(this);
	protected DFA509 dfa509 = new DFA509(this);
	protected DFA525 dfa525 = new DFA525(this);
	protected DFA554 dfa554 = new DFA554(this);
	protected DFA555 dfa555 = new DFA555(this);
	protected DFA561 dfa561 = new DFA561(this);
	protected DFA569 dfa569 = new DFA569(this);
	protected DFA568 dfa568 = new DFA568(this);
	protected DFA572 dfa572 = new DFA572(this);
	protected DFA577 dfa577 = new DFA577(this);
	protected DFA597 dfa597 = new DFA597(this);
	protected DFA604 dfa604 = new DFA604(this);
	protected DFA599 dfa599 = new DFA599(this);
	protected DFA642 dfa642 = new DFA642(this);
	protected DFA637 dfa637 = new DFA637(this);
	protected DFA653 dfa653 = new DFA653(this);
	protected DFA658 dfa658 = new DFA658(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u009a\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff"+
			"\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff"+
			"\1\2",
			"\1\2\1\uffff\1\3\77\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\77\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "287:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\20\uffff";
	static final String DFA5_eofS =
		"\1\2\17\uffff";
	static final String DFA5_minS =
		"\1\6\1\25\1\uffff\1\25\1\24\1\25\1\64\1\24\1\25\1\uffff\1\24\1\25\1\24"+
		"\1\64\2\24";
	static final String DFA5_maxS =
		"\1\u009a\1\u009b\1\uffff\3\u009b\1\64\2\u009b\1\uffff\3\u009b\1\64\2\u009b";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\6\uffff\1\1\6\uffff";
	static final String DFA5_specialS =
		"\20\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\1\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff"+
			"\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\3\77\uffff\1\3\105\uffff\1\3",
			"",
			"\1\5\36\uffff\1\4\11\uffff\1\2\26\uffff\1\5\105\uffff\1\5",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\2\26\uffff\1\7\57\uffff\1\11\25\uffff"+
			"\1\7",
			"\1\5\36\uffff\1\4\11\uffff\1\2\26\uffff\1\5\105\uffff\1\5",
			"\1\12",
			"\1\10\1\7\50\uffff\1\2\26\uffff\1\7\105\uffff\1\7",
			"\1\13\36\uffff\1\14\40\uffff\1\13\105\uffff\1\13",
			"",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\2\26\uffff\1\7\57\uffff\1\11\25\uffff"+
			"\1\7",
			"\1\13\36\uffff\1\14\40\uffff\1\13\105\uffff\1\13",
			"\1\10\1\16\12\uffff\1\15\64\uffff\1\16\57\uffff\1\11\25\uffff\1\16",
			"\1\17",
			"\1\10\1\16\77\uffff\1\16\105\uffff\1\16",
			"\1\10\1\16\12\uffff\1\15\64\uffff\1\16\57\uffff\1\11\25\uffff\1\16"
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "288:9: ( layerStatement ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA7_eotS =
		"\5\uffff";
	static final String DFA7_eofS =
		"\1\2\4\uffff";
	static final String DFA7_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA7_maxS =
		"\1\u009a\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA7_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA7_specialS =
		"\5\uffff}>";
	static final String[] DFA7_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff"+
			"\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\2\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA7_eot = DFA.unpackEncodedString(DFA7_eotS);
	static final short[] DFA7_eof = DFA.unpackEncodedString(DFA7_eofS);
	static final char[] DFA7_min = DFA.unpackEncodedStringToUnsignedChars(DFA7_minS);
	static final char[] DFA7_max = DFA.unpackEncodedStringToUnsignedChars(DFA7_maxS);
	static final short[] DFA7_accept = DFA.unpackEncodedString(DFA7_acceptS);
	static final short[] DFA7_special = DFA.unpackEncodedString(DFA7_specialS);
	static final short[][] DFA7_transition;

	static {
		int numStates = DFA7_transitionS.length;
		DFA7_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA7_transition[i] = DFA.unpackEncodedString(DFA7_transitionS[i]);
		}
	}

	protected class DFA7 extends DFA {

		public DFA7(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 7;
			this.eot = DFA7_eot;
			this.eof = DFA7_eof;
			this.min = DFA7_min;
			this.max = DFA7_max;
			this.accept = DFA7_accept;
			this.special = DFA7_special;
			this.transition = DFA7_transition;
		}
		@Override
		public String getDescription() {
			return "290:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA10_eotS =
		"\5\uffff";
	static final String DFA10_eofS =
		"\1\1\4\uffff";
	static final String DFA10_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA10_maxS =
		"\1\u009a\1\uffff\2\u009b\1\uffff";
	static final String DFA10_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA10_specialS =
		"\5\uffff}>";
	static final String[] DFA10_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\3\1\7\uffff"+
			"\1\1\2\uffff\2\1\2\uffff\2\1\3\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\uffff"+
			"\1\1\1\uffff\4\1\2\uffff\1\1\6\uffff\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff"+
			"\2\1\6\uffff\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\5\1\1\uffff\3\1\1\uffff"+
			"\6\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\5\1\10\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"\1\1\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
	static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
	static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
	static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
	static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
	static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
	static final short[][] DFA10_transition;

	static {
		int numStates = DFA10_transitionS.length;
		DFA10_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
		}
	}

	protected class DFA10 extends DFA {

		public DFA10(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 10;
			this.eot = DFA10_eot;
			this.eof = DFA10_eof;
			this.min = DFA10_min;
			this.max = DFA10_max;
			this.accept = DFA10_accept;
			this.special = DFA10_special;
			this.transition = DFA10_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 297:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA44_eotS =
		"\10\uffff";
	static final String DFA44_eofS =
		"\10\uffff";
	static final String DFA44_minS =
		"\1\66\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA44_maxS =
		"\1\66\2\u009b\1\0\1\uffff\1\0\2\uffff";
	static final String DFA44_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA44_specialS =
		"\3\uffff\1\0\1\uffff\1\1\2\uffff}>";
	static final String[] DFA44_transitionS = {
			"\1\1",
			"\1\2\64\uffff\1\4\12\uffff\1\2\62\uffff\1\3\14\uffff\1\3\5\uffff\1\2",
			"\1\2\64\uffff\1\4\12\uffff\1\2\62\uffff\1\5\14\uffff\1\5\5\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
	static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
	static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
	static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
	static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
	static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
	static final short[][] DFA44_transition;

	static {
		int numStates = DFA44_transitionS.length;
		DFA44_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
		}
	}

	protected class DFA44 extends DFA {

		public DFA44(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 44;
			this.eot = DFA44_eot;
			this.eof = DFA44_eof;
			this.min = DFA44_min;
			this.max = DFA44_max;
			this.accept = DFA44_accept;
			this.special = DFA44_special;
			this.transition = DFA44_transition;
		}
		@Override
		public String getDescription() {
			return "331:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA44_3 = input.LA(1);
						 
						int index44_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index44_3);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA44_5 = input.LA(1);
						 
						int index44_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index44_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 44, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA32_eotS =
		"\4\uffff";
	static final String DFA32_eofS =
		"\2\2\2\uffff";
	static final String DFA32_minS =
		"\2\6\2\uffff";
	static final String DFA32_maxS =
		"\2\u009b\2\uffff";
	static final String DFA32_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA32_specialS =
		"\4\uffff}>";
	static final String[] DFA32_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1"+
			"\3\uffff\1\2\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1"+
			"\3\uffff\1\2\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 336:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA47_eotS =
		"\12\uffff";
	static final String DFA47_eofS =
		"\1\2\11\uffff";
	static final String DFA47_minS =
		"\1\6\1\5\1\uffff\2\5\1\64\1\5\1\uffff\1\25\1\64";
	static final String DFA47_maxS =
		"\2\u009b\1\uffff\2\u009b\1\u0082\1\u009b\1\uffff\1\u009b\1\64";
	static final String DFA47_acceptS =
		"\2\uffff\1\2\4\uffff\1\1\2\uffff";
	static final String DFA47_specialS =
		"\12\uffff}>";
	static final String[] DFA47_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\2\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\4\uffff\1\1\1\uffff\3\2\5\uffff\2\2\3\uffff"+
			"\1\2\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\2\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\3\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\4\2\2"+
			"\4\uffff\1\2\2\uffff\6\2\1\uffff\2\2\3\uffff\1\2\1\uffff\3\2\5\uffff"+
			"\1\2\1\3\3\uffff\2\2\3\uffff\3\2\1\uffff\1\2\4\uffff\6\2\1\uffff\3\2"+
			"\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff"+
			"\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\3",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\3\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\4\2\2"+
			"\4\uffff\1\2\2\uffff\6\2\1\uffff\2\2\3\uffff\1\2\1\uffff\3\2\5\uffff"+
			"\1\2\1\3\3\uffff\2\2\3\uffff\3\2\1\uffff\1\2\4\uffff\6\2\1\uffff\3\2"+
			"\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff"+
			"\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\3",
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\6\2\uffff\1\2\1\uffff\2\2\3\uffff\1\2"+
			"\1\5\1\uffff\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\3\uffff"+
			"\3\2\4\uffff\1\2\3\uffff\11\2\2\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\6"+
			"\3\uffff\2\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\4\uffff\5\2\1\7\1\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\1\uffff"+
			"\3\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\6",
			"\1\10\115\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\6\2\uffff\1\2\1\uffff\2\2\3\uffff\1\2"+
			"\2\uffff\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\3\uffff"+
			"\3\2\4\uffff\1\2\3\uffff\11\2\2\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\6"+
			"\3\uffff\2\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\4\uffff\5\2\1\7\1\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\1\uffff"+
			"\3\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\6",
			"",
			"\1\7\12\uffff\1\11\51\uffff\1\2\12\uffff\1\7\26\uffff\1\7\56\uffff\1"+
			"\7",
			"\1\10"
	};

	static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
	static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
	static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
	static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
	static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
	static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
	static final short[][] DFA47_transition;

	static {
		int numStates = DFA47_transitionS.length;
		DFA47_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
		}
	}

	protected class DFA47 extends DFA {

		public DFA47(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 47;
			this.eot = DFA47_eot;
			this.eof = DFA47_eof;
			this.min = DFA47_min;
			this.max = DFA47_max;
			this.accept = DFA47_accept;
			this.special = DFA47_special;
			this.transition = DFA47_transition;
		}
		@Override
		public String getDescription() {
			return "343:39: ( LPAREN ( ws )? layerName ( ws )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA48_eotS =
		"\6\uffff";
	static final String DFA48_eofS =
		"\6\uffff";
	static final String DFA48_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA48_maxS =
		"\2\u009b\1\uffff\2\u009b\1\uffff";
	static final String DFA48_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA48_specialS =
		"\6\uffff}>";
	static final String[] DFA48_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\64\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\25\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA48_eot = DFA.unpackEncodedString(DFA48_eotS);
	static final short[] DFA48_eof = DFA.unpackEncodedString(DFA48_eofS);
	static final char[] DFA48_min = DFA.unpackEncodedStringToUnsignedChars(DFA48_minS);
	static final char[] DFA48_max = DFA.unpackEncodedStringToUnsignedChars(DFA48_maxS);
	static final short[] DFA48_accept = DFA.unpackEncodedString(DFA48_acceptS);
	static final short[] DFA48_special = DFA.unpackEncodedString(DFA48_specialS);
	static final short[][] DFA48_transition;

	static {
		int numStates = DFA48_transitionS.length;
		DFA48_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA48_transition[i] = DFA.unpackEncodedString(DFA48_transitionS[i]);
		}
	}

	protected class DFA48 extends DFA {

		public DFA48(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 48;
			this.eot = DFA48_eot;
			this.eof = DFA48_eof;
			this.min = DFA48_min;
			this.max = DFA48_max;
			this.accept = DFA48_accept;
			this.special = DFA48_special;
			this.transition = DFA48_transition;
		}
		@Override
		public String getDescription() {
			return "348:40: ( ws sass_use_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA49_eotS =
		"\4\uffff";
	static final String DFA49_eofS =
		"\4\uffff";
	static final String DFA49_minS =
		"\2\25\2\uffff";
	static final String DFA49_maxS =
		"\2\u009b\2\uffff";
	static final String DFA49_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA49_specialS =
		"\4\uffff}>";
	static final String[] DFA49_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA49_eot = DFA.unpackEncodedString(DFA49_eotS);
	static final short[] DFA49_eof = DFA.unpackEncodedString(DFA49_eofS);
	static final char[] DFA49_min = DFA.unpackEncodedStringToUnsignedChars(DFA49_minS);
	static final char[] DFA49_max = DFA.unpackEncodedStringToUnsignedChars(DFA49_maxS);
	static final short[] DFA49_accept = DFA.unpackEncodedString(DFA49_acceptS);
	static final short[] DFA49_special = DFA.unpackEncodedString(DFA49_specialS);
	static final short[][] DFA49_transition;

	static {
		int numStates = DFA49_transitionS.length;
		DFA49_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA49_transition[i] = DFA.unpackEncodedString(DFA49_transitionS[i]);
		}
	}

	protected class DFA49 extends DFA {

		public DFA49(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 49;
			this.eot = DFA49_eot;
			this.eof = DFA49_eof;
			this.min = DFA49_min;
			this.max = DFA49_max;
			this.accept = DFA49_accept;
			this.special = DFA49_special;
			this.transition = DFA49_transition;
		}
		@Override
		public String getDescription() {
			return "348:58: ( ws sass_use_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA54_eotS =
		"\4\uffff";
	static final String DFA54_eofS =
		"\4\uffff";
	static final String DFA54_minS =
		"\2\24\2\uffff";
	static final String DFA54_maxS =
		"\2\u009b\2\uffff";
	static final String DFA54_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA54_specialS =
		"\4\uffff}>";
	static final String[] DFA54_transitionS = {
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA54_eot = DFA.unpackEncodedString(DFA54_eotS);
	static final short[] DFA54_eof = DFA.unpackEncodedString(DFA54_eofS);
	static final char[] DFA54_min = DFA.unpackEncodedStringToUnsignedChars(DFA54_minS);
	static final char[] DFA54_max = DFA.unpackEncodedStringToUnsignedChars(DFA54_maxS);
	static final short[] DFA54_accept = DFA.unpackEncodedString(DFA54_acceptS);
	static final short[] DFA54_special = DFA.unpackEncodedString(DFA54_specialS);
	static final short[][] DFA54_transition;

	static {
		int numStates = DFA54_transitionS.length;
		DFA54_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA54_transition[i] = DFA.unpackEncodedString(DFA54_transitionS[i]);
		}
	}

	protected class DFA54 extends DFA {

		public DFA54(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 54;
			this.eot = DFA54_eot;
			this.eof = DFA54_eof;
			this.min = DFA54_min;
			this.max = DFA54_max;
			this.accept = DFA54_accept;
			this.special = DFA54_special;
			this.transition = DFA54_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 358:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA59_eotS =
		"\7\uffff";
	static final String DFA59_eofS =
		"\7\uffff";
	static final String DFA59_minS =
		"\2\25\1\uffff\2\25\1\0\1\uffff";
	static final String DFA59_maxS =
		"\2\u009b\1\uffff\2\u009b\1\0\1\uffff";
	static final String DFA59_acceptS =
		"\2\uffff\1\2\3\uffff\1\1";
	static final String DFA59_specialS =
		"\5\uffff\1\0\1\uffff}>";
	static final String[] DFA59_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\64\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\25\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\uffff",
			""
	};

	static final short[] DFA59_eot = DFA.unpackEncodedString(DFA59_eotS);
	static final short[] DFA59_eof = DFA.unpackEncodedString(DFA59_eofS);
	static final char[] DFA59_min = DFA.unpackEncodedStringToUnsignedChars(DFA59_minS);
	static final char[] DFA59_max = DFA.unpackEncodedStringToUnsignedChars(DFA59_maxS);
	static final short[] DFA59_accept = DFA.unpackEncodedString(DFA59_acceptS);
	static final short[] DFA59_special = DFA.unpackEncodedString(DFA59_specialS);
	static final short[][] DFA59_transition;

	static {
		int numStates = DFA59_transitionS.length;
		DFA59_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA59_transition[i] = DFA.unpackEncodedString(DFA59_transitionS[i]);
		}
	}

	protected class DFA59 extends DFA {

		public DFA59(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 59;
			this.eot = DFA59_eot;
			this.eof = DFA59_eof;
			this.min = DFA59_min;
			this.max = DFA59_max;
			this.accept = DFA59_accept;
			this.special = DFA59_special;
			this.transition = DFA59_transition;
		}
		@Override
		public String getDescription() {
			return "369:44: ( ws ( sass_forward_hide | sass_forward_show ) )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA59_5 = input.LA(1);
						 
						int index59_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")"),""))) ) {s = 6;}
						else if ( (evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {s = 2;}
						 
						input.seek(index59_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 59, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA58_eotS =
		"\6\uffff";
	static final String DFA58_eofS =
		"\6\uffff";
	static final String DFA58_minS =
		"\1\64\2\25\1\0\2\uffff";
	static final String DFA58_maxS =
		"\1\64\2\u009b\1\0\2\uffff";
	static final String DFA58_acceptS =
		"\4\uffff\1\1\1\2";
	static final String DFA58_specialS =
		"\3\uffff\1\0\2\uffff}>";
	static final String[] DFA58_transitionS = {
			"\1\1",
			"\1\2\77\uffff\1\2\105\uffff\1\2",
			"\1\2\36\uffff\1\3\40\uffff\1\2\105\uffff\1\2",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
	static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
	static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
	static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
	static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
	static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
	static final short[][] DFA58_transition;

	static {
		int numStates = DFA58_transitionS.length;
		DFA58_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
		}
	}

	protected class DFA58 extends DFA {

		public DFA58(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 58;
			this.eot = DFA58_eot;
			this.eof = DFA58_eof;
			this.min = DFA58_min;
			this.max = DFA58_max;
			this.accept = DFA58_accept;
			this.special = DFA58_special;
			this.transition = DFA58_transition;
		}
		@Override
		public String getDescription() {
			return "369:49: ( sass_forward_hide | sass_forward_show )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA58_3 = input.LA(1);
						 
						int index58_3 = input.index();
						input.rewind();
						s = -1;
						if ( (evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {s = 4;}
						else if ( (evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {s = 5;}
						 
						input.seek(index58_3);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 58, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA60_eotS =
		"\6\uffff";
	static final String DFA60_eofS =
		"\6\uffff";
	static final String DFA60_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA60_maxS =
		"\2\u009b\1\uffff\2\u009b\1\uffff";
	static final String DFA60_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA60_specialS =
		"\6\uffff}>";
	static final String[] DFA60_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\64\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\25\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA60_eot = DFA.unpackEncodedString(DFA60_eotS);
	static final short[] DFA60_eof = DFA.unpackEncodedString(DFA60_eofS);
	static final char[] DFA60_min = DFA.unpackEncodedStringToUnsignedChars(DFA60_minS);
	static final char[] DFA60_max = DFA.unpackEncodedStringToUnsignedChars(DFA60_maxS);
	static final short[] DFA60_accept = DFA.unpackEncodedString(DFA60_acceptS);
	static final short[] DFA60_special = DFA.unpackEncodedString(DFA60_specialS);
	static final short[][] DFA60_transition;

	static {
		int numStates = DFA60_transitionS.length;
		DFA60_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA60_transition[i] = DFA.unpackEncodedString(DFA60_transitionS[i]);
		}
	}

	protected class DFA60 extends DFA {

		public DFA60(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 60;
			this.eot = DFA60_eot;
			this.eof = DFA60_eof;
			this.min = DFA60_min;
			this.max = DFA60_max;
			this.accept = DFA60_accept;
			this.special = DFA60_special;
			this.transition = DFA60_transition;
		}
		@Override
		public String getDescription() {
			return "369:93: ({...}? ws sass_forward_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA61_eotS =
		"\4\uffff";
	static final String DFA61_eofS =
		"\4\uffff";
	static final String DFA61_minS =
		"\2\25\2\uffff";
	static final String DFA61_maxS =
		"\2\u009b\2\uffff";
	static final String DFA61_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA61_specialS =
		"\4\uffff}>";
	static final String[] DFA61_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
	static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
	static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
	static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
	static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
	static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
	static final short[][] DFA61_transition;

	static {
		int numStates = DFA61_transitionS.length;
		DFA61_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
		}
	}

	protected class DFA61 extends DFA {

		public DFA61(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 61;
			this.eot = DFA61_eot;
			this.eof = DFA61_eof;
			this.min = DFA61_min;
			this.max = DFA61_max;
			this.accept = DFA61_accept;
			this.special = DFA61_special;
			this.transition = DFA61_transition;
		}
		@Override
		public String getDescription() {
			return "369:141: ({...}? ws sass_forward_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA66_eotS =
		"\4\uffff";
	static final String DFA66_eofS =
		"\4\uffff";
	static final String DFA66_minS =
		"\2\24\2\uffff";
	static final String DFA66_maxS =
		"\2\u009b\2\uffff";
	static final String DFA66_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA66_specialS =
		"\4\uffff}>";
	static final String[] DFA66_transitionS = {
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA66_eot = DFA.unpackEncodedString(DFA66_eotS);
	static final short[] DFA66_eof = DFA.unpackEncodedString(DFA66_eofS);
	static final char[] DFA66_min = DFA.unpackEncodedStringToUnsignedChars(DFA66_minS);
	static final char[] DFA66_max = DFA.unpackEncodedStringToUnsignedChars(DFA66_maxS);
	static final short[] DFA66_accept = DFA.unpackEncodedString(DFA66_acceptS);
	static final short[] DFA66_special = DFA.unpackEncodedString(DFA66_specialS);
	static final short[][] DFA66_transition;

	static {
		int numStates = DFA66_transitionS.length;
		DFA66_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA66_transition[i] = DFA.unpackEncodedString(DFA66_transitionS[i]);
		}
	}

	protected class DFA66 extends DFA {

		public DFA66(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 66;
			this.eot = DFA66_eot;
			this.eof = DFA66_eof;
			this.min = DFA66_min;
			this.max = DFA66_max;
			this.accept = DFA66_accept;
			this.special = DFA66_special;
			this.transition = DFA66_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 379:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA72_eotS =
		"\4\uffff";
	static final String DFA72_eofS =
		"\4\uffff";
	static final String DFA72_minS =
		"\2\24\2\uffff";
	static final String DFA72_maxS =
		"\2\u009b\2\uffff";
	static final String DFA72_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA72_specialS =
		"\4\uffff}>";
	static final String[] DFA72_transitionS = {
			"\1\3\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\36\uffff\1\2\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
	static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
	static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
	static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
	static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
	static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
	static final short[][] DFA72_transition;

	static {
		int numStates = DFA72_transitionS.length;
		DFA72_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
		}
	}

	protected class DFA72 extends DFA {

		public DFA72(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 72;
			this.eot = DFA72_eot;
			this.eof = DFA72_eof;
			this.min = DFA72_min;
			this.max = DFA72_max;
			this.accept = DFA72_accept;
			this.special = DFA72_special;
			this.transition = DFA72_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 389:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA75_eotS =
		"\4\uffff";
	static final String DFA75_eofS =
		"\4\uffff";
	static final String DFA75_minS =
		"\2\24\2\uffff";
	static final String DFA75_maxS =
		"\2\u009b\2\uffff";
	static final String DFA75_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA75_specialS =
		"\4\uffff}>";
	static final String[] DFA75_transitionS = {
			"\1\3\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\36\uffff\1\2\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
	static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
	static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
	static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
	static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
	static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
	static final short[][] DFA75_transition;

	static {
		int numStates = DFA75_transitionS.length;
		DFA75_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
		}
	}

	protected class DFA75 extends DFA {

		public DFA75(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 75;
			this.eot = DFA75_eot;
			this.eof = DFA75_eof;
			this.min = DFA75_min;
			this.max = DFA75_max;
			this.accept = DFA75_accept;
			this.special = DFA75_special;
			this.transition = DFA75_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 394:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA81_eotS =
		"\6\uffff";
	static final String DFA81_eofS =
		"\6\uffff";
	static final String DFA81_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA81_maxS =
		"\2\u009b\1\0\1\uffff\1\0\1\uffff";
	static final String DFA81_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA81_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA81_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3"+
			"\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\4\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3"+
			"\6\uffff\1\3\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
	static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
	static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
	static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
	static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
	static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
	static final short[][] DFA81_transition;

	static {
		int numStates = DFA81_transitionS.length;
		DFA81_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
		}
	}

	protected class DFA81 extends DFA {

		public DFA81(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 81;
			this.eot = DFA81_eot;
			this.eof = DFA81_eof;
			this.min = DFA81_min;
			this.max = DFA81_max;
			this.accept = DFA81_accept;
			this.special = DFA81_special;
			this.transition = DFA81_transition;
		}
		@Override
		public String getDescription() {
			return "410:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA81_2 = input.LA(1);
						 
						int index81_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index81_2);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA81_4 = input.LA(1);
						 
						int index81_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index81_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 81, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA87_eotS =
		"\4\uffff";
	static final String DFA87_eofS =
		"\4\uffff";
	static final String DFA87_minS =
		"\2\6\2\uffff";
	static final String DFA87_maxS =
		"\2\u009b\2\uffff";
	static final String DFA87_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA87_specialS =
		"\4\uffff}>";
	static final String[] DFA87_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
	static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
	static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
	static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
	static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
	static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
	static final short[][] DFA87_transition;

	static {
		int numStates = DFA87_transitionS.length;
		DFA87_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
		}
	}

	protected class DFA87 extends DFA {

		public DFA87(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 87;
			this.eot = DFA87_eot;
			this.eof = DFA87_eof;
			this.min = DFA87_min;
			this.max = DFA87_max;
			this.accept = DFA87_accept;
			this.special = DFA87_special;
			this.transition = DFA87_transition;
		}
		@Override
		public String getDescription() {
			return "421:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA89_eotS =
		"\4\uffff";
	static final String DFA89_eofS =
		"\4\uffff";
	static final String DFA89_minS =
		"\2\6\2\uffff";
	static final String DFA89_maxS =
		"\2\u009b\2\uffff";
	static final String DFA89_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA89_specialS =
		"\4\uffff}>";
	static final String[] DFA89_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA89_eot = DFA.unpackEncodedString(DFA89_eotS);
	static final short[] DFA89_eof = DFA.unpackEncodedString(DFA89_eofS);
	static final char[] DFA89_min = DFA.unpackEncodedStringToUnsignedChars(DFA89_minS);
	static final char[] DFA89_max = DFA.unpackEncodedStringToUnsignedChars(DFA89_maxS);
	static final short[] DFA89_accept = DFA.unpackEncodedString(DFA89_acceptS);
	static final short[] DFA89_special = DFA.unpackEncodedString(DFA89_specialS);
	static final short[][] DFA89_transition;

	static {
		int numStates = DFA89_transitionS.length;
		DFA89_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA89_transition[i] = DFA.unpackEncodedString(DFA89_transitionS[i]);
		}
	}

	protected class DFA89 extends DFA {

		public DFA89(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 89;
			this.eot = DFA89_eot;
			this.eof = DFA89_eof;
			this.min = DFA89_min;
			this.max = DFA89_max;
			this.accept = DFA89_accept;
			this.special = DFA89_special;
			this.transition = DFA89_transition;
		}
		@Override
		public String getDescription() {
			return "422:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA93_eotS =
		"\4\uffff";
	static final String DFA93_eofS =
		"\2\2\2\uffff";
	static final String DFA93_minS =
		"\2\6\2\uffff";
	static final String DFA93_maxS =
		"\2\u009b\2\uffff";
	static final String DFA93_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA93_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA93_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA93_eot = DFA.unpackEncodedString(DFA93_eotS);
	static final short[] DFA93_eof = DFA.unpackEncodedString(DFA93_eofS);
	static final char[] DFA93_min = DFA.unpackEncodedStringToUnsignedChars(DFA93_minS);
	static final char[] DFA93_max = DFA.unpackEncodedStringToUnsignedChars(DFA93_maxS);
	static final short[] DFA93_accept = DFA.unpackEncodedString(DFA93_acceptS);
	static final short[] DFA93_special = DFA.unpackEncodedString(DFA93_specialS);
	static final short[][] DFA93_transition;

	static {
		int numStates = DFA93_transitionS.length;
		DFA93_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA93_transition[i] = DFA.unpackEncodedString(DFA93_transitionS[i]);
		}
	}

	protected class DFA93 extends DFA {

		public DFA93(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 93;
			this.eot = DFA93_eot;
			this.eof = DFA93_eof;
			this.min = DFA93_min;
			this.max = DFA93_max;
			this.accept = DFA93_accept;
			this.special = DFA93_special;
			this.transition = DFA93_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA93_0 = input.LA(1);
						 
						int index93_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {s = 1;}
						else if ( (LA93_0==EOF||(LA93_0 >= AT_IDENT && LA93_0 <= AT_SIGN)||(LA93_0 >= BOTTOMCENTER_SYM && LA93_0 <= BOTTOMRIGHT_SYM)||(LA93_0 >= CHARSET_SYM && LA93_0 <= COLON)||LA93_0==CONTAINER_SYM||LA93_0==COUNTER_STYLE_SYM||(LA93_0 >= DCOLON && LA93_0 <= DOT)||LA93_0==FONT_FACE_SYM||(LA93_0 >= GEN && LA93_0 <= GREATER)||(LA93_0 >= HASH && LA93_0 <= HASH_SYMBOL)||LA93_0==IDENT||LA93_0==IMPORT_SYM||LA93_0==KEYFRAMES_SYM||(LA93_0 >= LAYER_SYM && LA93_0 <= LEFTTOP_SYM)||LA93_0==LESS_AND||(LA93_0 >= MEDIA_SYM && LA93_0 <= MOZ_DOCUMENT_SYM)||LA93_0==NAMESPACE_SYM||LA93_0==PAGE_SYM||(LA93_0 >= PIPE && LA93_0 <= PLUS)||LA93_0==RBRACE||(LA93_0 >= RIGHTBOTTOM_SYM && LA93_0 <= RPAREN)||(LA93_0 >= SASS_AT_ROOT && LA93_0 <= SASS_DEBUG)||(LA93_0 >= SASS_EACH && LA93_0 <= SASS_ELSE)||(LA93_0 >= SASS_EXTEND && LA93_0 <= SASS_FUNCTION)||(LA93_0 >= SASS_IF && LA93_0 <= SASS_MIXIN)||(LA93_0 >= SASS_RETURN && LA93_0 <= SEMI)||LA93_0==STAR||LA93_0==SUPPORTS_SYM||LA93_0==TILDE||(LA93_0 >= TOPCENTER_SYM && LA93_0 <= TOPRIGHT_SYM)||LA93_0==VARIABLE||LA93_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA93_0==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index93_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA93_1 = input.LA(1);
						 
						int index93_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA93_1==EOF||(LA93_1 >= AT_IDENT && LA93_1 <= AT_SIGN)||(LA93_1 >= BOTTOMCENTER_SYM && LA93_1 <= BOTTOMRIGHT_SYM)||(LA93_1 >= CHARSET_SYM && LA93_1 <= COLON)||LA93_1==CONTAINER_SYM||LA93_1==COUNTER_STYLE_SYM||(LA93_1 >= DCOLON && LA93_1 <= DOT)||LA93_1==FONT_FACE_SYM||(LA93_1 >= GEN && LA93_1 <= GREATER)||(LA93_1 >= HASH && LA93_1 <= HASH_SYMBOL)||LA93_1==IDENT||LA93_1==IMPORT_SYM||LA93_1==KEYFRAMES_SYM||(LA93_1 >= LAYER_SYM && LA93_1 <= LEFTTOP_SYM)||LA93_1==LESS_AND||(LA93_1 >= MEDIA_SYM && LA93_1 <= MOZ_DOCUMENT_SYM)||LA93_1==NAMESPACE_SYM||LA93_1==PAGE_SYM||(LA93_1 >= PIPE && LA93_1 <= PLUS)||LA93_1==RBRACE||(LA93_1 >= RIGHTBOTTOM_SYM && LA93_1 <= RPAREN)||(LA93_1 >= SASS_AT_ROOT && LA93_1 <= SASS_DEBUG)||(LA93_1 >= SASS_EACH && LA93_1 <= SASS_ELSE)||(LA93_1 >= SASS_ERROR && LA93_1 <= SASS_FUNCTION)||(LA93_1 >= SASS_IF && LA93_1 <= SASS_MIXIN)||(LA93_1 >= SASS_RETURN && LA93_1 <= SEMI)||LA93_1==STAR||LA93_1==SUPPORTS_SYM||LA93_1==TILDE||(LA93_1 >= TOPCENTER_SYM && LA93_1 <= TOPRIGHT_SYM)||LA93_1==VARIABLE||LA93_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA93_1==COMMENT||LA93_1==NL||LA93_1==WS) ) {s = 1;}
						else if ( (LA93_1==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index93_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 93, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA99_eotS =
		"\10\uffff";
	static final String DFA99_eofS =
		"\3\uffff\1\4\4\uffff";
	static final String DFA99_minS =
		"\1\6\1\25\1\uffff\1\6\2\uffff\1\25\1\7";
	static final String DFA99_maxS =
		"\1\u009a\1\u009b\1\uffff\1\u009b\2\uffff\1\u009b\1\u0082";
	static final String DFA99_acceptS =
		"\2\uffff\1\1\1\uffff\1\2\1\3\2\uffff";
	static final String DFA99_specialS =
		"\10\uffff}>";
	static final String[] DFA99_transitionS = {
			"\1\5\3\uffff\5\5\3\uffff\1\5\5\uffff\1\5\17\uffff\1\5\2\uffff\1\4\4\uffff"+
			"\1\4\3\uffff\1\3\1\uffff\1\5\4\uffff\1\5\4\uffff\3\5\7\uffff\1\2\1\uffff"+
			"\1\5\1\uffff\1\5\5\uffff\1\5\4\uffff\1\1\4\uffff\1\5\12\uffff\3\5\2\uffff"+
			"\3\5\1\uffff\2\5\2\uffff\1\5\1\uffff\3\5\1\uffff\3\5\1\uffff\5\5\10\uffff"+
			"\5\5\10\uffff\1\5",
			"\1\6\25\uffff\1\4\4\uffff\1\4\3\uffff\1\4\25\uffff\1\2\12\uffff\1\6"+
			"\105\uffff\1\6",
			"",
			"\2\4\2\uffff\5\4\3\uffff\5\4\1\uffff\1\4\5\uffff\2\4\1\7\7\uffff\1\4"+
			"\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\1\uffff"+
			"\6\4\2\uffff\1\4\6\uffff\3\4\5\uffff\2\4\10\uffff\1\4\2\uffff\2\4\2\uffff"+
			"\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff\2\4\2\uffff\5\4\1\uffff\3\4\1\uffff"+
			"\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff"+
			"\2\4",
			"",
			"",
			"\1\6\25\uffff\1\4\4\uffff\1\4\3\uffff\1\4\25\uffff\1\2\12\uffff\1\6"+
			"\105\uffff\1\6",
			"\1\4\43\uffff\1\4\4\uffff\1\4\3\uffff\1\4\30\uffff\1\4\13\uffff\1\4"+
			"\50\uffff\1\5"
	};

	static final short[] DFA99_eot = DFA.unpackEncodedString(DFA99_eotS);
	static final short[] DFA99_eof = DFA.unpackEncodedString(DFA99_eofS);
	static final char[] DFA99_min = DFA.unpackEncodedStringToUnsignedChars(DFA99_minS);
	static final char[] DFA99_max = DFA.unpackEncodedStringToUnsignedChars(DFA99_maxS);
	static final short[] DFA99_accept = DFA.unpackEncodedString(DFA99_acceptS);
	static final short[] DFA99_special = DFA.unpackEncodedString(DFA99_specialS);
	static final short[][] DFA99_transition;

	static {
		int numStates = DFA99_transitionS.length;
		DFA99_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA99_transition[i] = DFA.unpackEncodedString(DFA99_transitionS[i]);
		}
	}

	protected class DFA99 extends DFA {

		public DFA99(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 99;
			this.eot = DFA99_eot;
			this.eof = DFA99_eof;
			this.min = DFA99_min;
			this.max = DFA99_max;
			this.accept = DFA99_accept;
			this.special = DFA99_special;
			this.transition = DFA99_transition;
		}
		@Override
		public String getDescription() {
			return "442:1: mediaQuery : ( mediaCondition | ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaConditionWithoutOr )? |{...}? cp_variable );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA110_eotS =
		"\6\uffff";
	static final String DFA110_eofS =
		"\6\uffff";
	static final String DFA110_minS =
		"\1\112\1\uffff\2\5\2\uffff";
	static final String DFA110_maxS =
		"\1\131\1\uffff\2\u009b\2\uffff";
	static final String DFA110_acceptS =
		"\1\uffff\1\1\2\uffff\1\2\1\3";
	static final String DFA110_specialS =
		"\6\uffff}>";
	static final String[] DFA110_transitionS = {
			"\1\2\16\uffff\1\1",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\2\uffff\6\4\1\uffff\2\4\3\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\3"+
			"\3\uffff\2\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\1\5\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\3\uffff\1\4\2\uffff"+
			"\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\3",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\2\uffff\6\4\1\uffff\2\4\3\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\3"+
			"\3\uffff\2\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\1\5\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\3\uffff\1\4\2\uffff"+
			"\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\3",
			"",
			""
	};

	static final short[] DFA110_eot = DFA.unpackEncodedString(DFA110_eotS);
	static final short[] DFA110_eof = DFA.unpackEncodedString(DFA110_eofS);
	static final char[] DFA110_min = DFA.unpackEncodedStringToUnsignedChars(DFA110_minS);
	static final char[] DFA110_max = DFA.unpackEncodedStringToUnsignedChars(DFA110_maxS);
	static final short[] DFA110_accept = DFA.unpackEncodedString(DFA110_acceptS);
	static final short[] DFA110_special = DFA.unpackEncodedString(DFA110_specialS);
	static final short[][] DFA110_transition;

	static {
		int numStates = DFA110_transitionS.length;
		DFA110_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA110_transition[i] = DFA.unpackEncodedString(DFA110_transitionS[i]);
		}
	}

	protected class DFA110 extends DFA {

		public DFA110(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 110;
			this.eot = DFA110_eot;
			this.eof = DFA110_eof;
			this.min = DFA110_min;
			this.max = DFA110_max;
			this.accept = DFA110_accept;
			this.special = DFA110_special;
			this.transition = DFA110_transition;
		}
		@Override
		public String getDescription() {
			return "454:1: mediaCondition : ( ( NOT ( ws )? ) mediaInParens | mediaInParens ( ( ws )? ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens ) )* | LPAREN ( ws )* RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA108_eotS =
		"\10\uffff";
	static final String DFA108_eofS =
		"\2\2\6\uffff";
	static final String DFA108_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA108_maxS =
		"\2\u009b\1\uffff\3\u009b\1\uffff\1\u009b";
	static final String DFA108_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA108_specialS =
		"\10\uffff}>";
	static final String[] DFA108_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\3\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\4\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\10\uffff\3\2\13\uffff\1\2\2\uffff\2\2\15\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24\uffff\1\2\23"+
			"\uffff\1\2\17\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\10\uffff\3\2\13\uffff\1\2\2\uffff\2\2\15\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24\uffff\1\2\23"+
			"\uffff\1\2\17\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\10\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\5\13"+
			"\uffff\2\2\24\uffff\1\2\17\uffff\1\2\3\uffff\1\2\17\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\10\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\7\13"+
			"\uffff\2\2\24\uffff\1\2\17\uffff\1\2\3\uffff\1\2\17\uffff\1\7"
	};

	static final short[] DFA108_eot = DFA.unpackEncodedString(DFA108_eotS);
	static final short[] DFA108_eof = DFA.unpackEncodedString(DFA108_eofS);
	static final char[] DFA108_min = DFA.unpackEncodedStringToUnsignedChars(DFA108_minS);
	static final char[] DFA108_max = DFA.unpackEncodedStringToUnsignedChars(DFA108_maxS);
	static final short[] DFA108_accept = DFA.unpackEncodedString(DFA108_acceptS);
	static final short[] DFA108_special = DFA.unpackEncodedString(DFA108_specialS);
	static final short[][] DFA108_transition;

	static {
		int numStates = DFA108_transitionS.length;
		DFA108_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA108_transition[i] = DFA.unpackEncodedString(DFA108_transitionS[i]);
		}
	}

	protected class DFA108 extends DFA {

		public DFA108(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 108;
			this.eot = DFA108_eot;
			this.eof = DFA108_eof;
			this.min = DFA108_min;
			this.max = DFA108_max;
			this.accept = DFA108_accept;
			this.special = DFA108_special;
			this.transition = DFA108_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 457:22: ( ( ws )? ( ( ws )? key_and ( ws )? mediaInParens | ( ws )? key_or ( ws )? mediaInParens ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA114_eotS =
		"\10\uffff";
	static final String DFA114_eofS =
		"\2\2\6\uffff";
	static final String DFA114_minS =
		"\2\6\1\uffff\3\7\1\uffff\1\7";
	static final String DFA114_maxS =
		"\2\u009b\1\uffff\3\u009b\1\uffff\1\u009b";
	static final String DFA114_acceptS =
		"\2\uffff\1\2\3\uffff\1\1\1\uffff";
	static final String DFA114_specialS =
		"\10\uffff}>";
	static final String[] DFA114_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\3\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\3\2\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\4\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			"\1\2\13\uffff\2\2\1\5\10\uffff\3\2\13\uffff\1\2\2\uffff\2\2\15\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\5\13\uffff\2\2\24\uffff\1\2\23"+
			"\uffff\1\2\17\uffff\1\5",
			"\1\2\13\uffff\2\2\1\7\10\uffff\3\2\13\uffff\1\2\2\uffff\2\2\15\uffff"+
			"\2\2\5\uffff\1\2\4\uffff\1\6\12\uffff\1\7\13\uffff\2\2\24\uffff\1\2\23"+
			"\uffff\1\2\17\uffff\1\7",
			"\1\2\13\uffff\2\2\1\5\10\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\5\13"+
			"\uffff\2\2\24\uffff\1\2\17\uffff\1\2\3\uffff\1\2\17\uffff\1\5",
			"",
			"\1\2\13\uffff\2\2\1\7\10\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\2\2\5\uffff\1\2\4\uffff\1\6\2\uffff\1\2\7\uffff\1\7\13"+
			"\uffff\2\2\24\uffff\1\2\17\uffff\1\2\3\uffff\1\2\17\uffff\1\7"
	};

	static final short[] DFA114_eot = DFA.unpackEncodedString(DFA114_eotS);
	static final short[] DFA114_eof = DFA.unpackEncodedString(DFA114_eofS);
	static final char[] DFA114_min = DFA.unpackEncodedStringToUnsignedChars(DFA114_minS);
	static final char[] DFA114_max = DFA.unpackEncodedStringToUnsignedChars(DFA114_maxS);
	static final short[] DFA114_accept = DFA.unpackEncodedString(DFA114_acceptS);
	static final short[] DFA114_special = DFA.unpackEncodedString(DFA114_specialS);
	static final short[][] DFA114_transition;

	static {
		int numStates = DFA114_transitionS.length;
		DFA114_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA114_transition[i] = DFA.unpackEncodedString(DFA114_transitionS[i]);
		}
	}

	protected class DFA114 extends DFA {

		public DFA114(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 114;
			this.eot = DFA114_eot;
			this.eof = DFA114_eof;
			this.min = DFA114_min;
			this.max = DFA114_max;
			this.accept = DFA114_accept;
			this.special = DFA114_special;
			this.transition = DFA114_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 468:21: ( ( ws )? key_and ( ws )? mediaInParens )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA123_eotS =
		"\4\uffff";
	static final String DFA123_eofS =
		"\4\uffff";
	static final String DFA123_minS =
		"\2\23\2\uffff";
	static final String DFA123_maxS =
		"\2\u009b\2\uffff";
	static final String DFA123_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA123_specialS =
		"\4\uffff}>";
	static final String[] DFA123_transitionS = {
			"\1\2\1\uffff\1\1\26\uffff\2\2\26\uffff\1\2\2\uffff\1\2\15\uffff\1\1\6"+
			"\uffff\1\2\17\uffff\1\3\56\uffff\1\1",
			"\1\2\1\uffff\1\1\26\uffff\2\2\26\uffff\1\2\2\uffff\1\2\15\uffff\1\1"+
			"\6\uffff\1\2\17\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA123_eot = DFA.unpackEncodedString(DFA123_eotS);
	static final short[] DFA123_eof = DFA.unpackEncodedString(DFA123_eofS);
	static final char[] DFA123_min = DFA.unpackEncodedStringToUnsignedChars(DFA123_minS);
	static final char[] DFA123_max = DFA.unpackEncodedStringToUnsignedChars(DFA123_maxS);
	static final short[] DFA123_accept = DFA.unpackEncodedString(DFA123_acceptS);
	static final short[] DFA123_special = DFA.unpackEncodedString(DFA123_specialS);
	static final short[][] DFA123_transition;

	static {
		int numStates = DFA123_transitionS.length;
		DFA123_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA123_transition[i] = DFA.unpackEncodedString(DFA123_transitionS[i]);
		}
	}

	protected class DFA123 extends DFA {

		public DFA123(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 123;
			this.eot = DFA123_eot;
			this.eof = DFA123_eof;
			this.min = DFA123_min;
			this.max = DFA123_max;
			this.accept = DFA123_accept;
			this.special = DFA123_special;
			this.transition = DFA123_transition;
		}
		@Override
		public String getDescription() {
			return "482:18: ( ( ws )? ( COLON | mediaComparisonOperator ) ( ws )? mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA130_eotS =
		"\4\uffff";
	static final String DFA130_eofS =
		"\4\uffff";
	static final String DFA130_minS =
		"\2\25\2\uffff";
	static final String DFA130_maxS =
		"\2\u009b\2\uffff";
	static final String DFA130_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA130_specialS =
		"\4\uffff}>";
	static final String[] DFA130_transitionS = {
			"\1\1\56\uffff\1\2\2\uffff\1\2\15\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\1\56\uffff\1\2\2\uffff\1\2\15\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA130_eot = DFA.unpackEncodedString(DFA130_eotS);
	static final short[] DFA130_eof = DFA.unpackEncodedString(DFA130_eofS);
	static final char[] DFA130_min = DFA.unpackEncodedStringToUnsignedChars(DFA130_minS);
	static final char[] DFA130_max = DFA.unpackEncodedStringToUnsignedChars(DFA130_maxS);
	static final short[] DFA130_accept = DFA.unpackEncodedString(DFA130_acceptS);
	static final short[] DFA130_special = DFA.unpackEncodedString(DFA130_specialS);
	static final short[][] DFA130_transition;

	static {
		int numStates = DFA130_transitionS.length;
		DFA130_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA130_transition[i] = DFA.unpackEncodedString(DFA130_transitionS[i]);
		}
	}

	protected class DFA130 extends DFA {

		public DFA130(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 130;
			this.eot = DFA130_eot;
			this.eof = DFA130_eof;
			this.min = DFA130_min;
			this.max = DFA130_max;
			this.accept = DFA130_accept;
			this.special = DFA130_special;
			this.transition = DFA130_transition;
		}
		@Override
		public String getDescription() {
			return "505:113: ( ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA135_eotS =
		"\4\uffff";
	static final String DFA135_eofS =
		"\4\uffff";
	static final String DFA135_minS =
		"\2\25\2\uffff";
	static final String DFA135_maxS =
		"\2\u009b\2\uffff";
	static final String DFA135_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA135_specialS =
		"\4\uffff}>";
	static final String[] DFA135_transitionS = {
			"\1\1\26\uffff\2\2\47\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\1\26\uffff\2\2\47\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA135_eot = DFA.unpackEncodedString(DFA135_eotS);
	static final short[] DFA135_eof = DFA.unpackEncodedString(DFA135_eofS);
	static final char[] DFA135_min = DFA.unpackEncodedStringToUnsignedChars(DFA135_minS);
	static final char[] DFA135_max = DFA.unpackEncodedStringToUnsignedChars(DFA135_maxS);
	static final short[] DFA135_accept = DFA.unpackEncodedString(DFA135_acceptS);
	static final short[] DFA135_special = DFA.unpackEncodedString(DFA135_specialS);
	static final short[][] DFA135_transition;

	static {
		int numStates = DFA135_transitionS.length;
		DFA135_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA135_transition[i] = DFA.unpackEncodedString(DFA135_transitionS[i]);
		}
	}

	protected class DFA135 extends DFA {

		public DFA135(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 135;
			this.eot = DFA135_eot;
			this.eof = DFA135_eof;
			this.min = DFA135_min;
			this.max = DFA135_max;
			this.accept = DFA135_accept;
			this.special = DFA135_special;
			this.transition = DFA135_transition;
		}
		@Override
		public String getDescription() {
			return "506:127: ( ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA142_eotS =
		"\6\uffff";
	static final String DFA142_eofS =
		"\2\3\4\uffff";
	static final String DFA142_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA142_maxS =
		"\2\u009b\1\0\1\uffff\1\0\1\uffff";
	static final String DFA142_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA142_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA142_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1"+
			"\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\5\3\10\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1"+
			"\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff\5\3\1\4\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\5\3\10\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA142_eot = DFA.unpackEncodedString(DFA142_eotS);
	static final short[] DFA142_eof = DFA.unpackEncodedString(DFA142_eofS);
	static final char[] DFA142_min = DFA.unpackEncodedStringToUnsignedChars(DFA142_minS);
	static final char[] DFA142_max = DFA.unpackEncodedStringToUnsignedChars(DFA142_maxS);
	static final short[] DFA142_accept = DFA.unpackEncodedString(DFA142_acceptS);
	static final short[] DFA142_special = DFA.unpackEncodedString(DFA142_specialS);
	static final short[][] DFA142_transition;

	static {
		int numStates = DFA142_transitionS.length;
		DFA142_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA142_transition[i] = DFA.unpackEncodedString(DFA142_transitionS[i]);
		}
	}

	protected class DFA142 extends DFA {

		public DFA142(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 142;
			this.eot = DFA142_eot;
			this.eof = DFA142_eof;
			this.min = DFA142_min;
			this.max = DFA142_max;
			this.accept = DFA142_accept;
			this.special = DFA142_special;
			this.transition = DFA142_transition;
		}
		@Override
		public String getDescription() {
			return "517:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA142_2 = input.LA(1);
						 
						int index142_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred16_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index142_2);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA142_4 = input.LA(1);
						 
						int index142_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred16_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index142_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 142, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA151_eotS =
		"\4\uffff";
	static final String DFA151_eofS =
		"\4\uffff";
	static final String DFA151_minS =
		"\2\25\2\uffff";
	static final String DFA151_maxS =
		"\2\u009b\2\uffff";
	static final String DFA151_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA151_specialS =
		"\4\uffff}>";
	static final String[] DFA151_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA151_eot = DFA.unpackEncodedString(DFA151_eotS);
	static final short[] DFA151_eof = DFA.unpackEncodedString(DFA151_eofS);
	static final char[] DFA151_min = DFA.unpackEncodedStringToUnsignedChars(DFA151_minS);
	static final char[] DFA151_max = DFA.unpackEncodedStringToUnsignedChars(DFA151_maxS);
	static final short[] DFA151_accept = DFA.unpackEncodedString(DFA151_acceptS);
	static final short[] DFA151_special = DFA.unpackEncodedString(DFA151_specialS);
	static final short[][] DFA151_transition;

	static {
		int numStates = DFA151_transitionS.length;
		DFA151_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA151_transition[i] = DFA.unpackEncodedString(DFA151_transitionS[i]);
		}
	}

	protected class DFA151 extends DFA {

		public DFA151(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 151;
			this.eot = DFA151_eot;
			this.eof = DFA151_eof;
			this.min = DFA151_min;
			this.max = DFA151_max;
			this.accept = DFA151_accept;
			this.special = DFA151_special;
			this.transition = DFA151_transition;
		}
		@Override
		public String getDescription() {
			return "552:21: ( ws supportsWithOperator )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA153_eotS =
		"\4\uffff";
	static final String DFA153_eofS =
		"\4\uffff";
	static final String DFA153_minS =
		"\2\25\2\uffff";
	static final String DFA153_maxS =
		"\2\u009b\2\uffff";
	static final String DFA153_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA153_specialS =
		"\4\uffff}>";
	static final String[] DFA153_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA153_eot = DFA.unpackEncodedString(DFA153_eotS);
	static final short[] DFA153_eof = DFA.unpackEncodedString(DFA153_eofS);
	static final char[] DFA153_min = DFA.unpackEncodedStringToUnsignedChars(DFA153_minS);
	static final char[] DFA153_max = DFA.unpackEncodedStringToUnsignedChars(DFA153_maxS);
	static final short[] DFA153_accept = DFA.unpackEncodedString(DFA153_acceptS);
	static final short[] DFA153_special = DFA.unpackEncodedString(DFA153_specialS);
	static final short[][] DFA153_transition;

	static {
		int numStates = DFA153_transitionS.length;
		DFA153_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA153_transition[i] = DFA.unpackEncodedString(DFA153_transitionS[i]);
		}
	}

	protected class DFA153 extends DFA {

		public DFA153(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 153;
			this.eot = DFA153_eot;
			this.eof = DFA153_eof;
			this.min = DFA153_min;
			this.max = DFA153_max;
			this.accept = DFA153_accept;
			this.special = DFA153_special;
			this.transition = DFA153_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 557:29: ( ws supportsConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA154_eotS =
		"\4\uffff";
	static final String DFA154_eofS =
		"\4\uffff";
	static final String DFA154_minS =
		"\2\25\2\uffff";
	static final String DFA154_maxS =
		"\2\u009b\2\uffff";
	static final String DFA154_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA154_specialS =
		"\4\uffff}>";
	static final String[] DFA154_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA154_eot = DFA.unpackEncodedString(DFA154_eotS);
	static final short[] DFA154_eof = DFA.unpackEncodedString(DFA154_eofS);
	static final char[] DFA154_min = DFA.unpackEncodedStringToUnsignedChars(DFA154_minS);
	static final char[] DFA154_max = DFA.unpackEncodedStringToUnsignedChars(DFA154_maxS);
	static final short[] DFA154_accept = DFA.unpackEncodedString(DFA154_acceptS);
	static final short[] DFA154_special = DFA.unpackEncodedString(DFA154_specialS);
	static final short[][] DFA154_transition;

	static {
		int numStates = DFA154_transitionS.length;
		DFA154_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA154_transition[i] = DFA.unpackEncodedString(DFA154_transitionS[i]);
		}
	}

	protected class DFA154 extends DFA {

		public DFA154(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 154;
			this.eot = DFA154_eot;
			this.eof = DFA154_eof;
			this.min = DFA154_min;
			this.max = DFA154_max;
			this.accept = DFA154_accept;
			this.special = DFA154_special;
			this.transition = DFA154_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 558:31: ( ws supportsDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA168_eotS =
		"\4\uffff";
	static final String DFA168_eofS =
		"\4\uffff";
	static final String DFA168_minS =
		"\2\25\2\uffff";
	static final String DFA168_maxS =
		"\2\u009b\2\uffff";
	static final String DFA168_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA168_specialS =
		"\4\uffff}>";
	static final String[] DFA168_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA168_eot = DFA.unpackEncodedString(DFA168_eotS);
	static final short[] DFA168_eof = DFA.unpackEncodedString(DFA168_eofS);
	static final char[] DFA168_min = DFA.unpackEncodedStringToUnsignedChars(DFA168_minS);
	static final char[] DFA168_max = DFA.unpackEncodedStringToUnsignedChars(DFA168_maxS);
	static final short[] DFA168_accept = DFA.unpackEncodedString(DFA168_acceptS);
	static final short[] DFA168_special = DFA.unpackEncodedString(DFA168_specialS);
	static final short[][] DFA168_transition;

	static {
		int numStates = DFA168_transitionS.length;
		DFA168_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA168_transition[i] = DFA.unpackEncodedString(DFA168_transitionS[i]);
		}
	}

	protected class DFA168 extends DFA {

		public DFA168(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 168;
			this.eot = DFA168_eot;
			this.eof = DFA168_eof;
			this.min = DFA168_min;
			this.max = DFA168_max;
			this.accept = DFA168_accept;
			this.special = DFA168_special;
			this.transition = DFA168_transition;
		}
		@Override
		public String getDescription() {
			return "597:34: ( ws containerQueryWithOperator )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA170_eotS =
		"\4\uffff";
	static final String DFA170_eofS =
		"\4\uffff";
	static final String DFA170_minS =
		"\2\25\2\uffff";
	static final String DFA170_maxS =
		"\2\u009b\2\uffff";
	static final String DFA170_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA170_specialS =
		"\4\uffff}>";
	static final String[] DFA170_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA170_eot = DFA.unpackEncodedString(DFA170_eotS);
	static final short[] DFA170_eof = DFA.unpackEncodedString(DFA170_eofS);
	static final char[] DFA170_min = DFA.unpackEncodedStringToUnsignedChars(DFA170_minS);
	static final char[] DFA170_max = DFA.unpackEncodedStringToUnsignedChars(DFA170_maxS);
	static final short[] DFA170_accept = DFA.unpackEncodedString(DFA170_acceptS);
	static final short[] DFA170_special = DFA.unpackEncodedString(DFA170_specialS);
	static final short[][] DFA170_transition;

	static {
		int numStates = DFA170_transitionS.length;
		DFA170_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA170_transition[i] = DFA.unpackEncodedString(DFA170_transitionS[i]);
		}
	}

	protected class DFA170 extends DFA {

		public DFA170(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 170;
			this.eot = DFA170_eot;
			this.eof = DFA170_eof;
			this.min = DFA170_min;
			this.max = DFA170_max;
			this.accept = DFA170_accept;
			this.special = DFA170_special;
			this.transition = DFA170_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 602:35: ( ws containerQueryConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA171_eotS =
		"\4\uffff";
	static final String DFA171_eofS =
		"\4\uffff";
	static final String DFA171_minS =
		"\2\25\2\uffff";
	static final String DFA171_maxS =
		"\2\u009b\2\uffff";
	static final String DFA171_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA171_specialS =
		"\4\uffff}>";
	static final String[] DFA171_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA171_eot = DFA.unpackEncodedString(DFA171_eotS);
	static final short[] DFA171_eof = DFA.unpackEncodedString(DFA171_eofS);
	static final char[] DFA171_min = DFA.unpackEncodedStringToUnsignedChars(DFA171_minS);
	static final char[] DFA171_max = DFA.unpackEncodedStringToUnsignedChars(DFA171_maxS);
	static final short[] DFA171_accept = DFA.unpackEncodedString(DFA171_acceptS);
	static final short[] DFA171_special = DFA.unpackEncodedString(DFA171_specialS);
	static final short[][] DFA171_transition;

	static {
		int numStates = DFA171_transitionS.length;
		DFA171_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA171_transition[i] = DFA.unpackEncodedString(DFA171_transitionS[i]);
		}
	}

	protected class DFA171 extends DFA {

		public DFA171(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 171;
			this.eot = DFA171_eot;
			this.eof = DFA171_eof;
			this.min = DFA171_min;
			this.max = DFA171_max;
			this.accept = DFA171_accept;
			this.special = DFA171_special;
			this.transition = DFA171_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 603:37: ( ws containerQueryDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA181_eotS =
		"\4\uffff";
	static final String DFA181_eofS =
		"\4\uffff";
	static final String DFA181_minS =
		"\2\25\2\uffff";
	static final String DFA181_maxS =
		"\2\u009b\2\uffff";
	static final String DFA181_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA181_specialS =
		"\4\uffff}>";
	static final String[] DFA181_transitionS = {
			"\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA181_eot = DFA.unpackEncodedString(DFA181_eotS);
	static final short[] DFA181_eof = DFA.unpackEncodedString(DFA181_eofS);
	static final char[] DFA181_min = DFA.unpackEncodedStringToUnsignedChars(DFA181_minS);
	static final char[] DFA181_max = DFA.unpackEncodedStringToUnsignedChars(DFA181_maxS);
	static final short[] DFA181_accept = DFA.unpackEncodedString(DFA181_acceptS);
	static final short[] DFA181_special = DFA.unpackEncodedString(DFA181_specialS);
	static final short[][] DFA181_transition;

	static {
		int numStates = DFA181_transitionS.length;
		DFA181_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA181_transition[i] = DFA.unpackEncodedString(DFA181_transitionS[i]);
		}
	}

	protected class DFA181 extends DFA {

		public DFA181(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 181;
			this.eot = DFA181_eot;
			this.eof = DFA181_eof;
			this.min = DFA181_min;
			this.max = DFA181_max;
			this.accept = DFA181_accept;
			this.special = DFA181_special;
			this.transition = DFA181_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 640:31: ( ws styleQueryConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA182_eotS =
		"\4\uffff";
	static final String DFA182_eofS =
		"\4\uffff";
	static final String DFA182_minS =
		"\2\25\2\uffff";
	static final String DFA182_maxS =
		"\2\u009b\2\uffff";
	static final String DFA182_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA182_specialS =
		"\4\uffff}>";
	static final String[] DFA182_transitionS = {
			"\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
	static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
	static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
	static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
	static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
	static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
	static final short[][] DFA182_transition;

	static {
		int numStates = DFA182_transitionS.length;
		DFA182_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
		}
	}

	protected class DFA182 extends DFA {

		public DFA182(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 182;
			this.eot = DFA182_eot;
			this.eof = DFA182_eof;
			this.min = DFA182_min;
			this.max = DFA182_max;
			this.accept = DFA182_accept;
			this.special = DFA182_special;
			this.transition = DFA182_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 641:33: ( ws styleQueryDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA200_eotS =
		"\4\uffff";
	static final String DFA200_eofS =
		"\4\uffff";
	static final String DFA200_minS =
		"\2\23\2\uffff";
	static final String DFA200_maxS =
		"\2\u009b\2\uffff";
	static final String DFA200_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA200_specialS =
		"\4\uffff}>";
	static final String[] DFA200_transitionS = {
			"\1\2\1\uffff\1\1\77\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\2\1\uffff\1\1\77\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA200_eot = DFA.unpackEncodedString(DFA200_eotS);
	static final short[] DFA200_eof = DFA.unpackEncodedString(DFA200_eofS);
	static final char[] DFA200_min = DFA.unpackEncodedStringToUnsignedChars(DFA200_minS);
	static final char[] DFA200_max = DFA.unpackEncodedStringToUnsignedChars(DFA200_maxS);
	static final short[] DFA200_accept = DFA.unpackEncodedString(DFA200_acceptS);
	static final short[] DFA200_special = DFA.unpackEncodedString(DFA200_specialS);
	static final short[][] DFA200_transition;

	static {
		int numStates = DFA200_transitionS.length;
		DFA200_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA200_transition[i] = DFA.unpackEncodedString(DFA200_transitionS[i]);
		}
	}

	protected class DFA200 extends DFA {

		public DFA200(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 200;
			this.eot = DFA200_eot;
			this.eof = DFA200_eof;
			this.min = DFA200_min;
			this.max = DFA200_max;
			this.accept = DFA200_accept;
			this.special = DFA200_special;
			this.transition = DFA200_transition;
		}
		@Override
		public String getDescription() {
			return "671:25: ( ( ws )? COLON ( ws )? sizeFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA213_eotS =
		"\12\uffff";
	static final String DFA213_eofS =
		"\12\uffff";
	static final String DFA213_minS =
		"\1\75\2\25\1\24\1\25\1\uffff\1\64\1\24\1\uffff\1\24";
	static final String DFA213_maxS =
		"\1\75\4\u009b\1\uffff\1\64\1\u009b\1\uffff\1\u009b";
	static final String DFA213_acceptS =
		"\5\uffff\1\1\2\uffff\1\2\1\uffff";
	static final String DFA213_specialS =
		"\12\uffff}>";
	static final String[] DFA213_transitionS = {
			"\1\1",
			"\1\2\77\uffff\1\2\105\uffff\1\2",
			"\1\4\36\uffff\1\3\11\uffff\1\5\26\uffff\1\4\105\uffff\1\4",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\5\26\uffff\1\7\57\uffff\1\10\25\uffff"+
			"\1\7",
			"\1\4\36\uffff\1\3\11\uffff\1\5\26\uffff\1\4\105\uffff\1\4",
			"",
			"\1\11",
			"\1\10\1\7\50\uffff\1\5\26\uffff\1\7\105\uffff\1\7",
			"",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\5\26\uffff\1\7\57\uffff\1\10\25\uffff"+
			"\1\7"
	};

	static final short[] DFA213_eot = DFA.unpackEncodedString(DFA213_eotS);
	static final short[] DFA213_eof = DFA.unpackEncodedString(DFA213_eofS);
	static final char[] DFA213_min = DFA.unpackEncodedStringToUnsignedChars(DFA213_minS);
	static final char[] DFA213_max = DFA.unpackEncodedStringToUnsignedChars(DFA213_maxS);
	static final short[] DFA213_accept = DFA.unpackEncodedString(DFA213_acceptS);
	static final short[] DFA213_special = DFA.unpackEncodedString(DFA213_specialS);
	static final short[][] DFA213_transition;

	static {
		int numStates = DFA213_transitionS.length;
		DFA213_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA213_transition[i] = DFA.unpackEncodedString(DFA213_transitionS[i]);
		}
	}

	protected class DFA213 extends DFA {

		public DFA213(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 213;
			this.eot = DFA213_eot;
			this.eof = DFA213_eof;
			this.min = DFA213_min;
			this.max = DFA213_max;
			this.accept = DFA213_accept;
			this.special = DFA213_special;
			this.transition = DFA213_transition;
		}
		@Override
		public String getDescription() {
			return "705:1: layerAtRule : ( layerBlock | layerStatement );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA251_eotS =
		"\4\uffff";
	static final String DFA251_eofS =
		"\1\2\3\uffff";
	static final String DFA251_minS =
		"\2\24\2\uffff";
	static final String DFA251_maxS =
		"\2\u009b\2\uffff";
	static final String DFA251_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA251_specialS =
		"\4\uffff}>";
	static final String[] DFA251_transitionS = {
			"\1\3\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA251_eot = DFA.unpackEncodedString(DFA251_eotS);
	static final short[] DFA251_eof = DFA.unpackEncodedString(DFA251_eofS);
	static final char[] DFA251_min = DFA.unpackEncodedStringToUnsignedChars(DFA251_minS);
	static final char[] DFA251_max = DFA.unpackEncodedStringToUnsignedChars(DFA251_maxS);
	static final short[] DFA251_accept = DFA.unpackEncodedString(DFA251_acceptS);
	static final short[] DFA251_special = DFA.unpackEncodedString(DFA251_specialS);
	static final short[][] DFA251_transition;

	static {
		int numStates = DFA251_transitionS.length;
		DFA251_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA251_transition[i] = DFA.unpackEncodedString(DFA251_transitionS[i]);
		}
	}

	protected class DFA251 extends DFA {

		public DFA251(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 251;
			this.eot = DFA251_eot;
			this.eof = DFA251_eof;
			this.min = DFA251_min;
			this.max = DFA251_max;
			this.accept = DFA251_accept;
			this.special = DFA251_special;
			this.transition = DFA251_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 788:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA263_eotS =
		"\6\uffff";
	static final String DFA263_eofS =
		"\6\uffff";
	static final String DFA263_minS =
		"\3\6\2\uffff\1\6";
	static final String DFA263_maxS =
		"\3\u009b\2\uffff\1\u009b";
	static final String DFA263_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA263_specialS =
		"\6\uffff}>";
	static final String[] DFA263_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\2\uffff\1\4\17\uffff\1\4\2\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3\4\11\uffff"+
			"\3\4\5\uffff\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\1\1\uffff"+
			"\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3"+
			"\4\11\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4"+
			"\2\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\5\4\2\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3"+
			"\4\11\uffff\3\4\5\uffff\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4"+
			"\2\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\6\4\1\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3"+
			"\4\11\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4"+
			"\2\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\5\4\2\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA263_eot = DFA.unpackEncodedString(DFA263_eotS);
	static final short[] DFA263_eof = DFA.unpackEncodedString(DFA263_eofS);
	static final char[] DFA263_min = DFA.unpackEncodedStringToUnsignedChars(DFA263_minS);
	static final char[] DFA263_max = DFA.unpackEncodedStringToUnsignedChars(DFA263_maxS);
	static final short[] DFA263_accept = DFA.unpackEncodedString(DFA263_acceptS);
	static final short[] DFA263_special = DFA.unpackEncodedString(DFA263_specialS);
	static final short[][] DFA263_transition;

	static {
		int numStates = DFA263_transitionS.length;
		DFA263_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA263_transition[i] = DFA.unpackEncodedString(DFA263_transitionS[i]);
		}
	}

	protected class DFA263 extends DFA {

		public DFA263(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 263;
			this.eot = DFA263_eot;
			this.eof = DFA263_eof;
			this.min = DFA263_min;
			this.max = DFA263_max;
			this.accept = DFA263_accept;
			this.special = DFA263_special;
			this.transition = DFA263_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 799:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA262_eotS =
		"\5\uffff";
	static final String DFA262_eofS =
		"\5\uffff";
	static final String DFA262_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA262_maxS =
		"\1\u009a\1\uffff\2\u009b\1\uffff";
	static final String DFA262_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA262_specialS =
		"\5\uffff}>";
	static final String[] DFA262_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\5\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\3\uffff\1\1\1\uffff\1\1\4\uffff\1\1\4\uffff\3\2\11\uffff\3\1\5\uffff"+
			"\1\1\11\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1"+
			"\uffff\3\1\1\uffff\3\1\1\uffff\5\1\2\uffff\1\1\5\uffff\5\2\6\uffff\1"+
			"\1\1\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"\1\1\1\uffff\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA262_eot = DFA.unpackEncodedString(DFA262_eotS);
	static final short[] DFA262_eof = DFA.unpackEncodedString(DFA262_eofS);
	static final char[] DFA262_min = DFA.unpackEncodedStringToUnsignedChars(DFA262_minS);
	static final char[] DFA262_max = DFA.unpackEncodedStringToUnsignedChars(DFA262_maxS);
	static final short[] DFA262_accept = DFA.unpackEncodedString(DFA262_acceptS);
	static final short[] DFA262_special = DFA.unpackEncodedString(DFA262_specialS);
	static final short[][] DFA262_transition;

	static {
		int numStates = DFA262_transitionS.length;
		DFA262_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA262_transition[i] = DFA.unpackEncodedString(DFA262_transitionS[i]);
		}
	}

	protected class DFA262 extends DFA {

		public DFA262(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 262;
			this.eot = DFA262_eot;
			this.eof = DFA262_eof;
			this.min = DFA262_min;
			this.max = DFA262_max;
			this.accept = DFA262_accept;
			this.special = DFA262_special;
			this.transition = DFA262_transition;
		}
		@Override
		public String getDescription() {
			return "799:62: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA282_eotS =
		"\5\uffff";
	static final String DFA282_eofS =
		"\2\2\3\uffff";
	static final String DFA282_minS =
		"\2\6\3\uffff";
	static final String DFA282_maxS =
		"\2\u009b\3\uffff";
	static final String DFA282_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA282_specialS =
		"\5\uffff}>";
	static final String[] DFA282_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\2\uffff\5\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\10\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\1\uffff\6\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA282_eot = DFA.unpackEncodedString(DFA282_eotS);
	static final short[] DFA282_eof = DFA.unpackEncodedString(DFA282_eofS);
	static final char[] DFA282_min = DFA.unpackEncodedStringToUnsignedChars(DFA282_minS);
	static final char[] DFA282_max = DFA.unpackEncodedStringToUnsignedChars(DFA282_maxS);
	static final short[] DFA282_accept = DFA.unpackEncodedString(DFA282_acceptS);
	static final short[] DFA282_special = DFA.unpackEncodedString(DFA282_specialS);
	static final short[][] DFA282_transition;

	static {
		int numStates = DFA282_transitionS.length;
		DFA282_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA282_transition[i] = DFA.unpackEncodedString(DFA282_transitionS[i]);
		}
	}

	protected class DFA282 extends DFA {

		public DFA282(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 282;
			this.eot = DFA282_eot;
			this.eof = DFA282_eof;
			this.min = DFA282_min;
			this.max = DFA282_max;
			this.accept = DFA282_accept;
			this.special = DFA282_special;
			this.transition = DFA282_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 879:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA284_eotS =
		"\6\uffff";
	static final String DFA284_eofS =
		"\6\uffff";
	static final String DFA284_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA284_maxS =
		"\2\u009b\1\0\1\uffff\1\0\1\uffff";
	static final String DFA284_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA284_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA284_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\4\uffff"+
			"\3\3\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4"+
			"\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\5\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\2\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\4\uffff"+
			"\3\3\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4"+
			"\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\5\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA284_eot = DFA.unpackEncodedString(DFA284_eotS);
	static final short[] DFA284_eof = DFA.unpackEncodedString(DFA284_eofS);
	static final char[] DFA284_min = DFA.unpackEncodedStringToUnsignedChars(DFA284_minS);
	static final char[] DFA284_max = DFA.unpackEncodedStringToUnsignedChars(DFA284_maxS);
	static final short[] DFA284_accept = DFA.unpackEncodedString(DFA284_acceptS);
	static final short[] DFA284_special = DFA.unpackEncodedString(DFA284_specialS);
	static final short[][] DFA284_transition;

	static {
		int numStates = DFA284_transitionS.length;
		DFA284_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA284_transition[i] = DFA.unpackEncodedString(DFA284_transitionS[i]);
		}
	}

	protected class DFA284 extends DFA {

		public DFA284(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 284;
			this.eot = DFA284_eot;
			this.eof = DFA284_eof;
			this.min = DFA284_min;
			this.max = DFA284_max;
			this.accept = DFA284_accept;
			this.special = DFA284_special;
			this.transition = DFA284_transition;
		}
		@Override
		public String getDescription() {
			return "890:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA284_2 = input.LA(1);
						 
						int index284_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred35_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index284_2);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA284_4 = input.LA(1);
						 
						int index284_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred35_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index284_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 284, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA289_eotS =
		"\4\uffff";
	static final String DFA289_eofS =
		"\4\uffff";
	static final String DFA289_minS =
		"\2\23\2\uffff";
	static final String DFA289_maxS =
		"\2\u009b\2\uffff";
	static final String DFA289_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA289_specialS =
		"\4\uffff}>";
	static final String[] DFA289_transitionS = {
			"\1\2\1\uffff\1\1\77\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"\1\2\1\uffff\1\1\77\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA289_eot = DFA.unpackEncodedString(DFA289_eotS);
	static final short[] DFA289_eof = DFA.unpackEncodedString(DFA289_eofS);
	static final char[] DFA289_min = DFA.unpackEncodedStringToUnsignedChars(DFA289_minS);
	static final char[] DFA289_max = DFA.unpackEncodedStringToUnsignedChars(DFA289_maxS);
	static final short[] DFA289_accept = DFA.unpackEncodedString(DFA289_acceptS);
	static final short[] DFA289_special = DFA.unpackEncodedString(DFA289_specialS);
	static final short[][] DFA289_transition;

	static {
		int numStates = DFA289_transitionS.length;
		DFA289_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA289_transition[i] = DFA.unpackEncodedString(DFA289_transitionS[i]);
		}
	}

	protected class DFA289 extends DFA {

		public DFA289(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 289;
			this.eot = DFA289_eot;
			this.eof = DFA289_eof;
			this.min = DFA289_min;
			this.max = DFA289_max;
			this.accept = DFA289_accept;
			this.special = DFA289_special;
			this.transition = DFA289_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 898:25: ( ( ws )? STRING )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA294_eotS =
		"\4\uffff";
	static final String DFA294_eofS =
		"\4\uffff";
	static final String DFA294_minS =
		"\2\6\2\uffff";
	static final String DFA294_maxS =
		"\2\u009b\2\uffff";
	static final String DFA294_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA294_specialS =
		"\4\uffff}>";
	static final String[] DFA294_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\2\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\4\uffff\3\3"+
			"\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1"+
			"\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5"+
			"\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\2\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\4\uffff\3"+
			"\3\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3"+
			"\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\5\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA294_eot = DFA.unpackEncodedString(DFA294_eotS);
	static final short[] DFA294_eof = DFA.unpackEncodedString(DFA294_eofS);
	static final char[] DFA294_min = DFA.unpackEncodedStringToUnsignedChars(DFA294_minS);
	static final char[] DFA294_max = DFA.unpackEncodedStringToUnsignedChars(DFA294_maxS);
	static final short[] DFA294_accept = DFA.unpackEncodedString(DFA294_acceptS);
	static final short[] DFA294_special = DFA.unpackEncodedString(DFA294_specialS);
	static final short[][] DFA294_transition;

	static {
		int numStates = DFA294_transitionS.length;
		DFA294_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA294_transition[i] = DFA.unpackEncodedString(DFA294_transitionS[i]);
		}
	}

	protected class DFA294 extends DFA {

		public DFA294(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 294;
			this.eot = DFA294_eot;
			this.eof = DFA294_eof;
			this.min = DFA294_min;
			this.max = DFA294_max;
			this.accept = DFA294_accept;
			this.special = DFA294_special;
			this.transition = DFA294_transition;
		}
		@Override
		public String getDescription() {
			return "898:110: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA300_eotS =
		"\6\uffff";
	static final String DFA300_eofS =
		"\6\uffff";
	static final String DFA300_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA300_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\2\uffff";
	static final String DFA300_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA300_specialS =
		"\6\uffff}>";
	static final String[] DFA300_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\12"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\11\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA300_eot = DFA.unpackEncodedString(DFA300_eotS);
	static final short[] DFA300_eof = DFA.unpackEncodedString(DFA300_eofS);
	static final char[] DFA300_min = DFA.unpackEncodedStringToUnsignedChars(DFA300_minS);
	static final char[] DFA300_max = DFA.unpackEncodedStringToUnsignedChars(DFA300_maxS);
	static final short[] DFA300_accept = DFA.unpackEncodedString(DFA300_acceptS);
	static final short[] DFA300_special = DFA.unpackEncodedString(DFA300_specialS);
	static final short[][] DFA300_transition;

	static {
		int numStates = DFA300_transitionS.length;
		DFA300_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA300_transition[i] = DFA.unpackEncodedString(DFA300_transitionS[i]);
		}
	}

	protected class DFA300 extends DFA {

		public DFA300(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 300;
			this.eot = DFA300_eot;
			this.eof = DFA300_eof;
			this.min = DFA300_min;
			this.max = DFA300_max;
			this.accept = DFA300_accept;
			this.special = DFA300_special;
			this.transition = DFA300_transition;
		}
		@Override
		public String getDescription() {
			return "903:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA295_eotS =
		"\4\uffff";
	static final String DFA295_eofS =
		"\4\uffff";
	static final String DFA295_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA295_maxS =
		"\2\u009b\2\uffff";
	static final String DFA295_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA295_specialS =
		"\4\uffff}>";
	static final String[] DFA295_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA295_eot = DFA.unpackEncodedString(DFA295_eotS);
	static final short[] DFA295_eof = DFA.unpackEncodedString(DFA295_eofS);
	static final char[] DFA295_min = DFA.unpackEncodedStringToUnsignedChars(DFA295_minS);
	static final char[] DFA295_max = DFA.unpackEncodedStringToUnsignedChars(DFA295_maxS);
	static final short[] DFA295_accept = DFA.unpackEncodedString(DFA295_acceptS);
	static final short[] DFA295_special = DFA.unpackEncodedString(DFA295_specialS);
	static final short[][] DFA295_transition;

	static {
		int numStates = DFA295_transitionS.length;
		DFA295_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA295_transition[i] = DFA.unpackEncodedString(DFA295_transitionS[i]);
		}
	}

	protected class DFA295 extends DFA {

		public DFA295(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 295;
			this.eot = DFA295_eot;
			this.eof = DFA295_eof;
			this.min = DFA295_min;
			this.max = DFA295_max;
			this.accept = DFA295_accept;
			this.special = DFA295_special;
			this.transition = DFA295_transition;
		}
		@Override
		public String getDescription() {
			return "904:27: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA317_eotS =
		"\5\uffff";
	static final String DFA317_eofS =
		"\5\uffff";
	static final String DFA317_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA317_maxS =
		"\1\u009a\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA317_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA317_specialS =
		"\5\uffff}>";
	static final String[] DFA317_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff"+
			"\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\1\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\uffff\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\5\2\1\1\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\5\2\1\1\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			""
	};

	static final short[] DFA317_eot = DFA.unpackEncodedString(DFA317_eotS);
	static final short[] DFA317_eof = DFA.unpackEncodedString(DFA317_eofS);
	static final char[] DFA317_min = DFA.unpackEncodedStringToUnsignedChars(DFA317_minS);
	static final char[] DFA317_max = DFA.unpackEncodedStringToUnsignedChars(DFA317_maxS);
	static final short[] DFA317_accept = DFA.unpackEncodedString(DFA317_acceptS);
	static final short[] DFA317_special = DFA.unpackEncodedString(DFA317_specialS);
	static final short[][] DFA317_transition;

	static {
		int numStates = DFA317_transitionS.length;
		DFA317_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA317_transition[i] = DFA.unpackEncodedString(DFA317_transitionS[i]);
		}
	}

	protected class DFA317 extends DFA {

		public DFA317(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 317;
			this.eot = DFA317_eot;
			this.eof = DFA317_eof;
			this.min = DFA317_min;
			this.max = DFA317_max;
			this.accept = DFA317_accept;
			this.special = DFA317_special;
			this.transition = DFA317_transition;
		}
		@Override
		public String getDescription() {
			return "918:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA310_eotS =
		"\6\uffff";
	static final String DFA310_eofS =
		"\6\uffff";
	static final String DFA310_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA310_maxS =
		"\3\u009b\2\uffff\1\u009b";
	static final String DFA310_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA310_specialS =
		"\6\uffff}>";
	static final String[] DFA310_transitionS = {
			"\1\1\77\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA310_eot = DFA.unpackEncodedString(DFA310_eotS);
	static final short[] DFA310_eof = DFA.unpackEncodedString(DFA310_eofS);
	static final char[] DFA310_min = DFA.unpackEncodedStringToUnsignedChars(DFA310_minS);
	static final char[] DFA310_max = DFA.unpackEncodedStringToUnsignedChars(DFA310_maxS);
	static final short[] DFA310_accept = DFA.unpackEncodedString(DFA310_acceptS);
	static final short[] DFA310_special = DFA.unpackEncodedString(DFA310_specialS);
	static final short[][] DFA310_transition;

	static {
		int numStates = DFA310_transitionS.length;
		DFA310_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA310_transition[i] = DFA.unpackEncodedString(DFA310_transitionS[i]);
		}
	}

	protected class DFA310 extends DFA {

		public DFA310(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 310;
			this.eot = DFA310_eot;
			this.eof = DFA310_eof;
			this.min = DFA310_min;
			this.max = DFA310_max;
			this.accept = DFA310_accept;
			this.special = DFA310_special;
			this.transition = DFA310_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 920:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA309_eotS =
		"\4\uffff";
	static final String DFA309_eofS =
		"\4\uffff";
	static final String DFA309_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA309_maxS =
		"\2\u009b\2\uffff";
	static final String DFA309_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA309_specialS =
		"\4\uffff}>";
	static final String[] DFA309_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1"+
			"\10\uffff\1\3\2\uffff\2\3\6\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA309_eot = DFA.unpackEncodedString(DFA309_eotS);
	static final short[] DFA309_eof = DFA.unpackEncodedString(DFA309_eofS);
	static final char[] DFA309_min = DFA.unpackEncodedStringToUnsignedChars(DFA309_minS);
	static final char[] DFA309_max = DFA.unpackEncodedStringToUnsignedChars(DFA309_maxS);
	static final short[] DFA309_accept = DFA.unpackEncodedString(DFA309_acceptS);
	static final short[] DFA309_special = DFA.unpackEncodedString(DFA309_specialS);
	static final short[][] DFA309_transition;

	static {
		int numStates = DFA309_transitionS.length;
		DFA309_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA309_transition[i] = DFA.unpackEncodedString(DFA309_transitionS[i]);
		}
	}

	protected class DFA309 extends DFA {

		public DFA309(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 309;
			this.eot = DFA309_eot;
			this.eof = DFA309_eof;
			this.min = DFA309_min;
			this.max = DFA309_max;
			this.accept = DFA309_accept;
			this.special = DFA309_special;
			this.transition = DFA309_transition;
		}
		@Override
		public String getDescription() {
			return "920:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA314_eotS =
		"\5\uffff";
	static final String DFA314_eofS =
		"\5\uffff";
	static final String DFA314_minS =
		"\2\25\3\uffff";
	static final String DFA314_maxS =
		"\2\u009b\3\uffff";
	static final String DFA314_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA314_specialS =
		"\5\uffff}>";
	static final String[] DFA314_transitionS = {
			"\1\1\77\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\1\1\77\uffff\1\1\17\uffff\1\4\37\uffff\1\2\25\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA314_eot = DFA.unpackEncodedString(DFA314_eotS);
	static final short[] DFA314_eof = DFA.unpackEncodedString(DFA314_eofS);
	static final char[] DFA314_min = DFA.unpackEncodedStringToUnsignedChars(DFA314_minS);
	static final char[] DFA314_max = DFA.unpackEncodedStringToUnsignedChars(DFA314_maxS);
	static final short[] DFA314_accept = DFA.unpackEncodedString(DFA314_acceptS);
	static final short[] DFA314_special = DFA.unpackEncodedString(DFA314_specialS);
	static final short[][] DFA314_transition;

	static {
		int numStates = DFA314_transitionS.length;
		DFA314_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA314_transition[i] = DFA.unpackEncodedString(DFA314_transitionS[i]);
		}
	}

	protected class DFA314 extends DFA {

		public DFA314(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 314;
			this.eot = DFA314_eot;
			this.eof = DFA314_eof;
			this.min = DFA314_min;
			this.max = DFA314_max;
			this.accept = DFA314_accept;
			this.special = DFA314_special;
			this.transition = DFA314_transition;
		}
		@Override
		public String getDescription() {
			return "920:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA319_eotS =
		"\4\uffff";
	static final String DFA319_eofS =
		"\4\uffff";
	static final String DFA319_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA319_maxS =
		"\2\u009b\2\uffff";
	static final String DFA319_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA319_specialS =
		"\4\uffff}>";
	static final String[] DFA319_transitionS = {
			"\1\1\37\uffff\1\2\37\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA319_eot = DFA.unpackEncodedString(DFA319_eotS);
	static final short[] DFA319_eof = DFA.unpackEncodedString(DFA319_eofS);
	static final char[] DFA319_min = DFA.unpackEncodedStringToUnsignedChars(DFA319_minS);
	static final char[] DFA319_max = DFA.unpackEncodedStringToUnsignedChars(DFA319_maxS);
	static final short[] DFA319_accept = DFA.unpackEncodedString(DFA319_acceptS);
	static final short[] DFA319_special = DFA.unpackEncodedString(DFA319_specialS);
	static final short[][] DFA319_transition;

	static {
		int numStates = DFA319_transitionS.length;
		DFA319_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA319_transition[i] = DFA.unpackEncodedString(DFA319_transitionS[i]);
		}
	}

	protected class DFA319 extends DFA {

		public DFA319(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 319;
			this.eot = DFA319_eot;
			this.eof = DFA319_eof;
			this.min = DFA319_min;
			this.max = DFA319_max;
			this.accept = DFA319_accept;
			this.special = DFA319_special;
			this.transition = DFA319_transition;
		}
		@Override
		public String getDescription() {
			return "934:39: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA321_eotS =
		"\4\uffff";
	static final String DFA321_eofS =
		"\4\uffff";
	static final String DFA321_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA321_maxS =
		"\2\u009b\2\uffff";
	static final String DFA321_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA321_specialS =
		"\4\uffff}>";
	static final String[] DFA321_transitionS = {
			"\1\1\37\uffff\1\2\37\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA321_eot = DFA.unpackEncodedString(DFA321_eotS);
	static final short[] DFA321_eof = DFA.unpackEncodedString(DFA321_eofS);
	static final char[] DFA321_min = DFA.unpackEncodedStringToUnsignedChars(DFA321_minS);
	static final char[] DFA321_max = DFA.unpackEncodedStringToUnsignedChars(DFA321_maxS);
	static final short[] DFA321_accept = DFA.unpackEncodedString(DFA321_acceptS);
	static final short[] DFA321_special = DFA.unpackEncodedString(DFA321_specialS);
	static final short[][] DFA321_transition;

	static {
		int numStates = DFA321_transitionS.length;
		DFA321_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA321_transition[i] = DFA.unpackEncodedString(DFA321_transitionS[i]);
		}
	}

	protected class DFA321 extends DFA {

		public DFA321(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 321;
			this.eot = DFA321_eot;
			this.eof = DFA321_eof;
			this.min = DFA321_min;
			this.max = DFA321_max;
			this.accept = DFA321_accept;
			this.special = DFA321_special;
			this.transition = DFA321_transition;
		}
		@Override
		public String getDescription() {
			return "935:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA325_eotS =
		"\6\uffff";
	static final String DFA325_eofS =
		"\6\uffff";
	static final String DFA325_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA325_maxS =
		"\3\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA325_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA325_specialS =
		"\6\uffff}>";
	static final String[] DFA325_transitionS = {
			"\1\1\1\2\50\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\10\uffff\3\5\12\uffff\2\5\2\uffff\2\5"+
			"\3\uffff\1\5\11\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13"+
			"\uffff\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff"+
			"\1\4",
			"\1\5\1\2\50\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\10\uffff\3\5\12\uffff\2\5\2\uffff\2\5"+
			"\3\uffff\1\5\11\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13"+
			"\uffff\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff"+
			"\1\4",
			""
	};

	static final short[] DFA325_eot = DFA.unpackEncodedString(DFA325_eotS);
	static final short[] DFA325_eof = DFA.unpackEncodedString(DFA325_eofS);
	static final char[] DFA325_min = DFA.unpackEncodedStringToUnsignedChars(DFA325_minS);
	static final char[] DFA325_max = DFA.unpackEncodedStringToUnsignedChars(DFA325_maxS);
	static final short[] DFA325_accept = DFA.unpackEncodedString(DFA325_acceptS);
	static final short[] DFA325_special = DFA.unpackEncodedString(DFA325_specialS);
	static final short[][] DFA325_transition;

	static {
		int numStates = DFA325_transitionS.length;
		DFA325_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA325_transition[i] = DFA.unpackEncodedString(DFA325_transitionS[i]);
		}
	}

	protected class DFA325 extends DFA {

		public DFA325(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 325;
			this.eot = DFA325_eot;
			this.eof = DFA325_eof;
			this.min = DFA325_min;
			this.max = DFA325_max;
			this.accept = DFA325_accept;
			this.special = DFA325_special;
			this.transition = DFA325_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 953:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA333_eotS =
		"\5\uffff";
	static final String DFA333_eofS =
		"\5\uffff";
	static final String DFA333_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA333_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA333_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA333_specialS =
		"\5\uffff}>";
	static final String[] DFA333_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\1\2\1\1\2\uffff\2\2\3\uffff\1"+
			"\2\12\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\1\2\1\1\24\uffff\1\2"+
			"\17\uffff\1\2\3\uffff\1\1",
			"\1\2\13\uffff\1\2\1\4\1\3\10\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1"+
			"\2\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			"",
			"\1\2\13\uffff\1\2\1\4\1\3\10\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1"+
			"\2\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			""
	};

	static final short[] DFA333_eot = DFA.unpackEncodedString(DFA333_eotS);
	static final short[] DFA333_eof = DFA.unpackEncodedString(DFA333_eofS);
	static final char[] DFA333_min = DFA.unpackEncodedStringToUnsignedChars(DFA333_minS);
	static final char[] DFA333_max = DFA.unpackEncodedStringToUnsignedChars(DFA333_maxS);
	static final short[] DFA333_accept = DFA.unpackEncodedString(DFA333_acceptS);
	static final short[] DFA333_special = DFA.unpackEncodedString(DFA333_specialS);
	static final short[][] DFA333_transition;

	static {
		int numStates = DFA333_transitionS.length;
		DFA333_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA333_transition[i] = DFA.unpackEncodedString(DFA333_transitionS[i]);
		}
	}

	protected class DFA333 extends DFA {

		public DFA333(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 333;
			this.eot = DFA333_eot;
			this.eof = DFA333_eof;
			this.min = DFA333_min;
			this.max = DFA333_max;
			this.accept = DFA333_accept;
			this.special = DFA333_special;
			this.transition = DFA333_transition;
		}
		@Override
		public String getDescription() {
			return "956:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA332_eotS =
		"\4\uffff";
	static final String DFA332_eofS =
		"\4\uffff";
	static final String DFA332_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA332_maxS =
		"\2\u009b\2\uffff";
	static final String DFA332_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA332_specialS =
		"\4\uffff}>";
	static final String[] DFA332_transitionS = {
			"\1\2\1\1\26\uffff\1\3\21\uffff\1\2\26\uffff\1\1\14\uffff\1\3\11\uffff"+
			"\1\2\36\uffff\1\3\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3\3\uffff"+
			"\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff\2"+
			"\3\11\uffff\1\2\12\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA332_eot = DFA.unpackEncodedString(DFA332_eotS);
	static final short[] DFA332_eof = DFA.unpackEncodedString(DFA332_eofS);
	static final char[] DFA332_min = DFA.unpackEncodedStringToUnsignedChars(DFA332_minS);
	static final char[] DFA332_max = DFA.unpackEncodedStringToUnsignedChars(DFA332_maxS);
	static final short[] DFA332_accept = DFA.unpackEncodedString(DFA332_acceptS);
	static final short[] DFA332_special = DFA.unpackEncodedString(DFA332_specialS);
	static final short[][] DFA332_transition;

	static {
		int numStates = DFA332_transitionS.length;
		DFA332_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA332_transition[i] = DFA.unpackEncodedString(DFA332_transitionS[i]);
		}
	}

	protected class DFA332 extends DFA {

		public DFA332(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 332;
			this.eot = DFA332_eot;
			this.eof = DFA332_eof;
			this.min = DFA332_min;
			this.max = DFA332_max;
			this.accept = DFA332_accept;
			this.special = DFA332_special;
			this.transition = DFA332_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 957:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA331_eotS =
		"\4\uffff";
	static final String DFA331_eofS =
		"\4\uffff";
	static final String DFA331_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA331_maxS =
		"\2\u009b\2\uffff";
	static final String DFA331_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA331_specialS =
		"\4\uffff}>";
	static final String[] DFA331_transitionS = {
			"\1\1\26\uffff\1\2\50\uffff\1\1\14\uffff\1\2\50\uffff\1\2\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\1\3\1\2\2\uffff"+
			"\2\3\3\uffff\1\3\12\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\1\3\1\2\24\uffff\1\3\17\uffff\1\3\3\uffff\1\2\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA331_eot = DFA.unpackEncodedString(DFA331_eotS);
	static final short[] DFA331_eof = DFA.unpackEncodedString(DFA331_eofS);
	static final char[] DFA331_min = DFA.unpackEncodedStringToUnsignedChars(DFA331_minS);
	static final char[] DFA331_max = DFA.unpackEncodedStringToUnsignedChars(DFA331_maxS);
	static final short[] DFA331_accept = DFA.unpackEncodedString(DFA331_acceptS);
	static final short[] DFA331_special = DFA.unpackEncodedString(DFA331_specialS);
	static final short[][] DFA331_transition;

	static {
		int numStates = DFA331_transitionS.length;
		DFA331_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA331_transition[i] = DFA.unpackEncodedString(DFA331_transitionS[i]);
		}
	}

	protected class DFA331 extends DFA {

		public DFA331(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 331;
			this.eot = DFA331_eot;
			this.eof = DFA331_eof;
			this.min = DFA331_min;
			this.max = DFA331_max;
			this.accept = DFA331_accept;
			this.special = DFA331_special;
			this.transition = DFA331_transition;
		}
		@Override
		public String getDescription() {
			return "957:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA337_eotS =
		"\5\uffff";
	static final String DFA337_eofS =
		"\5\uffff";
	static final String DFA337_minS =
		"\1\23\1\7\1\uffff\1\7\1\uffff";
	static final String DFA337_maxS =
		"\2\u009b\1\uffff\1\123\1\uffff";
	static final String DFA337_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA337_specialS =
		"\5\uffff}>";
	static final String[] DFA337_transitionS = {
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\2\2\16\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\4\13\uffff\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\1\2\1\3\3\uffff"+
			"\1\4\12\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43"+
			"\uffff\1\1",
			"",
			"\1\2\54\uffff\1\2\11\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA337_eot = DFA.unpackEncodedString(DFA337_eotS);
	static final short[] DFA337_eof = DFA.unpackEncodedString(DFA337_eofS);
	static final char[] DFA337_min = DFA.unpackEncodedStringToUnsignedChars(DFA337_minS);
	static final char[] DFA337_max = DFA.unpackEncodedStringToUnsignedChars(DFA337_maxS);
	static final short[] DFA337_accept = DFA.unpackEncodedString(DFA337_acceptS);
	static final short[] DFA337_special = DFA.unpackEncodedString(DFA337_specialS);
	static final short[][] DFA337_transition;

	static {
		int numStates = DFA337_transitionS.length;
		DFA337_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA337_transition[i] = DFA.unpackEncodedString(DFA337_transitionS[i]);
		}
	}

	protected class DFA337 extends DFA {

		public DFA337(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 337;
			this.eot = DFA337_eot;
			this.eof = DFA337_eof;
			this.min = DFA337_min;
			this.max = DFA337_max;
			this.accept = DFA337_accept;
			this.special = DFA337_special;
			this.transition = DFA337_transition;
		}
		@Override
		public String getDescription() {
			return "969:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA340_eotS =
		"\5\uffff";
	static final String DFA340_eofS =
		"\5\uffff";
	static final String DFA340_minS =
		"\2\23\1\uffff\1\7\1\uffff";
	static final String DFA340_maxS =
		"\2\u009b\1\uffff\1\123\1\uffff";
	static final String DFA340_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA340_specialS =
		"\5\uffff}>";
	static final String[] DFA340_transitionS = {
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\2\2\16\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\1\2\1\3\3\uffff\1\4\12\uffff"+
			"\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"",
			"\1\2\54\uffff\1\2\11\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA340_eot = DFA.unpackEncodedString(DFA340_eotS);
	static final short[] DFA340_eof = DFA.unpackEncodedString(DFA340_eofS);
	static final char[] DFA340_min = DFA.unpackEncodedStringToUnsignedChars(DFA340_minS);
	static final char[] DFA340_max = DFA.unpackEncodedStringToUnsignedChars(DFA340_maxS);
	static final short[] DFA340_accept = DFA.unpackEncodedString(DFA340_acceptS);
	static final short[] DFA340_special = DFA.unpackEncodedString(DFA340_specialS);
	static final short[][] DFA340_transition;

	static {
		int numStates = DFA340_transitionS.length;
		DFA340_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA340_transition[i] = DFA.unpackEncodedString(DFA340_transitionS[i]);
		}
	}

	protected class DFA340 extends DFA {

		public DFA340(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 340;
			this.eot = DFA340_eot;
			this.eof = DFA340_eof;
			this.min = DFA340_min;
			this.max = DFA340_max;
			this.accept = DFA340_accept;
			this.special = DFA340_special;
			this.transition = DFA340_transition;
		}
		@Override
		public String getDescription() {
			return "970:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA363_eotS =
		"\4\uffff";
	static final String DFA363_eofS =
		"\2\3\2\uffff";
	static final String DFA363_minS =
		"\2\6\2\uffff";
	static final String DFA363_maxS =
		"\2\u009b\2\uffff";
	static final String DFA363_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA363_specialS =
		"\4\uffff}>";
	static final String[] DFA363_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\3\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff\6\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\3\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff\6\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\12\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"",
			""
	};

	static final short[] DFA363_eot = DFA.unpackEncodedString(DFA363_eotS);
	static final short[] DFA363_eof = DFA.unpackEncodedString(DFA363_eofS);
	static final char[] DFA363_min = DFA.unpackEncodedStringToUnsignedChars(DFA363_minS);
	static final char[] DFA363_max = DFA.unpackEncodedStringToUnsignedChars(DFA363_maxS);
	static final short[] DFA363_accept = DFA.unpackEncodedString(DFA363_acceptS);
	static final short[] DFA363_special = DFA.unpackEncodedString(DFA363_specialS);
	static final short[][] DFA363_transition;

	static {
		int numStates = DFA363_transitionS.length;
		DFA363_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA363_transition[i] = DFA.unpackEncodedString(DFA363_transitionS[i]);
		}
	}

	protected class DFA363 extends DFA {

		public DFA363(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 363;
			this.eot = DFA363_eot;
			this.eof = DFA363_eof;
			this.min = DFA363_min;
			this.max = DFA363_max;
			this.accept = DFA363_accept;
			this.special = DFA363_special;
			this.transition = DFA363_transition;
		}
		@Override
		public String getDescription() {
			return "1085:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA386_eotS =
		"\4\uffff";
	static final String DFA386_eofS =
		"\1\3\3\uffff";
	static final String DFA386_minS =
		"\2\6\2\uffff";
	static final String DFA386_maxS =
		"\2\u009b\2\uffff";
	static final String DFA386_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA386_specialS =
		"\4\uffff}>";
	static final String[] DFA386_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA386_eot = DFA.unpackEncodedString(DFA386_eotS);
	static final short[] DFA386_eof = DFA.unpackEncodedString(DFA386_eofS);
	static final char[] DFA386_min = DFA.unpackEncodedStringToUnsignedChars(DFA386_minS);
	static final char[] DFA386_max = DFA.unpackEncodedStringToUnsignedChars(DFA386_maxS);
	static final short[] DFA386_accept = DFA.unpackEncodedString(DFA386_acceptS);
	static final short[] DFA386_special = DFA.unpackEncodedString(DFA386_specialS);
	static final short[][] DFA386_transition;

	static {
		int numStates = DFA386_transitionS.length;
		DFA386_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA386_transition[i] = DFA.unpackEncodedString(DFA386_transitionS[i]);
		}
	}

	protected class DFA386 extends DFA {

		public DFA386(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 386;
			this.eot = DFA386_eot;
			this.eof = DFA386_eof;
			this.min = DFA386_min;
			this.max = DFA386_max;
			this.accept = DFA386_accept;
			this.special = DFA386_special;
			this.transition = DFA386_transition;
		}
		@Override
		public String getDescription() {
			return "1100:50: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA401_eotS =
		"\104\uffff";
	static final String DFA401_eofS =
		"\1\2\103\uffff";
	static final String DFA401_minS =
		"\1\5\1\0\7\uffff\1\0\1\uffff\5\0\1\uffff\1\0\1\uffff\3\0\1\uffff\3\0\2"+
		"\uffff\21\0\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\17\uffff";
	static final String DFA401_maxS =
		"\1\u009b\1\0\7\uffff\1\0\1\uffff\5\0\1\uffff\1\0\1\uffff\3\0\1\uffff\3"+
		"\0\2\uffff\21\0\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\17\uffff";
	static final String DFA401_acceptS =
		"\2\uffff\1\2\60\uffff\1\1\1\uffff\17\1";
	static final String DFA401_specialS =
		"\1\0\1\1\7\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\uffff\1\10\1\uffff"+
		"\1\11\1\12\1\13\1\uffff\1\14\1\15\1\16\2\uffff\1\17\1\20\1\21\1\22\1\23"+
		"\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\uffff\1"+
		"\40\1\41\2\uffff\1\42\1\uffff\1\43\17\uffff}>";
	static final String[] DFA401_transitionS = {
			"\1\74\1\15\1\30\2\uffff\5\56\3\uffff\1\57\1\2\1\62\1\1\2\uffff\1\57\5"+
			"\uffff\1\2\1\24\1\2\1\uffff\1\71\3\uffff\1\73\1\uffff\1\47\1\76\1\uffff"+
			"\1\34\2\2\1\uffff\1\13\1\23\3\uffff\1\27\1\2\1\45\4\uffff\1\52\2\uffff"+
			"\1\2\1\25\3\56\1\70\1\2\1\11\1\101\1\2\4\uffff\1\53\1\31\1\50\5\uffff"+
			"\1\57\1\1\4\uffff\1\65\1\uffff\1\2\1\uffff\1\46\1\67\1\103\1\2\1\21\2"+
			"\uffff\1\2\1\uffff\1\72\1\77\3\56\1\2\1\uffff\1\17\1\44\1\36\1\uffff"+
			"\1\42\1\57\2\uffff\1\54\1\2\1\41\2\57\1\uffff\1\40\1\16\1\14\1\uffff"+
			"\2\57\1\37\1\36\1\43\1\2\1\63\1\2\1\100\1\2\1\uffff\1\64\1\75\5\56\2"+
			"\uffff\1\66\1\102\2\uffff\1\35\1\uffff\1\51\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA401_eot = DFA.unpackEncodedString(DFA401_eotS);
	static final short[] DFA401_eof = DFA.unpackEncodedString(DFA401_eofS);
	static final char[] DFA401_min = DFA.unpackEncodedStringToUnsignedChars(DFA401_minS);
	static final char[] DFA401_max = DFA.unpackEncodedStringToUnsignedChars(DFA401_maxS);
	static final short[] DFA401_accept = DFA.unpackEncodedString(DFA401_acceptS);
	static final short[] DFA401_special = DFA.unpackEncodedString(DFA401_specialS);
	static final short[][] DFA401_transition;

	static {
		int numStates = DFA401_transitionS.length;
		DFA401_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA401_transition[i] = DFA.unpackEncodedString(DFA401_transitionS[i]);
		}
	}

	protected class DFA401 extends DFA {

		public DFA401(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 401;
			this.eot = DFA401_eot;
			this.eof = DFA401_eof;
			this.min = DFA401_min;
			this.max = DFA401_max;
			this.accept = DFA401_accept;
			this.special = DFA401_special;
			this.transition = DFA401_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1189:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA401_0 = input.LA(1);
						 
						int index401_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA401_0==COMMENT||LA401_0==NL||LA401_0==WS) ) {s = 1;}
						else if ( (LA401_0==EOF||LA401_0==COLON||LA401_0==DCOLON||LA401_0==DOT||(LA401_0 >= GREATER && LA401_0 <= GREATER_OR_EQ)||LA401_0==IMPORTANT_SYM||LA401_0==LBRACE||LA401_0==LESS||LA401_0==LESS_OR_EQ||LA401_0==OPEQ||LA401_0==PIPE||LA401_0==RBRACE||LA401_0==RPAREN||LA401_0==SASS_EXTEND_ONLY_SELECTOR||LA401_0==SEMI||LA401_0==STAR||LA401_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA401_0==LESS_AND) ) {s = 9;}
						else if ( (LA401_0==HASH) ) {s = 11;}
						else if ( (LA401_0==SASS_MIXIN) ) {s = 12;}
						else if ( (LA401_0==AT_IDENT) ) {s = 13;}
						else if ( (LA401_0==SASS_INCLUDE) ) {s = 14;}
						else if ( (LA401_0==SASS_AT_ROOT) ) {s = 15;}
						else if ( (LA401_0==PLUS) ) {s = 17;}
						else if ( (LA401_0==HASH_SYMBOL) ) {s = 19;}
						else if ( (LA401_0==DIMENSION) ) {s = 20;}
						else if ( (LA401_0==LBRACKET) ) {s = 21;}
						else if ( (LA401_0==IDENT) ) {s = 23;}
						else if ( (LA401_0==AT_SIGN) ) {s = 24;}
						else if ( (LA401_0==MINUS) ) {s = 25;}
						else if ( (LA401_0==GEN) ) {s = 28;}
						else if ( (LA401_0==VARIABLE) ) {s = 29;}
						else if ( (LA401_0==SASS_DEBUG||LA401_0==SASS_WARN) ) {s = 30;}
						else if ( (LA401_0==SASS_VAR) ) {s = 31;}
						else if ( (LA401_0==SASS_IF) ) {s = 32;}
						else if ( (LA401_0==SASS_FOR) ) {s = 33;}
						else if ( (LA401_0==SASS_EACH) ) {s = 34;}
						else if ( (LA401_0==SASS_WHILE) ) {s = 35;}
						else if ( (LA401_0==SASS_CONTENT) ) {s = 36;}
						else if ( (LA401_0==IMPORT_SYM) ) {s = 37;}
						else if ( (LA401_0==PAGE_SYM) ) {s = 38;}
						else if ( (LA401_0==FONT_FACE_SYM) ) {s = 39;}
						else if ( (LA401_0==MOZ_DOCUMENT_SYM) ) {s = 40;}
						else if ( (LA401_0==WEBKIT_KEYFRAMES_SYM) ) {s = 41;}
						else if ( (LA401_0==KEYFRAMES_SYM) ) {s = 42;}
						else if ( (LA401_0==MEDIA_SYM) ) {s = 43;}
						else if ( (LA401_0==SASS_EXTEND) ) {s = 44;}
						else if ( ((LA401_0 >= BOTTOMCENTER_SYM && LA401_0 <= BOTTOMRIGHT_SYM)||(LA401_0 >= LEFTBOTTOM_SYM && LA401_0 <= LEFTTOP_SYM)||(LA401_0 >= RIGHTBOTTOM_SYM && LA401_0 <= RIGHTTOP_SYM)||(LA401_0 >= TOPCENTER_SYM && LA401_0 <= TOPRIGHT_SYM)) ) {s = 46;}
						else if ( (LA401_0==CHARSET_SYM||LA401_0==COUNTER_STYLE_SYM||LA401_0==NAMESPACE_SYM||LA401_0==SASS_ELSE||(LA401_0 >= SASS_FORWARD && LA401_0 <= SASS_FUNCTION)||(LA401_0 >= SASS_RETURN && LA401_0 <= SASS_USE)) ) {s = 47;}
						else if ( (LA401_0==COMMA) ) {s = 50;}
						else if ( (LA401_0==SOLIDUS) && (synpred52_Css3())) {s = 51;}
						else if ( (LA401_0==TILDE) ) {s = 52;}
						else if ( (LA401_0==NUMBER) && (synpred52_Css3())) {s = 53;}
						else if ( (LA401_0==URANGE) && (synpred52_Css3())) {s = 54;}
						else if ( (LA401_0==PERCENTAGE) && (synpred52_Css3())) {s = 55;}
						else if ( (LA401_0==LENGTH) && (synpred52_Css3())) {s = 56;}
						else if ( (LA401_0==EMS) && (synpred52_Css3())) {s = 57;}
						else if ( (LA401_0==REM) && (synpred52_Css3())) {s = 58;}
						else if ( (LA401_0==EXS) && (synpred52_Css3())) {s = 59;}
						else if ( (LA401_0==ANGLE) && (synpred52_Css3())) {s = 60;}
						else if ( (LA401_0==TIME) && (synpred52_Css3())) {s = 61;}
						else if ( (LA401_0==FREQ) && (synpred52_Css3())) {s = 62;}
						else if ( (LA401_0==RESOLUTION) && (synpred52_Css3())) {s = 63;}
						else if ( (LA401_0==STRING) && (synpred52_Css3())) {s = 64;}
						else if ( (LA401_0==LESS_JS_STRING) && (synpred52_Css3())) {s = 65;}
						else if ( (LA401_0==URI) && (synpred52_Css3())) {s = 66;}
						else if ( (LA401_0==PERCENTAGE_SYMBOL) && (synpred52_Css3())) {s = 67;}
						 
						input.seek(index401_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA401_1 = input.LA(1);
						 
						int index401_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_1);
						if ( s>=0 ) return s;
						break;
					case 2 : 
						int LA401_9 = input.LA(1);
						 
						int index401_9 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_9);
						if ( s>=0 ) return s;
						break;
					case 3 : 
						int LA401_11 = input.LA(1);
						 
						int index401_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_11);
						if ( s>=0 ) return s;
						break;
					case 4 : 
						int LA401_12 = input.LA(1);
						 
						int index401_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_12);
						if ( s>=0 ) return s;
						break;
					case 5 : 
						int LA401_13 = input.LA(1);
						 
						int index401_13 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_13);
						if ( s>=0 ) return s;
						break;
					case 6 : 
						int LA401_14 = input.LA(1);
						 
						int index401_14 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_14);
						if ( s>=0 ) return s;
						break;
					case 7 : 
						int LA401_15 = input.LA(1);
						 
						int index401_15 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_15);
						if ( s>=0 ) return s;
						break;
					case 8 : 
						int LA401_17 = input.LA(1);
						 
						int index401_17 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_17);
						if ( s>=0 ) return s;
						break;
					case 9 : 
						int LA401_19 = input.LA(1);
						 
						int index401_19 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_19);
						if ( s>=0 ) return s;
						break;
					case 10 : 
						int LA401_20 = input.LA(1);
						 
						int index401_20 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {s = 2;}
						 
						input.seek(index401_20);
						if ( s>=0 ) return s;
						break;
					case 11 : 
						int LA401_21 = input.LA(1);
						 
						int index401_21 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_21);
						if ( s>=0 ) return s;
						break;
					case 12 : 
						int LA401_23 = input.LA(1);
						 
						int index401_23 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_23);
						if ( s>=0 ) return s;
						break;
					case 13 : 
						int LA401_24 = input.LA(1);
						 
						int index401_24 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_24);
						if ( s>=0 ) return s;
						break;
					case 14 : 
						int LA401_25 = input.LA(1);
						 
						int index401_25 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_25);
						if ( s>=0 ) return s;
						break;
					case 15 : 
						int LA401_28 = input.LA(1);
						 
						int index401_28 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_28);
						if ( s>=0 ) return s;
						break;
					case 16 : 
						int LA401_29 = input.LA(1);
						 
						int index401_29 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_29);
						if ( s>=0 ) return s;
						break;
					case 17 : 
						int LA401_30 = input.LA(1);
						 
						int index401_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_30);
						if ( s>=0 ) return s;
						break;
					case 18 : 
						int LA401_31 = input.LA(1);
						 
						int index401_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_31);
						if ( s>=0 ) return s;
						break;
					case 19 : 
						int LA401_32 = input.LA(1);
						 
						int index401_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_32);
						if ( s>=0 ) return s;
						break;
					case 20 : 
						int LA401_33 = input.LA(1);
						 
						int index401_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_33);
						if ( s>=0 ) return s;
						break;
					case 21 : 
						int LA401_34 = input.LA(1);
						 
						int index401_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_34);
						if ( s>=0 ) return s;
						break;
					case 22 : 
						int LA401_35 = input.LA(1);
						 
						int index401_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_35);
						if ( s>=0 ) return s;
						break;
					case 23 : 
						int LA401_36 = input.LA(1);
						 
						int index401_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_36);
						if ( s>=0 ) return s;
						break;
					case 24 : 
						int LA401_37 = input.LA(1);
						 
						int index401_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_37);
						if ( s>=0 ) return s;
						break;
					case 25 : 
						int LA401_38 = input.LA(1);
						 
						int index401_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_38);
						if ( s>=0 ) return s;
						break;
					case 26 : 
						int LA401_39 = input.LA(1);
						 
						int index401_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_39);
						if ( s>=0 ) return s;
						break;
					case 27 : 
						int LA401_40 = input.LA(1);
						 
						int index401_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_40);
						if ( s>=0 ) return s;
						break;
					case 28 : 
						int LA401_41 = input.LA(1);
						 
						int index401_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_41);
						if ( s>=0 ) return s;
						break;
					case 29 : 
						int LA401_42 = input.LA(1);
						 
						int index401_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_42);
						if ( s>=0 ) return s;
						break;
					case 30 : 
						int LA401_43 = input.LA(1);
						 
						int index401_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_43);
						if ( s>=0 ) return s;
						break;
					case 31 : 
						int LA401_44 = input.LA(1);
						 
						int index401_44 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_44);
						if ( s>=0 ) return s;
						break;
					case 32 : 
						int LA401_46 = input.LA(1);
						 
						int index401_46 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_46);
						if ( s>=0 ) return s;
						break;
					case 33 : 
						int LA401_47 = input.LA(1);
						 
						int index401_47 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred52_Css3())) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_47);
						if ( s>=0 ) return s;
						break;
					case 34 : 
						int LA401_50 = input.LA(1);
						 
						int index401_50 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_50);
						if ( s>=0 ) return s;
						break;
					case 35 : 
						int LA401_52 = input.LA(1);
						 
						int index401_52 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred52_Css3()) ) {s = 67;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index401_52);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 401, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA400_eotS =
		"\5\uffff";
	static final String DFA400_eofS =
		"\5\uffff";
	static final String DFA400_minS =
		"\2\5\3\uffff";
	static final String DFA400_maxS =
		"\2\u009b\3\uffff";
	static final String DFA400_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA400_specialS =
		"\5\uffff}>";
	static final String[] DFA400_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff"+
			"\1\3\1\1\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\2\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff"+
			"\1\4\1\1\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff"+
			"\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA400_eot = DFA.unpackEncodedString(DFA400_eotS);
	static final short[] DFA400_eof = DFA.unpackEncodedString(DFA400_eofS);
	static final char[] DFA400_min = DFA.unpackEncodedStringToUnsignedChars(DFA400_minS);
	static final char[] DFA400_max = DFA.unpackEncodedStringToUnsignedChars(DFA400_maxS);
	static final short[] DFA400_accept = DFA.unpackEncodedString(DFA400_acceptS);
	static final short[] DFA400_special = DFA.unpackEncodedString(DFA400_specialS);
	static final short[][] DFA400_transition;

	static {
		int numStates = DFA400_transitionS.length;
		DFA400_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA400_transition[i] = DFA.unpackEncodedString(DFA400_transitionS[i]);
		}
	}

	protected class DFA400 extends DFA {

		public DFA400(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 400;
			this.eot = DFA400_eot;
			this.eof = DFA400_eof;
			this.min = DFA400_min;
			this.max = DFA400_max;
			this.accept = DFA400_accept;
			this.special = DFA400_special;
			this.transition = DFA400_transition;
		}
		@Override
		public String getDescription() {
			return "1189:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA415_eotS =
		"\4\uffff";
	static final String DFA415_eofS =
		"\4\uffff";
	static final String DFA415_minS =
		"\2\24\2\uffff";
	static final String DFA415_maxS =
		"\2\u009b\2\uffff";
	static final String DFA415_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA415_specialS =
		"\4\uffff}>";
	static final String[] DFA415_transitionS = {
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA415_eot = DFA.unpackEncodedString(DFA415_eotS);
	static final short[] DFA415_eof = DFA.unpackEncodedString(DFA415_eofS);
	static final char[] DFA415_min = DFA.unpackEncodedStringToUnsignedChars(DFA415_minS);
	static final char[] DFA415_max = DFA.unpackEncodedStringToUnsignedChars(DFA415_maxS);
	static final short[] DFA415_accept = DFA.unpackEncodedString(DFA415_acceptS);
	static final short[] DFA415_special = DFA.unpackEncodedString(DFA415_specialS);
	static final short[][] DFA415_transition;

	static {
		int numStates = DFA415_transitionS.length;
		DFA415_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA415_transition[i] = DFA.unpackEncodedString(DFA415_transitionS[i]);
		}
	}

	protected class DFA415 extends DFA {

		public DFA415(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 415;
			this.eot = DFA415_eot;
			this.eof = DFA415_eof;
			this.min = DFA415_min;
			this.max = DFA415_max;
			this.accept = DFA415_accept;
			this.special = DFA415_special;
			this.transition = DFA415_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1257:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA425_eotS =
		"\47\uffff";
	static final String DFA425_eofS =
		"\47\uffff";
	static final String DFA425_minS =
		"\2\5\45\uffff";
	static final String DFA425_maxS =
		"\2\u009b\45\uffff";
	static final String DFA425_acceptS =
		"\2\uffff\1\2\44\1";
	static final String DFA425_specialS =
		"\1\1\1\0\45\uffff}>";
	static final String[] DFA425_transitionS = {
			"\1\17\1\32\1\36\2\uffff\5\32\3\uffff\1\32\1\uffff\1\2\1\1\2\uffff\1\32"+
			"\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\32\1\21\1\uffff\1\27"+
			"\3\uffff\1\31\1\35\3\uffff\1\5\1\uffff\1\32\4\uffff\1\32\3\uffff\1\7"+
			"\3\32\1\13\1\uffff\1\34\1\26\5\uffff\1\32\1\4\1\32\5\uffff\1\32\1\1\4"+
			"\uffff\1\10\3\uffff\1\32\1\12\1\37\1\uffff\1\4\4\uffff\1\15\1\22\3\32"+
			"\1\2\1\uffff\3\32\1\uffff\2\32\2\uffff\1\32\1\uffff\3\32\1\uffff\3\32"+
			"\1\uffff\2\32\1\33\2\32\1\2\1\3\1\uffff\1\24\2\uffff\1\25\1\20\5\32\2"+
			"\uffff\1\11\1\30\2\uffff\1\6\1\uffff\1\32\1\1",
			"\1\17\1\41\1\45\2\uffff\5\41\3\uffff\1\41\1\uffff\1\2\1\1\2\uffff\1"+
			"\41\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\41\1\21\1\uffff"+
			"\1\27\3\uffff\1\31\1\44\3\uffff\1\40\1\uffff\1\41\4\uffff\1\41\3\uffff"+
			"\1\7\3\41\1\13\1\uffff\1\43\1\26\5\uffff\1\41\1\4\1\41\5\uffff\1\41\1"+
			"\1\4\uffff\1\10\3\uffff\1\41\1\12\1\46\1\uffff\1\4\4\uffff\1\15\1\22"+
			"\3\41\1\2\1\uffff\3\41\1\uffff\2\41\2\uffff\1\41\1\uffff\3\41\1\uffff"+
			"\3\41\1\uffff\2\41\1\42\2\41\1\2\1\3\1\uffff\1\24\2\uffff\1\25\1\20\5"+
			"\41\2\uffff\1\11\1\30\2\uffff\1\6\1\uffff\1\41\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA425_eot = DFA.unpackEncodedString(DFA425_eotS);
	static final short[] DFA425_eof = DFA.unpackEncodedString(DFA425_eofS);
	static final char[] DFA425_min = DFA.unpackEncodedStringToUnsignedChars(DFA425_minS);
	static final char[] DFA425_max = DFA.unpackEncodedStringToUnsignedChars(DFA425_maxS);
	static final short[] DFA425_accept = DFA.unpackEncodedString(DFA425_acceptS);
	static final short[] DFA425_special = DFA.unpackEncodedString(DFA425_specialS);
	static final short[][] DFA425_transition;

	static {
		int numStates = DFA425_transitionS.length;
		DFA425_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA425_transition[i] = DFA.unpackEncodedString(DFA425_transitionS[i]);
		}
	}

	protected class DFA425 extends DFA {

		public DFA425(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 425;
			this.eot = DFA425_eot;
			this.eof = DFA425_eof;
			this.min = DFA425_min;
			this.max = DFA425_max;
			this.accept = DFA425_accept;
			this.special = DFA425_special;
			this.transition = DFA425_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1275:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA425_1 = input.LA(1);
						 
						int index425_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA425_1==COMMA||LA425_1==RPAREN||LA425_1==SEMI) ) {s = 2;}
						else if ( (LA425_1==COMMENT||LA425_1==NL||LA425_1==WS) ) {s = 1;}
						else if ( (LA425_1==MINUS||LA425_1==PLUS) && (synpred56_Css3())) {s = 4;}
						else if ( (LA425_1==IDENT) && (synpred56_Css3())) {s = 32;}
						else if ( (LA425_1==VARIABLE) && (synpred56_Css3())) {s = 6;}
						else if ( (LA425_1==LBRACKET) && (synpred56_Css3())) {s = 7;}
						else if ( (LA425_1==NUMBER) && (synpred56_Css3())) {s = 8;}
						else if ( (LA425_1==URANGE) && (synpred56_Css3())) {s = 9;}
						else if ( (LA425_1==PERCENTAGE) && (synpred56_Css3())) {s = 10;}
						else if ( (LA425_1==LENGTH) && (synpred56_Css3())) {s = 11;}
						else if ( (LA425_1==EMS) && (synpred56_Css3())) {s = 12;}
						else if ( (LA425_1==REM) && (synpred56_Css3())) {s = 13;}
						else if ( (LA425_1==EXS) && (synpred56_Css3())) {s = 14;}
						else if ( (LA425_1==ANGLE) && (synpred56_Css3())) {s = 15;}
						else if ( (LA425_1==TIME) && (synpred56_Css3())) {s = 16;}
						else if ( (LA425_1==FREQ) && (synpred56_Css3())) {s = 17;}
						else if ( (LA425_1==RESOLUTION) && (synpred56_Css3())) {s = 18;}
						else if ( (LA425_1==DIMENSION) && (synpred56_Css3())) {s = 19;}
						else if ( (LA425_1==STRING) && (synpred56_Css3())) {s = 20;}
						else if ( (LA425_1==TILDE) && (synpred56_Css3())) {s = 21;}
						else if ( (LA425_1==LESS_JS_STRING) && (synpred56_Css3())) {s = 22;}
						else if ( (LA425_1==GEN) && (synpred56_Css3())) {s = 23;}
						else if ( (LA425_1==URI) && (synpred56_Css3())) {s = 24;}
						else if ( (LA425_1==HASH) && (synpred56_Css3())) {s = 25;}
						else if ( (LA425_1==AT_IDENT||(LA425_1 >= BOTTOMCENTER_SYM && LA425_1 <= BOTTOMRIGHT_SYM)||LA425_1==CHARSET_SYM||LA425_1==COUNTER_STYLE_SYM||LA425_1==FONT_FACE_SYM||LA425_1==IMPORT_SYM||LA425_1==KEYFRAMES_SYM||(LA425_1 >= LEFTBOTTOM_SYM && LA425_1 <= LEFTTOP_SYM)||LA425_1==MEDIA_SYM||LA425_1==MOZ_DOCUMENT_SYM||LA425_1==NAMESPACE_SYM||LA425_1==PAGE_SYM||(LA425_1 >= RIGHTBOTTOM_SYM && LA425_1 <= RIGHTTOP_SYM)||(LA425_1 >= SASS_AT_ROOT && LA425_1 <= SASS_DEBUG)||(LA425_1 >= SASS_EACH && LA425_1 <= SASS_ELSE)||LA425_1==SASS_EXTEND||(LA425_1 >= SASS_FOR && LA425_1 <= SASS_FUNCTION)||(LA425_1 >= SASS_IF && LA425_1 <= SASS_MIXIN)||(LA425_1 >= SASS_RETURN && LA425_1 <= SASS_USE)||(LA425_1 >= SASS_WARN && LA425_1 <= SASS_WHILE)||(LA425_1 >= TOPCENTER_SYM && LA425_1 <= TOPRIGHT_SYM)||LA425_1==WEBKIT_KEYFRAMES_SYM) && (synpred56_Css3())) {s = 33;}
						else if ( (LA425_1==SASS_VAR) && (synpred56_Css3())) {s = 34;}
						else if ( (LA425_1==LESS_AND) && (synpred56_Css3())) {s = 35;}
						else if ( (LA425_1==HASH_SYMBOL) && (synpred56_Css3())) {s = 36;}
						else if ( (LA425_1==AT_SIGN) && (synpred56_Css3())) {s = 37;}
						else if ( (LA425_1==PERCENTAGE_SYMBOL) && (synpred56_Css3())) {s = 38;}
						else if ( (LA425_1==SOLIDUS) && (synpred56_Css3())) {s = 3;}
						 
						input.seek(index425_1);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA425_0 = input.LA(1);
						 
						int index425_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA425_0==COMMENT||LA425_0==NL||LA425_0==WS) ) {s = 1;}
						else if ( (LA425_0==COMMA||LA425_0==RPAREN||LA425_0==SEMI) ) {s = 2;}
						else if ( (LA425_0==SOLIDUS) && (synpred56_Css3())) {s = 3;}
						else if ( (LA425_0==MINUS||LA425_0==PLUS) && (synpred56_Css3())) {s = 4;}
						else if ( (LA425_0==IDENT) && (synpred56_Css3())) {s = 5;}
						else if ( (LA425_0==VARIABLE) && (synpred56_Css3())) {s = 6;}
						else if ( (LA425_0==LBRACKET) && (synpred56_Css3())) {s = 7;}
						else if ( (LA425_0==NUMBER) && (synpred56_Css3())) {s = 8;}
						else if ( (LA425_0==URANGE) && (synpred56_Css3())) {s = 9;}
						else if ( (LA425_0==PERCENTAGE) && (synpred56_Css3())) {s = 10;}
						else if ( (LA425_0==LENGTH) && (synpred56_Css3())) {s = 11;}
						else if ( (LA425_0==EMS) && (synpred56_Css3())) {s = 12;}
						else if ( (LA425_0==REM) && (synpred56_Css3())) {s = 13;}
						else if ( (LA425_0==EXS) && (synpred56_Css3())) {s = 14;}
						else if ( (LA425_0==ANGLE) && (synpred56_Css3())) {s = 15;}
						else if ( (LA425_0==TIME) && (synpred56_Css3())) {s = 16;}
						else if ( (LA425_0==FREQ) && (synpred56_Css3())) {s = 17;}
						else if ( (LA425_0==RESOLUTION) && (synpred56_Css3())) {s = 18;}
						else if ( (LA425_0==DIMENSION) && (synpred56_Css3())) {s = 19;}
						else if ( (LA425_0==STRING) && (synpred56_Css3())) {s = 20;}
						else if ( (LA425_0==TILDE) && (synpred56_Css3())) {s = 21;}
						else if ( (LA425_0==LESS_JS_STRING) && (synpred56_Css3())) {s = 22;}
						else if ( (LA425_0==GEN) && (synpred56_Css3())) {s = 23;}
						else if ( (LA425_0==URI) && (synpred56_Css3())) {s = 24;}
						else if ( (LA425_0==HASH) && (synpred56_Css3())) {s = 25;}
						else if ( (LA425_0==AT_IDENT||(LA425_0 >= BOTTOMCENTER_SYM && LA425_0 <= BOTTOMRIGHT_SYM)||LA425_0==CHARSET_SYM||LA425_0==COUNTER_STYLE_SYM||LA425_0==FONT_FACE_SYM||LA425_0==IMPORT_SYM||LA425_0==KEYFRAMES_SYM||(LA425_0 >= LEFTBOTTOM_SYM && LA425_0 <= LEFTTOP_SYM)||LA425_0==MEDIA_SYM||LA425_0==MOZ_DOCUMENT_SYM||LA425_0==NAMESPACE_SYM||LA425_0==PAGE_SYM||(LA425_0 >= RIGHTBOTTOM_SYM && LA425_0 <= RIGHTTOP_SYM)||(LA425_0 >= SASS_AT_ROOT && LA425_0 <= SASS_DEBUG)||(LA425_0 >= SASS_EACH && LA425_0 <= SASS_ELSE)||LA425_0==SASS_EXTEND||(LA425_0 >= SASS_FOR && LA425_0 <= SASS_FUNCTION)||(LA425_0 >= SASS_IF && LA425_0 <= SASS_MIXIN)||(LA425_0 >= SASS_RETURN && LA425_0 <= SASS_USE)||(LA425_0 >= SASS_WARN && LA425_0 <= SASS_WHILE)||(LA425_0 >= TOPCENTER_SYM && LA425_0 <= TOPRIGHT_SYM)||LA425_0==WEBKIT_KEYFRAMES_SYM) && (synpred56_Css3())) {s = 26;}
						else if ( (LA425_0==SASS_VAR) && (synpred56_Css3())) {s = 27;}
						else if ( (LA425_0==LESS_AND) && (synpred56_Css3())) {s = 28;}
						else if ( (LA425_0==HASH_SYMBOL) && (synpred56_Css3())) {s = 29;}
						else if ( (LA425_0==AT_SIGN) && (synpred56_Css3())) {s = 30;}
						else if ( (LA425_0==PERCENTAGE_SYMBOL) && (synpred56_Css3())) {s = 31;}
						 
						input.seek(index425_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 425, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA424_eotS =
		"\5\uffff";
	static final String DFA424_eofS =
		"\5\uffff";
	static final String DFA424_minS =
		"\2\5\3\uffff";
	static final String DFA424_maxS =
		"\2\u009b\3\uffff";
	static final String DFA424_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA424_specialS =
		"\5\uffff}>";
	static final String[] DFA424_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\2\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff"+
			"\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA424_eot = DFA.unpackEncodedString(DFA424_eotS);
	static final short[] DFA424_eof = DFA.unpackEncodedString(DFA424_eofS);
	static final char[] DFA424_min = DFA.unpackEncodedStringToUnsignedChars(DFA424_minS);
	static final char[] DFA424_max = DFA.unpackEncodedStringToUnsignedChars(DFA424_maxS);
	static final short[] DFA424_accept = DFA.unpackEncodedString(DFA424_acceptS);
	static final short[] DFA424_special = DFA.unpackEncodedString(DFA424_specialS);
	static final short[][] DFA424_transition;

	static {
		int numStates = DFA424_transitionS.length;
		DFA424_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA424_transition[i] = DFA.unpackEncodedString(DFA424_transitionS[i]);
		}
	}

	protected class DFA424 extends DFA {

		public DFA424(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 424;
			this.eot = DFA424_eot;
			this.eof = DFA424_eof;
			this.min = DFA424_min;
			this.max = DFA424_max;
			this.accept = DFA424_accept;
			this.special = DFA424_special;
			this.transition = DFA424_transition;
		}
		@Override
		public String getDescription() {
			return "1275:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA434_eotS =
		"\5\uffff";
	static final String DFA434_eofS =
		"\2\2\3\uffff";
	static final String DFA434_minS =
		"\2\6\3\uffff";
	static final String DFA434_maxS =
		"\2\u009b\3\uffff";
	static final String DFA434_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA434_specialS =
		"\5\uffff}>";
	static final String[] DFA434_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\2\uffff\5\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\10\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\1\uffff\6\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA434_eot = DFA.unpackEncodedString(DFA434_eotS);
	static final short[] DFA434_eof = DFA.unpackEncodedString(DFA434_eofS);
	static final char[] DFA434_min = DFA.unpackEncodedStringToUnsignedChars(DFA434_minS);
	static final char[] DFA434_max = DFA.unpackEncodedStringToUnsignedChars(DFA434_maxS);
	static final short[] DFA434_accept = DFA.unpackEncodedString(DFA434_acceptS);
	static final short[] DFA434_special = DFA.unpackEncodedString(DFA434_specialS);
	static final short[][] DFA434_transition;

	static {
		int numStates = DFA434_transitionS.length;
		DFA434_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA434_transition[i] = DFA.unpackEncodedString(DFA434_transitionS[i]);
		}
	}

	protected class DFA434 extends DFA {

		public DFA434(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 434;
			this.eot = DFA434_eot;
			this.eof = DFA434_eof;
			this.min = DFA434_min;
			this.max = DFA434_max;
			this.accept = DFA434_accept;
			this.special = DFA434_special;
			this.transition = DFA434_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1294:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA440_eotS =
		"\111\uffff";
	static final String DFA440_eofS =
		"\1\2\110\uffff";
	static final String DFA440_minS =
		"\1\5\1\0\60\uffff\1\0\26\uffff";
	static final String DFA440_maxS =
		"\1\u009b\1\0\60\uffff\1\0\26\uffff";
	static final String DFA440_acceptS =
		"\2\uffff\1\2\105\uffff\1\1";
	static final String DFA440_specialS =
		"\1\uffff\1\0\60\uffff\1\1\26\uffff}>";
	static final String[] DFA440_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\2\2\1\62\1\1\1\2\1\uffff\1\2\5\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\2\2\2\uffff\2\2\3\uffff\3\2\4\uffff"+
			"\1\2\1\uffff\7\2\1\uffff\2\2\3\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1"+
			"\3\uffff\2\2\3\uffff\5\2\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff"+
			"\11\2\1\uffff\6\2\1\uffff\3\2\1\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA440_eot = DFA.unpackEncodedString(DFA440_eotS);
	static final short[] DFA440_eof = DFA.unpackEncodedString(DFA440_eofS);
	static final char[] DFA440_min = DFA.unpackEncodedStringToUnsignedChars(DFA440_minS);
	static final char[] DFA440_max = DFA.unpackEncodedStringToUnsignedChars(DFA440_maxS);
	static final short[] DFA440_accept = DFA.unpackEncodedString(DFA440_acceptS);
	static final short[] DFA440_special = DFA.unpackEncodedString(DFA440_specialS);
	static final short[][] DFA440_transition;

	static {
		int numStates = DFA440_transitionS.length;
		DFA440_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA440_transition[i] = DFA.unpackEncodedString(DFA440_transitionS[i]);
		}
	}

	protected class DFA440 extends DFA {

		public DFA440(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 440;
			this.eot = DFA440_eot;
			this.eof = DFA440_eof;
			this.min = DFA440_min;
			this.max = DFA440_max;
			this.accept = DFA440_accept;
			this.special = DFA440_special;
			this.transition = DFA440_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1310:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA440_1 = input.LA(1);
						 
						int index440_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index440_1);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA440_50 = input.LA(1);
						 
						int index440_50 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred58_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index440_50);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 440, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA446_eotS =
		"\122\uffff";
	static final String DFA446_eofS =
		"\1\2\121\uffff";
	static final String DFA446_minS =
		"\1\5\1\0\2\uffff\2\0\1\uffff\13\0\2\uffff\1\0\1\uffff\7\0\1\uffff\2\0"+
		"\3\uffff\15\0\1\uffff\2\0\1\uffff\1\0\2\uffff\1\0\3\uffff\20\0\2\uffff"+
		"\1\0\2\uffff\1\0\1\uffff";
	static final String DFA446_maxS =
		"\1\u009b\1\0\2\uffff\2\0\1\uffff\13\0\2\uffff\1\0\1\uffff\7\0\1\uffff"+
		"\2\0\3\uffff\15\0\1\uffff\2\0\1\uffff\1\0\2\uffff\1\0\3\uffff\20\0\2\uffff"+
		"\1\0\2\uffff\1\0\1\uffff";
	static final String DFA446_acceptS =
		"\2\uffff\1\3\113\uffff\2\1\1\uffff\1\2";
	static final String DFA446_specialS =
		"\1\0\1\1\2\uffff\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
		"\14\1\15\1\16\2\uffff\1\17\1\uffff\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
		"\1\uffff\1\27\1\30\3\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
		"\1\42\1\43\1\44\1\45\1\uffff\1\46\1\47\1\uffff\1\50\2\uffff\1\51\3\uffff"+
		"\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67"+
		"\1\70\1\71\2\uffff\1\72\2\uffff\1\73\1\uffff}>";
	static final String[] DFA446_transitionS = {
			"\1\103\1\27\1\15\2\uffff\5\61\3\uffff\1\67\2\2\1\115\1\2\1\uffff\1\62"+
			"\1\2\1\116\1\117\2\uffff\1\2\1\36\1\2\1\uffff\1\100\3\uffff\1\102\1\uffff"+
			"\1\52\1\105\1\uffff\1\17\1\5\1\33\1\uffff\1\26\1\14\3\uffff\1\12\1\7"+
			"\1\50\4\uffff\1\55\1\uffff\2\2\1\37\3\61\1\77\1\4\1\24\1\107\1\120\1"+
			"\2\1\uffff\1\112\1\uffff\1\56\1\13\1\53\5\uffff\1\67\1\115\3\uffff\1"+
			"\73\1\10\1\uffff\1\2\1\uffff\1\51\1\76\1\111\1\2\1\34\2\uffff\1\2\1\uffff"+
			"\1\101\1\106\3\61\1\2\1\uffff\1\31\1\47\1\32\1\2\1\45\1\67\2\uffff\1"+
			"\57\1\2\1\44\1\67\1\64\1\2\1\43\1\30\1\20\1\uffff\2\67\1\21\1\32\1\46"+
			"\1\2\1\uffff\1\2\1\11\1\2\1\uffff\1\74\1\104\5\61\2\uffff\1\75\1\110"+
			"\2\uffff\1\16\1\uffff\1\54\1\1",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA446_eot = DFA.unpackEncodedString(DFA446_eotS);
	static final short[] DFA446_eof = DFA.unpackEncodedString(DFA446_eofS);
	static final char[] DFA446_min = DFA.unpackEncodedStringToUnsignedChars(DFA446_minS);
	static final char[] DFA446_max = DFA.unpackEncodedStringToUnsignedChars(DFA446_maxS);
	static final short[] DFA446_accept = DFA.unpackEncodedString(DFA446_acceptS);
	static final short[] DFA446_special = DFA.unpackEncodedString(DFA446_specialS);
	static final short[][] DFA446_transition;

	static {
		int numStates = DFA446_transitionS.length;
		DFA446_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA446_transition[i] = DFA.unpackEncodedString(DFA446_transitionS[i]);
		}
	}

	protected class DFA446 extends DFA {

		public DFA446(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 446;
			this.eot = DFA446_eot;
			this.eof = DFA446_eof;
			this.min = DFA446_min;
			this.max = DFA446_max;
			this.accept = DFA446_accept;
			this.special = DFA446_special;
			this.transition = DFA446_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1327:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA446_0 = input.LA(1);
						 
						int index446_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA446_0==WS) ) {s = 1;}
						else if ( (LA446_0==EOF||(LA446_0 >= COLON && LA446_0 <= COMMA)||LA446_0==CONTAINER_SYM||LA446_0==CP_DOTS||LA446_0==DCOLON||LA446_0==DOT||(LA446_0 >= LAYER_SYM && LA446_0 <= LBRACE)||LA446_0==LESS_REST||LA446_0==OPEQ||LA446_0==PIPE||LA446_0==RBRACE||LA446_0==RPAREN||LA446_0==SASS_DEFAULT||LA446_0==SASS_EXTEND_ONLY_SELECTOR||LA446_0==SASS_GLOBAL||LA446_0==SEMI||LA446_0==STAR||LA446_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA446_0==LESS) ) {s = 4;}
						else if ( (LA446_0==GREATER) ) {s = 5;}
						else if ( (LA446_0==IMPORTANT_SYM) ) {s = 7;}
						else if ( (LA446_0==NUMBER) ) {s = 8;}
						else if ( (LA446_0==STRING) ) {s = 9;}
						else if ( (LA446_0==IDENT) ) {s = 10;}
						else if ( (LA446_0==MINUS) ) {s = 11;}
						else if ( (LA446_0==HASH_SYMBOL) ) {s = 12;}
						else if ( (LA446_0==AT_SIGN) ) {s = 13;}
						else if ( (LA446_0==VARIABLE) ) {s = 14;}
						else if ( (LA446_0==GEN) ) {s = 15;}
						else if ( (LA446_0==SASS_MIXIN) ) {s = 16;}
						else if ( (LA446_0==SASS_VAR) ) {s = 17;}
						else if ( (LA446_0==LESS_AND) ) {s = 20;}
						else if ( (LA446_0==HASH) ) {s = 22;}
						else if ( (LA446_0==AT_IDENT) ) {s = 23;}
						else if ( (LA446_0==SASS_INCLUDE) ) {s = 24;}
						else if ( (LA446_0==SASS_AT_ROOT) ) {s = 25;}
						else if ( (LA446_0==SASS_DEBUG||LA446_0==SASS_WARN) ) {s = 26;}
						else if ( (LA446_0==GREATER_OR_EQ) ) {s = 27;}
						else if ( (LA446_0==PLUS) ) {s = 28;}
						else if ( (LA446_0==DIMENSION) ) {s = 30;}
						else if ( (LA446_0==LBRACKET) ) {s = 31;}
						else if ( (LA446_0==SASS_IF) ) {s = 35;}
						else if ( (LA446_0==SASS_FOR) ) {s = 36;}
						else if ( (LA446_0==SASS_EACH) ) {s = 37;}
						else if ( (LA446_0==SASS_WHILE) ) {s = 38;}
						else if ( (LA446_0==SASS_CONTENT) ) {s = 39;}
						else if ( (LA446_0==IMPORT_SYM) ) {s = 40;}
						else if ( (LA446_0==PAGE_SYM) ) {s = 41;}
						else if ( (LA446_0==FONT_FACE_SYM) ) {s = 42;}
						else if ( (LA446_0==MOZ_DOCUMENT_SYM) ) {s = 43;}
						else if ( (LA446_0==WEBKIT_KEYFRAMES_SYM) ) {s = 44;}
						else if ( (LA446_0==KEYFRAMES_SYM) ) {s = 45;}
						else if ( (LA446_0==MEDIA_SYM) ) {s = 46;}
						else if ( (LA446_0==SASS_EXTEND) ) {s = 47;}
						else if ( ((LA446_0 >= BOTTOMCENTER_SYM && LA446_0 <= BOTTOMRIGHT_SYM)||(LA446_0 >= LEFTBOTTOM_SYM && LA446_0 <= LEFTTOP_SYM)||(LA446_0 >= RIGHTBOTTOM_SYM && LA446_0 <= RIGHTTOP_SYM)||(LA446_0 >= TOPCENTER_SYM && LA446_0 <= TOPRIGHT_SYM)) ) {s = 49;}
						else if ( (LA446_0==COUNTER_STYLE_SYM) ) {s = 50;}
						else if ( (LA446_0==SASS_FUNCTION) ) {s = 52;}
						else if ( (LA446_0==CHARSET_SYM||LA446_0==NAMESPACE_SYM||LA446_0==SASS_ELSE||LA446_0==SASS_FORWARD||(LA446_0 >= SASS_RETURN && LA446_0 <= SASS_USE)) ) {s = 55;}
						else if ( (LA446_0==NOT) ) {s = 59;}
						else if ( (LA446_0==TILDE) ) {s = 60;}
						else if ( (LA446_0==URANGE) ) {s = 61;}
						else if ( (LA446_0==PERCENTAGE) ) {s = 62;}
						else if ( (LA446_0==LENGTH) ) {s = 63;}
						else if ( (LA446_0==EMS) ) {s = 64;}
						else if ( (LA446_0==REM) ) {s = 65;}
						else if ( (LA446_0==EXS) ) {s = 66;}
						else if ( (LA446_0==ANGLE) ) {s = 67;}
						else if ( (LA446_0==TIME) ) {s = 68;}
						else if ( (LA446_0==FREQ) ) {s = 69;}
						else if ( (LA446_0==RESOLUTION) ) {s = 70;}
						else if ( (LA446_0==LESS_JS_STRING) ) {s = 71;}
						else if ( (LA446_0==URI) ) {s = 72;}
						else if ( (LA446_0==PERCENTAGE_SYMBOL) ) {s = 73;}
						else if ( (LA446_0==LPAREN) ) {s = 74;}
						else if ( (LA446_0==COMMENT||LA446_0==NL) ) {s = 77;}
						else if ( (LA446_0==CP_EQ) && (synpred60_Css3())) {s = 78;}
						else if ( (LA446_0==CP_NOT_EQ) && (synpred60_Css3())) {s = 79;}
						else if ( (LA446_0==LESS_OR_EQ) ) {s = 80;}
						 
						input.seek(index446_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA446_1 = input.LA(1);
						 
						int index446_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_1);
						if ( s>=0 ) return s;
						break;
					case 2 : 
						int LA446_4 = input.LA(1);
						 
						int index446_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_4);
						if ( s>=0 ) return s;
						break;
					case 3 : 
						int LA446_5 = input.LA(1);
						 
						int index446_5 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_5);
						if ( s>=0 ) return s;
						break;
					case 4 : 
						int LA446_7 = input.LA(1);
						 
						int index446_7 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_7);
						if ( s>=0 ) return s;
						break;
					case 5 : 
						int LA446_8 = input.LA(1);
						 
						int index446_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_8);
						if ( s>=0 ) return s;
						break;
					case 6 : 
						int LA446_9 = input.LA(1);
						 
						int index446_9 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_9);
						if ( s>=0 ) return s;
						break;
					case 7 : 
						int LA446_10 = input.LA(1);
						 
						int index446_10 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred60_Css3()&&(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")||evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")))) ) {s = 79;}
						else if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_10);
						if ( s>=0 ) return s;
						break;
					case 8 : 
						int LA446_11 = input.LA(1);
						 
						int index446_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_11);
						if ( s>=0 ) return s;
						break;
					case 9 : 
						int LA446_12 = input.LA(1);
						 
						int index446_12 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_12);
						if ( s>=0 ) return s;
						break;
					case 10 : 
						int LA446_13 = input.LA(1);
						 
						int index446_13 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_13);
						if ( s>=0 ) return s;
						break;
					case 11 : 
						int LA446_14 = input.LA(1);
						 
						int index446_14 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_14);
						if ( s>=0 ) return s;
						break;
					case 12 : 
						int LA446_15 = input.LA(1);
						 
						int index446_15 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_15);
						if ( s>=0 ) return s;
						break;
					case 13 : 
						int LA446_16 = input.LA(1);
						 
						int index446_16 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_16);
						if ( s>=0 ) return s;
						break;
					case 14 : 
						int LA446_17 = input.LA(1);
						 
						int index446_17 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_17);
						if ( s>=0 ) return s;
						break;
					case 15 : 
						int LA446_20 = input.LA(1);
						 
						int index446_20 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_20);
						if ( s>=0 ) return s;
						break;
					case 16 : 
						int LA446_22 = input.LA(1);
						 
						int index446_22 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_22);
						if ( s>=0 ) return s;
						break;
					case 17 : 
						int LA446_23 = input.LA(1);
						 
						int index446_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_23);
						if ( s>=0 ) return s;
						break;
					case 18 : 
						int LA446_24 = input.LA(1);
						 
						int index446_24 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_24);
						if ( s>=0 ) return s;
						break;
					case 19 : 
						int LA446_25 = input.LA(1);
						 
						int index446_25 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_25);
						if ( s>=0 ) return s;
						break;
					case 20 : 
						int LA446_26 = input.LA(1);
						 
						int index446_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_26);
						if ( s>=0 ) return s;
						break;
					case 21 : 
						int LA446_27 = input.LA(1);
						 
						int index446_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_27);
						if ( s>=0 ) return s;
						break;
					case 22 : 
						int LA446_28 = input.LA(1);
						 
						int index446_28 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_28);
						if ( s>=0 ) return s;
						break;
					case 23 : 
						int LA446_30 = input.LA(1);
						 
						int index446_30 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_30);
						if ( s>=0 ) return s;
						break;
					case 24 : 
						int LA446_31 = input.LA(1);
						 
						int index446_31 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_31);
						if ( s>=0 ) return s;
						break;
					case 25 : 
						int LA446_35 = input.LA(1);
						 
						int index446_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_35);
						if ( s>=0 ) return s;
						break;
					case 26 : 
						int LA446_36 = input.LA(1);
						 
						int index446_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_36);
						if ( s>=0 ) return s;
						break;
					case 27 : 
						int LA446_37 = input.LA(1);
						 
						int index446_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_37);
						if ( s>=0 ) return s;
						break;
					case 28 : 
						int LA446_38 = input.LA(1);
						 
						int index446_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_38);
						if ( s>=0 ) return s;
						break;
					case 29 : 
						int LA446_39 = input.LA(1);
						 
						int index446_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_39);
						if ( s>=0 ) return s;
						break;
					case 30 : 
						int LA446_40 = input.LA(1);
						 
						int index446_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_40);
						if ( s>=0 ) return s;
						break;
					case 31 : 
						int LA446_41 = input.LA(1);
						 
						int index446_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_41);
						if ( s>=0 ) return s;
						break;
					case 32 : 
						int LA446_42 = input.LA(1);
						 
						int index446_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_42);
						if ( s>=0 ) return s;
						break;
					case 33 : 
						int LA446_43 = input.LA(1);
						 
						int index446_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_43);
						if ( s>=0 ) return s;
						break;
					case 34 : 
						int LA446_44 = input.LA(1);
						 
						int index446_44 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_44);
						if ( s>=0 ) return s;
						break;
					case 35 : 
						int LA446_45 = input.LA(1);
						 
						int index446_45 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_45);
						if ( s>=0 ) return s;
						break;
					case 36 : 
						int LA446_46 = input.LA(1);
						 
						int index446_46 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_46);
						if ( s>=0 ) return s;
						break;
					case 37 : 
						int LA446_47 = input.LA(1);
						 
						int index446_47 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_47);
						if ( s>=0 ) return s;
						break;
					case 38 : 
						int LA446_49 = input.LA(1);
						 
						int index446_49 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_49);
						if ( s>=0 ) return s;
						break;
					case 39 : 
						int LA446_50 = input.LA(1);
						 
						int index446_50 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_50);
						if ( s>=0 ) return s;
						break;
					case 40 : 
						int LA446_52 = input.LA(1);
						 
						int index446_52 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_52);
						if ( s>=0 ) return s;
						break;
					case 41 : 
						int LA446_55 = input.LA(1);
						 
						int index446_55 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred61_Css3())) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_55);
						if ( s>=0 ) return s;
						break;
					case 42 : 
						int LA446_59 = input.LA(1);
						 
						int index446_59 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_59);
						if ( s>=0 ) return s;
						break;
					case 43 : 
						int LA446_60 = input.LA(1);
						 
						int index446_60 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_60);
						if ( s>=0 ) return s;
						break;
					case 44 : 
						int LA446_61 = input.LA(1);
						 
						int index446_61 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_61);
						if ( s>=0 ) return s;
						break;
					case 45 : 
						int LA446_62 = input.LA(1);
						 
						int index446_62 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_62);
						if ( s>=0 ) return s;
						break;
					case 46 : 
						int LA446_63 = input.LA(1);
						 
						int index446_63 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_63);
						if ( s>=0 ) return s;
						break;
					case 47 : 
						int LA446_64 = input.LA(1);
						 
						int index446_64 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_64);
						if ( s>=0 ) return s;
						break;
					case 48 : 
						int LA446_65 = input.LA(1);
						 
						int index446_65 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_65);
						if ( s>=0 ) return s;
						break;
					case 49 : 
						int LA446_66 = input.LA(1);
						 
						int index446_66 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_66);
						if ( s>=0 ) return s;
						break;
					case 50 : 
						int LA446_67 = input.LA(1);
						 
						int index446_67 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_67);
						if ( s>=0 ) return s;
						break;
					case 51 : 
						int LA446_68 = input.LA(1);
						 
						int index446_68 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_68);
						if ( s>=0 ) return s;
						break;
					case 52 : 
						int LA446_69 = input.LA(1);
						 
						int index446_69 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_69);
						if ( s>=0 ) return s;
						break;
					case 53 : 
						int LA446_70 = input.LA(1);
						 
						int index446_70 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_70);
						if ( s>=0 ) return s;
						break;
					case 54 : 
						int LA446_71 = input.LA(1);
						 
						int index446_71 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_71);
						if ( s>=0 ) return s;
						break;
					case 55 : 
						int LA446_72 = input.LA(1);
						 
						int index446_72 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_72);
						if ( s>=0 ) return s;
						break;
					case 56 : 
						int LA446_73 = input.LA(1);
						 
						int index446_73 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred61_Css3())) ) {s = 81;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index446_73);
						if ( s>=0 ) return s;
						break;
					case 57 : 
						int LA446_74 = input.LA(1);
						 
						int index446_74 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_74);
						if ( s>=0 ) return s;
						break;
					case 58 : 
						int LA446_77 = input.LA(1);
						 
						int index446_77 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (synpred61_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_77);
						if ( s>=0 ) return s;
						break;
					case 59 : 
						int LA446_80 = input.LA(1);
						 
						int index446_80 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred60_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index446_80);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 446, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA460_eotS =
		"\122\uffff";
	static final String DFA460_eofS =
		"\1\2\121\uffff";
	static final String DFA460_minS =
		"\1\5\1\0\13\uffff\1\0\35\uffff\1\0\10\uffff\1\0\33\uffff\1\0\1\uffff";
	static final String DFA460_maxS =
		"\1\u009b\1\0\13\uffff\1\0\35\uffff\1\0\10\uffff\1\0\33\uffff\1\0\1\uffff";
	static final String DFA460_acceptS =
		"\2\uffff\1\2\116\uffff\1\1";
	static final String DFA460_specialS =
		"\1\0\1\1\13\uffff\1\2\35\uffff\1\3\10\uffff\1\4\33\uffff\1\5\1\uffff}>";
	static final String[] DFA460_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\120\1\2\1\uffff\4\2\2\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\3\uffff\3\2\4\uffff"+
			"\1\2\1\uffff\14\2\1\uffff\1\2\1\uffff\1\2\1\15\1\2\5\uffff\1\2\1\120"+
			"\3\uffff\2\2\1\uffff\1\2\1\uffff\4\2\1\53\2\uffff\1\2\1\uffff\6\2\1\uffff"+
			"\6\2\2\uffff\11\2\1\uffff\6\2\1\121\1\64\2\2\1\uffff\7\2\2\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA460_eot = DFA.unpackEncodedString(DFA460_eotS);
	static final short[] DFA460_eof = DFA.unpackEncodedString(DFA460_eofS);
	static final char[] DFA460_min = DFA.unpackEncodedStringToUnsignedChars(DFA460_minS);
	static final char[] DFA460_max = DFA.unpackEncodedStringToUnsignedChars(DFA460_maxS);
	static final short[] DFA460_accept = DFA.unpackEncodedString(DFA460_acceptS);
	static final short[] DFA460_special = DFA.unpackEncodedString(DFA460_specialS);
	static final short[][] DFA460_transition;

	static {
		int numStates = DFA460_transitionS.length;
		DFA460_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA460_transition[i] = DFA.unpackEncodedString(DFA460_transitionS[i]);
		}
	}

	protected class DFA460 extends DFA {

		public DFA460(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 460;
			this.eot = DFA460_eot;
			this.eof = DFA460_eof;
			this.min = DFA460_min;
			this.max = DFA460_max;
			this.accept = DFA460_accept;
			this.special = DFA460_special;
			this.transition = DFA460_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1369:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA460_0 = input.LA(1);
						 
						int index460_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA460_0==WS) ) {s = 1;}
						else if ( (LA460_0==EOF||(LA460_0 >= ANGLE && LA460_0 <= AT_SIGN)||(LA460_0 >= BOTTOMCENTER_SYM && LA460_0 <= BOTTOMRIGHT_SYM)||(LA460_0 >= CHARSET_SYM && LA460_0 <= COMMA)||LA460_0==CONTAINER_SYM||(LA460_0 >= COUNTER_STYLE_SYM && LA460_0 <= CP_NOT_EQ)||(LA460_0 >= DCOLON && LA460_0 <= DOT)||LA460_0==EMS||LA460_0==EXS||(LA460_0 >= FONT_FACE_SYM && LA460_0 <= FREQ)||(LA460_0 >= GEN && LA460_0 <= GREATER_OR_EQ)||(LA460_0 >= HASH && LA460_0 <= HASH_SYMBOL)||(LA460_0 >= IDENT && LA460_0 <= IMPORT_SYM)||LA460_0==KEYFRAMES_SYM||(LA460_0 >= LAYER_SYM && LA460_0 <= LESS_REST)||LA460_0==LPAREN||LA460_0==MEDIA_SYM||LA460_0==MOZ_DOCUMENT_SYM||LA460_0==NAMESPACE_SYM||(LA460_0 >= NOT && LA460_0 <= NUMBER)||LA460_0==OPEQ||(LA460_0 >= PAGE_SYM && LA460_0 <= PIPE)||LA460_0==RBRACE||(LA460_0 >= REM && LA460_0 <= RPAREN)||(LA460_0 >= SASS_AT_ROOT && LA460_0 <= SASS_ELSE)||(LA460_0 >= SASS_EXTEND && LA460_0 <= SASS_MIXIN)||(LA460_0 >= SASS_RETURN && LA460_0 <= SEMI)||(LA460_0 >= STRING && LA460_0 <= SUPPORTS_SYM)||(LA460_0 >= TILDE && LA460_0 <= TOPRIGHT_SYM)||(LA460_0 >= URANGE && LA460_0 <= URI)||LA460_0==VARIABLE||LA460_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA460_0==MINUS) ) {s = 13;}
						else if ( (LA460_0==PLUS) ) {s = 43;}
						else if ( (LA460_0==STAR) ) {s = 52;}
						else if ( (LA460_0==COMMENT||LA460_0==NL) ) {s = 80;}
						else if ( (LA460_0==SOLIDUS) && (synpred63_Css3())) {s = 81;}
						 
						input.seek(index460_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA460_1 = input.LA(1);
						 
						int index460_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index460_1);
						if ( s>=0 ) return s;
						break;
					case 2 : 
						int LA460_13 = input.LA(1);
						 
						int index460_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index460_13);
						if ( s>=0 ) return s;
						break;
					case 3 : 
						int LA460_43 = input.LA(1);
						 
						int index460_43 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index460_43);
						if ( s>=0 ) return s;
						break;
					case 4 : 
						int LA460_52 = input.LA(1);
						 
						int index460_52 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index460_52);
						if ( s>=0 ) return s;
						break;
					case 5 : 
						int LA460_80 = input.LA(1);
						 
						int index460_80 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 81;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index460_80);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 460, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA465_eotS =
		"\6\uffff";
	static final String DFA465_eofS =
		"\6\uffff";
	static final String DFA465_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA465_maxS =
		"\1\u009a\1\u009b\3\uffff\1\u009b";
	static final String DFA465_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA465_specialS =
		"\6\uffff}>";
	static final String[] DFA465_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\3\1\2\4\uffff"+
			"\1\2\3\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff"+
			"\1\2\5\uffff\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff\1\2\2\uffff"+
			"\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\4\uffff\1\2\3\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff"+
			"\1\2\5\uffff\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2"+
			"\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff"+
			"\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5",
			"",
			"",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\4\uffff\1\2\3\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff"+
			"\1\2\5\uffff\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2"+
			"\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff"+
			"\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5"
	};

	static final short[] DFA465_eot = DFA.unpackEncodedString(DFA465_eotS);
	static final short[] DFA465_eof = DFA.unpackEncodedString(DFA465_eofS);
	static final char[] DFA465_min = DFA.unpackEncodedStringToUnsignedChars(DFA465_minS);
	static final char[] DFA465_max = DFA.unpackEncodedStringToUnsignedChars(DFA465_maxS);
	static final short[] DFA465_accept = DFA.unpackEncodedString(DFA465_acceptS);
	static final short[] DFA465_special = DFA.unpackEncodedString(DFA465_specialS);
	static final short[][] DFA465_transition;

	static {
		int numStates = DFA465_transitionS.length;
		DFA465_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA465_transition[i] = DFA.unpackEncodedString(DFA465_transitionS[i]);
		}
	}

	protected class DFA465 extends DFA {

		public DFA465(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 465;
			this.eot = DFA465_eot;
			this.eof = DFA465_eof;
			this.min = DFA465_min;
			this.max = DFA465_max;
			this.accept = DFA465_accept;
			this.special = DFA465_special;
			this.transition = DFA465_transition;
		}
		@Override
		public String getDescription() {
			return "1374:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA472_eotS =
		"\4\uffff";
	static final String DFA472_eofS =
		"\4\uffff";
	static final String DFA472_minS =
		"\2\25\2\uffff";
	static final String DFA472_maxS =
		"\2\u009b\2\uffff";
	static final String DFA472_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA472_specialS =
		"\4\uffff}>";
	static final String[] DFA472_transitionS = {
			"\1\1\36\uffff\1\2\11\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"\1\1\36\uffff\1\2\11\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA472_eot = DFA.unpackEncodedString(DFA472_eotS);
	static final short[] DFA472_eof = DFA.unpackEncodedString(DFA472_eofS);
	static final char[] DFA472_min = DFA.unpackEncodedStringToUnsignedChars(DFA472_minS);
	static final char[] DFA472_max = DFA.unpackEncodedStringToUnsignedChars(DFA472_maxS);
	static final short[] DFA472_accept = DFA.unpackEncodedString(DFA472_acceptS);
	static final short[] DFA472_special = DFA.unpackEncodedString(DFA472_specialS);
	static final short[][] DFA472_transition;

	static {
		int numStates = DFA472_transitionS.length;
		DFA472_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA472_transition[i] = DFA.unpackEncodedString(DFA472_transitionS[i]);
		}
	}

	protected class DFA472 extends DFA {

		public DFA472(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 472;
			this.eot = DFA472_eot;
			this.eof = DFA472_eof;
			this.min = DFA472_min;
			this.max = DFA472_max;
			this.accept = DFA472_accept;
			this.special = DFA472_special;
			this.transition = DFA472_transition;
		}
		@Override
		public String getDescription() {
			return "1390:107: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA476_eotS =
		"\4\uffff";
	static final String DFA476_eofS =
		"\4\uffff";
	static final String DFA476_minS =
		"\2\25\2\uffff";
	static final String DFA476_maxS =
		"\2\u009b\2\uffff";
	static final String DFA476_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA476_specialS =
		"\4\uffff}>";
	static final String[] DFA476_transitionS = {
			"\1\1\50\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"\1\1\50\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA476_eot = DFA.unpackEncodedString(DFA476_eotS);
	static final short[] DFA476_eof = DFA.unpackEncodedString(DFA476_eofS);
	static final char[] DFA476_min = DFA.unpackEncodedStringToUnsignedChars(DFA476_minS);
	static final char[] DFA476_max = DFA.unpackEncodedStringToUnsignedChars(DFA476_maxS);
	static final short[] DFA476_accept = DFA.unpackEncodedString(DFA476_acceptS);
	static final short[] DFA476_special = DFA.unpackEncodedString(DFA476_specialS);
	static final short[][] DFA476_transition;

	static {
		int numStates = DFA476_transitionS.length;
		DFA476_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA476_transition[i] = DFA.unpackEncodedString(DFA476_transitionS[i]);
		}
	}

	protected class DFA476 extends DFA {

		public DFA476(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 476;
			this.eot = DFA476_eot;
			this.eof = DFA476_eof;
			this.min = DFA476_min;
			this.max = DFA476_max;
			this.accept = DFA476_accept;
			this.special = DFA476_special;
			this.transition = DFA476_transition;
		}
		@Override
		public String getDescription() {
			return "1392:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA491_eotS =
		"\4\uffff";
	static final String DFA491_eofS =
		"\2\3\2\uffff";
	static final String DFA491_minS =
		"\2\6\2\uffff";
	static final String DFA491_maxS =
		"\2\u009b\2\uffff";
	static final String DFA491_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA491_specialS =
		"\4\uffff}>";
	static final String[] DFA491_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\6\3\2\uffff\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\5\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\6\3\2\uffff\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA491_eot = DFA.unpackEncodedString(DFA491_eotS);
	static final short[] DFA491_eof = DFA.unpackEncodedString(DFA491_eofS);
	static final char[] DFA491_min = DFA.unpackEncodedStringToUnsignedChars(DFA491_minS);
	static final char[] DFA491_max = DFA.unpackEncodedStringToUnsignedChars(DFA491_maxS);
	static final short[] DFA491_accept = DFA.unpackEncodedString(DFA491_acceptS);
	static final short[] DFA491_special = DFA.unpackEncodedString(DFA491_specialS);
	static final short[][] DFA491_transition;

	static {
		int numStates = DFA491_transitionS.length;
		DFA491_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA491_transition[i] = DFA.unpackEncodedString(DFA491_transitionS[i]);
		}
	}

	protected class DFA491 extends DFA {

		public DFA491(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 491;
			this.eot = DFA491_eot;
			this.eof = DFA491_eof;
			this.min = DFA491_min;
			this.max = DFA491_max;
			this.accept = DFA491_accept;
			this.special = DFA491_special;
			this.transition = DFA491_transition;
		}
		@Override
		public String getDescription() {
			return "1404:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA493_eotS =
		"\4\uffff";
	static final String DFA493_eofS =
		"\2\3\2\uffff";
	static final String DFA493_minS =
		"\2\6\2\uffff";
	static final String DFA493_maxS =
		"\2\u009b\2\uffff";
	static final String DFA493_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA493_specialS =
		"\4\uffff}>";
	static final String[] DFA493_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\1\3\1\2\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff"+
			"\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\1\3\1\2\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff"+
			"\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA493_eot = DFA.unpackEncodedString(DFA493_eotS);
	static final short[] DFA493_eof = DFA.unpackEncodedString(DFA493_eofS);
	static final char[] DFA493_min = DFA.unpackEncodedStringToUnsignedChars(DFA493_minS);
	static final char[] DFA493_max = DFA.unpackEncodedStringToUnsignedChars(DFA493_maxS);
	static final short[] DFA493_accept = DFA.unpackEncodedString(DFA493_acceptS);
	static final short[] DFA493_special = DFA.unpackEncodedString(DFA493_specialS);
	static final short[][] DFA493_transition;

	static {
		int numStates = DFA493_transitionS.length;
		DFA493_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA493_transition[i] = DFA.unpackEncodedString(DFA493_transitionS[i]);
		}
	}

	protected class DFA493 extends DFA {

		public DFA493(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 493;
			this.eot = DFA493_eot;
			this.eof = DFA493_eof;
			this.min = DFA493_min;
			this.max = DFA493_max;
			this.accept = DFA493_accept;
			this.special = DFA493_special;
			this.transition = DFA493_transition;
		}
		@Override
		public String getDescription() {
			return "1404:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA506_eotS =
		"\12\uffff";
	static final String DFA506_eofS =
		"\12\uffff";
	static final String DFA506_minS =
		"\4\5\1\uffff\1\5\1\uffff\1\5\1\64\1\5";
	static final String DFA506_maxS =
		"\1\u009a\3\u009b\1\uffff\1\u009b\1\uffff\1\u009b\1\u0082\1\u009b";
	static final String DFA506_acceptS =
		"\4\uffff\1\2\1\uffff\1\1\3\uffff";
	static final String DFA506_specialS =
		"\12\uffff}>";
	static final String[] DFA506_transitionS = {
			"\1\4\1\1\1\4\2\uffff\5\1\3\uffff\1\1\5\uffff\1\1\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\1\1\1\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\3"+
			"\1\4\1\1\4\uffff\1\1\2\uffff\2\4\3\1\1\4\1\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\1\1\4\1\1\5\uffff\1\1\4\uffff\2\4\3\uffff\1\1\2\4\1\uffff\1\4\4\uffff"+
			"\2\4\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\3\1\1\uffff\3\1"+
			"\1\uffff\2\1\1\2\2\1\3\uffff\1\4\2\uffff\2\4\5\1\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\5",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\7",
			"\3\4\2\uffff\5\4\3\uffff\4\4\2\uffff\4\4\3\uffff\1\4\1\10\1\uffff\1"+
			"\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\2\4\3\uffff\2\4\3\uffff"+
			"\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\2\4",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\5",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\7",
			"\1\4\115\uffff\1\11",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\7"
	};

	static final short[] DFA506_eot = DFA.unpackEncodedString(DFA506_eotS);
	static final short[] DFA506_eof = DFA.unpackEncodedString(DFA506_eofS);
	static final char[] DFA506_min = DFA.unpackEncodedStringToUnsignedChars(DFA506_minS);
	static final char[] DFA506_max = DFA.unpackEncodedStringToUnsignedChars(DFA506_maxS);
	static final short[] DFA506_accept = DFA.unpackEncodedString(DFA506_acceptS);
	static final short[] DFA506_special = DFA.unpackEncodedString(DFA506_specialS);
	static final short[][] DFA506_transition;

	static {
		int numStates = DFA506_transitionS.length;
		DFA506_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA506_transition[i] = DFA.unpackEncodedString(DFA506_transitionS[i]);
		}
	}

	protected class DFA506 extends DFA {

		public DFA506(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 506;
			this.eot = DFA506_eot;
			this.eof = DFA506_eof;
			this.min = DFA506_min;
			this.max = DFA506_max;
			this.accept = DFA506_accept;
			this.special = DFA506_special;
			this.transition = DFA506_transition;
		}
		@Override
		public String getDescription() {
			return "1430:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA509_eotS =
		"\5\uffff";
	static final String DFA509_eofS =
		"\5\uffff";
	static final String DFA509_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA509_maxS =
		"\1\u0085\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA509_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA509_specialS =
		"\5\uffff}>";
	static final String[] DFA509_transitionS = {
			"\1\1\4\uffff\1\2\56\uffff\1\2\43\uffff\1\2\30\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3\4\5\uffff\1\2\3\uffff"+
			"\1\4\1\uffff\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff"+
			"\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\10\uffff"+
			"\5\4\10\uffff\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3\4\5\uffff\1\2\3\uffff"+
			"\1\4\1\uffff\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff"+
			"\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\10\uffff"+
			"\5\4\10\uffff\1\4\1\3",
			""
	};

	static final short[] DFA509_eot = DFA.unpackEncodedString(DFA509_eotS);
	static final short[] DFA509_eof = DFA.unpackEncodedString(DFA509_eofS);
	static final char[] DFA509_min = DFA.unpackEncodedStringToUnsignedChars(DFA509_minS);
	static final char[] DFA509_max = DFA.unpackEncodedStringToUnsignedChars(DFA509_maxS);
	static final short[] DFA509_accept = DFA.unpackEncodedString(DFA509_acceptS);
	static final short[] DFA509_special = DFA.unpackEncodedString(DFA509_specialS);
	static final short[][] DFA509_transition;

	static {
		int numStates = DFA509_transitionS.length;
		DFA509_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA509_transition[i] = DFA.unpackEncodedString(DFA509_transitionS[i]);
		}
	}

	protected class DFA509 extends DFA {

		public DFA509(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 509;
			this.eot = DFA509_eot;
			this.eof = DFA509_eof;
			this.min = DFA509_min;
			this.max = DFA509_max;
			this.accept = DFA509_accept;
			this.special = DFA509_special;
			this.transition = DFA509_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1445:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA525_eotS =
		"\4\uffff";
	static final String DFA525_eofS =
		"\4\uffff";
	static final String DFA525_minS =
		"\2\24\2\uffff";
	static final String DFA525_maxS =
		"\2\u009b\2\uffff";
	static final String DFA525_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA525_specialS =
		"\4\uffff}>";
	static final String[] DFA525_transitionS = {
			"\1\3\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA525_eot = DFA.unpackEncodedString(DFA525_eotS);
	static final short[] DFA525_eof = DFA.unpackEncodedString(DFA525_eofS);
	static final char[] DFA525_min = DFA.unpackEncodedStringToUnsignedChars(DFA525_minS);
	static final char[] DFA525_max = DFA.unpackEncodedStringToUnsignedChars(DFA525_maxS);
	static final short[] DFA525_accept = DFA.unpackEncodedString(DFA525_acceptS);
	static final short[] DFA525_special = DFA.unpackEncodedString(DFA525_specialS);
	static final short[][] DFA525_transition;

	static {
		int numStates = DFA525_transitionS.length;
		DFA525_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA525_transition[i] = DFA.unpackEncodedString(DFA525_transitionS[i]);
		}
	}

	protected class DFA525 extends DFA {

		public DFA525(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 525;
			this.eot = DFA525_eot;
			this.eof = DFA525_eof;
			this.min = DFA525_min;
			this.max = DFA525_max;
			this.accept = DFA525_accept;
			this.special = DFA525_special;
			this.transition = DFA525_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1461:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA554_eotS =
		"\4\uffff";
	static final String DFA554_eofS =
		"\4\uffff";
	static final String DFA554_minS =
		"\1\24\1\6\2\uffff";
	static final String DFA554_maxS =
		"\2\u009b\2\uffff";
	static final String DFA554_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA554_specialS =
		"\4\uffff}>";
	static final String[] DFA554_transitionS = {
			"\1\3\1\1\77\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff"+
			"\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\6\2\1\uffff\12\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA554_eot = DFA.unpackEncodedString(DFA554_eotS);
	static final short[] DFA554_eof = DFA.unpackEncodedString(DFA554_eofS);
	static final char[] DFA554_min = DFA.unpackEncodedStringToUnsignedChars(DFA554_minS);
	static final char[] DFA554_max = DFA.unpackEncodedStringToUnsignedChars(DFA554_maxS);
	static final short[] DFA554_accept = DFA.unpackEncodedString(DFA554_acceptS);
	static final short[] DFA554_special = DFA.unpackEncodedString(DFA554_specialS);
	static final short[][] DFA554_transition;

	static {
		int numStates = DFA554_transitionS.length;
		DFA554_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA554_transition[i] = DFA.unpackEncodedString(DFA554_transitionS[i]);
		}
	}

	protected class DFA554 extends DFA {

		public DFA554(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 554;
			this.eot = DFA554_eot;
			this.eof = DFA554_eof;
			this.min = DFA554_min;
			this.max = DFA554_max;
			this.accept = DFA554_accept;
			this.special = DFA554_special;
			this.transition = DFA554_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1537:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA555_eotS =
		"\4\uffff";
	static final String DFA555_eofS =
		"\4\uffff";
	static final String DFA555_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA555_maxS =
		"\2\u009b\2\uffff";
	static final String DFA555_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA555_specialS =
		"\4\uffff}>";
	static final String[] DFA555_transitionS = {
			"\1\1\77\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\6\2\1\uffff\3\2\1\3\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA555_eot = DFA.unpackEncodedString(DFA555_eotS);
	static final short[] DFA555_eof = DFA.unpackEncodedString(DFA555_eofS);
	static final char[] DFA555_min = DFA.unpackEncodedStringToUnsignedChars(DFA555_minS);
	static final char[] DFA555_max = DFA.unpackEncodedStringToUnsignedChars(DFA555_maxS);
	static final short[] DFA555_accept = DFA.unpackEncodedString(DFA555_acceptS);
	static final short[] DFA555_special = DFA.unpackEncodedString(DFA555_specialS);
	static final short[][] DFA555_transition;

	static {
		int numStates = DFA555_transitionS.length;
		DFA555_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA555_transition[i] = DFA.unpackEncodedString(DFA555_transitionS[i]);
		}
	}

	protected class DFA555 extends DFA {

		public DFA555(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 555;
			this.eot = DFA555_eot;
			this.eof = DFA555_eof;
			this.min = DFA555_min;
			this.max = DFA555_max;
			this.accept = DFA555_accept;
			this.special = DFA555_special;
			this.transition = DFA555_transition;
		}
		@Override
		public String getDescription() {
			return "1537:83: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA561_eotS =
		"\10\uffff";
	static final String DFA561_eofS =
		"\2\4\6\uffff";
	static final String DFA561_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA561_maxS =
		"\3\u009b\2\uffff\3\u009b";
	static final String DFA561_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA561_specialS =
		"\10\uffff}>";
	static final String[] DFA561_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\2\1\3\1\uffff\5\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\5\1\3\6\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"",
			"",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7"
	};

	static final short[] DFA561_eot = DFA.unpackEncodedString(DFA561_eotS);
	static final short[] DFA561_eof = DFA.unpackEncodedString(DFA561_eofS);
	static final char[] DFA561_min = DFA.unpackEncodedStringToUnsignedChars(DFA561_minS);
	static final char[] DFA561_max = DFA.unpackEncodedStringToUnsignedChars(DFA561_maxS);
	static final short[] DFA561_accept = DFA.unpackEncodedString(DFA561_acceptS);
	static final short[] DFA561_special = DFA.unpackEncodedString(DFA561_specialS);
	static final short[][] DFA561_transition;

	static {
		int numStates = DFA561_transitionS.length;
		DFA561_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA561_transition[i] = DFA.unpackEncodedString(DFA561_transitionS[i]);
		}
	}

	protected class DFA561 extends DFA {

		public DFA561(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 561;
			this.eot = DFA561_eot;
			this.eof = DFA561_eof;
			this.min = DFA561_min;
			this.max = DFA561_max;
			this.accept = DFA561_accept;
			this.special = DFA561_special;
			this.transition = DFA561_transition;
		}
		@Override
		public String getDescription() {
			return "1562:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA569_eotS =
		"\5\uffff";
	static final String DFA569_eofS =
		"\5\uffff";
	static final String DFA569_minS =
		"\1\163\1\25\1\uffff\1\25\1\uffff";
	static final String DFA569_maxS =
		"\1\164\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA569_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA569_specialS =
		"\5\uffff}>";
	static final String[] DFA569_transitionS = {
			"\1\1\1\2",
			"\1\3\36\uffff\1\2\11\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\3\36\uffff\1\2\11\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA569_eot = DFA.unpackEncodedString(DFA569_eotS);
	static final short[] DFA569_eof = DFA.unpackEncodedString(DFA569_eofS);
	static final char[] DFA569_min = DFA.unpackEncodedStringToUnsignedChars(DFA569_minS);
	static final char[] DFA569_max = DFA.unpackEncodedStringToUnsignedChars(DFA569_maxS);
	static final short[] DFA569_accept = DFA.unpackEncodedString(DFA569_acceptS);
	static final short[] DFA569_special = DFA.unpackEncodedString(DFA569_specialS);
	static final short[][] DFA569_transition;

	static {
		int numStates = DFA569_transitionS.length;
		DFA569_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA569_transition[i] = DFA.unpackEncodedString(DFA569_transitionS[i]);
		}
	}

	protected class DFA569 extends DFA {

		public DFA569(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 569;
			this.eot = DFA569_eot;
			this.eof = DFA569_eof;
			this.min = DFA569_min;
			this.max = DFA569_max;
			this.accept = DFA569_accept;
			this.special = DFA569_special;
			this.transition = DFA569_transition;
		}
		@Override
		public String getDescription() {
			return "1565:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA568_eotS =
		"\10\uffff";
	static final String DFA568_eofS =
		"\2\4\6\uffff";
	static final String DFA568_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA568_maxS =
		"\3\u009b\2\uffff\3\u009b";
	static final String DFA568_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA568_specialS =
		"\10\uffff}>";
	static final String[] DFA568_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\2\1\3\1\uffff\5\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\5\1\3\6\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"",
			"",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7"
	};

	static final short[] DFA568_eot = DFA.unpackEncodedString(DFA568_eotS);
	static final short[] DFA568_eof = DFA.unpackEncodedString(DFA568_eofS);
	static final char[] DFA568_min = DFA.unpackEncodedStringToUnsignedChars(DFA568_minS);
	static final char[] DFA568_max = DFA.unpackEncodedStringToUnsignedChars(DFA568_maxS);
	static final short[] DFA568_accept = DFA.unpackEncodedString(DFA568_acceptS);
	static final short[] DFA568_special = DFA.unpackEncodedString(DFA568_specialS);
	static final short[][] DFA568_transition;

	static {
		int numStates = DFA568_transitionS.length;
		DFA568_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA568_transition[i] = DFA.unpackEncodedString(DFA568_transitionS[i]);
		}
	}

	protected class DFA568 extends DFA {

		public DFA568(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 568;
			this.eot = DFA568_eot;
			this.eof = DFA568_eof;
			this.min = DFA568_min;
			this.max = DFA568_max;
			this.accept = DFA568_accept;
			this.special = DFA568_special;
			this.transition = DFA568_transition;
		}
		@Override
		public String getDescription() {
			return "1569:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA572_eotS =
		"\4\uffff";
	static final String DFA572_eofS =
		"\4\uffff";
	static final String DFA572_minS =
		"\2\5\2\uffff";
	static final String DFA572_maxS =
		"\2\u009b\2\uffff";
	static final String DFA572_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA572_specialS =
		"\4\uffff}>";
	static final String[] DFA572_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\4\uffff\1\3\2\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff"+
			"\1\3\1\1\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\4\uffff\1\3\2\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff"+
			"\1\3\1\1\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA572_eot = DFA.unpackEncodedString(DFA572_eotS);
	static final short[] DFA572_eof = DFA.unpackEncodedString(DFA572_eofS);
	static final char[] DFA572_min = DFA.unpackEncodedStringToUnsignedChars(DFA572_minS);
	static final char[] DFA572_max = DFA.unpackEncodedStringToUnsignedChars(DFA572_maxS);
	static final short[] DFA572_accept = DFA.unpackEncodedString(DFA572_acceptS);
	static final short[] DFA572_special = DFA.unpackEncodedString(DFA572_specialS);
	static final short[][] DFA572_transition;

	static {
		int numStates = DFA572_transitionS.length;
		DFA572_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA572_transition[i] = DFA.unpackEncodedString(DFA572_transitionS[i]);
		}
	}

	protected class DFA572 extends DFA {

		public DFA572(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 572;
			this.eot = DFA572_eot;
			this.eof = DFA572_eof;
			this.min = DFA572_min;
			this.max = DFA572_max;
			this.accept = DFA572_accept;
			this.special = DFA572_special;
			this.transition = DFA572_transition;
		}
		@Override
		public String getDescription() {
			return "1584:102: ( ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA577_eotS =
		"\4\uffff";
	static final String DFA577_eofS =
		"\4\uffff";
	static final String DFA577_minS =
		"\2\24\2\uffff";
	static final String DFA577_maxS =
		"\2\u009b\2\uffff";
	static final String DFA577_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA577_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA577_transitionS = {
			"\1\2\1\1\77\uffff\1\1\105\uffff\1\1",
			"\1\2\1\1\36\uffff\1\3\40\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA577_eot = DFA.unpackEncodedString(DFA577_eotS);
	static final short[] DFA577_eof = DFA.unpackEncodedString(DFA577_eofS);
	static final char[] DFA577_min = DFA.unpackEncodedStringToUnsignedChars(DFA577_minS);
	static final char[] DFA577_max = DFA.unpackEncodedStringToUnsignedChars(DFA577_maxS);
	static final short[] DFA577_accept = DFA.unpackEncodedString(DFA577_acceptS);
	static final short[] DFA577_special = DFA.unpackEncodedString(DFA577_specialS);
	static final short[][] DFA577_transition;

	static {
		int numStates = DFA577_transitionS.length;
		DFA577_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA577_transition[i] = DFA.unpackEncodedString(DFA577_transitionS[i]);
		}
	}

	protected class DFA577 extends DFA {

		public DFA577(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 577;
			this.eot = DFA577_eot;
			this.eof = DFA577_eof;
			this.min = DFA577_min;
			this.max = DFA577_max;
			this.accept = DFA577_accept;
			this.special = DFA577_special;
			this.transition = DFA577_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1589:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA577_1 = input.LA(1);
						 
						int index577_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA577_1==IDENT) ) {s = 3;}
						else if ( (LA577_1==COMMENT||LA577_1==NL||LA577_1==WS) ) {s = 1;}
						else if ( (LA577_1==COMMA) && (synpred68_Css3())) {s = 2;}
						 
						input.seek(index577_1);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA577_0 = input.LA(1);
						 
						int index577_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA577_0==COMMENT||LA577_0==NL||LA577_0==WS) ) {s = 1;}
						else if ( (LA577_0==COMMA) && (synpred68_Css3())) {s = 2;}
						 
						input.seek(index577_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 577, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA597_eotS =
		"\4\uffff";
	static final String DFA597_eofS =
		"\4\uffff";
	static final String DFA597_minS =
		"\2\25\2\uffff";
	static final String DFA597_maxS =
		"\2\u009b\2\uffff";
	static final String DFA597_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA597_specialS =
		"\4\uffff}>";
	static final String[] DFA597_transitionS = {
			"\1\1\37\uffff\1\2\37\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"\1\1\37\uffff\1\2\37\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA597_eot = DFA.unpackEncodedString(DFA597_eotS);
	static final short[] DFA597_eof = DFA.unpackEncodedString(DFA597_eofS);
	static final char[] DFA597_min = DFA.unpackEncodedStringToUnsignedChars(DFA597_minS);
	static final char[] DFA597_max = DFA.unpackEncodedStringToUnsignedChars(DFA597_maxS);
	static final short[] DFA597_accept = DFA.unpackEncodedString(DFA597_acceptS);
	static final short[] DFA597_special = DFA.unpackEncodedString(DFA597_specialS);
	static final short[][] DFA597_transition;

	static {
		int numStates = DFA597_transitionS.length;
		DFA597_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA597_transition[i] = DFA.unpackEncodedString(DFA597_transitionS[i]);
		}
	}

	protected class DFA597 extends DFA {

		public DFA597(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 597;
			this.eot = DFA597_eot;
			this.eof = DFA597_eof;
			this.min = DFA597_min;
			this.max = DFA597_max;
			this.accept = DFA597_accept;
			this.special = DFA597_special;
			this.transition = DFA597_transition;
		}
		@Override
		public String getDescription() {
			return "421:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA604_eotS =
		"\6\uffff";
	static final String DFA604_eofS =
		"\6\uffff";
	static final String DFA604_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA604_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\2\uffff";
	static final String DFA604_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA604_specialS =
		"\6\uffff}>";
	static final String[] DFA604_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\12"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\11\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA604_eot = DFA.unpackEncodedString(DFA604_eotS);
	static final short[] DFA604_eof = DFA.unpackEncodedString(DFA604_eofS);
	static final char[] DFA604_min = DFA.unpackEncodedStringToUnsignedChars(DFA604_minS);
	static final char[] DFA604_max = DFA.unpackEncodedStringToUnsignedChars(DFA604_maxS);
	static final short[] DFA604_accept = DFA.unpackEncodedString(DFA604_acceptS);
	static final short[] DFA604_special = DFA.unpackEncodedString(DFA604_specialS);
	static final short[][] DFA604_transition;

	static {
		int numStates = DFA604_transitionS.length;
		DFA604_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA604_transition[i] = DFA.unpackEncodedString(DFA604_transitionS[i]);
		}
	}

	protected class DFA604 extends DFA {

		public DFA604(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 604;
			this.eot = DFA604_eot;
			this.eof = DFA604_eof;
			this.min = DFA604_min;
			this.max = DFA604_max;
			this.accept = DFA604_accept;
			this.special = DFA604_special;
			this.transition = DFA604_transition;
		}
		@Override
		public String getDescription() {
			return "423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA599_eotS =
		"\4\uffff";
	static final String DFA599_eofS =
		"\4\uffff";
	static final String DFA599_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA599_maxS =
		"\2\u009b\2\uffff";
	static final String DFA599_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA599_specialS =
		"\4\uffff}>";
	static final String[] DFA599_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA599_eot = DFA.unpackEncodedString(DFA599_eotS);
	static final short[] DFA599_eof = DFA.unpackEncodedString(DFA599_eofS);
	static final char[] DFA599_min = DFA.unpackEncodedStringToUnsignedChars(DFA599_minS);
	static final char[] DFA599_max = DFA.unpackEncodedStringToUnsignedChars(DFA599_maxS);
	static final short[] DFA599_accept = DFA.unpackEncodedString(DFA599_acceptS);
	static final short[] DFA599_special = DFA.unpackEncodedString(DFA599_specialS);
	static final short[][] DFA599_transition;

	static {
		int numStates = DFA599_transitionS.length;
		DFA599_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA599_transition[i] = DFA.unpackEncodedString(DFA599_transitionS[i]);
		}
	}

	protected class DFA599 extends DFA {

		public DFA599(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 599;
			this.eot = DFA599_eot;
			this.eof = DFA599_eof;
			this.min = DFA599_min;
			this.max = DFA599_max;
			this.accept = DFA599_accept;
			this.special = DFA599_special;
			this.transition = DFA599_transition;
		}
		@Override
		public String getDescription() {
			return "423:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA642_eotS =
		"\6\uffff";
	static final String DFA642_eofS =
		"\6\uffff";
	static final String DFA642_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA642_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\2\uffff";
	static final String DFA642_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA642_specialS =
		"\6\uffff}>";
	static final String[] DFA642_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\12"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\11\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA642_eot = DFA.unpackEncodedString(DFA642_eotS);
	static final short[] DFA642_eof = DFA.unpackEncodedString(DFA642_eofS);
	static final char[] DFA642_min = DFA.unpackEncodedStringToUnsignedChars(DFA642_minS);
	static final char[] DFA642_max = DFA.unpackEncodedStringToUnsignedChars(DFA642_maxS);
	static final short[] DFA642_accept = DFA.unpackEncodedString(DFA642_acceptS);
	static final short[] DFA642_special = DFA.unpackEncodedString(DFA642_specialS);
	static final short[][] DFA642_transition;

	static {
		int numStates = DFA642_transitionS.length;
		DFA642_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA642_transition[i] = DFA.unpackEncodedString(DFA642_transitionS[i]);
		}
	}

	protected class DFA642 extends DFA {

		public DFA642(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 642;
			this.eot = DFA642_eot;
			this.eof = DFA642_eof;
			this.min = DFA642_min;
			this.max = DFA642_max;
			this.accept = DFA642_accept;
			this.special = DFA642_special;
			this.transition = DFA642_transition;
		}
		@Override
		public String getDescription() {
			return "929:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA637_eotS =
		"\4\uffff";
	static final String DFA637_eofS =
		"\4\uffff";
	static final String DFA637_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA637_maxS =
		"\2\u009b\2\uffff";
	static final String DFA637_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA637_specialS =
		"\4\uffff}>";
	static final String[] DFA637_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA637_eot = DFA.unpackEncodedString(DFA637_eotS);
	static final short[] DFA637_eof = DFA.unpackEncodedString(DFA637_eofS);
	static final char[] DFA637_min = DFA.unpackEncodedStringToUnsignedChars(DFA637_minS);
	static final char[] DFA637_max = DFA.unpackEncodedStringToUnsignedChars(DFA637_maxS);
	static final short[] DFA637_accept = DFA.unpackEncodedString(DFA637_acceptS);
	static final short[] DFA637_special = DFA.unpackEncodedString(DFA637_specialS);
	static final short[][] DFA637_transition;

	static {
		int numStates = DFA637_transitionS.length;
		DFA637_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA637_transition[i] = DFA.unpackEncodedString(DFA637_transitionS[i]);
		}
	}

	protected class DFA637 extends DFA {

		public DFA637(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 637;
			this.eot = DFA637_eot;
			this.eof = DFA637_eof;
			this.min = DFA637_min;
			this.max = DFA637_max;
			this.accept = DFA637_accept;
			this.special = DFA637_special;
			this.transition = DFA637_transition;
		}
		@Override
		public String getDescription() {
			return "929:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA653_eotS =
		"\5\uffff";
	static final String DFA653_eofS =
		"\5\uffff";
	static final String DFA653_minS =
		"\2\5\3\uffff";
	static final String DFA653_maxS =
		"\2\u009b\3\uffff";
	static final String DFA653_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA653_specialS =
		"\5\uffff}>";
	static final String[] DFA653_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff"+
			"\1\3\1\1\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\2\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff"+
			"\1\4\1\1\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff"+
			"\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA653_eot = DFA.unpackEncodedString(DFA653_eotS);
	static final short[] DFA653_eof = DFA.unpackEncodedString(DFA653_eofS);
	static final char[] DFA653_min = DFA.unpackEncodedStringToUnsignedChars(DFA653_minS);
	static final char[] DFA653_max = DFA.unpackEncodedStringToUnsignedChars(DFA653_maxS);
	static final short[] DFA653_accept = DFA.unpackEncodedString(DFA653_acceptS);
	static final short[] DFA653_special = DFA.unpackEncodedString(DFA653_specialS);
	static final short[][] DFA653_transition;

	static {
		int numStates = DFA653_transitionS.length;
		DFA653_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA653_transition[i] = DFA.unpackEncodedString(DFA653_transitionS[i]);
		}
	}

	protected class DFA653 extends DFA {

		public DFA653(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 653;
			this.eot = DFA653_eot;
			this.eof = DFA653_eof;
			this.min = DFA653_min;
			this.max = DFA653_max;
			this.accept = DFA653_accept;
			this.special = DFA653_special;
			this.transition = DFA653_transition;
		}
		@Override
		public String getDescription() {
			return "1189:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA658_eotS =
		"\5\uffff";
	static final String DFA658_eofS =
		"\5\uffff";
	static final String DFA658_minS =
		"\2\5\3\uffff";
	static final String DFA658_maxS =
		"\2\u009b\3\uffff";
	static final String DFA658_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA658_specialS =
		"\5\uffff}>";
	static final String[] DFA658_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\2\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff"+
			"\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA658_eot = DFA.unpackEncodedString(DFA658_eotS);
	static final short[] DFA658_eof = DFA.unpackEncodedString(DFA658_eofS);
	static final char[] DFA658_min = DFA.unpackEncodedStringToUnsignedChars(DFA658_minS);
	static final char[] DFA658_max = DFA.unpackEncodedStringToUnsignedChars(DFA658_maxS);
	static final short[] DFA658_accept = DFA.unpackEncodedString(DFA658_acceptS);
	static final short[] DFA658_special = DFA.unpackEncodedString(DFA658_specialS);
	static final short[][] DFA658_transition;

	static {
		int numStates = DFA658_transitionS.length;
		DFA658_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA658_transition[i] = DFA.unpackEncodedString(DFA658_transitionS[i]);
		}
	}

	protected class DFA658 extends DFA {

		public DFA658(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 658;
			this.eot = DFA658_eot;
			this.eof = DFA658_eof;
			this.min = DFA658_min;
			this.max = DFA658_max;
			this.accept = DFA658_accept;
			this.special = DFA658_special;
			this.transition = DFA658_transition;
		}
		@Override
		public String getDescription() {
			return "1275:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet102 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_charSet_in_styleSheet112 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_styleSheet114 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_layerStatement_in_styleSheet130 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_styleSheet132 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_imports_in_styleSheet146 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_namespaces_in_styleSheet157 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_styleSheet168 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet176 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces193 = new BitSet(new long[]{0x0000000000200002L,0x0000000000300000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_namespaces195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace211 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_namespace213 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace217 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_namespace219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace224 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_namespace226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_namespace229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet276 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_ws_in_charSet278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_charSetValue_in_charSet281 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_charSet283 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_charSet286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue300 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports328 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_imports330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_imports333 = new BitSet(new long[]{0x0040000000200002L,0x0200000000200000L,0x0000000008000002L});
	public static final BitSet FOLLOW_ws_in_imports335 = new BitSet(new long[]{0x0040000000000002L,0x0200000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_sass_use_in_imports370 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_imports372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_imports375 = new BitSet(new long[]{0x0040000000200002L,0x0200000000200000L,0x0000000008000002L});
	public static final BitSet FOLLOW_ws_in_imports377 = new BitSet(new long[]{0x0040000000000002L,0x0200000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_sass_forward_in_imports412 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_imports414 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_imports417 = new BitSet(new long[]{0x0040000000200002L,0x0200000000200000L,0x0000000008000002L});
	public static final BitSet FOLLOW_ws_in_imports419 = new BitSet(new long[]{0x0040000000000002L,0x0200000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem455 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem460 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem462 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_importLayer_in_importItem465 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem476 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem479 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem512 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem514 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem517 = new BitSet(new long[]{0x0851090001347C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem520 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem523 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem528 = new BitSet(new long[]{0x0851090001347C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem532 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_importLayer_in_importItem535 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem546 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem549 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem573 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000200100L});
	public static final BitSet FOLLOW_LPAREN_in_importItem579 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem581 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem583 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem590 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem592 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_importLayer_in_importItem595 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem606 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_importLayer634 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_importLayer637 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_importLayer639 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_importLayer642 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_importLayer644 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importLayer647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_USE_in_sass_use674 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use676 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_use678 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use681 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_use_as_in_sass_use683 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use688 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_use_with_in_sass_use690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as715 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_as717 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as719 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_with742 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_use_with747 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with749 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with752 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with756 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_use_with759 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with761 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with764 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with769 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_use_with772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_use_with_declaration793 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration795 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_use_with_declaration798 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration800 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_use_with_declaration803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FORWARD_in_sass_forward829 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_forward833 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward837 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_hide_in_sass_forward841 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_sass_forward_show_in_sass_forward846 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward854 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_as_in_sass_forward856 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward863 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_with_in_sass_forward865 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as890 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_as892 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_with917 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_forward_with922 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with924 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with927 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with931 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_with934 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with936 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with939 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with944 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_forward_with947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_forward_with_declaration968 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration970 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_forward_with_declaration973 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration975 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_forward_with_declaration978 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1001 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1003 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1005 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1008 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_hide1011 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1013 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1016 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1041 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1043 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1045 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1048 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_show1051 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1053 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1056 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media1075 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_media1077 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_media1095 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_media1103 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media1110 = new BitSet(new long[]{0x88519901C12C7CC0L,0x77CDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_media1112 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_media1115 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_mediaBody_in_media1125 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_media1132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody1166 = new BitSet(new long[]{0x88519901C12C7CC2L,0x77CDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_mediaBody1176 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1179 = new BitSet(new long[]{0x88519901C12C7CC2L,0x77CDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_mediaBody1183 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1210 = new BitSet(new long[]{0x88519901C12C7CC2L,0x77CDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_mediaBody1212 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody1231 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_mediaBody1234 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1239 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem1313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1346 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1349 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1352 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1369 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1372 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1440 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem1452 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem1462 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem1472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem1482 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem1492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem1508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem1516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem1524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem1537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_mediaBodyItem1545 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1559 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1571 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList1574 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1576 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1579 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_mediaCondition_in_mediaQuery1600 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery1609 = new BitSet(new long[]{0x0011080000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1611 = new BitSet(new long[]{0x0011080000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery1618 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1630 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1633 = new BitSet(new long[]{0x0001000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1635 = new BitSet(new long[]{0x0001000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_mediaConditionWithoutOr_in_mediaQuery1638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1668 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaCondition1690 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaCondition1692 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_mediaInParens_in_mediaCondition1696 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaInParens_in_mediaCondition1705 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaCondition1709 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaCondition1722 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaCondition1725 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaCondition1727 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_mediaInParens_in_mediaCondition1730 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaCondition1743 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_or_in_mediaCondition1746 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaCondition1748 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_mediaInParens_in_mediaCondition1751 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_LPAREN_in_mediaCondition1782 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaCondition1784 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaCondition1787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaConditionWithoutOr1805 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaConditionWithoutOr1807 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_mediaInParens_in_mediaConditionWithoutOr1811 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaInParens_in_mediaConditionWithoutOr1820 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaConditionWithoutOr1823 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaConditionWithoutOr1826 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaConditionWithoutOr1828 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_mediaInParens_in_mediaConditionWithoutOr1831 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaConditionWithoutOr1850 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaInParens1861 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_mediaInParens1863 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_mediaCondition_in_mediaInParens1867 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaInParens1871 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaInParens1874 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaInParens1877 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1887 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1891 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1915 = new BitSet(new long[]{0x0000300000280002L,0x0000000010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1918 = new BitSet(new long[]{0x0000300000080000L,0x0000000010000090L});
	public static final BitSet FOLLOW_COLON_in_mediaExpression1922 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_mediaComparisonOperator_in_mediaExpression1926 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_mediaExpression1929 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaFeatureRangeContext_in_mediaExpression1942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaExpression1958 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaRangeExplicitValue_in_mediaFeatureValue2058 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue2068 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue2075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2110 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_set_in_mediaFeatureRangeContext2115 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2124 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaFeature_in_mediaFeatureRangeContext2127 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_set_in_mediaFeatureRangeContext2133 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2141 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2144 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2172 = new BitSet(new long[]{0x0000300000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2174 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_mediaFeatureRangeContext2177 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2186 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaFeature_in_mediaFeatureRangeContext2189 = new BitSet(new long[]{0x0000300000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2192 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_mediaFeatureRangeContext2195 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2203 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2206 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaFeatureRangeContext2216 = new BitSet(new long[]{0x0000000000200000L,0x0000000010200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2218 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_OPEQ_in_mediaFeatureRangeContext2221 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureRangeContext2223 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaFeature_in_mediaFeatureRangeContext2226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature2236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature2240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature2248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature2252 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body2286 = new BitSet(new long[]{0xA8519901C16C7CC2L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_body2296 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_body2299 = new BitSet(new long[]{0xA8519901C16C7CC2L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_body2303 = new BitSet(new long[]{0xA8519901C14C7CC2L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_SEMI_in_body2330 = new BitSet(new long[]{0xA8519901C16C7CC2L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_body2332 = new BitSet(new long[]{0xA8519901C14C7CC2L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem2412 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem2445 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem2464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem2473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem2495 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem2512 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem2524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem2547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem2561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem2575 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem2589 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SUPPORTS_SYM_in_supportsAtRule2609 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2611 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsAtRule2614 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2616 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_supportsAtRule2619 = new BitSet(new long[]{0x88519901C12C7CC0L,0x77CDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2621 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_supportsAtRule2624 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_mediaBody_in_supportsAtRule2626 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_supportsAtRule2629 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_supportsCondition2642 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2644 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2646 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2651 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2654 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsWithOperator_in_supportsCondition2656 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2684 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2687 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2689 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2703 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2706 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2708 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_supportsConjunction2736 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsConjunction2738 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsConjunction2740 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_supportsDisjunction2767 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsDisjunction2769 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsDisjunction2771 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_supportsInParens2798 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2800 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsInParens2803 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2805 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_supportsInParens2808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsFeature_in_supportsInParens2813 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_supportsInParens2825 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsDecl_in_supportsFeature2855 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_supportsDecl2867 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_supportsDecl2869 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_declaration_in_supportsDecl2872 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsDecl2874 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_supportsDecl2877 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_containerAtRule2911 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2913 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_containerAtRule2915 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2917 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_containerAtRule2920 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_containerAtRule2922 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_containerAtRule2925 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_containerAtRule2927 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_containerAtRule2930 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_containerAtRule2935 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2937 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerName_in_containerAtRule2939 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2941 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_containerAtRule2943 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2945 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_containerAtRule2948 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_containerAtRule2950 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_containerAtRule2953 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_containerAtRule2955 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_containerAtRule2958 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_containerCondition2984 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerCondition2986 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerCondition2988 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerCondition3000 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerCondition3003 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryWithOperator_in_containerCondition3005 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerQueryConjunction_in_containerQueryWithOperator3040 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryWithOperator3043 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryConjunction_in_containerQueryWithOperator3045 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator3059 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryWithOperator3062 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator3064 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_containerQueryConjunction3092 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryConjunction3094 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerQueryConjunction3096 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_containerQueryDisjunction3123 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryDisjunction3125 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerQueryDisjunction3127 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_containerQueryInParens3154 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens3156 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_containerQueryInParens3159 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens3161 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_containerQueryInParens3164 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeature_in_containerQueryInParens3169 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_containerQueryInParens3176 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens3178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_containerQueryInParens3181 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0642307427L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens3183 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0642107427L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleQuery_in_containerQueryInParens3186 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens3188 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_containerQueryInParens3191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_containerQueryInParens3203 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_containerName3239 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleCondition_in_styleQuery3263 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleFeature_in_styleQuery3275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_styleCondition3299 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleCondition3301 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_styleInParens_in_styleCondition3303 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleInParens_in_styleCondition3315 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleCondition3318 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleConditionWithOperator_in_styleCondition3320 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleQueryConjunction_in_styleConditionWithOperator3354 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleConditionWithOperator3357 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleQueryConjunction_in_styleConditionWithOperator3359 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator3373 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleConditionWithOperator3376 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator3378 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_styleQueryConjunction3406 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleQueryConjunction3408 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_styleInParens_in_styleQueryConjunction3410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_styleQueryDisjunction3437 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleQueryDisjunction3439 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_styleInParens_in_styleQueryDisjunction3441 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_styleInParens3482 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3484 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_styleCondition_in_styleInParens3487 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3489 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_styleInParens3492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_styleInParens3504 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_styleInParens3506 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleFeature_in_styleInParens3509 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3511 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_styleInParens3514 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_styleInParens3526 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3584 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3586 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureFixedValue_in_sizeFeature3589 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3591 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3606 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3608 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeSingle_in_sizeFeature3611 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3613 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3628 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3630 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenLt_in_sizeFeature3633 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3635 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3650 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3652 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenGt_in_sizeFeature3655 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3657 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3660 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureFixedValue3693 = new BitSet(new long[]{0x0000000000280002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureFixedValue3697 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sizeFeatureFixedValue3700 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureFixedValue3702 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureFixedValue3705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3741 = new BitSet(new long[]{0x0000300000200000L,0x0000000010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3745 = new BitSet(new long[]{0x0000300000200000L,0x0000000010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeSingle3748 = new BitSet(new long[]{0x0000300000000000L,0x0000000010000090L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeSingle3751 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeSingle3771 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3779 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3813 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3815 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenLt3818 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3826 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenLt3829 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenLt3834 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3842 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3845 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3878 = new BitSet(new long[]{0x0000300000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3880 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenGt3883 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3891 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenGt3894 = new BitSet(new long[]{0x0000300000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3896 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenGt3899 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3907 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_sizeFeatureValue3988 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_in_styleFeature4021 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerBlock_in_layerAtRule4054 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerStatement_in_layerAtRule4074 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LAYER_SYM_in_layerBlock4108 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerBlock4110 = new BitSet(new long[]{0x4010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_layerName_in_layerBlock4112 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerBlock4115 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_layerBody_in_layerBlock4118 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LAYER_SYM_in_layerStatement4153 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerStatement4155 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_layerStatement4157 = new BitSet(new long[]{0x0000000000300000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_layerStatement4161 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_layerStatement4164 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerStatement4166 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_layerStatement4169 = new BitSet(new long[]{0x0000000000300000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_SEMI_in_layerStatement4173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_layerName4207 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_layerName4210 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_layerName4212 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_LBRACE_in_layerBody4247 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_layerBody4249 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_body_in_layerBody4252 = new BitSet(new long[]{0x0000000000200000L,0x0000002000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerBody4255 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_layerBody4258 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule4283 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule4291 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule4299 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule4307 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_at_rule4315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule4323 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerAtRule_in_at_rule4331 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerAtRule_in_at_rule4339 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule4352 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule4356 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule4360 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_atRuleId4370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_atRuleId4374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_atRuleId4382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_atRuleId4386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule4404 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_generic_at_rule4422 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_braceBlock2_in_generic_at_rule4434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_generic_at_rule4438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document4449 = new BitSet(new long[]{0x0000000000200000L,0x0000000000238000L,0x0000000008200000L});
	public static final BitSet FOLLOW_ws_in_moz_document4451 = new BitSet(new long[]{0x0000000000000000L,0x0000000000038000L,0x0000000000200000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document4456 = new BitSet(new long[]{0x4000000000300000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_moz_document4458 = new BitSet(new long[]{0x4000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document4464 = new BitSet(new long[]{0x0000000000200000L,0x0000000000238000L,0x0000000008200000L});
	public static final BitSet FOLLOW_ws_in_moz_document4466 = new BitSet(new long[]{0x0000000000000000L,0x0000000000038000L,0x0000000000200000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document4469 = new BitSet(new long[]{0x4000000000300000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_moz_document4471 = new BitSet(new long[]{0x4000000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document4478 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_moz_document4480 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_moz_document4485 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document4490 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes4529 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_KEYFRAMES_SYM_in_webkitKeyframes4533 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_AT_IDENT_in_webkitKeyframes4539 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_AT_IDENT_in_webkitKeyframes4545 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4549 = new BitSet(new long[]{0x0851010001047C40L,0x774DCE0040105007L,0x000000000403E11FL});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes4552 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4554 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes4558 = new BitSet(new long[]{0x0010000000200000L,0x0000802080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4560 = new BitSet(new long[]{0x0010000000000000L,0x0000802080000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes4567 = new BitSet(new long[]{0x0010000000200000L,0x0000802080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4569 = new BitSet(new long[]{0x0010000000000000L,0x0000802080000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes4576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock4588 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock4590 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock4594 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock4597 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock4600 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock4604 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock4608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_webkitKeyframesBlock4625 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_webkitKeyframesBlock4627 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4644 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4650 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4654 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors4660 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors4663 = new BitSet(new long[]{0x0010000000200000L,0x0000000080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors4665 = new BitSet(new long[]{0x0010000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4672 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4678 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4682 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page4706 = new BitSet(new long[]{0x4010000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4708 = new BitSet(new long[]{0x4010000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page4713 = new BitSet(new long[]{0x4000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4715 = new BitSet(new long[]{0x4000000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page4722 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4724 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page4737 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE2040307007L,0x000000000D03E0BFL});
	public static final BitSet FOLLOW_ws_in_page4779 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E0BFL});
	public static final BitSet FOLLOW_SEMI_in_page4786 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE0040307007L,0x000000000D03E09FL});
	public static final BitSet FOLLOW_ws_in_page4788 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E09FL});
	public static final BitSet FOLLOW_SEMI_in_page4795 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE0040307007L,0x000000000D03E09FL});
	public static final BitSet FOLLOW_ws_in_page4797 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E09FL});
	public static final BitSet FOLLOW_propertyDeclaration_in_page4804 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE2040307007L,0x000000000D03E0BFL});
	public static final BitSet FOLLOW_margin_in_page4807 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE2040307007L,0x000000000D03E0BFL});
	public static final BitSet FOLLOW_SEMI_in_page4825 = new BitSet(new long[]{0x0000000000200000L,0x0000002000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4840 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_page4851 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle4868 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle4870 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle4873 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle4875 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle4886 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_counterStyle4888 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle4891 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_counterStyle4895 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle4906 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace4923 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_fontFace4925 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace4936 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_fontFace4938 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace4941 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_fontFace4945 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace4956 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin4970 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_margin4972 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin4975 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_margin4977 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin4980 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_margin4982 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin4985 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage5194 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage5196 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property5280 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_property5290 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_property5298 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property5306 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property5314 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property5324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map5351 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map5353 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map5355 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map5358 = new BitSet(new long[]{0x0851090001347CC0L,0x774DDE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map5360 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map5363 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map5382 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map5389 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map5393 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map5396 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map5402 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map5405 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name5429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs5463 = new BitSet(new long[]{0x0851090001347CC2L,0x774DCE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5473 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs5476 = new BitSet(new long[]{0x0851090001347CC2L,0x774DCE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5480 = new BitSet(new long[]{0x0851090001147CC2L,0x774DCE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs5507 = new BitSet(new long[]{0x0851090001347CC2L,0x774DCE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5509 = new BitSet(new long[]{0x0851090001147CC2L,0x774DCE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_NUMBER_in_sass_map_pair5545 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair5548 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5551 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair5554 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_function_in_sass_map_pair5564 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_property_in_sass_map_pair5567 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_sass_map_in_sass_map_pair5569 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5572 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair5575 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5577 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair5580 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5583 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair5586 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule5628 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5631 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule5633 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule5654 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_rule5658 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5660 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule5665 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5669 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_rule5672 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5674 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule5677 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5679 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_rule5682 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule5700 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5712 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule5719 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_rule5721 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_rule5724 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_rule5734 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule5741 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations5775 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_declarations5777 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declaration_in_declarations5783 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_declarations5792 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_declarations5794 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_ws_in_declarations5800 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_declaration_in_declarations5803 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5809 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_declarations5813 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5815 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_ws_in_declarations5821 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations5833 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5835 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration5864 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration5877 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration5889 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration5952 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration5964 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration6003 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration6015 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration6028 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_declaration6031 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration6034 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration6051 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_declaration6054 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration6057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration6071 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration6081 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration6091 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration6101 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration6111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration6121 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_error_in_declaration6131 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration6141 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration6149 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup6183 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup6186 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup6189 = new BitSet(new long[]{0x80119801C0280080L,0x0080000600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup6191 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup6194 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup6201 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector6222 = new BitSet(new long[]{0x80118801C0280080L,0x0080000200202020L,0x0000000008000080L});
	public static final BitSet FOLLOW_ws_in_selector6224 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector6229 = new BitSet(new long[]{0x0000100000200002L,0x0000000400200000L,0x0000000008000800L});
	public static final BitSet FOLLOW_ws_in_selector6235 = new BitSet(new long[]{0x0000100000000000L,0x0000000400000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_combinator_in_selector6238 = new BitSet(new long[]{0x80118801C0280080L,0x0080000200202020L,0x0000000008000080L});
	public static final BitSet FOLLOW_ws_in_selector6240 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_ws_in_selector6244 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector6247 = new BitSet(new long[]{0x0000100000200002L,0x0000000400200000L,0x0000000008000800L});
	public static final BitSet FOLLOW_combinator_in_selector6262 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence6314 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6320 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence6334 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6349 = new BitSet(new long[]{0x80018001C0080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence6352 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6357 = new BitSet(new long[]{0x0011000000000080L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6362 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence6368 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence6382 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6394 = new BitSet(new long[]{0x80018001C0080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence6397 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6404 = new BitSet(new long[]{0x0011000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6406 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_esPred6431 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_esPred6435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_esPred6439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_esPred6443 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_esPred6447 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DCOLON_in_esPred6451 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred6455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_esPred6461 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector6503 = new BitSet(new long[]{0x0010080000000000L,0x0000000000000020L,0x0000000000000080L});
	public static final BitSet FOLLOW_elementName_in_typeSelector6507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix6522 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix6526 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix6530 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent6562 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent6576 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_IDENT_in_elementSubsequent6579 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_NUMBER_in_elementSubsequent6583 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_elementSubsequent6589 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent6605 = new BitSet(new long[]{0x0010000000000080L,0x0000000000002000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_elementSubsequent6607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent6616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent6625 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent6637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent6649 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId6673 = new BitSet(new long[]{0x0011000000000002L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId6678 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId6700 = new BitSet(new long[]{0x0010000000000080L,0x0000000000082000L});
	public static final BitSet FOLLOW_NAME_in_cssId6716 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssId6736 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass6788 = new BitSet(new long[]{0x0011080000000080L,0x0000000002002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass6816 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssClass6834 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass6850 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass6866 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass6882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_cssClass6906 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute6962 = new BitSet(new long[]{0x0010000000200000L,0x0000000200200000L,0x0000000008000080L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute6969 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6972 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute6983 = new BitSet(new long[]{0x0080000820A00200L,0x0000004010200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6985 = new BitSet(new long[]{0x0080000820800200L,0x0000004010000000L});
	public static final BitSet FOLLOW_set_in_slAttribute7019 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_ws_in_slAttribute7199 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute7218 = new BitSet(new long[]{0x0000000000200000L,0x0000004000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute7236 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute7261 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName7277 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo7349 = new BitSet(new long[]{0x0011080000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_set_in_pseudo7412 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7469 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7472 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DDF85C430706FL,0x000000000D33F99FL});
	public static final BitSet FOLLOW_ws_in_pseudo7474 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DDF85C410706FL,0x000000000533F99FL});
	public static final BitSet FOLLOW_expression_in_pseudo7480 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7482 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo7488 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_pseudo7556 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo7578 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7580 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7583 = new BitSet(new long[]{0x80119801C0280080L,0x0080100600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_pseudo7585 = new BitSet(new long[]{0x80119801C0080080L,0x0080100600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7590 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7592 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7597 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo7623 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7625 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7628 = new BitSet(new long[]{0x80119801C0280080L,0x0080100600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_pseudo7630 = new BitSet(new long[]{0x80119801C0080080L,0x0080100600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7635 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7637 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7642 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo7669 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7671 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7674 = new BitSet(new long[]{0x80119801C0280080L,0x0080100600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_pseudo7676 = new BitSet(new long[]{0x80119801C0080080L,0x0080100600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7679 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7682 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration7724 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E01FL});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7727 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7729 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7732 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7734 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration7737 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7748 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7750 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7753 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7755 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_componentValueOuter_in_propertyDeclaration7758 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration7767 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E01FL});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7770 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7772 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7775 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7777 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration7780 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7783 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration7786 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue7826 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue7834 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue7856 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate7925 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_braceBlock28017 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_braceBlock28019 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_braceBlock28030 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_braceBlock28037 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_braceBlock8050 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEFBFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_braceBlock8052 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEFBFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RBRACE_in_braceBlock8055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_bracketBlock8062 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_bracketBlock8064 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEFDFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RBRACKET_in_bracketBlock8067 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_parenBlock8074 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_parenBlock8076 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_parenBlock8079 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parenBlock_in_componentValue8086 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_braceBlock_in_componentValue8090 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bracketBlock_in_componentValue8094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_componentValue8109 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_preservedToken_in_componentValue8113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parenBlock_in_componentValueOuter8121 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_braceBlock_in_componentValueOuter8125 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_bracketBlock_in_componentValueOuter8129 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_function_in_componentValueOuter8144 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_preservedTokenTopLevel_in_componentValueOuter8148 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_componentValueOuter_in_componentValueOuter8151 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI8240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio8285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression8302 = new BitSet(new long[]{0x88518B4481347CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_ws_in_expression8334 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_expression8339 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_operator_in_expression8342 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_expression8344 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_expression8353 = new BitSet(new long[]{0x88518B4481347CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_unaryOperator_in_term8378 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF81C430506FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_term8380 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF81C410506FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_function_in_term8409 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_term8422 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term8436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_term8449 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_term8451 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term8454 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_term8457 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term8459 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_term8463 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_RBRACKET_in_term8466 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term8479 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URANGE_in_term8491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term8503 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term8515 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term8527 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term8539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term8551 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term8563 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term8575 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term8587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term8599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term8611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term8628 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term8640 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000000100L});
	public static final BitSet FOLLOW_set_in_term8642 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term8663 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term8678 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term8690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term8702 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term8716 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_term8730 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term8744 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_term8758 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term8772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol8799 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function8815 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_function8819 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_function8821 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_fnAttributes_in_function8848 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function8879 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName8931 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName8933 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName8937 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_functionName8940 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName8942 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes8966 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_fnAttributes8969 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes8973 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_SEMI_in_fnAttributes8979 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttributes8982 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes8985 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_fnAttributes8989 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute9026 = new BitSet(new long[]{0x0000000000280000L,0x0000000010200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute9028 = new BitSet(new long[]{0x0000000000080000L,0x0000000010000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute9031 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttribute9037 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute9040 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute9057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute9069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName9092 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName9095 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName9097 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName9117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue9140 = new BitSet(new long[]{0x88518B4481247CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue9172 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue9177 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue9180 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue9182 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_fnAttributeValue9191 = new BitSet(new long[]{0x88518B4481247CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue9212 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor9226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration9286 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration9288 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration9291 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration9293 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration9296 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration9318 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration9320 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration9323 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration9325 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration9328 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration9332 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration9335 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration9341 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration9344 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_cp_variable9384 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable9580 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_variable9584 = new BitSet(new long[]{0x0000000100000000L});
	public static final BitSet FOLLOW_DOT_in_cp_variable9586 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable9588 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list9618 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list9637 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list9640 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_list9642 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list9645 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_LBRACE_in_cp_expression9681 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_cp_expression9683 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression9686 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_cp_expression9688 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_expression9691 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9707 = new BitSet(new long[]{0x8871BB448D247CE2L,0x774DCF85C63074FFL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9731 = new BitSet(new long[]{0x001030000C000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression9734 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9736 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9740 = new BitSet(new long[]{0x8871BB448D247CE2L,0x774DCF85C63074FFL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9759 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9762 = new BitSet(new long[]{0x8871BB448D247CE2L,0x774DCF85C63074FFL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression9780 = new BitSet(new long[]{0x0851090001347CC0L,0x774DDE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9782 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression9785 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_sass_map_pairs_in_cp_expression9787 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression9790 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator9811 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator9815 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator9820 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator9824 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator9828 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator9832 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator9836 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator9840 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom9866 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9868 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom9899 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom9915 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9917 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom9921 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9923 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom9928 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions9960 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions9967 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions9969 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression10003 = new BitSet(new long[]{0x0000000000200002L,0x0000000400202000L,0x00000000080000C0L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression10045 = new BitSet(new long[]{0x0000000000000000L,0x0000000400002000L,0x00000000000000C0L});
	public static final BitSet FOLLOW_set_in_cp_math_expression10048 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression10058 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression10061 = new BitSet(new long[]{0x0000000000200002L,0x0000000400202000L,0x00000000080000C0L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom10094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom10102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom10113 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom10115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom10121 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom10123 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom10126 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom10128 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom10131 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_declaration10171 = new BitSet(new long[]{0x4010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration10178 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration10180 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_declaration10185 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration10188 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration10191 = new BitSet(new long[]{0x0850010003247C40L,0x774DDE0040305107L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration10193 = new BitSet(new long[]{0x0850010003047C40L,0x774DDE0040105107L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration10196 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration10199 = new BitSet(new long[]{0x4010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration10204 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration10207 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration10231 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration10233 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration10235 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration10238 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration10241 = new BitSet(new long[]{0x0850010003247C40L,0x774DDE0040305107L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration10243 = new BitSet(new long[]{0x0850010003047C40L,0x774DDE0040105107L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration10246 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration10249 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration10263 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration10266 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call10302 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call10304 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call10308 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call10312 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call10316 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10332 = new BitSet(new long[]{0x0000100000000000L,0x0000000400000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_combinator_in_cp_mixin_call10335 = new BitSet(new long[]{0x0000800100200040L,0x0000000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10337 = new BitSet(new long[]{0x0000800100000040L,0x0000000000000020L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call10341 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call10343 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call10347 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call10351 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call10355 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_pseudo_in_cp_mixin_call10365 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10377 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call10380 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10382 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call10385 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call10388 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call10413 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10415 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call10417 = new BitSet(new long[]{0x4000000000200002L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call10423 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10425 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call10428 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call10431 = new BitSet(new long[]{0x4000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10436 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call10439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block10468 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE26C0307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block10470 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE26C0107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block10473 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE26C0107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block10484 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_cp_mixin_block10499 = new BitSet(new long[]{0x0010000000200000L,0x0000802080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block10501 = new BitSet(new long[]{0x0010000000000000L,0x0000802080000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block10513 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name10534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10565 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args10569 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args10577 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10580 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args10586 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args10588 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_cp_mixin_call_args10593 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg10625 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10627 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg10630 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10632 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg10635 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg10647 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10655 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list10702 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000100L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_cp_args_list10706 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_cp_args_list10716 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list10719 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000100L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_cp_args_list10726 = new BitSet(new long[]{0x0000000002200002L,0x0000000000200100L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10734 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000100L});
	public static final BitSet FOLLOW_set_in_cp_args_list10742 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10750 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list10767 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg10798 = new BitSet(new long[]{0x0000000000280002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg10800 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg10805 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_arg10807 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg10810 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg10812 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_arg10825 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded10848 = new BitSet(new long[]{0x0000000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10850 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded10853 = new BitSet(new long[]{0x0010000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10856 = new BitSet(new long[]{0x0010000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded10860 = new BitSet(new long[]{0x0000000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded10864 = new BitSet(new long[]{0x0000000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10867 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded10870 = new BitSet(new long[]{0x0010000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_NOT_in_less_condition10896 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_condition10898 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition10907 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_less_condition10909 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_less_condition10936 = new BitSet(new long[]{0x0000300000200000L,0x0000100010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition10940 = new BitSet(new long[]{0x0000300000200000L,0x0000100010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_condition10943 = new BitSet(new long[]{0x0000300000000000L,0x0000100010000090L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition10947 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_less_condition10949 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition10952 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition10970 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition10992 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10994 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition10997 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10999 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition11002 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition11004 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition11007 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name11029 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp11092 = new BitSet(new long[]{0x0010000080000082L,0x0000000000002008L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp11095 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation11138 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation11140 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation11142 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation11145 = new BitSet(new long[]{0x0000000000200000L,0x0000002000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation11147 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation11150 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp11177 = new BitSet(new long[]{0x0011000080000002L,0x0000000000002008L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp11180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var11227 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var11229 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var11231 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var11234 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var11236 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var11239 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties11279 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties11281 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties11284 = new BitSet(new long[]{0xC8518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties11286 = new BitSet(new long[]{0xC8518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties11290 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties11292 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties11297 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties11299 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties11302 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties11304 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties11307 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend11328 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend11330 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend11332 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend11335 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_extend11338 = new BitSet(new long[]{0x80118801C0280080L,0x0080000200202020L,0x0000000008000080L});
	public static final BitSet FOLLOW_ws_in_sass_extend11340 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend11343 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend11348 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend11350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector11373 = new BitSet(new long[]{0x0011000000000002L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector11375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug11397 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_debug11407 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug11409 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ERROR_in_sass_error11430 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_error11432 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_STRING_in_sass_error11434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control11455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control11459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control11463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control11467 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if11488 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_if11490 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if11493 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_if11495 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if11498 = new BitSet(new long[]{0x0000000000200002L,0x0018000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_if11501 = new BitSet(new long[]{0x0000000000000000L,0x0018000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if11504 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else11527 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11529 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else11532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else11546 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11548 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else11553 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else11560 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_else11563 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else11566 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11568 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else11571 = new BitSet(new long[]{0x0000000000200002L,0x0018000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11574 = new BitSet(new long[]{0x0000000000000000L,0x0018000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else11577 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression11600 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for11621 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11623 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_sass_for11625 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11627 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for11631 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11635 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for11637 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11639 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for11643 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11647 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for11649 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11651 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for11654 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each11675 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11677 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each11679 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11681 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each11685 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11689 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each11692 = new BitSet(new long[]{0xC8718B4481347CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_each11695 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each11698 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_each11702 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each11708 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables11729 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables11741 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables11744 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_each_variables11746 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables11749 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while11774 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_while11776 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while11778 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_while11780 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while11783 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block11804 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_sass_control_block11806 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_sass_control_block11809 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block11812 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration11854 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11856 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration11858 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration11863 = new BitSet(new long[]{0x0850010003247C40L,0x774DDE0040305107L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11865 = new BitSet(new long[]{0x0850010003047C40L,0x774DDE0040105107L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration11868 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration11871 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11873 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration11876 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11878 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration11881 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration11884 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name11905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return11926 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return11928 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return11930 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content11951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types11970 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when11993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and12012 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or12030 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only12048 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3470 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3540 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3543 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3600 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3603 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css31170 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css31173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css31271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css31278 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css31280 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_in_synpred5_Css31285 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css31288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css31291 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css31299 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css31309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css31327 = new BitSet(new long[]{0x0020000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31330 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css31333 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css31340 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css31363 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31388 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31391 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31393 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31402 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31404 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred8_Css31406 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31408 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31411 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31413 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css31416 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31418 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31421 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31423 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred8_Css31426 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31431 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31434 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred8_Css31437 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred9_Css31449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css31564 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred10_Css31567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31622 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_synpred11_Css31625 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_synpred12_Css31843 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_synpred13_Css31951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_synpred14_Css32093 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred14_Css32095 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_set_in_synpred14_Css32098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_synpred15_Css32155 = new BitSet(new long[]{0x0000300000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred15_Css32157 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_synpred15_Css32160 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred16_Css32290 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred16_Css32293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred17_Css32368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred17_Css32375 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred17_Css32377 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_in_synpred17_Css32382 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred17_Css32385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred17_Css32388 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred17_Css32396 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFDFFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred17_Css32408 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred18_Css32434 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_synpred18_Css32436 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred18_Css32439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred19_Css32458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred20_Css32486 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred20_Css32488 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred20_Css32491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred21_Css32508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred22_Css32798 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css32800 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_supportsCondition_in_synpred22_Css32803 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred22_Css32805 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred22_Css32808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsFeature_in_synpred23_Css32813 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_synpred24_Css32897 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css32899 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_synpred24_Css32901 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css32903 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred24_Css32906 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred25_Css33154 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred25_Css33156 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_synpred25_Css33159 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred25_Css33161 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred25_Css33164 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeature_in_synpred26_Css33169 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_synpred27_Css33176 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred27_Css33178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred27_Css33181 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0642307427L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_synpred27_Css33183 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0642107427L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleQuery_in_synpred27_Css33186 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred27_Css33188 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred27_Css33191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred28_Css33482 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33484 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_styleCondition_in_synpred28_Css33487 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33489 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred28_Css33492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred29_Css33504 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_synpred29_Css33506 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleFeature_in_synpred29_Css33509 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred29_Css33511 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred29_Css33514 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred30_Css33584 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33586 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureFixedValue_in_synpred30_Css33589 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33591 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred30_Css33594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred31_Css33606 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred31_Css33608 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeSingle_in_synpred31_Css33611 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred31_Css33613 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred31_Css33616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred32_Css33628 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred32_Css33630 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenLt_in_synpred32_Css33633 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css33635 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred32_Css33638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_synpred34_Css34429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred35_Css35467 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred35_Css35470 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_synpred36_Css35561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred37_Css35861 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred38_Css35873 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred39_Css35886 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred40_Css35900 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css35903 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred40_Css35905 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred40_Css35914 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css35916 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred40_Css35918 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css35920 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred40_Css35923 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css35925 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred40_Css35928 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css35930 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred40_Css35933 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css35935 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred40_Css35938 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred40_Css35943 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css35946 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred40_Css35949 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred41_Css35961 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred42_Css35978 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred42_Css35980 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred42_Css35983 = new BitSet(new long[]{0xBFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_set_in_synpred42_Css35995 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_synpred43_Css36012 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred44_Css36024 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred45_Css36045 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred46_Css36341 = new BitSet(new long[]{0x8001800140080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_esPred_in_synpred46_Css36344 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred47_Css36379 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred48_Css36386 = new BitSet(new long[]{0x8001800140080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_esPred_in_synpred48_Css36389 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred49_Css36500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred50_Css38099 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred50_Css38101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred50_Css38104 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred51_Css38134 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred51_Css38136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred51_Css38139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred52_Css38309 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_synpred52_Css38314 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_operator_in_synpred52_Css38317 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred52_Css38319 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_synpred52_Css38328 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred53_Css38401 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred53_Css38403 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred53_Css38406 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred54_Css39013 = new BitSet(new long[]{0x0000000000280000L,0x0000000010200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred54_Css39015 = new BitSet(new long[]{0x0000000000080000L,0x0000000010000000L});
	public static final BitSet FOLLOW_set_in_synpred54_Css39018 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred55_Css39053 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred56_Css39147 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_synpred56_Css39152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred56_Css39155 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred56_Css39157 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_synpred56_Css39166 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred58_Css39626 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred58_Css39629 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred58_Css39631 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_synpred58_Css39634 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred59_Css39701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred60_Css39724 = new BitSet(new long[]{0x001030000C000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred60_Css39727 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred61_Css39753 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred61_Css39756 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred62_Css39896 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred63_Css310029 = new BitSet(new long[]{0x0000000000000000L,0x0000000400002000L,0x00000000000000C0L});
	public static final BitSet FOLLOW_set_in_synpred63_Css310032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred64_Css310321 = new BitSet(new long[]{0x0000100000000000L,0x0000000400000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_combinator_in_synpred64_Css310324 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred64_Css310326 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_synpred65_Css310362 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred66_Css310370 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred66_Css310373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_synpred67_Css310489 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred68_Css311734 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred68_Css311737 = new BitSet(new long[]{0x0000000000000002L});
}
