<?xml version='1.0' encoding='UTF-8' ?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<metaDD>
	<extends>org.netbeans.modules.j2ee.sun.dd.impl.common.SunBaseBean</extends>
	<meta-element>
		<import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_0.SecurityRoleMapping</import>
		<import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_0.ResourceEnvRef</import>
		<import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_0.ResourceRef</import>
		<import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_0.EjbRef</import>
                <import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_1.WebserviceDescription</import>
                <import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_1.MessageDestination</import>
                <import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_1.ServiceRef</import>
		<dtd-name>sun-web-app</dtd-name>
		<bean-name>SunWebApp</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.SunWebApp</implements>
                <user-code>
                    public void setVersion(java.math.BigDecimal value) {
                    }
                    public java.math.BigDecimal getVersion() {
                        return new java.math.BigDecimal("2.30");
                    }
                    public org.xml.sax.SAXParseException getError() {
                        return null;
                    }
                    public int getStatus() {
                        return STATE_VALID;
                    }
                    public boolean isEventSource(org.netbeans.modules.j2ee.sun.dd.api.RootInterface rootDD) {
                        return this == rootDD;
                    }
                    // Map 2.4.0 style naming ("myclassloader") to 2.3.0 style ("classloader")
                    public void setMyClassLoader(boolean value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        setClassLoader(value);
                    }
                    public boolean isMyClassLoader() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        return isClassLoader();
                    }
                    public void setMyClassLoaderExtraClassPath(java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                       setClassLoaderExtraClassPath(value);
                    }
                    public java.lang.String getMyClassLoaderExtraClassPath() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                       return getClassLoaderExtraClassPath();
                    }
                    public void setMyClassLoaderDelegate(java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                       setClassLoaderDelegate(value);
                    }
                    public java.lang.String getMyClassLoaderDelegate() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                       return getClassLoaderDelegate();
                    }
                    public void setMyClassLoader(org.netbeans.modules.j2ee.sun.dd.api.web.MyClassLoader value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.web.MyClassLoader getMyClassLoader() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.web.MyClassLoader newMyClassLoader() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setParameterEncoding(boolean value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public boolean isParameterEncoding() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setParameterEncodingFormHintField(java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public java.lang.String getParameterEncodingFormHintField() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setParameterEncodingDefaultCharset(java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public java.lang.String getParameterEncodingDefaultCharset() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    } 
                    public void setIdempotentUrlPattern(int index, boolean value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public boolean isIdempotentUrlPattern(int index) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int sizeIdempotentUrlPattern() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setIdempotentUrlPattern(boolean[] value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public boolean[] getIdempotentUrlPattern() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int addIdempotentUrlPattern(boolean value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int removeIdempotentUrlPattern(boolean value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void removeIdempotentUrlPattern(int index) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setIdempotentUrlPatternUrlPattern(int index, java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public java.lang.String getIdempotentUrlPatternUrlPattern(int index) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int sizeIdempotentUrlPatternUrlPattern() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setIdempotentUrlPatternNumOfRetries(int index, java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public java.lang.String getIdempotentUrlPatternNumOfRetries(int index) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int sizeIdempotentUrlPatternNumOfRetries() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public java.lang.String getErrorUrl() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setErrorUrl(java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public java.lang.String getHttpservletSecurityProvider() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                            throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setHttpservletSecurityProvider(java.lang.String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                            throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceDescription newWebserviceDescription() {
                        return null;
                    }
                    public void setWebserviceDescription(int index, org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceDescription value) {
                    }    
                    public org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceDescription getWebserviceDescription(int index) {
                        return null;
                    }
                    public int sizeWebserviceDescription() {
                        return -1;
                    }
                    public void setWebserviceDescription(org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceDescription[] value) {
                    }    
                    public org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceDescription[] getWebserviceDescription() {
                        return null;
                    }
                    public int addWebserviceDescription(org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceDescription value) {
                        return -1;
                    }
                    public int removeWebserviceDescription(org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceDescription value) {
                        return -1;
                    }
                    public void setMessageDestination(int index, org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestination value) {
                    }    
                    public org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestination getMessageDestination(int index) {
                        return null;
                    }
                    public int sizeMessageDestination() {
                        return -1;
                    }
                    public void setMessageDestination(org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestination[] value) {
                    }        
                    public org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestination[] getMessageDestination() {
                        return null;
                    }
                    public int addMessageDestination(org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestination value) {
                        return -1;
                    }
                    public int removeMessageDestination(org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestination value) {
                        return -1;
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestination newMessageDestination() {
                        return null;
                    }
                    public void setServiceRef(int index, org.netbeans.modules.j2ee.sun.dd.api.common.ServiceRef value) { 
                    }        
                    public org.netbeans.modules.j2ee.sun.dd.api.common.ServiceRef getServiceRef(int index) { 
                        return null;
                    }
                    public int sizeServiceRef() {
                        return -1;
                    }
                    public void setServiceRef(org.netbeans.modules.j2ee.sun.dd.api.common.ServiceRef[] value) {
                    }        
                    public org.netbeans.modules.j2ee.sun.dd.api.common.ServiceRef[] getServiceRef() {
                        return null;
                    }
                    public int addServiceRef(org.netbeans.modules.j2ee.sun.dd.api.common.ServiceRef value) {
                        return -1;
                    }
                    public int removeServiceRef(org.netbeans.modules.j2ee.sun.dd.api.common.ServiceRef value) {
                        return -1;
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.common.ServiceRef newServiceRef() {
                        return null;
                    }
                    public void setContextRoot(String value) {
                    }    
                    public String getContextRoot() {
                        return null;
                    }
                    public void setMessageDestinationRef(int index, org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestinationRef value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    } 
                    public org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestinationRef getMessageDestinationRef(int index) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }  
                    public int sizeMessageDestinationRef() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    } 
                    public void setMessageDestinationRef(org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestinationRef[] value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    } 
                    public org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestinationRef[] getMessageDestinationRef() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    } 
                    public int addMessageDestinationRef(org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestinationRef value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    } 
                    public int removeMessageDestinationRef(org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestinationRef value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    } 
                    public org.netbeans.modules.j2ee.sun.dd.api.common.MessageDestinationRef newMessageDestinationRef() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException { 
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setValve(int index, org.netbeans.modules.j2ee.sun.dd.api.web.Valve value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.web.Valve getValve(int index) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int sizeValve() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setValve(org.netbeans.modules.j2ee.sun.dd.api.web.Valve[] value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.web.Valve[] getValve() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int addValve(org.netbeans.modules.j2ee.sun.dd.api.web.Valve value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int removeValve(org.netbeans.modules.j2ee.sun.dd.api.web.Valve value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public org.netbeans.modules.j2ee.sun.dd.api.web.Valve newValve() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                </user-code>
	</meta-element>
	<meta-element>
		<skip-generation/>
		<dtd-name>security-role-mapping</dtd-name>
		<bean-name>SecurityRoleMapping</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.common.SecurityRoleMapping</implements>
	</meta-element>
	<meta-element>
        <import>org.netbeans.modules.j2ee.sun.dd.api.web.SunWebApp</import>
        <import>org.netbeans.modules.j2ee.sun.dd.impl.common.model_2_1_1.WebserviceEndpoint</import>
		<dtd-name>servlet</dtd-name>
		<bean-name>Servlet</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.Servlet</implements>
                <user-code>
    // new in 2_4_0
    public void setWebserviceEndpoint(int index, org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceEndpoint value) {
    }
    public org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceEndpoint getWebserviceEndpoint(int index) {
       return null;
    }
    public int sizeWebserviceEndpoint() {
       return -1;
    }
    public void setWebserviceEndpoint(org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceEndpoint[] value) {
    }    
    public org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceEndpoint[] getWebserviceEndpoint() {
       return null;
    }
    public int addWebserviceEndpoint(org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceEndpoint value) {
       return -1;
    }
    public int removeWebserviceEndpoint(org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceEndpoint value) {
       return -1;
    }   
    public org.netbeans.modules.j2ee.sun.dd.api.common.WebserviceEndpoint newWebserviceEndpoint() {
       return null;
    }

    // new in 2_5_0
	public void setPrincipalNameClassName(String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
    }
	public String getPrincipalNameClassName() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
        throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
    }
        </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>session-config</dtd-name>
		<bean-name>SessionConfig</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.SessionConfig</implements>
	</meta-element>
	<meta-element>
		<skip-generation/>
		<dtd-name>resource-env-ref</dtd-name>
		<bean-name>ResourceEnvRef</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.common.ResourceEnvRef</implements>
	</meta-element>
	<meta-element>
		<skip-generation/>
		<dtd-name>resource-ref</dtd-name>
		<bean-name>ResourceRef</bean-name>
	      <implements>org.netbeans.modules.j2ee.sun.dd.api.common.ResourceRef</implements>
	</meta-element>
	<meta-element>
		<skip-generation/>
		<dtd-name>ejb-ref</dtd-name>
		<bean-name>EjbRef</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.common.EjbRef</implements>
	</meta-element>
	<meta-element>
		<dtd-name>cache</dtd-name>
		<bean-name>Cache</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.Cache</implements>
	</meta-element>
	<meta-element>
		<dtd-name>class-loader</dtd-name>
		<bean-name>ClassLoader</bean-name>
		<wrapper-class>Boolean</wrapper-class>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.MyClassLoader</implements>
	</meta-element>
	<meta-element>
		<dtd-name>jsp-config</dtd-name>
		<bean-name>JspConfig</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.JspConfig</implements>
	</meta-element>
	<meta-element>
		<dtd-name>locale-charset-info</dtd-name>
		<bean-name>LocaleCharsetInfo</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.LocaleCharsetInfo</implements>
                <user-code>
                    public java.lang.String getParameterEncodingDefaultCharset() {
                        return null;
                    }
                    public void setParameterEncodingDefaultCharset(java.lang.String value) {

                    }
                </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>property</dtd-name>
		<bean-name>WebProperty</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.WebProperty</implements>
	</meta-element>
	<meta-element>
		<dtd-name>description</dtd-name>
		<bean-name>Description</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>#PCDATA</dtd-name>
		<bean-name>Pcdata</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>locale-charset-map</dtd-name>
		<bean-name>LocaleCharsetMap</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.LocaleCharsetMap</implements>
	</meta-element>
	<meta-element>
		<dtd-name>parameter-encoding</dtd-name>
		<bean-name>ParameterEncoding</bean-name>
		<wrapper-class>Boolean</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>EMPTY</dtd-name>
		<bean-name>Empty</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>cache-helper</dtd-name>
		<bean-name>CacheHelper</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.CacheHelper</implements>
	</meta-element>
	<meta-element>
		<dtd-name>default-helper</dtd-name>
		<bean-name>DefaultHelper</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.DefaultHelper</implements>
	</meta-element>
	<meta-element>
		<dtd-name>cache-mapping</dtd-name>
		<bean-name>CacheMapping</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.CacheMapping</implements>
                <user-code>                    
                    // needed for 2_1-1
                    public void setDispatcher(int index, String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public String getDispatcher(int index) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int sizeDispatcher() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public void setDispatcher(String[] value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public String[] getDispatcher() throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int addDispatcher(String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                    public int removeDispatcher(String value) throws org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException {
                         throw new org.netbeans.modules.j2ee.sun.dd.api.VersionNotSupportedException(SunWebApp.VERSION_2_3_0);
                    }
                </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>cache-helper-ref</dtd-name>
		<bean-name>CacheHelperRef</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>timeout</dtd-name>
		<bean-name>Timeout</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>refresh-field</dtd-name>
		<bean-name>RefreshField</bean-name>
		<wrapper-class>Boolean</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>http-method</dtd-name>
		<bean-name>HttpMethod</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>key-field</dtd-name>
		<bean-name>KeyField</bean-name>
		<wrapper-class>Boolean</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>constraint-field</dtd-name>
		<bean-name>ConstraintField</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.ConstraintField</implements>
                <user-code>
                    public void setConstraintFieldValueMatchExpr(int index, java.lang.String value) {
                        setValueMatchExpr(index, value);
                    }
                    public java.lang.String getConstraintFieldValueMatchExpr(int index) {
                        return getValueMatchExpr(index);
                    }
                    public int sizeConstraintFieldValueMatchExpr() {
                        return sizeValueMatchExpr();
                    }
                    public void setConstraintFieldValueCacheOnMatch(int index, java.lang.String value) {
                        setValueCacheOnMatch(index, value);
                    }
                    public java.lang.String getConstraintFieldValueCacheOnMatch(int index) {
                        return getValueCacheOnMatch(index);
                    }
                    public int sizeConstraintFieldValueCacheOnMatch() {
                        return sizeValueCacheOnMatch();
                    }
                    public void setConstraintFieldValueCacheOnMatchFailure(int index, java.lang.String value) {
                        setValueCacheOnMatchFailure(index, value);
                    }
                    public java.lang.String getConstraintFieldValueCacheOnMatchFailure(int index) {
                        return getValueCacheOnMatchFailure(index);
                    }
                    public int sizeConstraintFieldValueCacheOnMatchFailure() {
                        return sizeValueCacheOnMatchFailure();
                    }
                    public void setConstraintFieldValue(int index, String value){
                        setValue(index, value);
                    }
                    public String getConstraintFieldValue(int index){
                        return getValue(index);
                    }
                    public int sizeConstraintFieldValue(){
                        return sizeValue();
                    }
                    public void setConstraintFieldValue(String[] value){
                        setValue(value);
                    }
                    public String[] getConstraintFieldValue(){
                        return getValue();
                    }
                    public int addConstraintFieldValue(String value){
                        return addValue(value);
                    }
                    public int removeConstraintFieldValue(String value){
                        return removeValue(value);
                    }
                </user-code>
	</meta-element>
	<meta-element>
		<dtd-name>value</dtd-name>
		<bean-name>Value</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>servlet-name</dtd-name>
		<bean-name>ServletName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>url-pattern</dtd-name>
		<bean-name>UrlPattern</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>ejb-ref-name</dtd-name>
		<bean-name>EjbRefName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>jndi-name</dtd-name>
		<bean-name>JndiName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>res-ref-name</dtd-name>
		<bean-name>ResRefName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<skip-generation/>
		<dtd-name>default-resource-principal</dtd-name>
		<bean-name>DefaultResourcePrincipal</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.common.DefaultResourcePrincipal</implements>
	</meta-element>
	<meta-element>
		<dtd-name>name</dtd-name>
		<bean-name>Name</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>password</dtd-name>
		<bean-name>Password</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>resource-env-ref-name</dtd-name>
		<bean-name>ResourceEnvRefName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>session-manager</dtd-name>
		<bean-name>SessionManager</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.SessionManager</implements>
	</meta-element>
	<meta-element>
		<dtd-name>session-properties</dtd-name>
		<bean-name>SessionProperties</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.SessionProperties</implements>
	</meta-element>
	<meta-element>
		<dtd-name>cookie-properties</dtd-name>
		<bean-name>CookieProperties</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.CookieProperties</implements>
	</meta-element>
	<meta-element>
		<dtd-name>manager-properties</dtd-name>
		<bean-name>ManagerProperties</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.ManagerProperties</implements>
	</meta-element>
	<meta-element>
		<dtd-name>store-properties</dtd-name>
		<bean-name>StoreProperties</bean-name>
		<implements>org.netbeans.modules.j2ee.sun.dd.api.web.StoreProperties</implements>
	</meta-element>
	<meta-element>
		<dtd-name>principal-name</dtd-name>
		<bean-name>PrincipalName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>role-name</dtd-name>
		<bean-name>RoleName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
	<meta-element>
		<dtd-name>group-name</dtd-name>
		<bean-name>GroupName</bean-name>
		<wrapper-class>String</wrapper-class>
	</meta-element>
</metaDD>
