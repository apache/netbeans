# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

DN_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Invoking Condition.notify()
DESC_org.netbeans.modules.java.hints.threading.Tiny.notifyOnCondition=Invoking notify or notifyAll \
on java.util.concurrent.locks.Condition should probably be replaced with invoking signal or signalAll.
#{0}: method name:
ERR_NotifyOnCondition=Invoking {0} on java.util.concurrent.locks.Condition
FIX_NotifyOnConditionFix=Replace with invocation of {0}

DN_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Invoking Condition.wait()
DESC_org.netbeans.modules.java.hints.threading.Tiny.waitOnCondition=Invoking wait \
on java.util.concurrent.locks.Condition is probably unintended.
ERR_WaitOnCondition=Invoking wait on java.util.concurrent.locks.Condition.

DN_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Invoking Thread.run()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadRun=Invoking run on java.lang.Thread \
should be probably replaced with invocation of method start()
ERR_ThreadRun=Invoking run() on java.lang.Thread
FIX_ThreadRun=Replace with Thread.start()

DN_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Starting Thread in constructor
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadStartInConstructor=Starting a new Thread in \
constructor is dangerous and should be prevented.
ERR_ThreadStartInConstructor=Starting new Thread in constructor

DN_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Invoking Thread.yield()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadYield=Invocation of method yield() \
on java.lang.Thread is usually used to masquerade synchronization problems and should be avoided.
ERR_ThreadYield=Invoking yield() on java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Invoking Thread.stop()/suspend()/resume()
DESC_org.netbeans.modules.java.hints.threading.Tiny.threadSuspend=Methods stop(), suspend() \
and resume() of java.lang.Thread are dangerous and should not be used.
#{0}: method name (stop, suspend, resume):
ERR_ThreadSuspend=Invoking {0} on java.lang.Thread

DN_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Nested synchronized blocks
DESC_org.netbeans.modules.java.hints.threading.Tiny.nestedSynchronized=Nesting synchronized blocks \
is either useless (if they use the same lock object) or dangerous.
ERR_NestedSynchronized=Nested synchronized blocks

DN_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Empty synchronized block
DESC_org.netbeans.modules.java.hints.threading.Tiny.emptySynchronized=Empty synchronized block are \
usually useless
ERR_EmptySynchronized=Empty synchronized block

DN_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Synchronizing on Lock
DESC_org.netbeans.modules.java.hints.threading.Tiny.synchronizedOnLock=Synchronizing on java.util.concurrent.locks.Lock \
is usually unintended and should be replaced with Lock.lock()-Lock.unlock()
ERR_SynchronizedOnLock=Synchronizing on java.util.concurrent.locks.Lock
FIX_SynchronizedOnLock=Replace with Lock.lock()-Lock.unlock()

DN_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Volatile array field
DESC_org.netbeans.modules.java.hints.threading.Tiny.volatileArray=Finds declarations of volatile array fields.
ERR_VolatileArrayField=Volatile array field

DN_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Lock not unlocked in finally
DESC_org.netbeans.modules.java.hints.threading.Tiny.unlockOutsideTryFinally=Finds occurrences of Lock.lock()-Lock.unlock() \
not properly wrapped in try-finally.

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=.wait invoked outside a synchronized context
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncWait=.wait invoked outside a synchronized context
ERR_UnsyncedWait=Invoking Object.wait outside a synchronized context

DN_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=.notify invoked outside a synchronized context
DESC_org.netbeans.modules.java.hints.threading.Tiny.unsyncNotify=.notify invoked outside a synchronized context
ERR_UnsyncedNotify=Invoking Object.notify outside a synchronized context

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Thread.sleep in synchronized context
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInSync=Invoking Thread.sleep in synchronized context \
can cause performance problems
ERR_SleepInSync=Thread.sleep called in synchronized context

DN_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Thread.sleep in loop
DESC_org.netbeans.modules.java.hints.threading.Tiny.sleepInLoop=Invoking Thread.sleep in loop \
can cause performance problems
ERR_SleepInLoop=Thread.sleep called in loop


