// $ANTLR 3.5.3 /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2024-12-16 18:39:33

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// DO NOT EDIT THIS FILE MANUALLY!
// SEE Css3.g FOR INSTRUCTIONS

package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINER_SYM", "CONTAINS", "COUNTER_STYLE_SYM", 
		"CP_DOTS", "CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", 
		"DOT", "E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "HEXCHAR_WILDCARD", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", 
		"INCLUDES", "INVALID", "J", "K", "KEYFRAMES_SYM", "L", "LAYER_SYM", "LBRACE", 
		"LBRACKET", "LEFTBOTTOM_SYM", "LEFTMIDDLE_SYM", "LEFTTOP_SYM", "LENGTH", 
		"LESS", "LESS_AND", "LESS_JS_STRING", "LESS_OR_EQ", "LESS_REST", "LINE_COMMENT", 
		"LPAREN", "M", "MEDIA_SYM", "MINUS", "MOZ_DOCUMENT_SYM", "MOZ_DOMAIN", 
		"MOZ_REGEXP", "MOZ_URL_PREFIX", "N", "NAME", "NAMESPACE_SYM", "NL", "NMCHAR", 
		"NMSTART", "NONASCII", "NOT", "NUMBER", "O", "OPEQ", "P", "PAGE_SYM", 
		"PERCENTAGE", "PERCENTAGE_SYMBOL", "PIPE", "PLUS", "Q", "R", "RBRACE", 
		"RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", "RIGHTMIDDLE_SYM", 
		"RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", "SASS_DEBUG", 
		"SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_ELSEIF", "SASS_ERROR", 
		"SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", "SASS_FOR", "SASS_FORWARD", 
		"SASS_FUNCTION", "SASS_GLOBAL", "SASS_IF", "SASS_INCLUDE", "SASS_MIXIN", 
		"SASS_OPTIONAL", "SASS_RETURN", "SASS_USE", "SASS_VAR", "SASS_WARN", "SASS_WHILE", 
		"SEMI", "SOLIDUS", "STAR", "STRING", "SUPPORTS_SYM", "T", "TILDE", "TIME", 
		"TOPCENTER_SYM", "TOPLEFTCORNER_SYM", "TOPLEFT_SYM", "TOPRIGHTCORNER_SYM", 
		"TOPRIGHT_SYM", "U", "UNICODE", "URANGE", "URI", "URL", "V", "VARIABLE", 
		"W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINER_SYM=22;
	public static final int CONTAINS=23;
	public static final int COUNTER_STYLE_SYM=24;
	public static final int CP_DOTS=25;
	public static final int CP_EQ=26;
	public static final int CP_NOT_EQ=27;
	public static final int D=28;
	public static final int DASHMATCH=29;
	public static final int DCOLON=30;
	public static final int DIMENSION=31;
	public static final int DOT=32;
	public static final int E=33;
	public static final int EMS=34;
	public static final int ENDS=35;
	public static final int ESCAPE=36;
	public static final int EXCLAMATION_MARK=37;
	public static final int EXS=38;
	public static final int F=39;
	public static final int FONT_FACE_SYM=40;
	public static final int FREQ=41;
	public static final int G=42;
	public static final int GEN=43;
	public static final int GREATER=44;
	public static final int GREATER_OR_EQ=45;
	public static final int H=46;
	public static final int HASH=47;
	public static final int HASH_SYMBOL=48;
	public static final int HEXCHAR=49;
	public static final int HEXCHAR_WILDCARD=50;
	public static final int I=51;
	public static final int IDENT=52;
	public static final int IMPORTANT_SYM=53;
	public static final int IMPORT_SYM=54;
	public static final int INCLUDES=55;
	public static final int INVALID=56;
	public static final int J=57;
	public static final int K=58;
	public static final int KEYFRAMES_SYM=59;
	public static final int L=60;
	public static final int LAYER_SYM=61;
	public static final int LBRACE=62;
	public static final int LBRACKET=63;
	public static final int LEFTBOTTOM_SYM=64;
	public static final int LEFTMIDDLE_SYM=65;
	public static final int LEFTTOP_SYM=66;
	public static final int LENGTH=67;
	public static final int LESS=68;
	public static final int LESS_AND=69;
	public static final int LESS_JS_STRING=70;
	public static final int LESS_OR_EQ=71;
	public static final int LESS_REST=72;
	public static final int LINE_COMMENT=73;
	public static final int LPAREN=74;
	public static final int M=75;
	public static final int MEDIA_SYM=76;
	public static final int MINUS=77;
	public static final int MOZ_DOCUMENT_SYM=78;
	public static final int MOZ_DOMAIN=79;
	public static final int MOZ_REGEXP=80;
	public static final int MOZ_URL_PREFIX=81;
	public static final int N=82;
	public static final int NAME=83;
	public static final int NAMESPACE_SYM=84;
	public static final int NL=85;
	public static final int NMCHAR=86;
	public static final int NMSTART=87;
	public static final int NONASCII=88;
	public static final int NOT=89;
	public static final int NUMBER=90;
	public static final int O=91;
	public static final int OPEQ=92;
	public static final int P=93;
	public static final int PAGE_SYM=94;
	public static final int PERCENTAGE=95;
	public static final int PERCENTAGE_SYMBOL=96;
	public static final int PIPE=97;
	public static final int PLUS=98;
	public static final int Q=99;
	public static final int R=100;
	public static final int RBRACE=101;
	public static final int RBRACKET=102;
	public static final int REM=103;
	public static final int RESOLUTION=104;
	public static final int RIGHTBOTTOM_SYM=105;
	public static final int RIGHTMIDDLE_SYM=106;
	public static final int RIGHTTOP_SYM=107;
	public static final int RPAREN=108;
	public static final int S=109;
	public static final int SASS_AT_ROOT=110;
	public static final int SASS_CONTENT=111;
	public static final int SASS_DEBUG=112;
	public static final int SASS_DEFAULT=113;
	public static final int SASS_EACH=114;
	public static final int SASS_ELSE=115;
	public static final int SASS_ELSEIF=116;
	public static final int SASS_ERROR=117;
	public static final int SASS_EXTEND=118;
	public static final int SASS_EXTEND_ONLY_SELECTOR=119;
	public static final int SASS_FOR=120;
	public static final int SASS_FORWARD=121;
	public static final int SASS_FUNCTION=122;
	public static final int SASS_GLOBAL=123;
	public static final int SASS_IF=124;
	public static final int SASS_INCLUDE=125;
	public static final int SASS_MIXIN=126;
	public static final int SASS_OPTIONAL=127;
	public static final int SASS_RETURN=128;
	public static final int SASS_USE=129;
	public static final int SASS_VAR=130;
	public static final int SASS_WARN=131;
	public static final int SASS_WHILE=132;
	public static final int SEMI=133;
	public static final int SOLIDUS=134;
	public static final int STAR=135;
	public static final int STRING=136;
	public static final int SUPPORTS_SYM=137;
	public static final int T=138;
	public static final int TILDE=139;
	public static final int TIME=140;
	public static final int TOPCENTER_SYM=141;
	public static final int TOPLEFTCORNER_SYM=142;
	public static final int TOPLEFT_SYM=143;
	public static final int TOPRIGHTCORNER_SYM=144;
	public static final int TOPRIGHT_SYM=145;
	public static final int U=146;
	public static final int UNICODE=147;
	public static final int URANGE=148;
	public static final int URI=149;
	public static final int URL=150;
	public static final int V=151;
	public static final int VARIABLE=152;
	public static final int W=153;
	public static final int WEBKIT_KEYFRAMES_SYM=154;
	public static final int WS=155;
	public static final int X=156;
	public static final int Y=157;
	public static final int Z=158;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "prio", "synpred43_Css3", "synpred61_Css3", "vendorAtRule", 
		"synpred60_Css3", "key_and", "synpred42_Css3", "bracketBlock", "importLayer", 
		"layerStatement", "cp_term_symbol", "sass_use", "synpred56_Css3", "styleFeature", 
		"styleQueryDisjunction", "moz_document", "sass_forward_show", "supportsCondition", 
		"slAttributeValue", "declaration", "synpred41_Css3", "sass_each", "margin", 
		"layerAtRule", "synpred50_Css3", "synpred26_Css3", "sizeFeatureRangeBetweenGt", 
		"synpred58_Css3", "synpred17_Css3", "synpred40_Css3", "supportsDecl", 
		"synpred3_Css3", "property", "cp_variable_declaration", "parenBlock", 
		"synpred30_Css3", "slAttributeName", "synpred38_Css3", "synpred27_Css3", 
		"bodyItem", "body", "pseudoPage", "containerQueryConjunction", "synpred46_Css3", 
		"synpred62_Css3", "supportsAtRule", "fnAttribute", "containerAtRule", 
		"margin_sym", "cp_mixin_call", "styleCondition", "sizeFeatureFixedValue", 
		"webkitKeyframesBlock", "cp_variable", "supportsConjunction", "cp_expression_operator", 
		"functionName", "supportsDisjunction", "atRuleId", "cp_mixin_name", "synpred48_Css3", 
		"importItem", "synpred2_Css3", "synpred11_Css3", "synpred65_Css3", "sizeFeatureName", 
		"sass_map", "styleSheet", "sass_if", "sass_function_name", "generic_at_rule", 
		"fnAttributes", "synpred67_Css3", "cp_expression_list", "styleQueryConjunction", 
		"sizeFeatureValue", "mediaFeature", "cp_mixin_call_args", "layerBlock", 
		"layerBody", "less_fn_name", "synpred71_Css3", "media", "synpred35_Css3", 
		"synpred22_Css3", "elementSubsequent", "mediaQuery", "synpred5_Css3", 
		"containerQueryWithOperator", "synpred21_Css3", "sass_control_expression", 
		"cp_mixin_block", "cp_arg", "synpred51_Css3", "cp_mixin_call_arg", "preservedTokenTopLevel", 
		"sizeFeatureRangeSingle", "synpred19_Css3", "synpred32_Css3", "counterStyle", 
		"synpred14_Css3", "sass_debug", "propertyValue", "mediaType", "synpred1_Css3", 
		"sass_while", "sass_use_with", "syncToFollow", "synpred63_Css3", "namespaces", 
		"mediaFeatureValue", "synpred33_Css3", "cp_math_expressions", "resourceIdentifier", 
		"sass_forward_with", "cssId", "function", "containerName", "synpred23_Css3", 
		"expression", "synpred6_Css3", "synpred70_Css3", "synpred28_Css3", "synpred37_Css3", 
		"synpred68_Css3", "synpred12_Css3", "webkitKeyframeSelectors", "cp_expression", 
		"synpred31_Css3", "charSet", "sass_forward_with_declaration", "less_import_types", 
		"sass_use_as", "cssClass", "preservedToken", "synpred45_Css3", "key_only", 
		"selectorsGroup", "sass_content", "fontFace", "term", "sass_for", "synpred10_Css3", 
		"synpred53_Css3", "mediaBody", "sass_control", "styleConditionWithOperator", 
		"mediaQueryOperator", "selector", "supportsFeature", "syncTo_SEMI", "containerQueryDisjunction", 
		"sass_function_return", "cp_args_list", "synpred7_Css3", "componentValueOuter", 
		"cp_mixin_declaration", "braceBlock", "synpred59_Css3", "mediaExpression", 
		"less_selector_interpolation_exp", "moz_document_function", "sass_extend", 
		"sizeFeatureRangeBetweenLt", "synpred29_Css3", "synpred55_Css3", "synpred4_Css3", 
		"slAttribute", "simpleSelectorSequence", "synpred16_Css3", "synpred44_Css3", 
		"synpred25_Css3", "synpred8_Css3", "sass_forward_as", "synpred15_Css3", 
		"sass_use_with_declaration", "sass_forward_hide", "synpred9_Css3", "styleInParens", 
		"sass_function_declaration", "ws", "synpred64_Css3", "synpred52_Css3", 
		"less_mixin_guarded", "synpred20_Css3", "operator", "supportsWithOperator", 
		"key_or", "esPred", "pseudo", "syncTo_RBRACE", "sass_map_pair", "syncToDeclarationsRule", 
		"page", "less_condition_operator", "less_condition", "sass_control_block", 
		"namespacePrefixName", "mediaQueryList", "sass_interpolation_expression_var", 
		"at_rule", "componentValue", "styleQuery", "sizeFeature", "sass_map_name", 
		"typeSelector", "layerName", "namespacePrefix", "combinator", "less_selector_interpolation", 
		"imports", "sass_error", "sass_forward", "braceBlock2", "cp_math_expression_atom", 
		"cp_expression_atom", "containerCondition", "synpred47_Css3", "namespace", 
		"synpred34_Css3", "synpred24_Css3", "sass_map_pairs", "synpred66_Css3", 
		"expressionPredicate", "elementName", "less_function_in_condition", "rule", 
		"supportsInParens", "synpred13_Css3", "synpred36_Css3", "sass_extend_only_selector", 
		"fnAttributeName", "sass_else", "synpred18_Css3", "propertyDeclaration", 
		"less_when", "synpred54_Css3", "mediaBodyItem", "webkitKeyframes", "sass_selector_interpolation_exp", 
		"synpred49_Css3", "cp_math_expression", "hexColor", "sass_nested_properties", 
		"synpred57_Css3", "fnAttributeValue", "synpred69_Css3", "declarations", 
		"cp_propertyValue", "unaryOperator", "containerQueryInParens", "charSetValue", 
		"sass_each_variables", "synpred39_Css3"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, true, false, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, true, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, true, false, false, false, true, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    true, true, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, true, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, true, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, true, false, false, true, true, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, true, true, 
		    false, false, false, false, true, false, false, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, false, true, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, true, false, false, false, false, false, true, 
		    false, false, true, false, false, false, false, false, false, true, 
		    false, false, false, true, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    true, false, false, false, false, false, false, false, false, false, 
		    false, true, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }
	    
	    private boolean tokenNameEquals2(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(2).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	    private boolean tokenNameStartsWith(String prefix) {
	        return input.LT(1).getText() != null
	            && input.LT(1).getText().startsWith(prefix);
	    }

	    /**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	        /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:284:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(284, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:285:5: ( ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:6: ( ws )? ( charSet ( ws )? )? ( layerStatement ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(286,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:6: ws
					{
					dbg.location(286,6);
					pushFollow(FOLLOW_ws_in_styleSheet102);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(287,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:8: charSet ( ws )?
					{
					dbg.location(287,8);
					pushFollow(FOLLOW_charSet_in_styleSheet112);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(287,16);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:16: ws
							{
							dbg.location(287,16);
							pushFollow(FOLLOW_ws_in_styleSheet114);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(288,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:9: ( layerStatement ( ws )? )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:11: layerStatement ( ws )?
					{
					dbg.location(288,11);
					pushFollow(FOLLOW_layerStatement_in_styleSheet130);
					layerStatement();
					state._fsp--;
					if (state.failed) return;dbg.location(288,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:26: ( ws )?
					int alt4=2;
					try { dbg.enterSubRule(4);
					try { dbg.enterDecision(4, decisionCanBacktrack[4]);

					int LA4_0 = input.LA(1);
					if ( (LA4_0==COMMENT||LA4_0==NL||LA4_0==WS) ) {
						alt4=1;
					}
					} finally {dbg.exitDecision(4);}

					switch (alt4) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:288:26: ws
							{
							dbg.location(288,26);
							pushFollow(FOLLOW_ws_in_styleSheet132);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(4);}

					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(289,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:289:9: ( imports )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			switch ( input.LA(1) ) {
				case IMPORT_SYM:
					{
					int LA6_1 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt6=1;
					}
					}
					break;
				case SASS_USE:
					{
					int LA6_2 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt6=1;
					}
					}
					break;
				case SASS_FORWARD:
					{
					int LA6_3 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt6=1;
					}
					}
					break;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:289:9: imports
					{
					dbg.location(289,9);
					pushFollow(FOLLOW_imports_in_styleSheet146);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(290,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:290:9: ( namespaces )?
			int alt7=2;
			try { dbg.enterSubRule(7);
			try { dbg.enterDecision(7, decisionCanBacktrack[7]);

			try {
				isCyclicDecision = true;
				alt7 = dfa7.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(7);}

			switch (alt7) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:290:9: namespaces
					{
					dbg.location(290,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet157);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(7);}
			dbg.location(291,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:291:9: ( body )?
			int alt8=2;
			try { dbg.enterSubRule(8);
			try { dbg.enterDecision(8, decisionCanBacktrack[8]);

			int LA8_0 = input.LA(1);
			if ( ((LA8_0 >= AT_IDENT && LA8_0 <= AT_SIGN)||(LA8_0 >= BOTTOMCENTER_SYM && LA8_0 <= BOTTOMRIGHT_SYM)||(LA8_0 >= CHARSET_SYM && LA8_0 <= COLON)||LA8_0==CONTAINER_SYM||LA8_0==COUNTER_STYLE_SYM||(LA8_0 >= DCOLON && LA8_0 <= DOT)||LA8_0==FONT_FACE_SYM||(LA8_0 >= GEN && LA8_0 <= GREATER)||(LA8_0 >= HASH && LA8_0 <= HASH_SYMBOL)||LA8_0==IDENT||LA8_0==IMPORT_SYM||LA8_0==KEYFRAMES_SYM||LA8_0==LAYER_SYM||(LA8_0 >= LBRACKET && LA8_0 <= LEFTTOP_SYM)||LA8_0==LESS_AND||(LA8_0 >= MEDIA_SYM && LA8_0 <= MOZ_DOCUMENT_SYM)||LA8_0==NAMESPACE_SYM||LA8_0==PAGE_SYM||(LA8_0 >= PIPE && LA8_0 <= PLUS)||(LA8_0 >= RIGHTBOTTOM_SYM && LA8_0 <= RIGHTTOP_SYM)||(LA8_0 >= SASS_AT_ROOT && LA8_0 <= SASS_DEBUG)||(LA8_0 >= SASS_EACH && LA8_0 <= SASS_ELSE)||(LA8_0 >= SASS_EXTEND && LA8_0 <= SASS_FUNCTION)||(LA8_0 >= SASS_IF && LA8_0 <= SASS_MIXIN)||(LA8_0 >= SASS_RETURN && LA8_0 <= SEMI)||LA8_0==STAR||LA8_0==SUPPORTS_SYM||LA8_0==TILDE||(LA8_0 >= TOPCENTER_SYM && LA8_0 <= TOPRIGHT_SYM)||LA8_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt8=1;
			}
			} finally {dbg.exitDecision(8);}

			switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:291:9: body
					{
					dbg.location(291,9);
					pushFollow(FOLLOW_body_in_styleSheet168);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(8);}
			dbg.location(292,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet176); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(293, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:295:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(295, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:296:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:2: ( namespace ( ws )? )+
			{
			dbg.location(297,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:2: ( namespace ( ws )? )+
			int cnt10=0;
			try { dbg.enterSubRule(10);

			loop10:
			while (true) {
				int alt10=2;
				try { dbg.enterDecision(10, decisionCanBacktrack[10]);

				try {
					isCyclicDecision = true;
					alt10 = dfa10.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(10);}

				switch (alt10) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:4: namespace ( ws )?
					{
					dbg.location(297,4);
					pushFollow(FOLLOW_namespace_in_namespaces193);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(297,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:14: ( ws )?
					int alt9=2;
					try { dbg.enterSubRule(9);
					try { dbg.enterDecision(9, decisionCanBacktrack[9]);

					int LA9_0 = input.LA(1);
					if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
						alt9=1;
					}
					} finally {dbg.exitDecision(9);}

					switch (alt9) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:14: ws
							{
							dbg.location(297,14);
							pushFollow(FOLLOW_ws_in_namespaces195);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(9);}

					}
					break;

				default :
					if ( cnt10 >= 1 ) break loop10;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(10, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt10++;
			}
			} finally {dbg.exitSubRule(10);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(298, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:300:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(300, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(301,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace211); if (state.failed) return;dbg.location(301,19);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:19: ( ws )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==COMMENT||LA11_0==NL||LA11_0==WS) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:19: ws
					{
					dbg.location(301,19);
					pushFollow(FOLLOW_ws_in_namespace213);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(301,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:23: ( namespacePrefixName ( ws )? )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==IDENT) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:24: namespacePrefixName ( ws )?
					{
					dbg.location(301,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace217);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(301,44);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:44: ( ws )?
					int alt12=2;
					try { dbg.enterSubRule(12);
					try { dbg.enterDecision(12, decisionCanBacktrack[12]);

					int LA12_0 = input.LA(1);
					if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
						alt12=1;
					}
					} finally {dbg.exitDecision(12);}

					switch (alt12) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:44: ws
							{
							dbg.location(301,44);
							pushFollow(FOLLOW_ws_in_namespace219);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(12);}

					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(301,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace224);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(301,69);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:69: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:69: ws
					{
					dbg.location(301,69);
					pushFollow(FOLLOW_ws_in_namespace226);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(301,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace229); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(302, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:304:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(304, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:305:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:305:5: IDENT
			{
			dbg.location(305,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName242); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(306, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:308:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(308, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(309,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(310, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:312:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(312, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(313,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet276); if (state.failed) return;dbg.location(313,21);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:21: ( ws )?
			int alt15=2;
			try { dbg.enterSubRule(15);
			try { dbg.enterDecision(15, decisionCanBacktrack[15]);

			int LA15_0 = input.LA(1);
			if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
				alt15=1;
			}
			} finally {dbg.exitDecision(15);}

			switch (alt15) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:21: ws
					{
					dbg.location(313,21);
					pushFollow(FOLLOW_ws_in_charSet278);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(15);}
			dbg.location(313,25);
			pushFollow(FOLLOW_charSetValue_in_charSet281);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(313,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:38: ( ws )?
			int alt16=2;
			try { dbg.enterSubRule(16);
			try { dbg.enterDecision(16, decisionCanBacktrack[16]);

			int LA16_0 = input.LA(1);
			if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
				alt16=1;
			}
			} finally {dbg.exitDecision(16);}

			switch (alt16) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:38: ws
					{
					dbg.location(313,38);
					pushFollow(FOLLOW_ws_in_charSet283);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(16);}
			dbg.location(313,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet286); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(314, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:316:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(316, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:317:2: ( STRING )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:317:4: STRING
			{
			dbg.location(317,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue300); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(318, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:320:1: imports : ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(320, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:2: ( ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:322:2: ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+
			{
			dbg.location(322,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:322:2: ( ( importItem ( ws )? SEMI ( ws )? ) |{...}? ( sass_use ( ws )? SEMI ( ws )? ) |{...}? ( sass_forward ( ws )? SEMI ( ws )? ) )+
			int cnt23=0;
			try { dbg.enterSubRule(23);

			loop23:
			while (true) {
				int alt23=4;
				try { dbg.enterDecision(23, decisionCanBacktrack[23]);

				switch ( input.LA(1) ) {
				case IMPORT_SYM:
					{
					int LA23_30 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt23=1;
					}

					}
					break;
				case SASS_USE:
					{
					int LA23_39 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt23=2;
					}

					}
					break;
				case SASS_FORWARD:
					{
					int LA23_42 = input.LA(2);
					if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt23=3;
					}

					}
					break;
				}
				} finally {dbg.exitDecision(23);}

				switch (alt23) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:13: ( importItem ( ws )? SEMI ( ws )? )
					{
					dbg.location(323,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:13: ( importItem ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:15: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(323,15);
					pushFollow(FOLLOW_importItem_in_imports328);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(323,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:26: ( ws )?
					int alt17=2;
					try { dbg.enterSubRule(17);
					try { dbg.enterDecision(17, decisionCanBacktrack[17]);

					int LA17_0 = input.LA(1);
					if ( (LA17_0==COMMENT||LA17_0==NL||LA17_0==WS) ) {
						alt17=1;
					}
					} finally {dbg.exitDecision(17);}

					switch (alt17) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:26: ws
							{
							dbg.location(323,26);
							pushFollow(FOLLOW_ws_in_imports330);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(17);}
					dbg.location(323,30);
					match(input,SEMI,FOLLOW_SEMI_in_imports333); if (state.failed) return;dbg.location(323,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:35: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:35: ws
							{
							dbg.location(323,35);
							pushFollow(FOLLOW_ws_in_imports335);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:13: {...}? ( sass_use ( ws )? SEMI ( ws )? )
					{
					dbg.location(325,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "imports", "isScssSource()");
					}dbg.location(325,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:31: ( sass_use ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:33: sass_use ( ws )? SEMI ( ws )?
					{
					dbg.location(325,33);
					pushFollow(FOLLOW_sass_use_in_imports370);
					sass_use();
					state._fsp--;
					if (state.failed) return;dbg.location(325,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:42: ( ws )?
					int alt19=2;
					try { dbg.enterSubRule(19);
					try { dbg.enterDecision(19, decisionCanBacktrack[19]);

					int LA19_0 = input.LA(1);
					if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
						alt19=1;
					}
					} finally {dbg.exitDecision(19);}

					switch (alt19) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:42: ws
							{
							dbg.location(325,42);
							pushFollow(FOLLOW_ws_in_imports372);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(19);}
					dbg.location(325,46);
					match(input,SEMI,FOLLOW_SEMI_in_imports375); if (state.failed) return;dbg.location(325,51);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:51: ( ws )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						alt20=1;
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:325:51: ws
							{
							dbg.location(325,51);
							pushFollow(FOLLOW_ws_in_imports377);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:13: {...}? ( sass_forward ( ws )? SEMI ( ws )? )
					{
					dbg.location(327,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "imports", "isScssSource()");
					}dbg.location(327,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:31: ( sass_forward ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:33: sass_forward ( ws )? SEMI ( ws )?
					{
					dbg.location(327,33);
					pushFollow(FOLLOW_sass_forward_in_imports412);
					sass_forward();
					state._fsp--;
					if (state.failed) return;dbg.location(327,46);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:46: ( ws )?
					int alt21=2;
					try { dbg.enterSubRule(21);
					try { dbg.enterDecision(21, decisionCanBacktrack[21]);

					int LA21_0 = input.LA(1);
					if ( (LA21_0==COMMENT||LA21_0==NL||LA21_0==WS) ) {
						alt21=1;
					}
					} finally {dbg.exitDecision(21);}

					switch (alt21) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:46: ws
							{
							dbg.location(327,46);
							pushFollow(FOLLOW_ws_in_imports414);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(21);}
					dbg.location(327,50);
					match(input,SEMI,FOLLOW_SEMI_in_imports417); if (state.failed) return;dbg.location(327,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:55: ( ws )?
					int alt22=2;
					try { dbg.enterSubRule(22);
					try { dbg.enterDecision(22, decisionCanBacktrack[22]);

					int LA22_0 = input.LA(1);
					if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
						alt22=1;
					}
					} finally {dbg.exitDecision(22);}

					switch (alt22) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:55: ws
							{
							dbg.location(327,55);
							pushFollow(FOLLOW_ws_in_imports419);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(22);}

					}

					}
					break;

				default :
					if ( cnt23 >= 1 ) break loop23;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(23, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt23++;
			}
			} finally {dbg.exitSubRule(23);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(329, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:331:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(331, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt44=3;
			try { dbg.enterDecision(44, decisionCanBacktrack[44]);

			try {
				isCyclicDecision = true;
				alt44 = dfa44.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(44);}

			switch (alt44) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:9: IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(333,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem455); if (state.failed) return;dbg.location(333,20);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:20: ( ws )?
					int alt24=2;
					try { dbg.enterSubRule(24);
					try { dbg.enterDecision(24, decisionCanBacktrack[24]);

					int LA24_0 = input.LA(1);
					if ( (LA24_0==COMMENT||LA24_0==NL||LA24_0==WS) ) {
						alt24=1;
					}
					} finally {dbg.exitDecision(24);}

					switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:20: ws
							{
							dbg.location(333,20);
							pushFollow(FOLLOW_ws_in_importItem457);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(24);}
					dbg.location(333,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem460);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(333,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:43: ( ws )?
					int alt25=2;
					try { dbg.enterSubRule(25);
					try { dbg.enterDecision(25, decisionCanBacktrack[25]);

					int LA25_0 = input.LA(1);
					if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
						alt25=1;
					}
					} finally {dbg.exitDecision(25);}

					switch (alt25) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:43: ws
							{
							dbg.location(333,43);
							pushFollow(FOLLOW_ws_in_importItem462);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(25);}
					dbg.location(333,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:47: ( importLayer )?
					int alt26=2;
					try { dbg.enterSubRule(26);
					try { dbg.enterDecision(26, decisionCanBacktrack[26]);

					int LA26_0 = input.LA(1);
					if ( (LA26_0==IDENT) ) {
						int LA26_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt26=1;
						}
					}
					} finally {dbg.exitDecision(26);}

					switch (alt26) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:47: importLayer
							{
							dbg.location(333,47);
							pushFollow(FOLLOW_importLayer_in_importItem465);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(26);}
					dbg.location(333,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:60: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt28=2;
					try { dbg.enterSubRule(28);
					try { dbg.enterDecision(28, decisionCanBacktrack[28]);

					int LA28_0 = input.LA(1);
					if ( (LA28_0==COMMENT||LA28_0==NL||LA28_0==WS) ) {
						int LA28_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==IDENT) ) {
						int LA28_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==NOT) && (synpred1_Css3())) {
						alt28=1;
					}
					else if ( (LA28_0==GEN) ) {
						int LA28_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==HASH_SYMBOL) ) {
						int LA28_5 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==LPAREN) && (synpred1_Css3())) {
						alt28=1;
					}
					else if ( (LA28_0==SASS_MIXIN) ) {
						int LA28_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_VAR) ) {
						int LA28_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==AT_IDENT) ) {
						int LA28_14 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_INCLUDE) ) {
						int LA28_15 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_AT_ROOT) ) {
						int LA28_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_DEBUG||LA28_0==SASS_WARN) ) {
						int LA28_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_IF) ) {
						int LA28_28 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_FOR) ) {
						int LA28_29 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_EACH) ) {
						int LA28_30 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_WHILE) ) {
						int LA28_31 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_CONTENT) ) {
						int LA28_32 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==IMPORT_SYM) ) {
						int LA28_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==PAGE_SYM) ) {
						int LA28_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==FONT_FACE_SYM) ) {
						int LA28_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==MOZ_DOCUMENT_SYM) ) {
						int LA28_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA28_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==KEYFRAMES_SYM) ) {
						int LA28_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==MEDIA_SYM) ) {
						int LA28_39 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_EXTEND) ) {
						int LA28_40 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==COUNTER_STYLE_SYM) ) {
						int LA28_42 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( (LA28_0==SASS_FUNCTION) ) {
						int LA28_44 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					else if ( ((LA28_0 >= BOTTOMCENTER_SYM && LA28_0 <= BOTTOMRIGHT_SYM)||LA28_0==CHARSET_SYM||(LA28_0 >= LEFTBOTTOM_SYM && LA28_0 <= LEFTTOP_SYM)||LA28_0==NAMESPACE_SYM||(LA28_0 >= RIGHTBOTTOM_SYM && LA28_0 <= RIGHTTOP_SYM)||LA28_0==SASS_ELSE||LA28_0==SASS_FORWARD||(LA28_0 >= SASS_RETURN && LA28_0 <= SASS_USE)||(LA28_0 >= TOPCENTER_SYM && LA28_0 <= TOPRIGHT_SYM)) ) {
						int LA28_47 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt28=1;
						}
					}
					} finally {dbg.exitDecision(28);}

					switch (alt28) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:61: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(333,83);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:83: ( ws )?
							int alt27=2;
							try { dbg.enterSubRule(27);
							try { dbg.enterDecision(27, decisionCanBacktrack[27]);

							int LA27_0 = input.LA(1);
							if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
								alt27=1;
							}
							} finally {dbg.exitDecision(27);}

							switch (alt27) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:83: ws
									{
									dbg.location(333,83);
									pushFollow(FOLLOW_ws_in_importItem476);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(27);}
							dbg.location(333,87);
							pushFollow(FOLLOW_mediaQueryList_in_importItem479);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(28);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(336,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(336,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem512); if (state.failed) return;dbg.location(336,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:38: ( ws )?
					int alt29=2;
					try { dbg.enterSubRule(29);
					try { dbg.enterDecision(29, decisionCanBacktrack[29]);

					int LA29_0 = input.LA(1);
					if ( (LA29_0==COMMENT||LA29_0==NL||LA29_0==WS) ) {
						alt29=1;
					}
					} finally {dbg.exitDecision(29);}

					switch (alt29) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:38: ws
							{
							dbg.location(336,38);
							pushFollow(FOLLOW_ws_in_importItem514);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(29);}
					dbg.location(336,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem517);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(336,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(32);

					loop32:
					while (true) {
						int alt32=2;
						try { dbg.enterDecision(32, decisionCanBacktrack[32]);

						try {
							isCyclicDecision = true;
							alt32 = dfa32.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(32);}

						switch (alt32) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(336,62);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:62: ( ws )?
							int alt30=2;
							try { dbg.enterSubRule(30);
							try { dbg.enterDecision(30, decisionCanBacktrack[30]);

							int LA30_0 = input.LA(1);
							if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
								alt30=1;
							}
							} finally {dbg.exitDecision(30);}

							switch (alt30) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:62: ws
									{
									dbg.location(336,62);
									pushFollow(FOLLOW_ws_in_importItem520);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(30);}
							dbg.location(336,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem523); if (state.failed) return;dbg.location(336,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:72: ( ws )?
							int alt31=2;
							try { dbg.enterSubRule(31);
							try { dbg.enterDecision(31, decisionCanBacktrack[31]);

							int LA31_0 = input.LA(1);
							if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
								alt31=1;
							}
							} finally {dbg.exitDecision(31);}

							switch (alt31) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:72: ws
									{
									dbg.location(336,72);
									pushFollow(FOLLOW_ws_in_importItem525);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(31);}
							dbg.location(336,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem528);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop32;
						}
					}
					} finally {dbg.exitSubRule(32);}
					dbg.location(336,97);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:97: ( ws )?
					int alt33=2;
					try { dbg.enterSubRule(33);
					try { dbg.enterDecision(33, decisionCanBacktrack[33]);

					int LA33_0 = input.LA(1);
					if ( (LA33_0==COMMENT||LA33_0==NL||LA33_0==WS) ) {
						alt33=1;
					}
					} finally {dbg.exitDecision(33);}

					switch (alt33) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:97: ws
							{
							dbg.location(336,97);
							pushFollow(FOLLOW_ws_in_importItem532);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(33);}
					dbg.location(336,101);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:101: ( importLayer )?
					int alt34=2;
					try { dbg.enterSubRule(34);
					try { dbg.enterDecision(34, decisionCanBacktrack[34]);

					int LA34_0 = input.LA(1);
					if ( (LA34_0==IDENT) ) {
						int LA34_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt34=1;
						}
					}
					} finally {dbg.exitDecision(34);}

					switch (alt34) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:101: importLayer
							{
							dbg.location(336,101);
							pushFollow(FOLLOW_importLayer_in_importItem535);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(34);}
					dbg.location(336,114);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:114: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt36=2;
					try { dbg.enterSubRule(36);
					try { dbg.enterDecision(36, decisionCanBacktrack[36]);

					int LA36_0 = input.LA(1);
					if ( (LA36_0==COMMENT||LA36_0==NL||LA36_0==WS) ) {
						int LA36_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==IDENT) ) {
						int LA36_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==NOT) && (synpred2_Css3())) {
						alt36=1;
					}
					else if ( (LA36_0==GEN) ) {
						int LA36_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==HASH_SYMBOL) ) {
						int LA36_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==LPAREN) && (synpred2_Css3())) {
						alt36=1;
					}
					else if ( (LA36_0==SASS_MIXIN) ) {
						int LA36_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_VAR) ) {
						int LA36_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==AT_IDENT) ) {
						int LA36_14 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_INCLUDE) ) {
						int LA36_15 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_AT_ROOT) ) {
						int LA36_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_DEBUG||LA36_0==SASS_WARN) ) {
						int LA36_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_IF) ) {
						int LA36_28 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_FOR) ) {
						int LA36_29 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_EACH) ) {
						int LA36_30 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_WHILE) ) {
						int LA36_31 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_CONTENT) ) {
						int LA36_32 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==IMPORT_SYM) ) {
						int LA36_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==PAGE_SYM) ) {
						int LA36_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==FONT_FACE_SYM) ) {
						int LA36_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==MOZ_DOCUMENT_SYM) ) {
						int LA36_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA36_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==KEYFRAMES_SYM) ) {
						int LA36_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==MEDIA_SYM) ) {
						int LA36_39 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_EXTEND) ) {
						int LA36_40 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==COUNTER_STYLE_SYM) ) {
						int LA36_42 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( (LA36_0==SASS_FUNCTION) ) {
						int LA36_44 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					else if ( ((LA36_0 >= BOTTOMCENTER_SYM && LA36_0 <= BOTTOMRIGHT_SYM)||LA36_0==CHARSET_SYM||(LA36_0 >= LEFTBOTTOM_SYM && LA36_0 <= LEFTTOP_SYM)||LA36_0==NAMESPACE_SYM||(LA36_0 >= RIGHTBOTTOM_SYM && LA36_0 <= RIGHTTOP_SYM)||LA36_0==SASS_ELSE||LA36_0==SASS_FORWARD||(LA36_0 >= SASS_RETURN && LA36_0 <= SASS_USE)||(LA36_0 >= TOPCENTER_SYM && LA36_0 <= TOPRIGHT_SYM)) ) {
						int LA36_47 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt36=1;
						}
					}
					} finally {dbg.exitDecision(36);}

					switch (alt36) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:115: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(336,137);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:137: ( ws )?
							int alt35=2;
							try { dbg.enterSubRule(35);
							try { dbg.enterDecision(35, decisionCanBacktrack[35]);

							int LA35_0 = input.LA(1);
							if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
								alt35=1;
							}
							} finally {dbg.exitDecision(35);}

							switch (alt35) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:137: ws
									{
									dbg.location(336,137);
									pushFollow(FOLLOW_ws_in_importItem546);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(35);}
							dbg.location(336,141);
							pushFollow(FOLLOW_mediaQueryList_in_importItem549);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(36);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(338,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(338,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem573); if (state.failed) return;dbg.location(338,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:38: ( ws )?
					int alt37=2;
					try { dbg.enterSubRule(37);
					try { dbg.enterDecision(37, decisionCanBacktrack[37]);

					int LA37_0 = input.LA(1);
					if ( (LA37_0==COMMENT||LA37_0==NL||LA37_0==WS) ) {
						alt37=1;
					}
					} finally {dbg.exitDecision(37);}

					switch (alt37) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:38: ws
							{
							dbg.location(338,38);
							pushFollow(FOLLOW_ws_in_importItem575);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(37);}
					dbg.location(338,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt39=2;
					try { dbg.enterSubRule(39);
					try { dbg.enterDecision(39, decisionCanBacktrack[39]);

					int LA39_0 = input.LA(1);
					if ( (LA39_0==LPAREN) ) {
						alt39=1;
					}
					} finally {dbg.exitDecision(39);}

					switch (alt39) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(338,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem579); if (state.failed) return;dbg.location(338,50);
							pushFollow(FOLLOW_less_import_types_in_importItem581);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(338,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem583); if (state.failed) return;dbg.location(338,75);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:75: ( ws )?
							int alt38=2;
							try { dbg.enterSubRule(38);
							try { dbg.enterDecision(38, decisionCanBacktrack[38]);

							int LA38_0 = input.LA(1);
							if ( (LA38_0==COMMENT||LA38_0==NL||LA38_0==WS) ) {
								alt38=1;
							}
							} finally {dbg.exitDecision(38);}

							switch (alt38) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:75: ws
									{
									dbg.location(338,75);
									pushFollow(FOLLOW_ws_in_importItem585);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(38);}

							}
							break;

					}
					} finally {dbg.exitSubRule(39);}
					dbg.location(338,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem590);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(338,100);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:100: ( ws )?
					int alt40=2;
					try { dbg.enterSubRule(40);
					try { dbg.enterDecision(40, decisionCanBacktrack[40]);

					int LA40_0 = input.LA(1);
					if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
						alt40=1;
					}
					} finally {dbg.exitDecision(40);}

					switch (alt40) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:100: ws
							{
							dbg.location(338,100);
							pushFollow(FOLLOW_ws_in_importItem592);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(40);}
					dbg.location(338,104);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:104: ( importLayer )?
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==IDENT) ) {
						int LA41_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
							alt41=1;
						}
					}
					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:104: importLayer
							{
							dbg.location(338,104);
							pushFollow(FOLLOW_importLayer_in_importItem595);
							importLayer();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(41);}
					dbg.location(338,117);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:117: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt43=2;
					try { dbg.enterSubRule(43);
					try { dbg.enterDecision(43, decisionCanBacktrack[43]);

					int LA43_0 = input.LA(1);
					if ( (LA43_0==COMMENT||LA43_0==NL||LA43_0==WS) ) {
						int LA43_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==IDENT) ) {
						int LA43_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==NOT) && (synpred3_Css3())) {
						alt43=1;
					}
					else if ( (LA43_0==GEN) ) {
						int LA43_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==HASH_SYMBOL) ) {
						int LA43_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==LPAREN) && (synpred3_Css3())) {
						alt43=1;
					}
					else if ( (LA43_0==SASS_MIXIN) ) {
						int LA43_7 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_VAR) ) {
						int LA43_8 = input.LA(2);
						if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==AT_IDENT) ) {
						int LA43_14 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_INCLUDE) ) {
						int LA43_15 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_AT_ROOT) ) {
						int LA43_16 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_DEBUG||LA43_0==SASS_WARN) ) {
						int LA43_17 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_IF) ) {
						int LA43_28 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_FOR) ) {
						int LA43_29 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_EACH) ) {
						int LA43_30 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_WHILE) ) {
						int LA43_31 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_CONTENT) ) {
						int LA43_32 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==IMPORT_SYM) ) {
						int LA43_33 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==PAGE_SYM) ) {
						int LA43_34 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==FONT_FACE_SYM) ) {
						int LA43_35 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==MOZ_DOCUMENT_SYM) ) {
						int LA43_36 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA43_37 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==KEYFRAMES_SYM) ) {
						int LA43_38 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==MEDIA_SYM) ) {
						int LA43_39 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_EXTEND) ) {
						int LA43_40 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==COUNTER_STYLE_SYM) ) {
						int LA43_42 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( (LA43_0==SASS_FUNCTION) ) {
						int LA43_44 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					else if ( ((LA43_0 >= BOTTOMCENTER_SYM && LA43_0 <= BOTTOMRIGHT_SYM)||LA43_0==CHARSET_SYM||(LA43_0 >= LEFTBOTTOM_SYM && LA43_0 <= LEFTTOP_SYM)||LA43_0==NAMESPACE_SYM||(LA43_0 >= RIGHTBOTTOM_SYM && LA43_0 <= RIGHTTOP_SYM)||LA43_0==SASS_ELSE||LA43_0==SASS_FORWARD||(LA43_0 >= SASS_RETURN && LA43_0 <= SASS_USE)||(LA43_0 >= TOPCENTER_SYM && LA43_0 <= TOPRIGHT_SYM)) ) {
						int LA43_47 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt43=1;
						}
					}
					} finally {dbg.exitDecision(43);}

					switch (alt43) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:118: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(338,140);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:140: ( ws )?
							int alt42=2;
							try { dbg.enterSubRule(42);
							try { dbg.enterDecision(42, decisionCanBacktrack[42]);

							int LA42_0 = input.LA(1);
							if ( (LA42_0==COMMENT||LA42_0==NL||LA42_0==WS) ) {
								alt42=1;
							}
							} finally {dbg.exitDecision(42);}

							switch (alt42) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:140: ws
									{
									dbg.location(338,140);
									pushFollow(FOLLOW_ws_in_importItem606);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(42);}
							dbg.location(338,144);
							pushFollow(FOLLOW_mediaQueryList_in_importItem609);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(43);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(339, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "importLayer"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:341:1: importLayer :{...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )? ;
	public final void importLayer() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importLayer");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(341, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:5: ({...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:5: {...}? IDENT ( LPAREN ( ws )? layerName ( ws )? RPAREN )?
			{
			dbg.location(343,5);
			if ( !(evalPredicate(tokenNameEquals("layer"),"tokenNameEquals(\"layer\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "importLayer", "tokenNameEquals(\"layer\")");
			}dbg.location(343,33);
			match(input,IDENT,FOLLOW_IDENT_in_importLayer634); if (state.failed) return;dbg.location(343,39);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:39: ( LPAREN ( ws )? layerName ( ws )? RPAREN )?
			int alt47=2;
			try { dbg.enterSubRule(47);
			try { dbg.enterDecision(47, decisionCanBacktrack[47]);

			try {
				isCyclicDecision = true;
				alt47 = dfa47.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(47);}

			switch (alt47) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:40: LPAREN ( ws )? layerName ( ws )? RPAREN
					{
					dbg.location(343,40);
					match(input,LPAREN,FOLLOW_LPAREN_in_importLayer637); if (state.failed) return;dbg.location(343,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:47: ( ws )?
					int alt45=2;
					try { dbg.enterSubRule(45);
					try { dbg.enterDecision(45, decisionCanBacktrack[45]);

					int LA45_0 = input.LA(1);
					if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
						alt45=1;
					}
					} finally {dbg.exitDecision(45);}

					switch (alt45) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:47: ws
							{
							dbg.location(343,47);
							pushFollow(FOLLOW_ws_in_importLayer639);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(45);}
					dbg.location(343,51);
					pushFollow(FOLLOW_layerName_in_importLayer642);
					layerName();
					state._fsp--;
					if (state.failed) return;dbg.location(343,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:61: ( ws )?
					int alt46=2;
					try { dbg.enterSubRule(46);
					try { dbg.enterDecision(46, decisionCanBacktrack[46]);

					int LA46_0 = input.LA(1);
					if ( (LA46_0==COMMENT||LA46_0==NL||LA46_0==WS) ) {
						alt46=1;
					}
					} finally {dbg.exitDecision(46);}

					switch (alt46) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:61: ws
							{
							dbg.location(343,61);
							pushFollow(FOLLOW_ws_in_importLayer644);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(46);}
					dbg.location(343,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_importLayer647); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(47);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(344, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importLayer");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importLayer"



	// $ANTLR start "sass_use"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:346:1: sass_use : SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? ;
	public final void sass_use() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(346, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:5: ( SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:9: SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )?
			{
			dbg.location(348,9);
			match(input,SASS_USE,FOLLOW_SASS_USE_in_sass_use674); if (state.failed) return;dbg.location(348,18);
			pushFollow(FOLLOW_ws_in_sass_use676);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(348,21);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_use678);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(348,40);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:40: ( ws sass_use_as )?
			int alt48=2;
			try { dbg.enterSubRule(48);
			try { dbg.enterDecision(48, decisionCanBacktrack[48]);

			try {
				isCyclicDecision = true;
				alt48 = dfa48.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(48);}

			switch (alt48) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:41: ws sass_use_as
					{
					dbg.location(348,41);
					pushFollow(FOLLOW_ws_in_sass_use681);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(348,44);
					pushFollow(FOLLOW_sass_use_as_in_sass_use683);
					sass_use_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(48);}
			dbg.location(348,58);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:58: ( ws sass_use_with )?
			int alt49=2;
			try { dbg.enterSubRule(49);
			try { dbg.enterDecision(49, decisionCanBacktrack[49]);

			try {
				isCyclicDecision = true;
				alt49 = dfa49.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(49);}

			switch (alt49) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:59: ws sass_use_with
					{
					dbg.location(348,59);
					pushFollow(FOLLOW_ws_in_sass_use688);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(348,62);
					pushFollow(FOLLOW_sass_use_with_in_sass_use690);
					sass_use_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(49);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(349, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use"



	// $ANTLR start "sass_use_as"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:351:1: sass_use_as :{...}? IDENT ws IDENT ;
	public final void sass_use_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(351, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:352:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:353:5: {...}? IDENT ws IDENT
			{
			dbg.location(353,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_as", "tokenNameEquals(\"as\")");
			}dbg.location(353,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as715); if (state.failed) return;dbg.location(353,36);
			pushFollow(FOLLOW_ws_in_sass_use_as717);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(353,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as719); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(354, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_as"



	// $ANTLR start "sass_use_with"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:356:1: sass_use_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN ;
	public final void sass_use_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(356, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:357:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(358,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_with", "tokenNameEquals(\"with\")");
			}dbg.location(358,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_with742); if (state.failed) return;dbg.location(358,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ( ws )?
			int alt50=2;
			try { dbg.enterSubRule(50);
			try { dbg.enterDecision(50, decisionCanBacktrack[50]);

			int LA50_0 = input.LA(1);
			if ( (LA50_0==COMMENT||LA50_0==NL||LA50_0==WS) ) {
				alt50=1;
			}
			} finally {dbg.exitDecision(50);}

			switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:38: ws
					{
					dbg.location(358,38);
					pushFollow(FOLLOW_ws_in_sass_use_with744);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(50);}
			dbg.location(358,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_use_with747); if (state.failed) return;dbg.location(358,49);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:49: ( ws )?
			int alt51=2;
			try { dbg.enterSubRule(51);
			try { dbg.enterDecision(51, decisionCanBacktrack[51]);

			int LA51_0 = input.LA(1);
			if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
				alt51=1;
			}
			} finally {dbg.exitDecision(51);}

			switch (alt51) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:49: ws
					{
					dbg.location(358,49);
					pushFollow(FOLLOW_ws_in_sass_use_with749);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(51);}
			dbg.location(358,53);
			pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with752);
			sass_use_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(358,80);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*
			try { dbg.enterSubRule(54);

			loop54:
			while (true) {
				int alt54=2;
				try { dbg.enterDecision(54, decisionCanBacktrack[54]);

				try {
					isCyclicDecision = true;
					alt54 = dfa54.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(54);}

				switch (alt54) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:81: ( ws )? COMMA ( ws )? sass_use_with_declaration
					{
					dbg.location(358,81);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:81: ( ws )?
					int alt52=2;
					try { dbg.enterSubRule(52);
					try { dbg.enterDecision(52, decisionCanBacktrack[52]);

					int LA52_0 = input.LA(1);
					if ( (LA52_0==COMMENT||LA52_0==NL||LA52_0==WS) ) {
						alt52=1;
					}
					} finally {dbg.exitDecision(52);}

					switch (alt52) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:81: ws
							{
							dbg.location(358,81);
							pushFollow(FOLLOW_ws_in_sass_use_with756);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(52);}
					dbg.location(358,85);
					match(input,COMMA,FOLLOW_COMMA_in_sass_use_with759); if (state.failed) return;dbg.location(358,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:91: ( ws )?
					int alt53=2;
					try { dbg.enterSubRule(53);
					try { dbg.enterDecision(53, decisionCanBacktrack[53]);

					int LA53_0 = input.LA(1);
					if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
						alt53=1;
					}
					} finally {dbg.exitDecision(53);}

					switch (alt53) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:91: ws
							{
							dbg.location(358,91);
							pushFollow(FOLLOW_ws_in_sass_use_with761);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(53);}
					dbg.location(358,95);
					pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with764);
					sass_use_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop54;
				}
			}
			} finally {dbg.exitSubRule(54);}
			dbg.location(358,124);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:124: ( ws )?
			int alt55=2;
			try { dbg.enterSubRule(55);
			try { dbg.enterDecision(55, decisionCanBacktrack[55]);

			int LA55_0 = input.LA(1);
			if ( (LA55_0==COMMENT||LA55_0==NL||LA55_0==WS) ) {
				alt55=1;
			}
			} finally {dbg.exitDecision(55);}

			switch (alt55) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:124: ws
					{
					dbg.location(358,124);
					pushFollow(FOLLOW_ws_in_sass_use_with769);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(55);}
			dbg.location(358,128);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_use_with772); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(359, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with"



	// $ANTLR start "sass_use_with_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:361:1: sass_use_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_use_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(361, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:362:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(363,5);
			pushFollow(FOLLOW_cp_variable_in_sass_use_with_declaration793);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(363,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:17: ( ws )?
			int alt56=2;
			try { dbg.enterSubRule(56);
			try { dbg.enterDecision(56, decisionCanBacktrack[56]);

			int LA56_0 = input.LA(1);
			if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
				alt56=1;
			}
			} finally {dbg.exitDecision(56);}

			switch (alt56) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:17: ws
					{
					dbg.location(363,17);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration795);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(56);}
			dbg.location(363,21);
			match(input,COLON,FOLLOW_COLON_in_sass_use_with_declaration798); if (state.failed) return;dbg.location(363,27);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:27: ( ws )?
			int alt57=2;
			try { dbg.enterSubRule(57);
			try { dbg.enterDecision(57, decisionCanBacktrack[57]);

			int LA57_0 = input.LA(1);
			if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
				alt57=1;
			}
			} finally {dbg.exitDecision(57);}

			switch (alt57) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:27: ws
					{
					dbg.location(363,27);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration800);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(57);}
			dbg.location(363,31);
			pushFollow(FOLLOW_cp_expression_in_sass_use_with_declaration803);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(364, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with_declaration"



	// $ANTLR start "sass_forward"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:367:1: sass_forward : SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? ;
	public final void sass_forward() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(367, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:368:5: ( SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:9: SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )?
			{
			dbg.location(369,9);
			match(input,SASS_FORWARD,FOLLOW_SASS_FORWARD_in_sass_forward829); if (state.failed) return;dbg.location(369,22);
			pushFollow(FOLLOW_ws_in_sass_forward831);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(369,25);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_forward833);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(369,44);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:44: ( ws ( sass_forward_hide | sass_forward_show ) )?
			int alt59=2;
			try { dbg.enterSubRule(59);
			try { dbg.enterDecision(59, decisionCanBacktrack[59]);

			try {
				isCyclicDecision = true;
				alt59 = dfa59.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(59);}

			switch (alt59) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:46: ws ( sass_forward_hide | sass_forward_show )
					{
					dbg.location(369,46);
					pushFollow(FOLLOW_ws_in_sass_forward837);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:49: ( sass_forward_hide | sass_forward_show )
					int alt58=2;
					try { dbg.enterSubRule(58);
					try { dbg.enterDecision(58, decisionCanBacktrack[58]);

					try {
						isCyclicDecision = true;
						alt58 = dfa58.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(58);}

					switch (alt58) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:51: sass_forward_hide
							{
							dbg.location(369,51);
							pushFollow(FOLLOW_sass_forward_hide_in_sass_forward841);
							sass_forward_hide();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:72: sass_forward_show
							{
							dbg.location(369,72);
							pushFollow(FOLLOW_sass_forward_show_in_sass_forward846);
							sass_forward_show();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(58);}

					}
					break;

			}
			} finally {dbg.exitSubRule(59);}
			dbg.location(369,93);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:93: ({...}? ws sass_forward_as )?
			int alt60=2;
			try { dbg.enterSubRule(60);
			try { dbg.enterDecision(60, decisionCanBacktrack[60]);

			try {
				isCyclicDecision = true;
				alt60 = dfa60.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(60);}

			switch (alt60) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:94: {...}? ws sass_forward_as
					{
					dbg.location(369,94);
					if ( !(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"as\")");
					}dbg.location(369,120);
					pushFollow(FOLLOW_ws_in_sass_forward854);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,123);
					pushFollow(FOLLOW_sass_forward_as_in_sass_forward856);
					sass_forward_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(60);}
			dbg.location(369,141);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:141: ({...}? ws sass_forward_with )?
			int alt61=2;
			try { dbg.enterSubRule(61);
			try { dbg.enterDecision(61, decisionCanBacktrack[61]);

			try {
				isCyclicDecision = true;
				alt61 = dfa61.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(61);}

			switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:142: {...}? ws sass_forward_with
					{
					dbg.location(369,142);
					if ( !(evalPredicate(tokenNameEquals2("with"),"tokenNameEquals2(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"with\")");
					}dbg.location(369,170);
					pushFollow(FOLLOW_ws_in_sass_forward863);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(369,173);
					pushFollow(FOLLOW_sass_forward_with_in_sass_forward865);
					sass_forward_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(61);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(370, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward"



	// $ANTLR start "sass_forward_as"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:372:1: sass_forward_as :{...}? IDENT ws IDENT ;
	public final void sass_forward_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(372, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:373:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:374:5: {...}? IDENT ws IDENT
			{
			dbg.location(374,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_as", "tokenNameEquals(\"as\")");
			}dbg.location(374,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as890); if (state.failed) return;dbg.location(374,36);
			pushFollow(FOLLOW_ws_in_sass_forward_as892);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(374,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as894); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(375, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_as"



	// $ANTLR start "sass_forward_with"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:377:1: sass_forward_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN ;
	public final void sass_forward_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(377, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:378:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(379,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_with", "tokenNameEquals(\"with\")");
			}dbg.location(379,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_with917); if (state.failed) return;dbg.location(379,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:38: ( ws )?
			int alt62=2;
			try { dbg.enterSubRule(62);
			try { dbg.enterDecision(62, decisionCanBacktrack[62]);

			int LA62_0 = input.LA(1);
			if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
				alt62=1;
			}
			} finally {dbg.exitDecision(62);}

			switch (alt62) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:38: ws
					{
					dbg.location(379,38);
					pushFollow(FOLLOW_ws_in_sass_forward_with919);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(62);}
			dbg.location(379,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_forward_with922); if (state.failed) return;dbg.location(379,49);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:49: ( ws )?
			int alt63=2;
			try { dbg.enterSubRule(63);
			try { dbg.enterDecision(63, decisionCanBacktrack[63]);

			int LA63_0 = input.LA(1);
			if ( (LA63_0==COMMENT||LA63_0==NL||LA63_0==WS) ) {
				alt63=1;
			}
			} finally {dbg.exitDecision(63);}

			switch (alt63) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:49: ws
					{
					dbg.location(379,49);
					pushFollow(FOLLOW_ws_in_sass_forward_with924);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(63);}
			dbg.location(379,53);
			pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with927);
			sass_forward_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(379,84);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*
			try { dbg.enterSubRule(66);

			loop66:
			while (true) {
				int alt66=2;
				try { dbg.enterDecision(66, decisionCanBacktrack[66]);

				try {
					isCyclicDecision = true;
					alt66 = dfa66.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(66);}

				switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:85: ( ws )? COMMA ( ws )? sass_forward_with_declaration
					{
					dbg.location(379,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:85: ( ws )?
					int alt64=2;
					try { dbg.enterSubRule(64);
					try { dbg.enterDecision(64, decisionCanBacktrack[64]);

					int LA64_0 = input.LA(1);
					if ( (LA64_0==COMMENT||LA64_0==NL||LA64_0==WS) ) {
						alt64=1;
					}
					} finally {dbg.exitDecision(64);}

					switch (alt64) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:85: ws
							{
							dbg.location(379,85);
							pushFollow(FOLLOW_ws_in_sass_forward_with931);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(64);}
					dbg.location(379,89);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_with934); if (state.failed) return;dbg.location(379,95);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:95: ( ws )?
					int alt65=2;
					try { dbg.enterSubRule(65);
					try { dbg.enterDecision(65, decisionCanBacktrack[65]);

					int LA65_0 = input.LA(1);
					if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
						alt65=1;
					}
					} finally {dbg.exitDecision(65);}

					switch (alt65) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:95: ws
							{
							dbg.location(379,95);
							pushFollow(FOLLOW_ws_in_sass_forward_with936);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(65);}
					dbg.location(379,99);
					pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with939);
					sass_forward_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop66;
				}
			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(379,132);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:132: ( ws )?
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			int LA67_0 = input.LA(1);
			if ( (LA67_0==COMMENT||LA67_0==NL||LA67_0==WS) ) {
				alt67=1;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:132: ws
					{
					dbg.location(379,132);
					pushFollow(FOLLOW_ws_in_sass_forward_with944);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}
			dbg.location(379,136);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_forward_with947); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(380, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with"



	// $ANTLR start "sass_forward_with_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:382:1: sass_forward_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_forward_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(382, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:383:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(384,5);
			pushFollow(FOLLOW_cp_variable_in_sass_forward_with_declaration968);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(384,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:17: ( ws )?
			int alt68=2;
			try { dbg.enterSubRule(68);
			try { dbg.enterDecision(68, decisionCanBacktrack[68]);

			int LA68_0 = input.LA(1);
			if ( (LA68_0==COMMENT||LA68_0==NL||LA68_0==WS) ) {
				alt68=1;
			}
			} finally {dbg.exitDecision(68);}

			switch (alt68) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:17: ws
					{
					dbg.location(384,17);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration970);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(68);}
			dbg.location(384,21);
			match(input,COLON,FOLLOW_COLON_in_sass_forward_with_declaration973); if (state.failed) return;dbg.location(384,27);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:27: ( ws )?
			int alt69=2;
			try { dbg.enterSubRule(69);
			try { dbg.enterDecision(69, decisionCanBacktrack[69]);

			int LA69_0 = input.LA(1);
			if ( (LA69_0==COMMENT||LA69_0==NL||LA69_0==WS) ) {
				alt69=1;
			}
			} finally {dbg.exitDecision(69);}

			switch (alt69) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:27: ws
					{
					dbg.location(384,27);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration975);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(69);}
			dbg.location(384,31);
			pushFollow(FOLLOW_cp_expression_in_sass_forward_with_declaration978);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(385, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with_declaration"



	// $ANTLR start "sass_forward_hide"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:387:1: sass_forward_hide :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_hide() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_hide");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(387, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:388:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(389,5);
			if ( !(evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_hide", "tokenNameEquals(\"hide\")");
			}dbg.location(389,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1001); if (state.failed) return;dbg.location(389,38);
			pushFollow(FOLLOW_ws_in_sass_forward_hide1003);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(389,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1005); if (state.failed) return;dbg.location(389,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(72);

			loop72:
			while (true) {
				int alt72=2;
				try { dbg.enterDecision(72, decisionCanBacktrack[72]);

				try {
					isCyclicDecision = true;
					alt72 = dfa72.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(72);}

				switch (alt72) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(389,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:48: ( ws )?
					int alt70=2;
					try { dbg.enterSubRule(70);
					try { dbg.enterDecision(70, decisionCanBacktrack[70]);

					int LA70_0 = input.LA(1);
					if ( (LA70_0==COMMENT||LA70_0==NL||LA70_0==WS) ) {
						alt70=1;
					}
					} finally {dbg.exitDecision(70);}

					switch (alt70) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:48: ws
							{
							dbg.location(389,48);
							pushFollow(FOLLOW_ws_in_sass_forward_hide1008);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(70);}
					dbg.location(389,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_hide1011); if (state.failed) return;dbg.location(389,58);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:58: ( ws )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					int LA71_0 = input.LA(1);
					if ( (LA71_0==COMMENT||LA71_0==NL||LA71_0==WS) ) {
						alt71=1;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:58: ws
							{
							dbg.location(389,58);
							pushFollow(FOLLOW_ws_in_sass_forward_hide1013);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}
					dbg.location(389,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide1016); if (state.failed) return;
					}
					break;

				default :
					break loop72;
				}
			}
			} finally {dbg.exitSubRule(72);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(390, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_hide");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_hide"



	// $ANTLR start "sass_forward_show"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:1: sass_forward_show :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_show() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_show");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(392, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:393:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(394,5);
			if ( !(evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_show", "tokenNameEquals(\"show\")");
			}dbg.location(394,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1041); if (state.failed) return;dbg.location(394,38);
			pushFollow(FOLLOW_ws_in_sass_forward_show1043);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(394,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1045); if (state.failed) return;dbg.location(394,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(75);

			loop75:
			while (true) {
				int alt75=2;
				try { dbg.enterDecision(75, decisionCanBacktrack[75]);

				try {
					isCyclicDecision = true;
					alt75 = dfa75.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(75);}

				switch (alt75) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(394,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:48: ( ws )?
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:48: ws
							{
							dbg.location(394,48);
							pushFollow(FOLLOW_ws_in_sass_forward_show1048);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(73);}
					dbg.location(394,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_show1051); if (state.failed) return;dbg.location(394,58);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:58: ( ws )?
					int alt74=2;
					try { dbg.enterSubRule(74);
					try { dbg.enterDecision(74, decisionCanBacktrack[74]);

					int LA74_0 = input.LA(1);
					if ( (LA74_0==COMMENT||LA74_0==NL||LA74_0==WS) ) {
						alt74=1;
					}
					} finally {dbg.exitDecision(74);}

					switch (alt74) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:58: ws
							{
							dbg.location(394,58);
							pushFollow(FOLLOW_ws_in_sass_forward_show1053);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(74);}
					dbg.location(394,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show1056); if (state.failed) return;
					}
					break;

				default :
					break loop75;
				}
			}
			} finally {dbg.exitSubRule(75);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(395, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_show");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_show"



	// $ANTLR start "media"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:397:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(397, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(398,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media1075); if (state.failed) return;dbg.location(398,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:17: ( ws )?
			int alt76=2;
			try { dbg.enterSubRule(76);
			try { dbg.enterDecision(76, decisionCanBacktrack[76]);

			int LA76_0 = input.LA(1);
			if ( (LA76_0==COMMENT||LA76_0==NL||LA76_0==WS) ) {
				alt76=1;
			}
			} finally {dbg.exitDecision(76);}

			switch (alt76) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:17: ws
					{
					dbg.location(398,17);
					pushFollow(FOLLOW_ws_in_media1077);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(76);}
			dbg.location(399,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:10: mediaQueryList
			{
			dbg.location(400,10);
			pushFollow(FOLLOW_mediaQueryList_in_media1095);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(401,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:7: ( ws )?
			int alt77=2;
			try { dbg.enterSubRule(77);
			try { dbg.enterDecision(77, decisionCanBacktrack[77]);

			int LA77_0 = input.LA(1);
			if ( (LA77_0==COMMENT||LA77_0==NL||LA77_0==WS) ) {
				alt77=1;
			}
			} finally {dbg.exitDecision(77);}

			switch (alt77) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:7: ws
					{
					dbg.location(401,7);
					pushFollow(FOLLOW_ws_in_media1103);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(77);}
			dbg.location(402,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media1110); if (state.failed) return;dbg.location(402,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:12: ( ws )?
			int alt78=2;
			try { dbg.enterSubRule(78);
			try { dbg.enterDecision(78, decisionCanBacktrack[78]);

			int LA78_0 = input.LA(1);
			if ( (LA78_0==COMMENT||LA78_0==NL||LA78_0==WS) ) {
				alt78=1;
			}
			} finally {dbg.exitDecision(78);}

			switch (alt78) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:402:12: ws
					{
					dbg.location(402,12);
					pushFollow(FOLLOW_ws_in_media1112);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(78);}
			dbg.location(402,16);
			pushFollow(FOLLOW_syncToFollow_in_media1115);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(403,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:9: ( mediaBody )?
			int alt79=2;
			try { dbg.enterSubRule(79);
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			int LA79_0 = input.LA(1);
			if ( ((LA79_0 >= AT_IDENT && LA79_0 <= AT_SIGN)||(LA79_0 >= BOTTOMCENTER_SYM && LA79_0 <= BOTTOMRIGHT_SYM)||(LA79_0 >= CHARSET_SYM && LA79_0 <= COLON)||LA79_0==COUNTER_STYLE_SYM||(LA79_0 >= DCOLON && LA79_0 <= DOT)||LA79_0==FONT_FACE_SYM||(LA79_0 >= GEN && LA79_0 <= GREATER)||(LA79_0 >= HASH && LA79_0 <= HASH_SYMBOL)||LA79_0==IDENT||LA79_0==IMPORT_SYM||LA79_0==KEYFRAMES_SYM||(LA79_0 >= LBRACKET && LA79_0 <= LEFTTOP_SYM)||LA79_0==LESS_AND||(LA79_0 >= MEDIA_SYM && LA79_0 <= MOZ_DOCUMENT_SYM)||LA79_0==NAMESPACE_SYM||LA79_0==PAGE_SYM||(LA79_0 >= PIPE && LA79_0 <= PLUS)||(LA79_0 >= RIGHTBOTTOM_SYM && LA79_0 <= RIGHTTOP_SYM)||(LA79_0 >= SASS_AT_ROOT && LA79_0 <= SASS_DEBUG)||(LA79_0 >= SASS_EACH && LA79_0 <= SASS_ELSE)||(LA79_0 >= SASS_EXTEND && LA79_0 <= SASS_FUNCTION)||(LA79_0 >= SASS_IF && LA79_0 <= SASS_MIXIN)||(LA79_0 >= SASS_RETURN && LA79_0 <= SEMI)||LA79_0==STAR||LA79_0==SUPPORTS_SYM||LA79_0==TILDE||(LA79_0 >= TOPCENTER_SYM && LA79_0 <= TOPRIGHT_SYM)||LA79_0==VARIABLE||LA79_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt79=1;
			}
			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:9: mediaBody
					{
					dbg.location(403,9);
					pushFollow(FOLLOW_mediaBody_in_media1125);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(79);}
			dbg.location(404,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media1132); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(405, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:407:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(407, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(409,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt85=0;
			try { dbg.enterSubRule(85);

			loop85:
			while (true) {
				int alt85=4;
				try { dbg.enterDecision(85, decisionCanBacktrack[85]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case KEYFRAMES_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FORWARD:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_USE:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case SUPPORTS_SYM:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case VARIABLE:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt85=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA85_36 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt85=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt85=3;
					}

					}
					break;
				case SEMI:
					{
					alt85=2;
					}
					break;
				}
				} finally {dbg.exitDecision(85);}

				switch (alt85) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(410,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(410,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody1166);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(410,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt81=2;
					try { dbg.enterSubRule(81);
					try { dbg.enterDecision(81, decisionCanBacktrack[81]);

					try {
						isCyclicDecision = true;
						alt81 = dfa81.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(81);}

					switch (alt81) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(410,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:39: ( ws )?
							int alt80=2;
							try { dbg.enterSubRule(80);
							try { dbg.enterDecision(80, decisionCanBacktrack[80]);

							int LA80_0 = input.LA(1);
							if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
								alt80=1;
							}
							} finally {dbg.exitDecision(80);}

							switch (alt80) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:39: ws
									{
									dbg.location(410,39);
									pushFollow(FOLLOW_ws_in_mediaBody1176);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(80);}
							dbg.location(410,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1179); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(81);}
					dbg.location(410,50);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:50: ( ws )?
					int alt82=2;
					try { dbg.enterSubRule(82);
					try { dbg.enterDecision(82, decisionCanBacktrack[82]);

					int LA82_0 = input.LA(1);
					if ( (LA82_0==COMMENT||LA82_0==NL||LA82_0==WS) ) {
						alt82=1;
					}
					} finally {dbg.exitDecision(82);}

					switch (alt82) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:50: ws
							{
							dbg.location(410,50);
							pushFollow(FOLLOW_ws_in_mediaBody1183);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(82);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:10: ( SEMI ( ws )? )
					{
					dbg.location(412,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:12: SEMI ( ws )?
					{
					dbg.location(412,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody1210); if (state.failed) return;dbg.location(412,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:17: ( ws )?
					int alt83=2;
					try { dbg.enterSubRule(83);
					try { dbg.enterDecision(83, decisionCanBacktrack[83]);

					int LA83_0 = input.LA(1);
					if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
						alt83=1;
					}
					} finally {dbg.exitDecision(83);}

					switch (alt83) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:17: ws
							{
							dbg.location(412,17);
							pushFollow(FOLLOW_ws_in_mediaBody1212);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(83);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(413,12);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(413,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(413,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody1231);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(413,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:43: ( ws | ( SEMI ) )
					int alt84=2;
					try { dbg.enterSubRule(84);
					try { dbg.enterDecision(84, decisionCanBacktrack[84]);

					int LA84_0 = input.LA(1);
					if ( (LA84_0==COMMENT||LA84_0==NL||LA84_0==WS) ) {
						alt84=1;
					}
					else if ( (LA84_0==SEMI) ) {
						alt84=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 84, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(84);}

					switch (alt84) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:44: ws
							{
							dbg.location(413,44);
							pushFollow(FOLLOW_ws_in_mediaBody1234);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:49: ( SEMI )
							{
							dbg.location(413,49);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:49: ( SEMI )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:50: SEMI
							{
							dbg.location(413,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1239); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(84);}

					}

					}
					break;

				default :
					if ( cnt85 >= 1 ) break loop85;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(85, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt85++;
			}
			} finally {dbg.exitSubRule(85);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(415, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:1: mediaBodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(417, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule )
			int alt90=15;
			try { dbg.enterDecision(90, decisionCanBacktrack[90]);

			int LA90_0 = input.LA(1);
			if ( (LA90_0==LESS_AND) ) {
				int LA90_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==DOT) ) {
				int LA90_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==HASH) ) {
				int LA90_3 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==SASS_MIXIN) ) {
				int LA90_4 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==AT_IDENT) ) {
				int LA90_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt90=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==SASS_INCLUDE) ) {
				int LA90_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=2;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred7_Css3())) ) {
					alt90=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_AT_ROOT) ) {
				int LA90_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==GREATER||LA90_0==PLUS||LA90_0==TILDE) ) {
				int LA90_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				int LA90_9 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==HASH_SYMBOL) ) {
				int LA90_10 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( ((synpred9_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==DIMENSION) ) {
				int LA90_11 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"))) ) {
					alt90=4;
				}
				else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==LBRACKET) ) {
				int LA90_12 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==COLON||LA90_0==DCOLON) ) {
				int LA90_13 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==IDENT) ) {
				int LA90_14 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==AT_SIGN) ) {
				int LA90_15 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt90=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==MINUS) ) {
				int LA90_16 = input.LA(2);
				if ( ((synpred8_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt90=4;
				}
				else if ( ((synpred9_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt90=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt90=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==STAR) ) {
				int LA90_17 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==PIPE) ) {
				int LA90_18 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==GEN) ) {
				int LA90_19 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt90=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=10;
				}

			}
			else if ( (LA90_0==VARIABLE) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SASS_DEBUG||LA90_0==SASS_WARN) ) {
				int LA90_21 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_VAR) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SASS_IF) ) {
				int LA90_23 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_FOR) ) {
				int LA90_24 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_EACH) ) {
				int LA90_25 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_WHILE) ) {
				int LA90_26 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==SASS_CONTENT) ) {
				int LA90_27 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt90=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==IMPORT_SYM) ) {
				int LA90_28 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt90=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 90, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA90_0==PAGE_SYM) ) {
				int LA90_29 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=11;
				}

			}
			else if ( (LA90_0==FONT_FACE_SYM) ) {
				int LA90_30 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=12;
				}

			}
			else if ( (LA90_0==MOZ_DOCUMENT_SYM) ) {
				int LA90_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA90_32 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==KEYFRAMES_SYM) ) {
				int LA90_33 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=13;
				}

			}
			else if ( (LA90_0==MEDIA_SYM) ) {
				int LA90_34 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt90=5;
				}
				else if ( (true) ) {
					alt90=14;
				}

			}
			else if ( ((LA90_0 >= BOTTOMCENTER_SYM && LA90_0 <= BOTTOMRIGHT_SYM)||LA90_0==CHARSET_SYM||LA90_0==COUNTER_STYLE_SYM||(LA90_0 >= LEFTBOTTOM_SYM && LA90_0 <= LEFTTOP_SYM)||LA90_0==NAMESPACE_SYM||(LA90_0 >= RIGHTBOTTOM_SYM && LA90_0 <= RIGHTTOP_SYM)||LA90_0==SASS_ELSE||LA90_0==SASS_EXTEND||(LA90_0 >= SASS_FORWARD && LA90_0 <= SASS_FUNCTION)||(LA90_0 >= SASS_RETURN && LA90_0 <= SASS_USE)||(LA90_0 >= TOPCENTER_SYM && LA90_0 <= TOPRIGHT_SYM)) && (synpred9_Css3())) {
				alt90=5;
			}
			else if ( (LA90_0==SUPPORTS_SYM) ) {
				alt90=15;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(90);}

			switch (alt90) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(419,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem1313);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(421,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(421,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1346);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(421,87);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:87: ( ( ws )? IMPORTANT_SYM )?
					int alt87=2;
					try { dbg.enterSubRule(87);
					try { dbg.enterDecision(87, decisionCanBacktrack[87]);

					try {
						isCyclicDecision = true;
						alt87 = dfa87.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(87);}

					switch (alt87) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(421,88);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:88: ( ws )?
							int alt86=2;
							try { dbg.enterSubRule(86);
							try { dbg.enterDecision(86, decisionCanBacktrack[86]);

							int LA86_0 = input.LA(1);
							if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
								alt86=1;
							}
							} finally {dbg.exitDecision(86);}

							switch (alt86) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:88: ws
									{
									dbg.location(421,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1349);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(86);}
							dbg.location(421,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1352); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(87);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(422,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(422,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1369);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(422,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:57: ( ( ws )? IMPORTANT_SYM )?
					int alt89=2;
					try { dbg.enterSubRule(89);
					try { dbg.enterDecision(89, decisionCanBacktrack[89]);

					try {
						isCyclicDecision = true;
						alt89 = dfa89.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(89);}

					switch (alt89) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(422,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:58: ( ws )?
							int alt88=2;
							try { dbg.enterSubRule(88);
							try { dbg.enterDecision(88, decisionCanBacktrack[88]);

							int LA88_0 = input.LA(1);
							if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
								alt88=1;
							}
							} finally {dbg.exitDecision(88);}

							switch (alt88) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:58: ws
									{
									dbg.location(422,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1372);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(88);}
							dbg.location(422,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1375); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(89);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(423,145);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1440);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(424,30);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem1452);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: {...}? sass_debug
					{
					dbg.location(425,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(425,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem1462);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: {...}? sass_control
					{
					dbg.location(426,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(426,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem1472);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:427:7: {...}? sass_content
					{
					dbg.location(427,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(427,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem1482);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:428:7: {...}? importItem
					{
					dbg.location(428,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(428,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem1492);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:429:7: rule
					{
					dbg.location(429,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1500);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:7: page
					{
					dbg.location(430,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem1508);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:431:7: fontFace
					{
					dbg.location(431,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem1516);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:432:7: vendorAtRule
					{
					dbg.location(432,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem1524);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:7: media
					{
					dbg.location(434,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem1537);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:7: supportsAtRule
					{
					dbg.location(435,7);
					pushFollow(FOLLOW_supportsAtRule_in_mediaBodyItem1545);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(436, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:438:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(438, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(439,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1559);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(439,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(93);

			loop93:
			while (true) {
				int alt93=2;
				try { dbg.enterDecision(93, decisionCanBacktrack[93]);

				try {
					isCyclicDecision = true;
					alt93 = dfa93.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(93);}

				switch (alt93) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(439,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:31: ( ws )?
					int alt91=2;
					try { dbg.enterSubRule(91);
					try { dbg.enterDecision(91, decisionCanBacktrack[91]);

					int LA91_0 = input.LA(1);
					if ( (LA91_0==COMMENT||LA91_0==NL||LA91_0==WS) ) {
						alt91=1;
					}
					} finally {dbg.exitDecision(91);}

					switch (alt91) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:31: ws
							{
							dbg.location(439,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList1571);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(91);}
					dbg.location(439,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList1574); if (state.failed) return;dbg.location(439,41);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:41: ( ws )?
					int alt92=2;
					try { dbg.enterSubRule(92);
					try { dbg.enterDecision(92, decisionCanBacktrack[92]);

					int LA92_0 = input.LA(1);
					if ( (LA92_0==COMMENT||LA92_0==NL||LA92_0==WS) ) {
						alt92=1;
					}
					} finally {dbg.exitDecision(92);}

					switch (alt92) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:41: ws
							{
							dbg.location(439,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList1576);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(92);}
					dbg.location(439,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1579);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop93;
				}
			}
			} finally {dbg.exitSubRule(93);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(440, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:442:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(442, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:443:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt102=3;
			try { dbg.enterDecision(102, decisionCanBacktrack[102]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA102_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()")),""))) ) {
					alt102=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt102=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 102, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
			case NOT:
				{
				alt102=1;
				}
				break;
			case HASH_SYMBOL:
				{
				int LA102_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt102=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt102=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 102, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LPAREN:
				{
				alt102=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt102=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 102, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(102);}

			switch (alt102) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(444,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:5: ( mediaQueryOperator ( ws )? )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					int LA95_0 = input.LA(1);
					if ( (LA95_0==IDENT) ) {
						int LA95_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt95=1;
						}
					}
					else if ( (LA95_0==NOT) ) {
						alt95=1;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:6: mediaQueryOperator ( ws )?
							{
							dbg.location(444,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery1598);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(444,25);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:25: ( ws )?
							int alt94=2;
							try { dbg.enterSubRule(94);
							try { dbg.enterDecision(94, decisionCanBacktrack[94]);

							int LA94_0 = input.LA(1);
							if ( (LA94_0==COMMENT||LA94_0==NL||LA94_0==WS) ) {
								alt94=1;
							}
							} finally {dbg.exitDecision(94);}

							switch (alt94) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:25: ws
									{
									dbg.location(444,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1600);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(94);}

							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(444,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery1607);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(444,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:43: ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(98);

					loop98:
					while (true) {
						int alt98=2;
						try { dbg.enterDecision(98, decisionCanBacktrack[98]);

						int LA98_0 = input.LA(1);
						if ( (LA98_0==COMMENT||LA98_0==NL||LA98_0==WS) ) {
							int LA98_1 = input.LA(2);
							if ( (synpred11_Css3()) ) {
								alt98=1;
							}

						}
						else if ( (LA98_0==IDENT) ) {
							int LA98_18 = input.LA(2);
							if ( ((synpred11_Css3()&&evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")"))) ) {
								alt98=1;
							}

						}

						} finally {dbg.exitDecision(98);}

						switch (alt98) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:44: ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(444,60);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:60: ( ws )?
							int alt96=2;
							try { dbg.enterSubRule(96);
							try { dbg.enterDecision(96, decisionCanBacktrack[96]);

							int LA96_0 = input.LA(1);
							if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
								alt96=1;
							}
							} finally {dbg.exitDecision(96);}

							switch (alt96) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:60: ws
									{
									dbg.location(444,60);
									pushFollow(FOLLOW_ws_in_mediaQuery1618);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(96);}
							dbg.location(444,64);
							pushFollow(FOLLOW_key_and_in_mediaQuery1621);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(444,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:72: ( ws )?
							int alt97=2;
							try { dbg.enterSubRule(97);
							try { dbg.enterDecision(97, decisionCanBacktrack[97]);

							int LA97_0 = input.LA(1);
							if ( (LA97_0==COMMENT||LA97_0==NL||LA97_0==WS) ) {
								alt97=1;
							}
							} finally {dbg.exitDecision(97);}

							switch (alt97) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:72: ws
									{
									dbg.location(444,72);
									pushFollow(FOLLOW_ws_in_mediaQuery1623);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(97);}
							dbg.location(444,76);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1626);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop98;
						}
					}
					} finally {dbg.exitSubRule(98);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:7: mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(445,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1637);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(445,23);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:23: ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(101);

					loop101:
					while (true) {
						int alt101=2;
						try { dbg.enterDecision(101, decisionCanBacktrack[101]);

						int LA101_0 = input.LA(1);
						if ( (LA101_0==COMMENT||LA101_0==NL||LA101_0==WS) ) {
							int LA101_1 = input.LA(2);
							if ( (synpred12_Css3()) ) {
								alt101=1;
							}

						}
						else if ( (LA101_0==IDENT) ) {
							int LA101_18 = input.LA(2);
							if ( ((evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")&&synpred12_Css3())) ) {
								alt101=1;
							}

						}

						} finally {dbg.exitDecision(101);}

						switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:24: ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(445,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:40: ( ws )?
							int alt99=2;
							try { dbg.enterSubRule(99);
							try { dbg.enterDecision(99, decisionCanBacktrack[99]);

							int LA99_0 = input.LA(1);
							if ( (LA99_0==COMMENT||LA99_0==NL||LA99_0==WS) ) {
								alt99=1;
							}
							} finally {dbg.exitDecision(99);}

							switch (alt99) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:40: ws
									{
									dbg.location(445,40);
									pushFollow(FOLLOW_ws_in_mediaQuery1648);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(99);}
							dbg.location(445,44);
							pushFollow(FOLLOW_key_and_in_mediaQuery1651);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(445,52);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:52: ( ws )?
							int alt100=2;
							try { dbg.enterSubRule(100);
							try { dbg.enterDecision(100, decisionCanBacktrack[100]);

							int LA100_0 = input.LA(1);
							if ( (LA100_0==COMMENT||LA100_0==NL||LA100_0==WS) ) {
								alt100=1;
							}
							} finally {dbg.exitDecision(100);}

							switch (alt100) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:52: ws
									{
									dbg.location(445,52);
									pushFollow(FOLLOW_ws_in_mediaQuery1653);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(100);}
							dbg.location(445,56);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1656);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop101;
						}
					}
					} finally {dbg.exitSubRule(101);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:446:7: {...}? cp_variable
					{
					dbg.location(446,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(446,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1669);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(447, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(449, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:3: ( key_only | NOT )
			int alt103=2;
			try { dbg.enterDecision(103, decisionCanBacktrack[103]);

			int LA103_0 = input.LA(1);
			if ( (LA103_0==IDENT) ) {
				alt103=1;
			}
			else if ( (LA103_0==NOT) ) {
				alt103=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 103, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(103);}

			switch (alt103) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:5: key_only
					{
					dbg.location(450,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1681);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:16: NOT
					{
					dbg.location(450,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1685); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(451, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:453:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(453, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt104=3;
			try { dbg.enterDecision(104, decisionCanBacktrack[104]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt104=1;
				}
				break;
			case GEN:
				{
				alt104=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt104=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 104, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(104);}

			switch (alt104) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:4: IDENT
					{
					dbg.location(454,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1697); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:12: GEN
					{
					dbg.location(454,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1701); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(454,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(454,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1707);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(455, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:1: mediaExpression : ( ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ) | ( HASH )=>{...}? sass_interpolation_expression_var );
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(457, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:5: ( ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ) | ( HASH )=>{...}? sass_interpolation_expression_var )
			int alt108=2;
			try { dbg.enterDecision(108, decisionCanBacktrack[108]);

			int LA108_0 = input.LA(1);
			if ( (LA108_0==LPAREN) && (synpred13_Css3())) {
				alt108=1;
			}
			else if ( (LA108_0==HASH_SYMBOL) && (synpred14_Css3())) {
				alt108=2;
			}

			} finally {dbg.exitDecision(108);}

			switch (alt108) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
					{
					dbg.location(459,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:17: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:18: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
					{
					dbg.location(459,18);
					match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1732); if (state.failed) return;dbg.location(459,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:25: ( ws )?
					int alt105=2;
					try { dbg.enterSubRule(105);
					try { dbg.enterDecision(105, decisionCanBacktrack[105]);

					int LA105_0 = input.LA(1);
					if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
						alt105=1;
					}
					} finally {dbg.exitDecision(105);}

					switch (alt105) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:25: ws
							{
							dbg.location(459,25);
							pushFollow(FOLLOW_ws_in_mediaExpression1734);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(105);}
					dbg.location(459,29);
					pushFollow(FOLLOW_mediaFeature_in_mediaExpression1737);
					mediaFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(459,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:42: ( mediaFeatureValue )?
					int alt106=2;
					try { dbg.enterSubRule(106);
					try { dbg.enterDecision(106, decisionCanBacktrack[106]);

					try {
						isCyclicDecision = true;
						alt106 = dfa106.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(106);}

					switch (alt106) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:42: mediaFeatureValue
							{
							dbg.location(459,42);
							pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1739);
							mediaFeatureValue();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(106);}
					dbg.location(459,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:61: ( ws )?
					int alt107=2;
					try { dbg.enterSubRule(107);
					try { dbg.enterDecision(107, decisionCanBacktrack[107]);

					int LA107_0 = input.LA(1);
					if ( (LA107_0==COMMENT||LA107_0==NL||LA107_0==WS) ) {
						alt107=1;
					}
					} finally {dbg.exitDecision(107);}

					switch (alt107) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:61: ws
							{
							dbg.location(459,61);
							pushFollow(FOLLOW_ws_in_mediaExpression1742);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(107);}
					dbg.location(459,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1745); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:7: ( HASH )=>{...}? sass_interpolation_expression_var
					{
					dbg.location(460,17);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaExpression", "isCssPreprocessorSource()");
					}dbg.location(460,46);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaExpression1762);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(461, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:463:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(463, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(465,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:5: ( ws )?
			int alt109=2;
			try { dbg.enterSubRule(109);
			try { dbg.enterDecision(109, decisionCanBacktrack[109]);

			int LA109_0 = input.LA(1);
			if ( (LA109_0==COMMENT||LA109_0==NL||LA109_0==WS) ) {
				alt109=1;
			}
			} finally {dbg.exitDecision(109);}

			switch (alt109) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:5: ws
					{
					dbg.location(465,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1783);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(109);}
			dbg.location(465,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1786); if (state.failed) return;dbg.location(465,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:15: ( ws )?
			int alt110=2;
			try { dbg.enterSubRule(110);
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			int LA110_0 = input.LA(1);
			if ( (LA110_0==COMMENT||LA110_0==NL||LA110_0==WS) ) {
				alt110=1;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:15: ws
					{
					dbg.location(465,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1788);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(110);}
			dbg.location(466,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:466:5: ({...}? cp_expression | expression )
			int alt111=2;
			try { dbg.enterSubRule(111);
			try { dbg.enterDecision(111, decisionCanBacktrack[111]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt111=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA111_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case IDENT:
				{
				int LA111_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case VARIABLE:
				{
				int LA111_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case LBRACKET:
				{
				int LA111_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA111_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case URANGE:
				{
				int LA111_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA111_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA111_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case EMS:
				{
				int LA111_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case REM:
				{
				int LA111_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case EXS:
				{
				int LA111_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA111_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case TIME:
				{
				int LA111_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case FREQ:
				{
				int LA111_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA111_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA111_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case STRING:
				{
				int LA111_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case TILDE:
				{
				int LA111_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA111_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case GEN:
				{
				int LA111_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case URI:
				{
				int LA111_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case HASH:
				{
				int LA111_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (true) ) {
					alt111=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA111_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt111=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA111_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA111_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA111_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA111_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA111_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt111=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 111, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 111, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(111);}

			switch (alt111) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:467:9: {...}? cp_expression
					{
					dbg.location(467,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(467,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1807);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:9: expression
					{
					dbg.location(469,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1827);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(111);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(471, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(473, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt113=3;
			try { dbg.enterDecision(113, decisionCanBacktrack[113]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA113_1 = input.LA(2);
				if ( (LA113_1==DOT) ) {
					alt113=3;
				}
				else if ( (LA113_1==COLON||LA113_1==COMMENT||LA113_1==NL||LA113_1==RPAREN||LA113_1==WS) ) {
					alt113=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 113, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt113=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt113=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 113, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(113);}

			switch (alt113) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:4: IDENT
					{
					dbg.location(474,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1847); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:12: GEN
					{
					dbg.location(474,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1851); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(474,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(474,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:47: ( cp_variable | sass_interpolation_expression_var )
					int alt112=2;
					try { dbg.enterSubRule(112);
					try { dbg.enterDecision(112, decisionCanBacktrack[112]);

					int LA112_0 = input.LA(1);
					if ( (LA112_0==AT_IDENT||(LA112_0 >= BOTTOMCENTER_SYM && LA112_0 <= BOTTOMRIGHT_SYM)||LA112_0==CHARSET_SYM||LA112_0==COUNTER_STYLE_SYM||LA112_0==FONT_FACE_SYM||LA112_0==IDENT||LA112_0==IMPORT_SYM||LA112_0==KEYFRAMES_SYM||(LA112_0 >= LEFTBOTTOM_SYM && LA112_0 <= LEFTTOP_SYM)||LA112_0==MEDIA_SYM||LA112_0==MOZ_DOCUMENT_SYM||LA112_0==NAMESPACE_SYM||LA112_0==PAGE_SYM||(LA112_0 >= RIGHTBOTTOM_SYM && LA112_0 <= RIGHTTOP_SYM)||(LA112_0 >= SASS_AT_ROOT && LA112_0 <= SASS_DEBUG)||(LA112_0 >= SASS_EACH && LA112_0 <= SASS_ELSE)||LA112_0==SASS_EXTEND||(LA112_0 >= SASS_FOR && LA112_0 <= SASS_FUNCTION)||(LA112_0 >= SASS_IF && LA112_0 <= SASS_MIXIN)||(LA112_0 >= SASS_RETURN && LA112_0 <= SASS_WHILE)||(LA112_0 >= TOPCENTER_SYM && LA112_0 <= TOPRIGHT_SYM)||LA112_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt112=1;
					}
					else if ( (LA112_0==HASH_SYMBOL) ) {
						alt112=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 112, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(112);}

					switch (alt112) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:49: cp_variable
							{
							dbg.location(474,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1859);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:474:63: sass_interpolation_expression_var
							{
							dbg.location(474,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1863);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(112);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(475, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:477:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(477, 1);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:478:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(479,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt118=0;
			try { dbg.enterSubRule(118);

			loop118:
			while (true) {
				int alt118=3;
				try { dbg.enterDecision(118, decisionCanBacktrack[118]);

				int LA118_0 = input.LA(1);
				if ( ((LA118_0 >= AT_IDENT && LA118_0 <= AT_SIGN)||(LA118_0 >= BOTTOMCENTER_SYM && LA118_0 <= BOTTOMRIGHT_SYM)||(LA118_0 >= CHARSET_SYM && LA118_0 <= COLON)||LA118_0==CONTAINER_SYM||LA118_0==COUNTER_STYLE_SYM||(LA118_0 >= DCOLON && LA118_0 <= DOT)||LA118_0==FONT_FACE_SYM||(LA118_0 >= GEN && LA118_0 <= GREATER)||(LA118_0 >= HASH && LA118_0 <= HASH_SYMBOL)||LA118_0==IDENT||LA118_0==IMPORT_SYM||LA118_0==KEYFRAMES_SYM||LA118_0==LAYER_SYM||(LA118_0 >= LBRACKET && LA118_0 <= LEFTTOP_SYM)||LA118_0==LESS_AND||(LA118_0 >= MEDIA_SYM && LA118_0 <= MOZ_DOCUMENT_SYM)||LA118_0==NAMESPACE_SYM||LA118_0==PAGE_SYM||(LA118_0 >= PIPE && LA118_0 <= PLUS)||(LA118_0 >= RIGHTBOTTOM_SYM && LA118_0 <= RIGHTTOP_SYM)||(LA118_0 >= SASS_AT_ROOT && LA118_0 <= SASS_DEBUG)||(LA118_0 >= SASS_EACH && LA118_0 <= SASS_ELSE)||(LA118_0 >= SASS_EXTEND && LA118_0 <= SASS_FUNCTION)||(LA118_0 >= SASS_IF && LA118_0 <= SASS_MIXIN)||(LA118_0 >= SASS_RETURN && LA118_0 <= SASS_WHILE)||LA118_0==STAR||LA118_0==SUPPORTS_SYM||LA118_0==TILDE||(LA118_0 >= TOPCENTER_SYM && LA118_0 <= TOPRIGHT_SYM)||LA118_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt118=1;
				}
				else if ( (LA118_0==SEMI) ) {
					alt118=2;
				}

				} finally {dbg.exitDecision(118);}

				switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(480,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(480,12);
					pushFollow(FOLLOW_bodyItem_in_body1897);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(480,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt115=2;
					try { dbg.enterSubRule(115);
					try { dbg.enterDecision(115, decisionCanBacktrack[115]);

					try {
						isCyclicDecision = true;
						alt115 = dfa115.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(115);}

					switch (alt115) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(480,34);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:34: ( ws )?
							int alt114=2;
							try { dbg.enterSubRule(114);
							try { dbg.enterDecision(114, decisionCanBacktrack[114]);

							int LA114_0 = input.LA(1);
							if ( (LA114_0==COMMENT||LA114_0==NL||LA114_0==WS) ) {
								alt114=1;
							}
							} finally {dbg.exitDecision(114);}

							switch (alt114) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:34: ws
									{
									dbg.location(480,34);
									pushFollow(FOLLOW_ws_in_body1907);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(114);}
							dbg.location(480,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1910); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(115);}
					dbg.location(480,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:45: ( ws )?
					int alt116=2;
					try { dbg.enterSubRule(116);
					try { dbg.enterDecision(116, decisionCanBacktrack[116]);

					int LA116_0 = input.LA(1);
					if ( (LA116_0==COMMENT||LA116_0==NL||LA116_0==WS) ) {
						alt116=1;
					}
					} finally {dbg.exitDecision(116);}

					switch (alt116) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:45: ws
							{
							dbg.location(480,45);
							pushFollow(FOLLOW_ws_in_body1914);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(116);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:10: ( SEMI ( ws )? )
					{
					dbg.location(482,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:12: SEMI ( ws )?
					{
					dbg.location(482,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1941); if (state.failed) return;dbg.location(482,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:17: ( ws )?
					int alt117=2;
					try { dbg.enterSubRule(117);
					try { dbg.enterDecision(117, decisionCanBacktrack[117]);

					int LA117_0 = input.LA(1);
					if ( (LA117_0==COMMENT||LA117_0==NL||LA117_0==WS) ) {
						alt117=1;
					}
					} finally {dbg.exitDecision(117);}

					switch (alt117) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:17: ws
							{
							dbg.location(482,17);
							pushFollow(FOLLOW_ws_in_body1943);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(117);}

					}

					}
					break;

				default :
					if ( cnt118 >= 1 ) break loop118;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(118, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt118++;
			}
			} finally {dbg.exitSubRule(118);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(484, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:1: bodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(486, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:487:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt119=11;
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			switch ( input.LA(1) ) {
			case LESS_AND:
				{
				int LA119_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( (true) ) {
					alt119=4;
				}

				}
				break;
			case DOT:
				{
				int LA119_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( (true) ) {
					alt119=4;
				}

				}
				break;
			case HASH:
				{
				int LA119_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( (true) ) {
					alt119=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA119_4 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred16_Css3())) ) {
					alt119=1;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
				{
				int LA119_5 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA119_6 = input.LA(2);
				if ( (((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=2;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=3;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA119_7 = input.LA(2);
				if ( (true) ) {
					alt119=4;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case DIMENSION:
			case GEN:
			case GREATER:
			case HASH_SYMBOL:
			case LBRACKET:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt119=4;
				}
				break;
			case IDENT:
				{
				int LA119_14 = input.LA(2);
				if ( (true) ) {
					alt119=4;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MEDIA_SYM:
				{
				int LA119_20 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA119_21 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA119_22 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA119_23 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA119_24 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA119_25 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case CONTAINER_SYM:
			case LAYER_SYM:
			case SUPPORTS_SYM:
				{
				alt119=7;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA119_27 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case KEYFRAMES_SYM:
				{
				int LA119_28 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (true) ) {
					alt119=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA119_29 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt119=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA119_32 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA119_33 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA119_34 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA119_35 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA119_36 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA119_37 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt119=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FORWARD:
			case SASS_RETURN:
			case SASS_USE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA119_38 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt119=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt119=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 119, 38, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 119, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(488,107);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem2023);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(490,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(490,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem2056);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(491,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(491,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem2075);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:492:8: rule
					{
					dbg.location(492,8);
					pushFollow(FOLLOW_rule_in_bodyItem2084);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(493,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem2106);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:11: ( sass_map )=> sass_map
					{
					dbg.location(494,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem2123);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:495:11: at_rule
					{
					dbg.location(495,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem2135);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:497:11: {...}? importItem
					{
					dbg.location(497,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(497,40);
					pushFollow(FOLLOW_importItem_in_bodyItem2158);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:498:11: {...}? sass_debug
					{
					dbg.location(498,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(498,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem2172);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:11: {...}? sass_control
					{
					dbg.location(499,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(499,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem2186);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:500:11: {...}? sass_function_declaration
					{
					dbg.location(500,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(500,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem2200);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(501, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "supportsAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:506:1: supportsAtRule : SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void supportsAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(506, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:507:2: ( SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:2: SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(508,2);
			match(input,SUPPORTS_SYM,FOLLOW_SUPPORTS_SYM_in_supportsAtRule2220); if (state.failed) return;dbg.location(508,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:15: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:15: ws
					{
					dbg.location(508,15);
					pushFollow(FOLLOW_ws_in_supportsAtRule2222);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(508,19);
			pushFollow(FOLLOW_supportsCondition_in_supportsAtRule2225);
			supportsCondition();
			state._fsp--;
			if (state.failed) return;dbg.location(508,37);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:37: ( ws )?
			int alt121=2;
			try { dbg.enterSubRule(121);
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			int LA121_0 = input.LA(1);
			if ( (LA121_0==COMMENT||LA121_0==NL||LA121_0==WS) ) {
				alt121=1;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:37: ws
					{
					dbg.location(508,37);
					pushFollow(FOLLOW_ws_in_supportsAtRule2227);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(121);}
			dbg.location(508,41);
			match(input,LBRACE,FOLLOW_LBRACE_in_supportsAtRule2230); if (state.failed) return;dbg.location(508,48);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:48: ( ws )?
			int alt122=2;
			try { dbg.enterSubRule(122);
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			int LA122_0 = input.LA(1);
			if ( (LA122_0==COMMENT||LA122_0==NL||LA122_0==WS) ) {
				alt122=1;
			}
			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:48: ws
					{
					dbg.location(508,48);
					pushFollow(FOLLOW_ws_in_supportsAtRule2232);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(122);}
			dbg.location(508,52);
			pushFollow(FOLLOW_syncToFollow_in_supportsAtRule2235);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(508,65);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:65: ( mediaBody )?
			int alt123=2;
			try { dbg.enterSubRule(123);
			try { dbg.enterDecision(123, decisionCanBacktrack[123]);

			int LA123_0 = input.LA(1);
			if ( ((LA123_0 >= AT_IDENT && LA123_0 <= AT_SIGN)||(LA123_0 >= BOTTOMCENTER_SYM && LA123_0 <= BOTTOMRIGHT_SYM)||(LA123_0 >= CHARSET_SYM && LA123_0 <= COLON)||LA123_0==COUNTER_STYLE_SYM||(LA123_0 >= DCOLON && LA123_0 <= DOT)||LA123_0==FONT_FACE_SYM||(LA123_0 >= GEN && LA123_0 <= GREATER)||(LA123_0 >= HASH && LA123_0 <= HASH_SYMBOL)||LA123_0==IDENT||LA123_0==IMPORT_SYM||LA123_0==KEYFRAMES_SYM||(LA123_0 >= LBRACKET && LA123_0 <= LEFTTOP_SYM)||LA123_0==LESS_AND||(LA123_0 >= MEDIA_SYM && LA123_0 <= MOZ_DOCUMENT_SYM)||LA123_0==NAMESPACE_SYM||LA123_0==PAGE_SYM||(LA123_0 >= PIPE && LA123_0 <= PLUS)||(LA123_0 >= RIGHTBOTTOM_SYM && LA123_0 <= RIGHTTOP_SYM)||(LA123_0 >= SASS_AT_ROOT && LA123_0 <= SASS_DEBUG)||(LA123_0 >= SASS_EACH && LA123_0 <= SASS_ELSE)||(LA123_0 >= SASS_EXTEND && LA123_0 <= SASS_FUNCTION)||(LA123_0 >= SASS_IF && LA123_0 <= SASS_MIXIN)||(LA123_0 >= SASS_RETURN && LA123_0 <= SEMI)||LA123_0==STAR||LA123_0==SUPPORTS_SYM||LA123_0==TILDE||(LA123_0 >= TOPCENTER_SYM && LA123_0 <= TOPRIGHT_SYM)||LA123_0==VARIABLE||LA123_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt123=1;
			}
			} finally {dbg.exitDecision(123);}

			switch (alt123) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:508:65: mediaBody
					{
					dbg.location(508,65);
					pushFollow(FOLLOW_mediaBody_in_supportsAtRule2237);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(123);}
			dbg.location(508,76);
			match(input,RBRACE,FOLLOW_RBRACE_in_supportsAtRule2240); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(509, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsAtRule"



	// $ANTLR start "supportsCondition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:1: supportsCondition : ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? );
	public final void supportsCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(512, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:513:2: ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? )
			int alt125=2;
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( (LA125_0==NOT) ) {
				alt125=1;
			}
			else if ( (LA125_0==IDENT||LA125_0==LPAREN) ) {
				alt125=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 125, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:514:2: NOT ws supportsInParens
					{
					dbg.location(514,2);
					match(input,NOT,FOLLOW_NOT_in_supportsCondition2253); if (state.failed) return;dbg.location(514,6);
					pushFollow(FOLLOW_ws_in_supportsCondition2255);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(514,9);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2257);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:4: supportsInParens ( ws supportsWithOperator )?
					{
					dbg.location(515,4);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2262);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(515,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:21: ( ws supportsWithOperator )?
					int alt124=2;
					try { dbg.enterSubRule(124);
					try { dbg.enterDecision(124, decisionCanBacktrack[124]);

					try {
						isCyclicDecision = true;
						alt124 = dfa124.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(124);}

					switch (alt124) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:22: ws supportsWithOperator
							{
							dbg.location(515,22);
							pushFollow(FOLLOW_ws_in_supportsCondition2265);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(515,25);
							pushFollow(FOLLOW_supportsWithOperator_in_supportsCondition2267);
							supportsWithOperator();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(124);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(516, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsCondition"



	// $ANTLR start "supportsWithOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:518:1: supportsWithOperator : ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* );
	public final void supportsWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(518, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:9: ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* )
			int alt128=2;
			try { dbg.enterDecision(128, decisionCanBacktrack[128]);

			int LA128_0 = input.LA(1);
			if ( (LA128_0==IDENT) ) {
				int LA128_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt128=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt128=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 128, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 128, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(128);}

			switch (alt128) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:9: supportsConjunction ( ws supportsConjunction )*
					{
					dbg.location(520,9);
					pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2295);
					supportsConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(520,29);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:29: ( ws supportsConjunction )*
					try { dbg.enterSubRule(126);

					loop126:
					while (true) {
						int alt126=2;
						try { dbg.enterDecision(126, decisionCanBacktrack[126]);

						try {
							isCyclicDecision = true;
							alt126 = dfa126.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(126);}

						switch (alt126) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:30: ws supportsConjunction
							{
							dbg.location(520,30);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2298);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(520,33);
							pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2300);
							supportsConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop126;
						}
					}
					} finally {dbg.exitSubRule(126);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:521:11: supportsDisjunction ( ws supportsDisjunction )*
					{
					dbg.location(521,11);
					pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2314);
					supportsDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(521,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:521:31: ( ws supportsDisjunction )*
					try { dbg.enterSubRule(127);

					loop127:
					while (true) {
						int alt127=2;
						try { dbg.enterDecision(127, decisionCanBacktrack[127]);

						try {
							isCyclicDecision = true;
							alt127 = dfa127.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(127);}

						switch (alt127) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:521:32: ws supportsDisjunction
							{
							dbg.location(521,32);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2317);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(521,35);
							pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2319);
							supportsDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop127;
						}
					}
					} finally {dbg.exitSubRule(127);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(522, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsWithOperator"



	// $ANTLR start "supportsConjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:1: supportsConjunction : ( key_and ws supportsInParens ) ;
	public final void supportsConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(524, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ( ( key_and ws supportsInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:11: ( key_and ws supportsInParens )
			{
			dbg.location(525,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:11: ( key_and ws supportsInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:12: key_and ws supportsInParens
			{
			dbg.location(525,12);
			pushFollow(FOLLOW_key_and_in_supportsConjunction2347);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(525,20);
			pushFollow(FOLLOW_ws_in_supportsConjunction2349);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(525,23);
			pushFollow(FOLLOW_supportsInParens_in_supportsConjunction2351);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(526, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsConjunction"



	// $ANTLR start "supportsDisjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:528:1: supportsDisjunction : ( key_or ws supportsInParens ) ;
	public final void supportsDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(528, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:9: ( ( key_or ws supportsInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:11: ( key_or ws supportsInParens )
			{
			dbg.location(529,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:11: ( key_or ws supportsInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:12: key_or ws supportsInParens
			{
			dbg.location(529,12);
			pushFollow(FOLLOW_key_or_in_supportsDisjunction2378);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(529,19);
			pushFollow(FOLLOW_ws_in_supportsDisjunction2380);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(529,22);
			pushFollow(FOLLOW_supportsInParens_in_supportsDisjunction2382);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(530, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDisjunction"



	// $ANTLR start "supportsInParens"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:532:1: supportsInParens options {backtrack=true; } : ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN | supportsFeature | function );
	public final void supportsInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(532, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:2: ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN | supportsFeature | function )
			int alt131=3;
			try { dbg.enterDecision(131, decisionCanBacktrack[131]);

			int LA131_0 = input.LA(1);
			if ( (LA131_0==LPAREN) ) {
				int LA131_1 = input.LA(2);
				if ( (synpred21_Css3()) ) {
					alt131=1;
				}
				else if ( (synpred22_Css3()) ) {
					alt131=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 131, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA131_0==IDENT) ) {
				alt131=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 131, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(131);}

			switch (alt131) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:2: LPAREN ( ws )? supportsCondition ( ws )? RPAREN
					{
					dbg.location(534,2);
					match(input,LPAREN,FOLLOW_LPAREN_in_supportsInParens2409); if (state.failed) return;dbg.location(534,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ( ws )?
					int alt129=2;
					try { dbg.enterSubRule(129);
					try { dbg.enterDecision(129, decisionCanBacktrack[129]);

					int LA129_0 = input.LA(1);
					if ( (LA129_0==COMMENT||LA129_0==NL||LA129_0==WS) ) {
						alt129=1;
					}
					} finally {dbg.exitDecision(129);}

					switch (alt129) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ws
							{
							dbg.location(534,9);
							pushFollow(FOLLOW_ws_in_supportsInParens2411);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(129);}
					dbg.location(534,13);
					pushFollow(FOLLOW_supportsCondition_in_supportsInParens2414);
					supportsCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(534,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ( ws )?
					int alt130=2;
					try { dbg.enterSubRule(130);
					try { dbg.enterDecision(130, decisionCanBacktrack[130]);

					int LA130_0 = input.LA(1);
					if ( (LA130_0==COMMENT||LA130_0==NL||LA130_0==WS) ) {
						alt130=1;
					}
					} finally {dbg.exitDecision(130);}

					switch (alt130) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ws
							{
							dbg.location(534,31);
							pushFollow(FOLLOW_ws_in_supportsInParens2416);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(130);}
					dbg.location(534,35);
					match(input,RPAREN,FOLLOW_RPAREN_in_supportsInParens2419); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:4: supportsFeature
					{
					dbg.location(535,4);
					pushFollow(FOLLOW_supportsFeature_in_supportsInParens2424);
					supportsFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:536:11: function
					{
					dbg.location(536,11);
					pushFollow(FOLLOW_function_in_supportsInParens2436);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(539, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsInParens"



	// $ANTLR start "supportsFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:1: supportsFeature : supportsDecl ;
	public final void supportsFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(541, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:542:2: ( supportsDecl )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:543:2: supportsDecl
			{
			dbg.location(543,2);
			pushFollow(FOLLOW_supportsDecl_in_supportsFeature2466);
			supportsDecl();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(544, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsFeature"



	// $ANTLR start "supportsDecl"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:546:1: supportsDecl : LPAREN ( ws )? declaration ( ws )? RPAREN ;
	public final void supportsDecl() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDecl");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(546, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:547:2: ( LPAREN ( ws )? declaration ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:2: LPAREN ( ws )? declaration ( ws )? RPAREN
			{
			dbg.location(548,2);
			match(input,LPAREN,FOLLOW_LPAREN_in_supportsDecl2478); if (state.failed) return;dbg.location(548,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:9: ( ws )?
			int alt132=2;
			try { dbg.enterSubRule(132);
			try { dbg.enterDecision(132, decisionCanBacktrack[132]);

			int LA132_0 = input.LA(1);
			if ( (LA132_0==COMMENT||LA132_0==NL||LA132_0==WS) ) {
				alt132=1;
			}
			} finally {dbg.exitDecision(132);}

			switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:9: ws
					{
					dbg.location(548,9);
					pushFollow(FOLLOW_ws_in_supportsDecl2480);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(132);}
			dbg.location(548,13);
			pushFollow(FOLLOW_declaration_in_supportsDecl2483);
			declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(548,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:25: ( ws )?
			int alt133=2;
			try { dbg.enterSubRule(133);
			try { dbg.enterDecision(133, decisionCanBacktrack[133]);

			int LA133_0 = input.LA(1);
			if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
				alt133=1;
			}
			} finally {dbg.exitDecision(133);}

			switch (alt133) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:25: ws
					{
					dbg.location(548,25);
					pushFollow(FOLLOW_ws_in_supportsDecl2485);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(133);}
			dbg.location(548,29);
			match(input,RPAREN,FOLLOW_RPAREN_in_supportsDecl2488); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(549, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDecl");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDecl"



	// $ANTLR start "containerAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:551:1: containerAtRule options {backtrack=true; } : ( ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE | CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE );
	public final void containerAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(551, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:552:2: ( ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE | CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE )
			int alt140=2;
			try { dbg.enterDecision(140, decisionCanBacktrack[140]);

			int LA140_0 = input.LA(1);
			if ( (LA140_0==CONTAINER_SYM) ) {
				int LA140_1 = input.LA(2);
				if ( (synpred23_Css3()) ) {
					alt140=1;
				}
				else if ( (true) ) {
					alt140=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 140, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(140);}

			switch (alt140) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:2: ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )=> CONTAINER_SYM ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE
					{
					dbg.location(553,54);
					match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_containerAtRule2522); if (state.failed) return;dbg.location(553,68);
					pushFollow(FOLLOW_ws_in_containerAtRule2524);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(553,71);
					pushFollow(FOLLOW_containerCondition_in_containerAtRule2526);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(553,90);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:90: ( ws )?
					int alt134=2;
					try { dbg.enterSubRule(134);
					try { dbg.enterDecision(134, decisionCanBacktrack[134]);

					int LA134_0 = input.LA(1);
					if ( (LA134_0==COMMENT||LA134_0==NL||LA134_0==WS) ) {
						alt134=1;
					}
					} finally {dbg.exitDecision(134);}

					switch (alt134) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:90: ws
							{
							dbg.location(553,90);
							pushFollow(FOLLOW_ws_in_containerAtRule2528);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(134);}
					dbg.location(553,94);
					match(input,LBRACE,FOLLOW_LBRACE_in_containerAtRule2531); if (state.failed) return;dbg.location(553,101);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:101: ( ws )?
					int alt135=2;
					try { dbg.enterSubRule(135);
					try { dbg.enterDecision(135, decisionCanBacktrack[135]);

					int LA135_0 = input.LA(1);
					if ( (LA135_0==COMMENT||LA135_0==NL||LA135_0==WS) ) {
						alt135=1;
					}
					} finally {dbg.exitDecision(135);}

					switch (alt135) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:101: ws
							{
							dbg.location(553,101);
							pushFollow(FOLLOW_ws_in_containerAtRule2533);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(135);}
					dbg.location(553,105);
					pushFollow(FOLLOW_syncToFollow_in_containerAtRule2536);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(553,118);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:118: ( body )?
					int alt136=2;
					try { dbg.enterSubRule(136);
					try { dbg.enterDecision(136, decisionCanBacktrack[136]);

					int LA136_0 = input.LA(1);
					if ( ((LA136_0 >= AT_IDENT && LA136_0 <= AT_SIGN)||(LA136_0 >= BOTTOMCENTER_SYM && LA136_0 <= BOTTOMRIGHT_SYM)||(LA136_0 >= CHARSET_SYM && LA136_0 <= COLON)||LA136_0==CONTAINER_SYM||LA136_0==COUNTER_STYLE_SYM||(LA136_0 >= DCOLON && LA136_0 <= DOT)||LA136_0==FONT_FACE_SYM||(LA136_0 >= GEN && LA136_0 <= GREATER)||(LA136_0 >= HASH && LA136_0 <= HASH_SYMBOL)||LA136_0==IDENT||LA136_0==IMPORT_SYM||LA136_0==KEYFRAMES_SYM||LA136_0==LAYER_SYM||(LA136_0 >= LBRACKET && LA136_0 <= LEFTTOP_SYM)||LA136_0==LESS_AND||(LA136_0 >= MEDIA_SYM && LA136_0 <= MOZ_DOCUMENT_SYM)||LA136_0==NAMESPACE_SYM||LA136_0==PAGE_SYM||(LA136_0 >= PIPE && LA136_0 <= PLUS)||(LA136_0 >= RIGHTBOTTOM_SYM && LA136_0 <= RIGHTTOP_SYM)||(LA136_0 >= SASS_AT_ROOT && LA136_0 <= SASS_DEBUG)||(LA136_0 >= SASS_EACH && LA136_0 <= SASS_ELSE)||(LA136_0 >= SASS_EXTEND && LA136_0 <= SASS_FUNCTION)||(LA136_0 >= SASS_IF && LA136_0 <= SASS_MIXIN)||(LA136_0 >= SASS_RETURN && LA136_0 <= SEMI)||LA136_0==STAR||LA136_0==SUPPORTS_SYM||LA136_0==TILDE||(LA136_0 >= TOPCENTER_SYM && LA136_0 <= TOPRIGHT_SYM)||LA136_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt136=1;
					}
					} finally {dbg.exitDecision(136);}

					switch (alt136) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:118: body
							{
							dbg.location(553,118);
							pushFollow(FOLLOW_body_in_containerAtRule2538);
							body();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(136);}
					dbg.location(553,124);
					match(input,RBRACE,FOLLOW_RBRACE_in_containerAtRule2541); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:4: CONTAINER_SYM ws containerName ws containerCondition ( ws )? LBRACE ( ws )? syncToFollow ( body )? RBRACE
					{
					dbg.location(554,4);
					match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_containerAtRule2546); if (state.failed) return;dbg.location(554,18);
					pushFollow(FOLLOW_ws_in_containerAtRule2548);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(554,21);
					pushFollow(FOLLOW_containerName_in_containerAtRule2550);
					containerName();
					state._fsp--;
					if (state.failed) return;dbg.location(554,35);
					pushFollow(FOLLOW_ws_in_containerAtRule2552);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(554,38);
					pushFollow(FOLLOW_containerCondition_in_containerAtRule2554);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(554,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:57: ( ws )?
					int alt137=2;
					try { dbg.enterSubRule(137);
					try { dbg.enterDecision(137, decisionCanBacktrack[137]);

					int LA137_0 = input.LA(1);
					if ( (LA137_0==COMMENT||LA137_0==NL||LA137_0==WS) ) {
						alt137=1;
					}
					} finally {dbg.exitDecision(137);}

					switch (alt137) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:57: ws
							{
							dbg.location(554,57);
							pushFollow(FOLLOW_ws_in_containerAtRule2556);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(137);}
					dbg.location(554,61);
					match(input,LBRACE,FOLLOW_LBRACE_in_containerAtRule2559); if (state.failed) return;dbg.location(554,68);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:68: ( ws )?
					int alt138=2;
					try { dbg.enterSubRule(138);
					try { dbg.enterDecision(138, decisionCanBacktrack[138]);

					int LA138_0 = input.LA(1);
					if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
						alt138=1;
					}
					} finally {dbg.exitDecision(138);}

					switch (alt138) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:68: ws
							{
							dbg.location(554,68);
							pushFollow(FOLLOW_ws_in_containerAtRule2561);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(138);}
					dbg.location(554,72);
					pushFollow(FOLLOW_syncToFollow_in_containerAtRule2564);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(554,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:85: ( body )?
					int alt139=2;
					try { dbg.enterSubRule(139);
					try { dbg.enterDecision(139, decisionCanBacktrack[139]);

					int LA139_0 = input.LA(1);
					if ( ((LA139_0 >= AT_IDENT && LA139_0 <= AT_SIGN)||(LA139_0 >= BOTTOMCENTER_SYM && LA139_0 <= BOTTOMRIGHT_SYM)||(LA139_0 >= CHARSET_SYM && LA139_0 <= COLON)||LA139_0==CONTAINER_SYM||LA139_0==COUNTER_STYLE_SYM||(LA139_0 >= DCOLON && LA139_0 <= DOT)||LA139_0==FONT_FACE_SYM||(LA139_0 >= GEN && LA139_0 <= GREATER)||(LA139_0 >= HASH && LA139_0 <= HASH_SYMBOL)||LA139_0==IDENT||LA139_0==IMPORT_SYM||LA139_0==KEYFRAMES_SYM||LA139_0==LAYER_SYM||(LA139_0 >= LBRACKET && LA139_0 <= LEFTTOP_SYM)||LA139_0==LESS_AND||(LA139_0 >= MEDIA_SYM && LA139_0 <= MOZ_DOCUMENT_SYM)||LA139_0==NAMESPACE_SYM||LA139_0==PAGE_SYM||(LA139_0 >= PIPE && LA139_0 <= PLUS)||(LA139_0 >= RIGHTBOTTOM_SYM && LA139_0 <= RIGHTTOP_SYM)||(LA139_0 >= SASS_AT_ROOT && LA139_0 <= SASS_DEBUG)||(LA139_0 >= SASS_EACH && LA139_0 <= SASS_ELSE)||(LA139_0 >= SASS_EXTEND && LA139_0 <= SASS_FUNCTION)||(LA139_0 >= SASS_IF && LA139_0 <= SASS_MIXIN)||(LA139_0 >= SASS_RETURN && LA139_0 <= SEMI)||LA139_0==STAR||LA139_0==SUPPORTS_SYM||LA139_0==TILDE||(LA139_0 >= TOPCENTER_SYM && LA139_0 <= TOPRIGHT_SYM)||LA139_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt139=1;
					}
					} finally {dbg.exitDecision(139);}

					switch (alt139) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:554:85: body
							{
							dbg.location(554,85);
							pushFollow(FOLLOW_body_in_containerAtRule2566);
							body();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(139);}
					dbg.location(554,91);
					match(input,RBRACE,FOLLOW_RBRACE_in_containerAtRule2569); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(555, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerAtRule"



	// $ANTLR start "containerCondition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:1: containerCondition : ( NOT ws containerQueryInParens | containerQueryInParens ( ws containerQueryWithOperator )? );
	public final void containerCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(557, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:558:9: ( NOT ws containerQueryInParens | containerQueryInParens ( ws containerQueryWithOperator )? )
			int alt142=2;
			try { dbg.enterDecision(142, decisionCanBacktrack[142]);

			int LA142_0 = input.LA(1);
			if ( (LA142_0==NOT) ) {
				alt142=1;
			}
			else if ( (LA142_0==IDENT||LA142_0==LPAREN) ) {
				alt142=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 142, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(142);}

			switch (alt142) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:559:9: NOT ws containerQueryInParens
					{
					dbg.location(559,9);
					match(input,NOT,FOLLOW_NOT_in_containerCondition2595); if (state.failed) return;dbg.location(559,13);
					pushFollow(FOLLOW_ws_in_containerCondition2597);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(559,16);
					pushFollow(FOLLOW_containerQueryInParens_in_containerCondition2599);
					containerQueryInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:11: containerQueryInParens ( ws containerQueryWithOperator )?
					{
					dbg.location(560,11);
					pushFollow(FOLLOW_containerQueryInParens_in_containerCondition2611);
					containerQueryInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(560,34);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:34: ( ws containerQueryWithOperator )?
					int alt141=2;
					try { dbg.enterSubRule(141);
					try { dbg.enterDecision(141, decisionCanBacktrack[141]);

					try {
						isCyclicDecision = true;
						alt141 = dfa141.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(141);}

					switch (alt141) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:560:35: ws containerQueryWithOperator
							{
							dbg.location(560,35);
							pushFollow(FOLLOW_ws_in_containerCondition2614);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(560,38);
							pushFollow(FOLLOW_containerQueryWithOperator_in_containerCondition2616);
							containerQueryWithOperator();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(141);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(561, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerCondition"



	// $ANTLR start "containerQueryWithOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:1: containerQueryWithOperator : ( containerQueryConjunction ( ws containerQueryConjunction )* | containerQueryDisjunction ( ws containerQueryDisjunction )* );
	public final void containerQueryWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(563, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:9: ( containerQueryConjunction ( ws containerQueryConjunction )* | containerQueryDisjunction ( ws containerQueryDisjunction )* )
			int alt145=2;
			try { dbg.enterDecision(145, decisionCanBacktrack[145]);

			int LA145_0 = input.LA(1);
			if ( (LA145_0==IDENT) ) {
				int LA145_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt145=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt145=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 145, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 145, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(145);}

			switch (alt145) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:9: containerQueryConjunction ( ws containerQueryConjunction )*
					{
					dbg.location(565,9);
					pushFollow(FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2651);
					containerQueryConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(565,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:35: ( ws containerQueryConjunction )*
					try { dbg.enterSubRule(143);

					loop143:
					while (true) {
						int alt143=2;
						try { dbg.enterDecision(143, decisionCanBacktrack[143]);

						try {
							isCyclicDecision = true;
							alt143 = dfa143.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(143);}

						switch (alt143) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:36: ws containerQueryConjunction
							{
							dbg.location(565,36);
							pushFollow(FOLLOW_ws_in_containerQueryWithOperator2654);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(565,39);
							pushFollow(FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2656);
							containerQueryConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop143;
						}
					}
					} finally {dbg.exitSubRule(143);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:11: containerQueryDisjunction ( ws containerQueryDisjunction )*
					{
					dbg.location(566,11);
					pushFollow(FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2670);
					containerQueryDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(566,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:37: ( ws containerQueryDisjunction )*
					try { dbg.enterSubRule(144);

					loop144:
					while (true) {
						int alt144=2;
						try { dbg.enterDecision(144, decisionCanBacktrack[144]);

						try {
							isCyclicDecision = true;
							alt144 = dfa144.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(144);}

						switch (alt144) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:38: ws containerQueryDisjunction
							{
							dbg.location(566,38);
							pushFollow(FOLLOW_ws_in_containerQueryWithOperator2673);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(566,41);
							pushFollow(FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2675);
							containerQueryDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop144;
						}
					}
					} finally {dbg.exitSubRule(144);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(567, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryWithOperator"



	// $ANTLR start "containerQueryConjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:569:1: containerQueryConjunction : ( key_and ws containerQueryInParens ) ;
	public final void containerQueryConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(569, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:9: ( ( key_and ws containerQueryInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:11: ( key_and ws containerQueryInParens )
			{
			dbg.location(570,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:11: ( key_and ws containerQueryInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:12: key_and ws containerQueryInParens
			{
			dbg.location(570,12);
			pushFollow(FOLLOW_key_and_in_containerQueryConjunction2703);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(570,20);
			pushFollow(FOLLOW_ws_in_containerQueryConjunction2705);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(570,23);
			pushFollow(FOLLOW_containerQueryInParens_in_containerQueryConjunction2707);
			containerQueryInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(571, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryConjunction"



	// $ANTLR start "containerQueryDisjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:573:1: containerQueryDisjunction : ( key_or ws containerQueryInParens ) ;
	public final void containerQueryDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(573, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:9: ( ( key_or ws containerQueryInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:11: ( key_or ws containerQueryInParens )
			{
			dbg.location(574,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:11: ( key_or ws containerQueryInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:574:12: key_or ws containerQueryInParens
			{
			dbg.location(574,12);
			pushFollow(FOLLOW_key_or_in_containerQueryDisjunction2734);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(574,19);
			pushFollow(FOLLOW_ws_in_containerQueryDisjunction2736);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(574,22);
			pushFollow(FOLLOW_containerQueryInParens_in_containerQueryDisjunction2738);
			containerQueryInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(575, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryDisjunction"



	// $ANTLR start "containerQueryInParens"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:577:1: containerQueryInParens options {backtrack=true; } : ( LPAREN ( ws )? containerCondition ( ws )? RPAREN | sizeFeature |{...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN | function );
	public final void containerQueryInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerQueryInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(577, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:2: ( LPAREN ( ws )? containerCondition ( ws )? RPAREN | sizeFeature |{...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN | function )
			int alt151=4;
			try { dbg.enterDecision(151, decisionCanBacktrack[151]);

			int LA151_0 = input.LA(1);
			if ( (LA151_0==LPAREN) ) {
				int LA151_1 = input.LA(2);
				if ( (synpred24_Css3()) ) {
					alt151=1;
				}
				else if ( (synpred25_Css3()) ) {
					alt151=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 151, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA151_0==IDENT) ) {
				int LA151_2 = input.LA(2);
				if ( ((synpred26_Css3()&&evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")"))) ) {
					alt151=3;
				}
				else if ( (true) ) {
					alt151=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 151, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(151);}

			switch (alt151) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:2: LPAREN ( ws )? containerCondition ( ws )? RPAREN
					{
					dbg.location(579,2);
					match(input,LPAREN,FOLLOW_LPAREN_in_containerQueryInParens2765); if (state.failed) return;dbg.location(579,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ( ws )?
					int alt146=2;
					try { dbg.enterSubRule(146);
					try { dbg.enterDecision(146, decisionCanBacktrack[146]);

					int LA146_0 = input.LA(1);
					if ( (LA146_0==COMMENT||LA146_0==NL||LA146_0==WS) ) {
						alt146=1;
					}
					} finally {dbg.exitDecision(146);}

					switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ws
							{
							dbg.location(579,9);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2767);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(146);}
					dbg.location(579,13);
					pushFollow(FOLLOW_containerCondition_in_containerQueryInParens2770);
					containerCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(579,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ( ws )?
					int alt147=2;
					try { dbg.enterSubRule(147);
					try { dbg.enterDecision(147, decisionCanBacktrack[147]);

					int LA147_0 = input.LA(1);
					if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
						alt147=1;
					}
					} finally {dbg.exitDecision(147);}

					switch (alt147) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ws
							{
							dbg.location(579,32);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2772);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(147);}
					dbg.location(579,36);
					match(input,RPAREN,FOLLOW_RPAREN_in_containerQueryInParens2775); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:4: sizeFeature
					{
					dbg.location(580,4);
					pushFollow(FOLLOW_sizeFeature_in_containerQueryInParens2780);
					sizeFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:4: {...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN
					{
					dbg.location(581,4);
					if ( !(evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "containerQueryInParens", "tokenNameEquals(\"style\")");
					}dbg.location(581,32);
					match(input,IDENT,FOLLOW_IDENT_in_containerQueryInParens2787); if (state.failed) return;dbg.location(581,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ( ws )?
					int alt148=2;
					try { dbg.enterSubRule(148);
					try { dbg.enterDecision(148, decisionCanBacktrack[148]);

					int LA148_0 = input.LA(1);
					if ( (LA148_0==COMMENT||LA148_0==NL||LA148_0==WS) ) {
						alt148=1;
					}
					} finally {dbg.exitDecision(148);}

					switch (alt148) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ws
							{
							dbg.location(581,38);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2789);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(148);}
					dbg.location(581,42);
					match(input,LPAREN,FOLLOW_LPAREN_in_containerQueryInParens2792); if (state.failed) return;dbg.location(581,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ( ws )?
					int alt149=2;
					try { dbg.enterSubRule(149);
					try { dbg.enterDecision(149, decisionCanBacktrack[149]);

					int LA149_0 = input.LA(1);
					if ( (LA149_0==COMMENT||LA149_0==NL||LA149_0==WS) ) {
						alt149=1;
					}
					} finally {dbg.exitDecision(149);}

					switch (alt149) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ws
							{
							dbg.location(581,49);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2794);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(149);}
					dbg.location(581,53);
					pushFollow(FOLLOW_styleQuery_in_containerQueryInParens2797);
					styleQuery();
					state._fsp--;
					if (state.failed) return;dbg.location(581,64);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ( ws )?
					int alt150=2;
					try { dbg.enterSubRule(150);
					try { dbg.enterDecision(150, decisionCanBacktrack[150]);

					int LA150_0 = input.LA(1);
					if ( (LA150_0==COMMENT||LA150_0==NL||LA150_0==WS) ) {
						alt150=1;
					}
					} finally {dbg.exitDecision(150);}

					switch (alt150) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ws
							{
							dbg.location(581,64);
							pushFollow(FOLLOW_ws_in_containerQueryInParens2799);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(150);}
					dbg.location(581,68);
					match(input,RPAREN,FOLLOW_RPAREN_in_containerQueryInParens2802); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:582:11: function
					{
					dbg.location(582,11);
					pushFollow(FOLLOW_function_in_containerQueryInParens2814);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(585, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerQueryInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerQueryInParens"



	// $ANTLR start "containerName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:587:1: containerName : IDENT ;
	public final void containerName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "containerName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(587, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:9: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:11: IDENT
			{
			dbg.location(588,11);
			match(input,IDENT,FOLLOW_IDENT_in_containerName2850); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(589, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "containerName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "containerName"



	// $ANTLR start "styleQuery"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:1: styleQuery : ( styleCondition | styleFeature );
	public final void styleQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(591, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:591:11: ( styleCondition | styleFeature )
			int alt152=2;
			try { dbg.enterDecision(152, decisionCanBacktrack[152]);

			switch ( input.LA(1) ) {
			case LPAREN:
			case NOT:
				{
				alt152=1;
				}
				break;
			case IDENT:
				{
				alt152=1;
				}
				break;
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COLON:
			case CONTAINER_SYM:
			case COUNTER_STYLE_SYM:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case FONT_FACE_SYM:
			case GEN:
			case GREATER:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LAYER_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LESS_AND:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case PIPE:
			case PLUS:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STAR:
			case SUPPORTS_SYM:
			case TILDE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case VARIABLE:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt152=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 152, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(152);}

			switch (alt152) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:592:9: styleCondition
					{
					dbg.location(592,9);
					pushFollow(FOLLOW_styleCondition_in_styleQuery2874);
					styleCondition();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:593:11: styleFeature
					{
					dbg.location(593,11);
					pushFollow(FOLLOW_styleFeature_in_styleQuery2886);
					styleFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(594, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQuery"



	// $ANTLR start "styleCondition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:596:1: styleCondition : ( NOT ws styleInParens | styleInParens ( ws styleConditionWithOperator ) );
	public final void styleCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(596, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:596:15: ( NOT ws styleInParens | styleInParens ( ws styleConditionWithOperator ) )
			int alt153=2;
			try { dbg.enterDecision(153, decisionCanBacktrack[153]);

			int LA153_0 = input.LA(1);
			if ( (LA153_0==NOT) ) {
				alt153=1;
			}
			else if ( (LA153_0==IDENT||LA153_0==LPAREN) ) {
				alt153=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 153, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(153);}

			switch (alt153) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:597:9: NOT ws styleInParens
					{
					dbg.location(597,9);
					match(input,NOT,FOLLOW_NOT_in_styleCondition2910); if (state.failed) return;dbg.location(597,13);
					pushFollow(FOLLOW_ws_in_styleCondition2912);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(597,16);
					pushFollow(FOLLOW_styleInParens_in_styleCondition2914);
					styleInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:598:11: styleInParens ( ws styleConditionWithOperator )
					{
					dbg.location(598,11);
					pushFollow(FOLLOW_styleInParens_in_styleCondition2926);
					styleInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(598,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:598:25: ( ws styleConditionWithOperator )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:598:26: ws styleConditionWithOperator
					{
					dbg.location(598,26);
					pushFollow(FOLLOW_ws_in_styleCondition2929);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(598,29);
					pushFollow(FOLLOW_styleConditionWithOperator_in_styleCondition2931);
					styleConditionWithOperator();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(599, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleCondition"



	// $ANTLR start "styleConditionWithOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:601:1: styleConditionWithOperator : ( styleQueryConjunction ( ws styleQueryConjunction )* | styleQueryDisjunction ( ws styleQueryDisjunction )* );
	public final void styleConditionWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleConditionWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(601, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:9: ( styleQueryConjunction ( ws styleQueryConjunction )* | styleQueryDisjunction ( ws styleQueryDisjunction )* )
			int alt156=2;
			try { dbg.enterDecision(156, decisionCanBacktrack[156]);

			int LA156_0 = input.LA(1);
			if ( (LA156_0==IDENT) ) {
				int LA156_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt156=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt156=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 156, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 156, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(156);}

			switch (alt156) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:603:9: styleQueryConjunction ( ws styleQueryConjunction )*
					{
					dbg.location(603,9);
					pushFollow(FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2965);
					styleQueryConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(603,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:603:31: ( ws styleQueryConjunction )*
					try { dbg.enterSubRule(154);

					loop154:
					while (true) {
						int alt154=2;
						try { dbg.enterDecision(154, decisionCanBacktrack[154]);

						try {
							isCyclicDecision = true;
							alt154 = dfa154.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(154);}

						switch (alt154) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:603:32: ws styleQueryConjunction
							{
							dbg.location(603,32);
							pushFollow(FOLLOW_ws_in_styleConditionWithOperator2968);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(603,35);
							pushFollow(FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2970);
							styleQueryConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop154;
						}
					}
					} finally {dbg.exitSubRule(154);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:604:11: styleQueryDisjunction ( ws styleQueryDisjunction )*
					{
					dbg.location(604,11);
					pushFollow(FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2984);
					styleQueryDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(604,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:604:33: ( ws styleQueryDisjunction )*
					try { dbg.enterSubRule(155);

					loop155:
					while (true) {
						int alt155=2;
						try { dbg.enterDecision(155, decisionCanBacktrack[155]);

						try {
							isCyclicDecision = true;
							alt155 = dfa155.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(155);}

						switch (alt155) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:604:34: ws styleQueryDisjunction
							{
							dbg.location(604,34);
							pushFollow(FOLLOW_ws_in_styleConditionWithOperator2987);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(604,37);
							pushFollow(FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2989);
							styleQueryDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop155;
						}
					}
					} finally {dbg.exitSubRule(155);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(605, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleConditionWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleConditionWithOperator"



	// $ANTLR start "styleQueryConjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:607:1: styleQueryConjunction : ( key_and ws styleInParens ) ;
	public final void styleQueryConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQueryConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(607, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:9: ( ( key_and ws styleInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:11: ( key_and ws styleInParens )
			{
			dbg.location(608,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:11: ( key_and ws styleInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:12: key_and ws styleInParens
			{
			dbg.location(608,12);
			pushFollow(FOLLOW_key_and_in_styleQueryConjunction3017);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(608,20);
			pushFollow(FOLLOW_ws_in_styleQueryConjunction3019);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(608,23);
			pushFollow(FOLLOW_styleInParens_in_styleQueryConjunction3021);
			styleInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(609, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQueryConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQueryConjunction"



	// $ANTLR start "styleQueryDisjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:611:1: styleQueryDisjunction : ( key_or ws styleInParens ) ;
	public final void styleQueryDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleQueryDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(611, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:9: ( ( key_or ws styleInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:11: ( key_or ws styleInParens )
			{
			dbg.location(612,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:11: ( key_or ws styleInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:12: key_or ws styleInParens
			{
			dbg.location(612,12);
			pushFollow(FOLLOW_key_or_in_styleQueryDisjunction3048);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(612,19);
			pushFollow(FOLLOW_ws_in_styleQueryDisjunction3050);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(612,22);
			pushFollow(FOLLOW_styleInParens_in_styleQueryDisjunction3052);
			styleInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(613, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleQueryDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleQueryDisjunction"



	// $ANTLR start "styleInParens"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:615:1: styleInParens options {backtrack=true; } : ( LPAREN ( ws )? styleCondition ( ws )? RPAREN | LPAREN ( ws )? styleFeature ( ws )? RPAREN | function );
	public final void styleInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(615, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:616:9: ( LPAREN ( ws )? styleCondition ( ws )? RPAREN | LPAREN ( ws )? styleFeature ( ws )? RPAREN | function )
			int alt161=3;
			try { dbg.enterDecision(161, decisionCanBacktrack[161]);

			int LA161_0 = input.LA(1);
			if ( (LA161_0==LPAREN) ) {
				int LA161_1 = input.LA(2);
				if ( (synpred27_Css3()) ) {
					alt161=1;
				}
				else if ( (synpred28_Css3()) ) {
					alt161=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 161, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA161_0==IDENT) ) {
				alt161=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 161, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(161);}

			switch (alt161) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:9: LPAREN ( ws )? styleCondition ( ws )? RPAREN
					{
					dbg.location(617,9);
					match(input,LPAREN,FOLLOW_LPAREN_in_styleInParens3093); if (state.failed) return;dbg.location(617,16);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ( ws )?
					int alt157=2;
					try { dbg.enterSubRule(157);
					try { dbg.enterDecision(157, decisionCanBacktrack[157]);

					int LA157_0 = input.LA(1);
					if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
						alt157=1;
					}
					} finally {dbg.exitDecision(157);}

					switch (alt157) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ws
							{
							dbg.location(617,16);
							pushFollow(FOLLOW_ws_in_styleInParens3095);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(157);}
					dbg.location(617,20);
					pushFollow(FOLLOW_styleCondition_in_styleInParens3098);
					styleCondition();
					state._fsp--;
					if (state.failed) return;dbg.location(617,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ( ws )?
					int alt158=2;
					try { dbg.enterSubRule(158);
					try { dbg.enterDecision(158, decisionCanBacktrack[158]);

					int LA158_0 = input.LA(1);
					if ( (LA158_0==COMMENT||LA158_0==NL||LA158_0==WS) ) {
						alt158=1;
					}
					} finally {dbg.exitDecision(158);}

					switch (alt158) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ws
							{
							dbg.location(617,35);
							pushFollow(FOLLOW_ws_in_styleInParens3100);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(158);}
					dbg.location(617,39);
					match(input,RPAREN,FOLLOW_RPAREN_in_styleInParens3103); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:11: LPAREN ( ws )? styleFeature ( ws )? RPAREN
					{
					dbg.location(618,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_styleInParens3115); if (state.failed) return;dbg.location(618,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ( ws )?
					int alt159=2;
					try { dbg.enterSubRule(159);
					try { dbg.enterDecision(159, decisionCanBacktrack[159]);

					int LA159_0 = input.LA(1);
					if ( (LA159_0==COMMENT||LA159_0==NL||LA159_0==WS) ) {
						alt159=1;
					}
					} finally {dbg.exitDecision(159);}

					switch (alt159) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ws
							{
							dbg.location(618,18);
							pushFollow(FOLLOW_ws_in_styleInParens3117);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(159);}
					dbg.location(618,22);
					pushFollow(FOLLOW_styleFeature_in_styleInParens3120);
					styleFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(618,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ( ws )?
					int alt160=2;
					try { dbg.enterSubRule(160);
					try { dbg.enterDecision(160, decisionCanBacktrack[160]);

					int LA160_0 = input.LA(1);
					if ( (LA160_0==COMMENT||LA160_0==NL||LA160_0==WS) ) {
						alt160=1;
					}
					} finally {dbg.exitDecision(160);}

					switch (alt160) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ws
							{
							dbg.location(618,35);
							pushFollow(FOLLOW_ws_in_styleInParens3122);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(160);}
					dbg.location(618,39);
					match(input,RPAREN,FOLLOW_RPAREN_in_styleInParens3125); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:619:11: function
					{
					dbg.location(619,11);
					pushFollow(FOLLOW_function_in_styleInParens3137);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(622, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleInParens"



	// $ANTLR start "sizeFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:624:1: sizeFeature options {backtrack=true; } : ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN );
	public final void sizeFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(624, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:625:9: ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN | LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN )
			int alt170=4;
			try { dbg.enterDecision(170, decisionCanBacktrack[170]);

			int LA170_0 = input.LA(1);
			if ( (LA170_0==LPAREN) ) {
				int LA170_1 = input.LA(2);
				if ( (synpred29_Css3()) ) {
					alt170=1;
				}
				else if ( (synpred30_Css3()) ) {
					alt170=2;
				}
				else if ( (synpred31_Css3()) ) {
					alt170=3;
				}
				else if ( (true) ) {
					alt170=4;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 170, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(170);}

			switch (alt170) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:9: LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN
					{
					dbg.location(626,9);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3195); if (state.failed) return;dbg.location(626,16);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ( ws )?
					int alt162=2;
					try { dbg.enterSubRule(162);
					try { dbg.enterDecision(162, decisionCanBacktrack[162]);

					int LA162_0 = input.LA(1);
					if ( (LA162_0==COMMENT||LA162_0==NL||LA162_0==WS) ) {
						alt162=1;
					}
					} finally {dbg.exitDecision(162);}

					switch (alt162) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ws
							{
							dbg.location(626,16);
							pushFollow(FOLLOW_ws_in_sizeFeature3197);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(162);}
					dbg.location(626,20);
					pushFollow(FOLLOW_sizeFeatureFixedValue_in_sizeFeature3200);
					sizeFeatureFixedValue();
					state._fsp--;
					if (state.failed) return;dbg.location(626,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ( ws )?
					int alt163=2;
					try { dbg.enterSubRule(163);
					try { dbg.enterDecision(163, decisionCanBacktrack[163]);

					int LA163_0 = input.LA(1);
					if ( (LA163_0==COMMENT||LA163_0==NL||LA163_0==WS) ) {
						alt163=1;
					}
					} finally {dbg.exitDecision(163);}

					switch (alt163) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ws
							{
							dbg.location(626,42);
							pushFollow(FOLLOW_ws_in_sizeFeature3202);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(163);}
					dbg.location(626,46);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3205); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:11: LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN
					{
					dbg.location(627,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3217); if (state.failed) return;dbg.location(627,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ( ws )?
					int alt164=2;
					try { dbg.enterSubRule(164);
					try { dbg.enterDecision(164, decisionCanBacktrack[164]);

					int LA164_0 = input.LA(1);
					if ( (LA164_0==COMMENT||LA164_0==NL||LA164_0==WS) ) {
						alt164=1;
					}
					} finally {dbg.exitDecision(164);}

					switch (alt164) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ws
							{
							dbg.location(627,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3219);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(164);}
					dbg.location(627,22);
					pushFollow(FOLLOW_sizeFeatureRangeSingle_in_sizeFeature3222);
					sizeFeatureRangeSingle();
					state._fsp--;
					if (state.failed) return;dbg.location(627,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ( ws )?
					int alt165=2;
					try { dbg.enterSubRule(165);
					try { dbg.enterDecision(165, decisionCanBacktrack[165]);

					int LA165_0 = input.LA(1);
					if ( (LA165_0==COMMENT||LA165_0==NL||LA165_0==WS) ) {
						alt165=1;
					}
					} finally {dbg.exitDecision(165);}

					switch (alt165) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ws
							{
							dbg.location(627,45);
							pushFollow(FOLLOW_ws_in_sizeFeature3224);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(165);}
					dbg.location(627,49);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3227); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:11: LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN
					{
					dbg.location(628,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3239); if (state.failed) return;dbg.location(628,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ( ws )?
					int alt166=2;
					try { dbg.enterSubRule(166);
					try { dbg.enterDecision(166, decisionCanBacktrack[166]);

					int LA166_0 = input.LA(1);
					if ( (LA166_0==COMMENT||LA166_0==NL||LA166_0==WS) ) {
						alt166=1;
					}
					} finally {dbg.exitDecision(166);}

					switch (alt166) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ws
							{
							dbg.location(628,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3241);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(166);}
					dbg.location(628,22);
					pushFollow(FOLLOW_sizeFeatureRangeBetweenLt_in_sizeFeature3244);
					sizeFeatureRangeBetweenLt();
					state._fsp--;
					if (state.failed) return;dbg.location(628,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ( ws )?
					int alt167=2;
					try { dbg.enterSubRule(167);
					try { dbg.enterDecision(167, decisionCanBacktrack[167]);

					int LA167_0 = input.LA(1);
					if ( (LA167_0==COMMENT||LA167_0==NL||LA167_0==WS) ) {
						alt167=1;
					}
					} finally {dbg.exitDecision(167);}

					switch (alt167) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ws
							{
							dbg.location(628,48);
							pushFollow(FOLLOW_ws_in_sizeFeature3246);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(167);}
					dbg.location(628,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3249); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:11: LPAREN ( ws )? sizeFeatureRangeBetweenGt ( ws )? RPAREN
					{
					dbg.location(629,11);
					match(input,LPAREN,FOLLOW_LPAREN_in_sizeFeature3261); if (state.failed) return;dbg.location(629,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:18: ( ws )?
					int alt168=2;
					try { dbg.enterSubRule(168);
					try { dbg.enterDecision(168, decisionCanBacktrack[168]);

					int LA168_0 = input.LA(1);
					if ( (LA168_0==COMMENT||LA168_0==NL||LA168_0==WS) ) {
						alt168=1;
					}
					} finally {dbg.exitDecision(168);}

					switch (alt168) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:18: ws
							{
							dbg.location(629,18);
							pushFollow(FOLLOW_ws_in_sizeFeature3263);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(168);}
					dbg.location(629,22);
					pushFollow(FOLLOW_sizeFeatureRangeBetweenGt_in_sizeFeature3266);
					sizeFeatureRangeBetweenGt();
					state._fsp--;
					if (state.failed) return;dbg.location(629,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:48: ( ws )?
					int alt169=2;
					try { dbg.enterSubRule(169);
					try { dbg.enterDecision(169, decisionCanBacktrack[169]);

					int LA169_0 = input.LA(1);
					if ( (LA169_0==COMMENT||LA169_0==NL||LA169_0==WS) ) {
						alt169=1;
					}
					} finally {dbg.exitDecision(169);}

					switch (alt169) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:629:48: ws
							{
							dbg.location(629,48);
							pushFollow(FOLLOW_ws_in_sizeFeature3268);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(169);}
					dbg.location(629,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_sizeFeature3271); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(630, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeature"



	// $ANTLR start "sizeFeatureFixedValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:632:1: sizeFeatureFixedValue : sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )? ;
	public final void sizeFeatureFixedValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureFixedValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(632, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:633:9: ( sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:9: sizeFeatureName ( ( ws )? COLON ( ws )? sizeFeatureValue )?
			{
			dbg.location(634,9);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureFixedValue3304);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(634,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:25: ( ( ws )? COLON ( ws )? sizeFeatureValue )?
			int alt173=2;
			try { dbg.enterSubRule(173);
			try { dbg.enterDecision(173, decisionCanBacktrack[173]);

			try {
				isCyclicDecision = true;
				alt173 = dfa173.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(173);}

			switch (alt173) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:27: ( ws )? COLON ( ws )? sizeFeatureValue
					{
					dbg.location(634,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:27: ( ws )?
					int alt171=2;
					try { dbg.enterSubRule(171);
					try { dbg.enterDecision(171, decisionCanBacktrack[171]);

					int LA171_0 = input.LA(1);
					if ( (LA171_0==COMMENT||LA171_0==NL||LA171_0==WS) ) {
						alt171=1;
					}
					} finally {dbg.exitDecision(171);}

					switch (alt171) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:27: ws
							{
							dbg.location(634,27);
							pushFollow(FOLLOW_ws_in_sizeFeatureFixedValue3308);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(171);}
					dbg.location(634,31);
					match(input,COLON,FOLLOW_COLON_in_sizeFeatureFixedValue3311); if (state.failed) return;dbg.location(634,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:37: ( ws )?
					int alt172=2;
					try { dbg.enterSubRule(172);
					try { dbg.enterDecision(172, decisionCanBacktrack[172]);

					int LA172_0 = input.LA(1);
					if ( (LA172_0==COMMENT||LA172_0==NL||LA172_0==WS) ) {
						alt172=1;
					}
					} finally {dbg.exitDecision(172);}

					switch (alt172) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:634:37: ws
							{
							dbg.location(634,37);
							pushFollow(FOLLOW_ws_in_sizeFeatureFixedValue3313);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(172);}
					dbg.location(634,41);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureFixedValue3316);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(173);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(635, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureFixedValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureFixedValue"



	// $ANTLR start "sizeFeatureRangeSingle"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:637:1: sizeFeatureRangeSingle : ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue ) ;
	public final void sizeFeatureRangeSingle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeSingle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(637, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:638:9: ( ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:9: ( sizeFeatureName | sizeFeatureValue ) ( ws )? ( OPEQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ ) ( ws )? ( sizeFeatureName | sizeFeatureValue )
			{
			dbg.location(639,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:9: ( sizeFeatureName | sizeFeatureValue )
			int alt174=2;
			try { dbg.enterSubRule(174);
			try { dbg.enterDecision(174, decisionCanBacktrack[174]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt174=1;
				}
				break;
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case DIMENSION:
			case EMS:
			case EXS:
			case FONT_FACE_SYM:
			case FREQ:
			case GEN:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case NUMBER:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STRING:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case URANGE:
			case URI:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt174=2;
				}
				break;
			case VARIABLE:
				{
				alt174=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 174, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(174);}

			switch (alt174) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:10: sizeFeatureName
					{
					dbg.location(639,10);
					pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3352);
					sizeFeatureName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:28: sizeFeatureValue
					{
					dbg.location(639,28);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3356);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(174);}
			dbg.location(639,46);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:46: ( ws )?
			int alt175=2;
			try { dbg.enterSubRule(175);
			try { dbg.enterDecision(175, decisionCanBacktrack[175]);

			int LA175_0 = input.LA(1);
			if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
				alt175=1;
			}
			} finally {dbg.exitDecision(175);}

			switch (alt175) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:46: ws
					{
					dbg.location(639,46);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeSingle3359);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(175);}
			dbg.location(639,50);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(639,103);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:103: ( ws )?
			int alt176=2;
			try { dbg.enterSubRule(176);
			try { dbg.enterDecision(176, decisionCanBacktrack[176]);

			int LA176_0 = input.LA(1);
			if ( (LA176_0==COMMENT||LA176_0==NL||LA176_0==WS) ) {
				alt176=1;
			}
			} finally {dbg.exitDecision(176);}

			switch (alt176) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:103: ws
					{
					dbg.location(639,103);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeSingle3382);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(176);}
			dbg.location(639,107);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:107: ( sizeFeatureName | sizeFeatureValue )
			int alt177=2;
			try { dbg.enterSubRule(177);
			try { dbg.enterDecision(177, decisionCanBacktrack[177]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt177=1;
				}
				break;
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case DIMENSION:
			case EMS:
			case EXS:
			case FONT_FACE_SYM:
			case FREQ:
			case GEN:
			case HASH:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LBRACKET:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS_AND:
			case LESS_JS_STRING:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case NUMBER:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PLUS:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case STRING:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case URANGE:
			case URI:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt177=2;
				}
				break;
			case VARIABLE:
				{
				alt177=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 177, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(177);}

			switch (alt177) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:108: sizeFeatureName
					{
					dbg.location(639,108);
					pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3386);
					sizeFeatureName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:639:126: sizeFeatureValue
					{
					dbg.location(639,126);
					pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3390);
					sizeFeatureValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(177);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(640, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeSingle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeSingle"



	// $ANTLR start "sizeFeatureRangeBetweenLt"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:642:1: sizeFeatureRangeBetweenLt : sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue ;
	public final void sizeFeatureRangeBetweenLt() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeBetweenLt");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(642, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:643:9: ( sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:9: sizeFeatureValue ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( LESS | LESS_OR_EQ ) ( ws )? sizeFeatureValue
			{
			dbg.location(644,9);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3424);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;dbg.location(644,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:26: ( ws )?
			int alt178=2;
			try { dbg.enterSubRule(178);
			try { dbg.enterDecision(178, decisionCanBacktrack[178]);

			int LA178_0 = input.LA(1);
			if ( (LA178_0==COMMENT||LA178_0==NL||LA178_0==WS) ) {
				alt178=1;
			}
			} finally {dbg.exitDecision(178);}

			switch (alt178) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:26: ws
					{
					dbg.location(644,26);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3426);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(178);}
			dbg.location(644,30);
			if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(644,50);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:50: ( ws )?
			int alt179=2;
			try { dbg.enterSubRule(179);
			try { dbg.enterDecision(179, decisionCanBacktrack[179]);

			int LA179_0 = input.LA(1);
			if ( (LA179_0==COMMENT||LA179_0==NL||LA179_0==WS) ) {
				alt179=1;
			}
			} finally {dbg.exitDecision(179);}

			switch (alt179) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:50: ws
					{
					dbg.location(644,50);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3437);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(179);}
			dbg.location(644,54);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenLt3440);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(644,70);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:70: ( ws )?
			int alt180=2;
			try { dbg.enterSubRule(180);
			try { dbg.enterDecision(180, decisionCanBacktrack[180]);

			int LA180_0 = input.LA(1);
			if ( (LA180_0==COMMENT||LA180_0==NL||LA180_0==WS) ) {
				alt180=1;
			}
			} finally {dbg.exitDecision(180);}

			switch (alt180) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:70: ws
					{
					dbg.location(644,70);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3442);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(180);}
			dbg.location(644,74);
			if ( input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(644,94);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:94: ( ws )?
			int alt181=2;
			try { dbg.enterSubRule(181);
			try { dbg.enterDecision(181, decisionCanBacktrack[181]);

			int LA181_0 = input.LA(1);
			if ( (LA181_0==COMMENT||LA181_0==NL||LA181_0==WS) ) {
				alt181=1;
			}
			} finally {dbg.exitDecision(181);}

			switch (alt181) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:644:94: ws
					{
					dbg.location(644,94);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenLt3453);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(181);}
			dbg.location(644,98);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3456);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(645, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeBetweenLt");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeBetweenLt"



	// $ANTLR start "sizeFeatureRangeBetweenGt"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:647:1: sizeFeatureRangeBetweenGt : sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue ;
	public final void sizeFeatureRangeBetweenGt() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureRangeBetweenGt");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(647, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:648:9: ( sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:9: sizeFeatureValue ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureName ( ws )? ( GREATER | GREATER_OR_EQ ) ( ws )? sizeFeatureValue
			{
			dbg.location(649,9);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3489);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;dbg.location(649,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:26: ( ws )?
			int alt182=2;
			try { dbg.enterSubRule(182);
			try { dbg.enterDecision(182, decisionCanBacktrack[182]);

			int LA182_0 = input.LA(1);
			if ( (LA182_0==COMMENT||LA182_0==NL||LA182_0==WS) ) {
				alt182=1;
			}
			} finally {dbg.exitDecision(182);}

			switch (alt182) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:26: ws
					{
					dbg.location(649,26);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3491);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(182);}
			dbg.location(649,30);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(649,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:56: ( ws )?
			int alt183=2;
			try { dbg.enterSubRule(183);
			try { dbg.enterDecision(183, decisionCanBacktrack[183]);

			int LA183_0 = input.LA(1);
			if ( (LA183_0==COMMENT||LA183_0==NL||LA183_0==WS) ) {
				alt183=1;
			}
			} finally {dbg.exitDecision(183);}

			switch (alt183) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:56: ws
					{
					dbg.location(649,56);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3502);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(183);}
			dbg.location(649,60);
			pushFollow(FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenGt3505);
			sizeFeatureName();
			state._fsp--;
			if (state.failed) return;dbg.location(649,76);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:76: ( ws )?
			int alt184=2;
			try { dbg.enterSubRule(184);
			try { dbg.enterDecision(184, decisionCanBacktrack[184]);

			int LA184_0 = input.LA(1);
			if ( (LA184_0==COMMENT||LA184_0==NL||LA184_0==WS) ) {
				alt184=1;
			}
			} finally {dbg.exitDecision(184);}

			switch (alt184) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:76: ws
					{
					dbg.location(649,76);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3507);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(184);}
			dbg.location(649,80);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(649,106);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:106: ( ws )?
			int alt185=2;
			try { dbg.enterSubRule(185);
			try { dbg.enterDecision(185, decisionCanBacktrack[185]);

			int LA185_0 = input.LA(1);
			if ( (LA185_0==COMMENT||LA185_0==NL||LA185_0==WS) ) {
				alt185=1;
			}
			} finally {dbg.exitDecision(185);}

			switch (alt185) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:649:106: ws
					{
					dbg.location(649,106);
					pushFollow(FOLLOW_ws_in_sizeFeatureRangeBetweenGt3518);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(185);}
			dbg.location(649,110);
			pushFollow(FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3521);
			sizeFeatureValue();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(650, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureRangeBetweenGt");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureRangeBetweenGt"



	// $ANTLR start "sizeFeatureName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:652:1: sizeFeatureName : ( IDENT | VARIABLE );
	public final void sizeFeatureName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(652, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:653:9: ( IDENT | VARIABLE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(653,9);
			if ( input.LA(1)==IDENT||input.LA(1)==VARIABLE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(656, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureName"



	// $ANTLR start "sizeFeatureValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:658:1: sizeFeatureValue : term ;
	public final void sizeFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sizeFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(658, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:9: ( term )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:9: term
			{
			dbg.location(660,9);
			pushFollow(FOLLOW_term_in_sizeFeatureValue3599);
			term();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(661, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sizeFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sizeFeatureValue"



	// $ANTLR start "styleFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:663:1: styleFeature : declaration ;
	public final void styleFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(663, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:9: ( declaration )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:9: declaration
			{
			dbg.location(665,9);
			pushFollow(FOLLOW_declaration_in_styleFeature3632);
			declaration();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(666, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleFeature"



	// $ANTLR start "layerAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:668:1: layerAtRule : ( layerBlock | layerStatement );
	public final void layerAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(668, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:9: ( layerBlock | layerStatement )
			int alt186=2;
			try { dbg.enterDecision(186, decisionCanBacktrack[186]);

			try {
				isCyclicDecision = true;
				alt186 = dfa186.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(186);}

			switch (alt186) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:9: layerBlock
					{
					dbg.location(670,9);
					pushFollow(FOLLOW_layerBlock_in_layerAtRule3665);
					layerBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:9: layerStatement
					{
					dbg.location(672,9);
					pushFollow(FOLLOW_layerStatement_in_layerAtRule3685);
					layerStatement();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(673, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerAtRule"



	// $ANTLR start "layerBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:675:1: layerBlock : ( LAYER_SYM ws ( layerName )? ( ws )? layerBody ) ;
	public final void layerBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(675, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:676:9: ( ( LAYER_SYM ws ( layerName )? ( ws )? layerBody ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:9: ( LAYER_SYM ws ( layerName )? ( ws )? layerBody )
			{
			dbg.location(677,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:9: ( LAYER_SYM ws ( layerName )? ( ws )? layerBody )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:10: LAYER_SYM ws ( layerName )? ( ws )? layerBody
			{
			dbg.location(677,10);
			match(input,LAYER_SYM,FOLLOW_LAYER_SYM_in_layerBlock3719); if (state.failed) return;dbg.location(677,20);
			pushFollow(FOLLOW_ws_in_layerBlock3721);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(677,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:23: ( layerName )?
			int alt187=2;
			try { dbg.enterSubRule(187);
			try { dbg.enterDecision(187, decisionCanBacktrack[187]);

			int LA187_0 = input.LA(1);
			if ( (LA187_0==IDENT) ) {
				alt187=1;
			}
			} finally {dbg.exitDecision(187);}

			switch (alt187) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:23: layerName
					{
					dbg.location(677,23);
					pushFollow(FOLLOW_layerName_in_layerBlock3723);
					layerName();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(187);}
			dbg.location(677,34);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:34: ( ws )?
			int alt188=2;
			try { dbg.enterSubRule(188);
			try { dbg.enterDecision(188, decisionCanBacktrack[188]);

			int LA188_0 = input.LA(1);
			if ( (LA188_0==COMMENT||LA188_0==NL||LA188_0==WS) ) {
				alt188=1;
			}
			} finally {dbg.exitDecision(188);}

			switch (alt188) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:677:34: ws
					{
					dbg.location(677,34);
					pushFollow(FOLLOW_ws_in_layerBlock3726);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(188);}
			dbg.location(677,38);
			pushFollow(FOLLOW_layerBody_in_layerBlock3729);
			layerBody();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(678, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerBlock"



	// $ANTLR start "layerStatement"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:680:1: layerStatement : ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI ) ;
	public final void layerStatement() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerStatement");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(680, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:9: ( ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:9: ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI )
			{
			dbg.location(682,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:9: ( LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:10: LAYER_SYM ws layerName ( ( ws )? COMMA ( ws )? layerName )* SEMI
			{
			dbg.location(682,10);
			match(input,LAYER_SYM,FOLLOW_LAYER_SYM_in_layerStatement3764); if (state.failed) return;dbg.location(682,20);
			pushFollow(FOLLOW_ws_in_layerStatement3766);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(682,23);
			pushFollow(FOLLOW_layerName_in_layerStatement3768);
			layerName();
			state._fsp--;
			if (state.failed) return;dbg.location(682,33);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:33: ( ( ws )? COMMA ( ws )? layerName )*
			try { dbg.enterSubRule(191);

			loop191:
			while (true) {
				int alt191=2;
				try { dbg.enterDecision(191, decisionCanBacktrack[191]);

				int LA191_0 = input.LA(1);
				if ( ((LA191_0 >= COMMA && LA191_0 <= COMMENT)||LA191_0==NL||LA191_0==WS) ) {
					alt191=1;
				}

				} finally {dbg.exitDecision(191);}

				switch (alt191) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ( ws )? COMMA ( ws )? layerName
					{
					dbg.location(682,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ( ws )?
					int alt189=2;
					try { dbg.enterSubRule(189);
					try { dbg.enterDecision(189, decisionCanBacktrack[189]);

					int LA189_0 = input.LA(1);
					if ( (LA189_0==COMMENT||LA189_0==NL||LA189_0==WS) ) {
						alt189=1;
					}
					} finally {dbg.exitDecision(189);}

					switch (alt189) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:35: ws
							{
							dbg.location(682,35);
							pushFollow(FOLLOW_ws_in_layerStatement3772);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(189);}
					dbg.location(682,39);
					match(input,COMMA,FOLLOW_COMMA_in_layerStatement3775); if (state.failed) return;dbg.location(682,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:45: ( ws )?
					int alt190=2;
					try { dbg.enterSubRule(190);
					try { dbg.enterDecision(190, decisionCanBacktrack[190]);

					int LA190_0 = input.LA(1);
					if ( (LA190_0==COMMENT||LA190_0==NL||LA190_0==WS) ) {
						alt190=1;
					}
					} finally {dbg.exitDecision(190);}

					switch (alt190) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:45: ws
							{
							dbg.location(682,45);
							pushFollow(FOLLOW_ws_in_layerStatement3777);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(190);}
					dbg.location(682,49);
					pushFollow(FOLLOW_layerName_in_layerStatement3780);
					layerName();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop191;
				}
			}
			} finally {dbg.exitSubRule(191);}
			dbg.location(682,61);
			match(input,SEMI,FOLLOW_SEMI_in_layerStatement3784); if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(683, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerStatement");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerStatement"



	// $ANTLR start "layerName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:1: layerName : IDENT ( DOT IDENT )* ;
	public final void layerName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(685, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:9: ( IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:9: IDENT ( DOT IDENT )*
			{
			dbg.location(687,9);
			match(input,IDENT,FOLLOW_IDENT_in_layerName3818); if (state.failed) return;dbg.location(687,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:15: ( DOT IDENT )*
			try { dbg.enterSubRule(192);

			loop192:
			while (true) {
				int alt192=2;
				try { dbg.enterDecision(192, decisionCanBacktrack[192]);

				int LA192_0 = input.LA(1);
				if ( (LA192_0==DOT) ) {
					alt192=1;
				}

				} finally {dbg.exitDecision(192);}

				switch (alt192) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:687:16: DOT IDENT
					{
					dbg.location(687,16);
					match(input,DOT,FOLLOW_DOT_in_layerName3821); if (state.failed) return;dbg.location(687,20);
					match(input,IDENT,FOLLOW_IDENT_in_layerName3823); if (state.failed) return;
					}
					break;

				default :
					break loop192;
				}
			}
			} finally {dbg.exitSubRule(192);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(688, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerName"



	// $ANTLR start "layerBody"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:1: layerBody : LBRACE ( ws )? ( body )? ( ws )? RBRACE ;
	public final void layerBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "layerBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(690, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:9: ( LBRACE ( ws )? ( body )? ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:9: LBRACE ( ws )? ( body )? ( ws )? RBRACE
			{
			dbg.location(692,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_layerBody3858); if (state.failed) return;dbg.location(692,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:16: ( ws )?
			int alt193=2;
			try { dbg.enterSubRule(193);
			try { dbg.enterDecision(193, decisionCanBacktrack[193]);

			int LA193_0 = input.LA(1);
			if ( (LA193_0==COMMENT||LA193_0==NL||LA193_0==WS) ) {
				alt193=1;
			}
			} finally {dbg.exitDecision(193);}

			switch (alt193) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:16: ws
					{
					dbg.location(692,16);
					pushFollow(FOLLOW_ws_in_layerBody3860);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(193);}
			dbg.location(692,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:20: ( body )?
			int alt194=2;
			try { dbg.enterSubRule(194);
			try { dbg.enterDecision(194, decisionCanBacktrack[194]);

			int LA194_0 = input.LA(1);
			if ( ((LA194_0 >= AT_IDENT && LA194_0 <= AT_SIGN)||(LA194_0 >= BOTTOMCENTER_SYM && LA194_0 <= BOTTOMRIGHT_SYM)||(LA194_0 >= CHARSET_SYM && LA194_0 <= COLON)||LA194_0==CONTAINER_SYM||LA194_0==COUNTER_STYLE_SYM||(LA194_0 >= DCOLON && LA194_0 <= DOT)||LA194_0==FONT_FACE_SYM||(LA194_0 >= GEN && LA194_0 <= GREATER)||(LA194_0 >= HASH && LA194_0 <= HASH_SYMBOL)||LA194_0==IDENT||LA194_0==IMPORT_SYM||LA194_0==KEYFRAMES_SYM||LA194_0==LAYER_SYM||(LA194_0 >= LBRACKET && LA194_0 <= LEFTTOP_SYM)||LA194_0==LESS_AND||(LA194_0 >= MEDIA_SYM && LA194_0 <= MOZ_DOCUMENT_SYM)||LA194_0==NAMESPACE_SYM||LA194_0==PAGE_SYM||(LA194_0 >= PIPE && LA194_0 <= PLUS)||(LA194_0 >= RIGHTBOTTOM_SYM && LA194_0 <= RIGHTTOP_SYM)||(LA194_0 >= SASS_AT_ROOT && LA194_0 <= SASS_DEBUG)||(LA194_0 >= SASS_EACH && LA194_0 <= SASS_ELSE)||(LA194_0 >= SASS_EXTEND && LA194_0 <= SASS_FUNCTION)||(LA194_0 >= SASS_IF && LA194_0 <= SASS_MIXIN)||(LA194_0 >= SASS_RETURN && LA194_0 <= SEMI)||LA194_0==STAR||LA194_0==SUPPORTS_SYM||LA194_0==TILDE||(LA194_0 >= TOPCENTER_SYM && LA194_0 <= TOPRIGHT_SYM)||LA194_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt194=1;
			}
			} finally {dbg.exitDecision(194);}

			switch (alt194) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:20: body
					{
					dbg.location(692,20);
					pushFollow(FOLLOW_body_in_layerBody3863);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(194);}
			dbg.location(692,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:26: ( ws )?
			int alt195=2;
			try { dbg.enterSubRule(195);
			try { dbg.enterDecision(195, decisionCanBacktrack[195]);

			int LA195_0 = input.LA(1);
			if ( (LA195_0==COMMENT||LA195_0==NL||LA195_0==WS) ) {
				alt195=1;
			}
			} finally {dbg.exitDecision(195);}

			switch (alt195) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:692:26: ws
					{
					dbg.location(692,26);
					pushFollow(FOLLOW_ws_in_layerBody3866);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(195);}
			dbg.location(692,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_layerBody3869); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(693, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "layerBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "layerBody"



	// $ANTLR start "at_rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:1: at_rule : ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule | layerAtRule | containerAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(695, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:5: ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule | layerAtRule | containerAtRule )
			int alt196=8;
			try { dbg.enterDecision(196, decisionCanBacktrack[196]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt196=1;
				}
				break;
			case PAGE_SYM:
				{
				alt196=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt196=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt196=4;
				}
				break;
			case SUPPORTS_SYM:
				{
				alt196=5;
				}
				break;
			case AT_IDENT:
			case KEYFRAMES_SYM:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt196=6;
				}
				break;
			case LAYER_SYM:
				{
				alt196=7;
				}
				break;
			case CONTAINER_SYM:
				{
				alt196=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 196, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(196);}

			switch (alt196) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:5: media
					{
					dbg.location(697,5);
					pushFollow(FOLLOW_media_in_at_rule3894);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:698:7: page
					{
					dbg.location(698,7);
					pushFollow(FOLLOW_page_in_at_rule3902);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:7: counterStyle
					{
					dbg.location(699,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule3910);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:700:7: fontFace
					{
					dbg.location(700,7);
					pushFollow(FOLLOW_fontFace_in_at_rule3918);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:701:7: supportsAtRule
					{
					dbg.location(701,7);
					pushFollow(FOLLOW_supportsAtRule_in_at_rule3926);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:702:7: vendorAtRule
					{
					dbg.location(702,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule3934);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:703:7: layerAtRule
					{
					dbg.location(703,7);
					pushFollow(FOLLOW_layerAtRule_in_at_rule3942);
					layerAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:704:7: containerAtRule
					{
					dbg.location(704,7);
					pushFollow(FOLLOW_containerAtRule_in_at_rule3950);
					containerAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(705, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:707:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(707, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt197=3;
			try { dbg.enterDecision(197, decisionCanBacktrack[197]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt197=1;
				}
				break;
			case KEYFRAMES_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt197=2;
				}
				break;
			case AT_IDENT:
				{
				int LA197_4 = input.LA(2);
				if ( ((evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")||evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")"))) ) {
					alt197=2;
				}
				else if ( (true) ) {
					alt197=3;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 197, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(197);}

			switch (alt197) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:3: moz_document
					{
					dbg.location(708,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule3963);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:18: webkitKeyframes
					{
					dbg.location(708,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule3967);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:36: generic_at_rule
					{
					dbg.location(708,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule3971);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(708, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:710:1: atRuleId : ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(710, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:2: ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt199=3;
			try { dbg.enterDecision(199, decisionCanBacktrack[199]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA199_1 = input.LA(2);
				if ( (LA199_1==DOT) ) {
					alt199=3;
				}
				else if ( (LA199_1==COMMENT||LA199_1==LBRACE||LA199_1==NL||LA199_1==WS) ) {
					alt199=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 199, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				alt199=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt199=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 199, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(199);}

			switch (alt199) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:2: IDENT
					{
					dbg.location(712,2);
					match(input,IDENT,FOLLOW_IDENT_in_atRuleId3981); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:10: STRING
					{
					dbg.location(712,10);
					match(input,STRING,FOLLOW_STRING_in_atRuleId3985); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:19: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(712,19);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "atRuleId", "isCssPreprocessorSource()");
					}dbg.location(712,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:48: ( cp_variable | sass_interpolation_expression_var )
					int alt198=2;
					try { dbg.enterSubRule(198);
					try { dbg.enterDecision(198, decisionCanBacktrack[198]);

					int LA198_0 = input.LA(1);
					if ( (LA198_0==AT_IDENT||(LA198_0 >= BOTTOMCENTER_SYM && LA198_0 <= BOTTOMRIGHT_SYM)||LA198_0==CHARSET_SYM||LA198_0==COUNTER_STYLE_SYM||LA198_0==FONT_FACE_SYM||LA198_0==IDENT||LA198_0==IMPORT_SYM||LA198_0==KEYFRAMES_SYM||(LA198_0 >= LEFTBOTTOM_SYM && LA198_0 <= LEFTTOP_SYM)||LA198_0==MEDIA_SYM||LA198_0==MOZ_DOCUMENT_SYM||LA198_0==NAMESPACE_SYM||LA198_0==PAGE_SYM||(LA198_0 >= RIGHTBOTTOM_SYM && LA198_0 <= RIGHTTOP_SYM)||(LA198_0 >= SASS_AT_ROOT && LA198_0 <= SASS_DEBUG)||(LA198_0 >= SASS_EACH && LA198_0 <= SASS_ELSE)||LA198_0==SASS_EXTEND||(LA198_0 >= SASS_FOR && LA198_0 <= SASS_FUNCTION)||(LA198_0 >= SASS_IF && LA198_0 <= SASS_MIXIN)||(LA198_0 >= SASS_RETURN && LA198_0 <= SASS_WHILE)||(LA198_0 >= TOPCENTER_SYM && LA198_0 <= TOPRIGHT_SYM)||LA198_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt198=1;
					}
					else if ( (LA198_0==HASH_SYMBOL) ) {
						alt198=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 198, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(198);}

					switch (alt198) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:50: cp_variable
							{
							dbg.location(712,50);
							pushFollow(FOLLOW_cp_variable_in_atRuleId3993);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:64: sass_interpolation_expression_var
							{
							dbg.location(712,64);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_atRuleId3997);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(198);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(713, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:<invalid or missing tree structure>
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(715, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:<invalid or missing tree structure>
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:<invalid or missing tree structure>
			{
			dbg.location(716,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule4013); if (state.failed) return;dbg.location(716,16);
			pushFollow(FOLLOW_ws_in_generic_at_rule4015);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(716,19);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:19: ( ( LBRACE )=> braceBlock2 | ( componentValue )=> componentValue )
			int alt200=2;
			try { dbg.enterSubRule(200);
			try { dbg.enterDecision(200, decisionCanBacktrack[200]);

			int LA200_0 = input.LA(1);
			if ( (LA200_0==LBRACE) ) {
				int LA200_1 = input.LA(2);
				if ( (synpred32_Css3()) ) {
					alt200=1;
				}
				else if ( (synpred33_Css3()) ) {
					alt200=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 200, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA200_0==LPAREN) && (synpred33_Css3())) {
				alt200=2;
			}
			else if ( (LA200_0==LBRACKET) && (synpred33_Css3())) {
				alt200=2;
			}
			else if ( (LA200_0==IDENT) && (synpred33_Css3())) {
				alt200=2;
			}
			else if ( ((LA200_0 >= A && LA200_0 <= I)||(LA200_0 >= IMPORTANT_SYM && LA200_0 <= LAYER_SYM)||(LA200_0 >= LEFTBOTTOM_SYM && LA200_0 <= LINE_COMMENT)||(LA200_0 >= M && LA200_0 <= R)||(LA200_0 >= REM && LA200_0 <= RIGHTTOP_SYM)||(LA200_0 >= S && LA200_0 <= Z)) && (synpred33_Css3())) {
				alt200=2;
			}

			} finally {dbg.exitDecision(200);}

			switch (alt200) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:20: ( LBRACE )=> braceBlock2
					{
					dbg.location(716,32);
					pushFollow(FOLLOW_braceBlock2_in_generic_at_rule4024);
					braceBlock2();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:46: ( componentValue )=> componentValue
					{
					dbg.location(716,66);
					pushFollow(FOLLOW_componentValue_in_generic_at_rule4034);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(200);}
			dbg.location(716,82);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:<invalid or missing tree structure>
			try { dbg.enterSubRule(202);

			loop202:
			while (true) {
				int alt202=2;
				try { dbg.enterDecision(202, decisionCanBacktrack[202]);

				int LA202_0 = input.LA(1);
				if ( (LA202_0==COMMENT||LA202_0==NL||LA202_0==WS) ) {
					int LA202_1 = input.LA(2);
					if ( (synpred35_Css3()) ) {
						alt202=1;
					}

				}

				} finally {dbg.exitDecision(202);}

				switch (alt202) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:<invalid or missing tree structure>
					{
					dbg.location(716,137);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:137: ( ws ( ( LBRACE )=> braceBlock2 | ( componentValue )=> componentValue ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:138: ws ( ( LBRACE )=> braceBlock2 | ( componentValue )=> componentValue )
					{
					dbg.location(716,138);
					pushFollow(FOLLOW_ws_in_generic_at_rule4059);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(716,141);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:141: ( ( LBRACE )=> braceBlock2 | ( componentValue )=> componentValue )
					int alt201=2;
					try { dbg.enterSubRule(201);
					try { dbg.enterDecision(201, decisionCanBacktrack[201]);

					int LA201_0 = input.LA(1);
					if ( (LA201_0==LBRACE) ) {
						int LA201_1 = input.LA(2);
						if ( (synpred36_Css3()) ) {
							alt201=1;
						}
						else if ( (synpred37_Css3()) ) {
							alt201=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 201, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA201_0==LPAREN) && (synpred37_Css3())) {
						alt201=2;
					}
					else if ( (LA201_0==LBRACKET) && (synpred37_Css3())) {
						alt201=2;
					}
					else if ( (LA201_0==IDENT) && (synpred37_Css3())) {
						alt201=2;
					}
					else if ( ((LA201_0 >= A && LA201_0 <= I)||(LA201_0 >= IMPORTANT_SYM && LA201_0 <= LAYER_SYM)||(LA201_0 >= LEFTBOTTOM_SYM && LA201_0 <= LINE_COMMENT)||(LA201_0 >= M && LA201_0 <= R)||(LA201_0 >= REM && LA201_0 <= RIGHTTOP_SYM)||(LA201_0 >= S && LA201_0 <= Z)) && (synpred37_Css3())) {
						alt201=2;
					}

					} finally {dbg.exitDecision(201);}

					switch (alt201) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:142: ( LBRACE )=> braceBlock2
							{
							dbg.location(716,154);
							pushFollow(FOLLOW_braceBlock2_in_generic_at_rule4068);
							braceBlock2();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:168: ( componentValue )=> componentValue
							{
							dbg.location(716,188);
							pushFollow(FOLLOW_componentValue_in_generic_at_rule4078);
							componentValue();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(201);}

					}

					}
					break;

				default :
					break loop202;
				}
			}
			} finally {dbg.exitSubRule(202);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(716, 205);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:718:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(718, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:719:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(720,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document4092); if (state.failed) return;dbg.location(720,19);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:19: ( ws )?
			int alt203=2;
			try { dbg.enterSubRule(203);
			try { dbg.enterDecision(203, decisionCanBacktrack[203]);

			int LA203_0 = input.LA(1);
			if ( (LA203_0==COMMENT||LA203_0==NL||LA203_0==WS) ) {
				alt203=1;
			}
			} finally {dbg.exitDecision(203);}

			switch (alt203) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:19: ws
					{
					dbg.location(720,19);
					pushFollow(FOLLOW_ws_in_moz_document4094);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(203);}
			dbg.location(720,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:25: moz_document_function ( ws )?
			{
			dbg.location(720,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document4099);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(720,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:47: ( ws )?
			int alt204=2;
			try { dbg.enterSubRule(204);
			try { dbg.enterDecision(204, decisionCanBacktrack[204]);

			int LA204_0 = input.LA(1);
			if ( (LA204_0==COMMENT||LA204_0==NL||LA204_0==WS) ) {
				alt204=1;
			}
			} finally {dbg.exitDecision(204);}

			switch (alt204) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:47: ws
					{
					dbg.location(720,47);
					pushFollow(FOLLOW_ws_in_moz_document4101);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(204);}

			}
			dbg.location(720,52);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(207);

			loop207:
			while (true) {
				int alt207=2;
				try { dbg.enterDecision(207, decisionCanBacktrack[207]);

				int LA207_0 = input.LA(1);
				if ( (LA207_0==COMMA) ) {
					alt207=1;
				}

				} finally {dbg.exitDecision(207);}

				switch (alt207) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(720,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document4107); if (state.failed) return;dbg.location(720,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:60: ( ws )?
					int alt205=2;
					try { dbg.enterSubRule(205);
					try { dbg.enterDecision(205, decisionCanBacktrack[205]);

					int LA205_0 = input.LA(1);
					if ( (LA205_0==COMMENT||LA205_0==NL||LA205_0==WS) ) {
						alt205=1;
					}
					} finally {dbg.exitDecision(205);}

					switch (alt205) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:60: ws
							{
							dbg.location(720,60);
							pushFollow(FOLLOW_ws_in_moz_document4109);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(205);}
					dbg.location(720,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document4112);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(720,86);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:86: ( ws )?
					int alt206=2;
					try { dbg.enterSubRule(206);
					try { dbg.enterDecision(206, decisionCanBacktrack[206]);

					int LA206_0 = input.LA(1);
					if ( (LA206_0==COMMENT||LA206_0==NL||LA206_0==WS) ) {
						alt206=1;
					}
					} finally {dbg.exitDecision(206);}

					switch (alt206) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:720:86: ws
							{
							dbg.location(720,86);
							pushFollow(FOLLOW_ws_in_moz_document4114);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(206);}

					}
					break;

				default :
					break loop207;
				}
			}
			} finally {dbg.exitSubRule(207);}
			dbg.location(721,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document4121); if (state.failed) return;dbg.location(721,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:721:9: ( ws )?
			int alt208=2;
			try { dbg.enterSubRule(208);
			try { dbg.enterDecision(208, decisionCanBacktrack[208]);

			int LA208_0 = input.LA(1);
			if ( (LA208_0==COMMENT||LA208_0==NL||LA208_0==WS) ) {
				alt208=1;
			}
			} finally {dbg.exitDecision(208);}

			switch (alt208) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:721:9: ws
					{
					dbg.location(721,9);
					pushFollow(FOLLOW_ws_in_moz_document4123);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(208);}
			dbg.location(722,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:722:3: ( body )?
			int alt209=2;
			try { dbg.enterSubRule(209);
			try { dbg.enterDecision(209, decisionCanBacktrack[209]);

			int LA209_0 = input.LA(1);
			if ( ((LA209_0 >= AT_IDENT && LA209_0 <= AT_SIGN)||(LA209_0 >= BOTTOMCENTER_SYM && LA209_0 <= BOTTOMRIGHT_SYM)||(LA209_0 >= CHARSET_SYM && LA209_0 <= COLON)||LA209_0==CONTAINER_SYM||LA209_0==COUNTER_STYLE_SYM||(LA209_0 >= DCOLON && LA209_0 <= DOT)||LA209_0==FONT_FACE_SYM||(LA209_0 >= GEN && LA209_0 <= GREATER)||(LA209_0 >= HASH && LA209_0 <= HASH_SYMBOL)||LA209_0==IDENT||LA209_0==IMPORT_SYM||LA209_0==KEYFRAMES_SYM||LA209_0==LAYER_SYM||(LA209_0 >= LBRACKET && LA209_0 <= LEFTTOP_SYM)||LA209_0==LESS_AND||(LA209_0 >= MEDIA_SYM && LA209_0 <= MOZ_DOCUMENT_SYM)||LA209_0==NAMESPACE_SYM||LA209_0==PAGE_SYM||(LA209_0 >= PIPE && LA209_0 <= PLUS)||(LA209_0 >= RIGHTBOTTOM_SYM && LA209_0 <= RIGHTTOP_SYM)||(LA209_0 >= SASS_AT_ROOT && LA209_0 <= SASS_DEBUG)||(LA209_0 >= SASS_EACH && LA209_0 <= SASS_ELSE)||(LA209_0 >= SASS_EXTEND && LA209_0 <= SASS_FUNCTION)||(LA209_0 >= SASS_IF && LA209_0 <= SASS_MIXIN)||(LA209_0 >= SASS_RETURN && LA209_0 <= SEMI)||LA209_0==STAR||LA209_0==SUPPORTS_SYM||LA209_0==TILDE||(LA209_0 >= TOPCENTER_SYM && LA209_0 <= TOPRIGHT_SYM)||LA209_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt209=1;
			}
			} finally {dbg.exitDecision(209);}

			switch (alt209) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:722:3: body
					{
					dbg.location(722,3);
					pushFollow(FOLLOW_body_in_moz_document4128);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(209);}
			dbg.location(723,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document4133); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(724, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:726:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(726, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(727,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(729, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:1: webkitKeyframes : ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT ) ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(732, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:733:2: ( ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT ) ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:2: ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT ) ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(734,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:2: ( WEBKIT_KEYFRAMES_SYM | KEYFRAMES_SYM |{...}? AT_IDENT |{...}? AT_IDENT )
			int alt210=4;
			try { dbg.enterSubRule(210);
			try { dbg.enterDecision(210, decisionCanBacktrack[210]);

			switch ( input.LA(1) ) {
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt210=1;
				}
				break;
			case KEYFRAMES_SYM:
				{
				alt210=2;
				}
				break;
			case AT_IDENT:
				{
				int LA210_3 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")) ) {
					alt210=3;
				}
				else if ( (evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")")) ) {
					alt210=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 210, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 210, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(210);}

			switch (alt210) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:4: WEBKIT_KEYFRAMES_SYM
					{
					dbg.location(734,4);
					match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes4172); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:27: KEYFRAMES_SYM
					{
					dbg.location(734,27);
					match(input,KEYFRAMES_SYM,FOLLOW_KEYFRAMES_SYM_in_webkitKeyframes4176); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:43: {...}? AT_IDENT
					{
					dbg.location(734,43);
					if ( !(evalPredicate(tokenNameEquals("@-moz-keyframes"),"tokenNameEquals(\"@-moz-keyframes\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframes", "tokenNameEquals(\"@-moz-keyframes\")");
					}dbg.location(734,81);
					match(input,AT_IDENT,FOLLOW_AT_IDENT_in_webkitKeyframes4182); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:92: {...}? AT_IDENT
					{
					dbg.location(734,92);
					if ( !(evalPredicate(tokenNameEquals("@-o-keyframes"),"tokenNameEquals(\"@-o-keyframes\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframes", "tokenNameEquals(\"@-o-keyframes\")");
					}dbg.location(734,128);
					match(input,AT_IDENT,FOLLOW_AT_IDENT_in_webkitKeyframes4188); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(210);}
			dbg.location(734,139);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:139: ( ws )?
			int alt211=2;
			try { dbg.enterSubRule(211);
			try { dbg.enterDecision(211, decisionCanBacktrack[211]);

			int LA211_0 = input.LA(1);
			if ( (LA211_0==COMMENT||LA211_0==NL||LA211_0==WS) ) {
				alt211=1;
			}
			} finally {dbg.exitDecision(211);}

			switch (alt211) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:139: ws
					{
					dbg.location(734,139);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4192);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(211);}
			dbg.location(734,143);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes4195);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(734,152);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:152: ( ws )?
			int alt212=2;
			try { dbg.enterSubRule(212);
			try { dbg.enterDecision(212, decisionCanBacktrack[212]);

			int LA212_0 = input.LA(1);
			if ( (LA212_0==COMMENT||LA212_0==NL||LA212_0==WS) ) {
				alt212=1;
			}
			} finally {dbg.exitDecision(212);}

			switch (alt212) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:152: ws
					{
					dbg.location(734,152);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4197);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(212);}
			dbg.location(735,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes4201); if (state.failed) return;dbg.location(735,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:9: ( ws )?
			int alt213=2;
			try { dbg.enterSubRule(213);
			try { dbg.enterDecision(213, decisionCanBacktrack[213]);

			int LA213_0 = input.LA(1);
			if ( (LA213_0==COMMENT||LA213_0==NL||LA213_0==WS) ) {
				alt213=1;
			}
			} finally {dbg.exitDecision(213);}

			switch (alt213) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:9: ws
					{
					dbg.location(735,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes4203);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(213);}
			dbg.location(736,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(215);

			loop215:
			while (true) {
				int alt215=2;
				try { dbg.enterDecision(215, decisionCanBacktrack[215]);

				int LA215_0 = input.LA(1);
				if ( (LA215_0==IDENT||LA215_0==PERCENTAGE||LA215_0==SASS_CONTENT) ) {
					alt215=1;
				}

				} finally {dbg.exitDecision(215);}

				switch (alt215) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(736,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes4210);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(736,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:26: ( ws )?
					int alt214=2;
					try { dbg.enterSubRule(214);
					try { dbg.enterDecision(214, decisionCanBacktrack[214]);

					int LA214_0 = input.LA(1);
					if ( (LA214_0==COMMENT||LA214_0==NL||LA214_0==WS) ) {
						alt214=1;
					}
					} finally {dbg.exitDecision(214);}

					switch (alt214) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:26: ws
							{
							dbg.location(736,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes4212);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(214);}

					}
					break;

				default :
					break loop215;
				}
			}
			} finally {dbg.exitSubRule(215);}
			dbg.location(737,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes4219); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(738, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:740:1: webkitKeyframesBlock : ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? );
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(740, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? )
			int alt220=2;
			try { dbg.enterDecision(220, decisionCanBacktrack[220]);

			int LA220_0 = input.LA(1);
			if ( (LA220_0==IDENT||LA220_0==PERCENTAGE) ) {
				alt220=1;
			}
			else if ( (LA220_0==SASS_CONTENT) ) {
				alt220=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 220, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(220);}

			switch (alt220) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(742,2);
					pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock4231);
					webkitKeyframeSelectors();
					state._fsp--;
					if (state.failed) return;dbg.location(742,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:26: ( ws )?
					int alt216=2;
					try { dbg.enterSubRule(216);
					try { dbg.enterDecision(216, decisionCanBacktrack[216]);

					int LA216_0 = input.LA(1);
					if ( (LA216_0==COMMENT||LA216_0==NL||LA216_0==WS) ) {
						alt216=1;
					}
					} finally {dbg.exitDecision(216);}

					switch (alt216) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:26: ws
							{
							dbg.location(742,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock4233);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(216);}
					dbg.location(743,2);
					match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock4237); if (state.failed) return;dbg.location(743,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:10: ( ws )?
					int alt217=2;
					try { dbg.enterSubRule(217);
					try { dbg.enterDecision(217, decisionCanBacktrack[217]);

					int LA217_0 = input.LA(1);
					if ( (LA217_0==COMMENT||LA217_0==NL||LA217_0==WS) ) {
						alt217=1;
					}
					} finally {dbg.exitDecision(217);}

					switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:10: ws
							{
							dbg.location(743,10);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock4240);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(217);}
					dbg.location(743,14);
					pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock4243);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(744,3);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:744:3: ( declarations )?
					int alt218=2;
					try { dbg.enterSubRule(218);
					try { dbg.enterDecision(218, decisionCanBacktrack[218]);

					int LA218_0 = input.LA(1);
					if ( ((LA218_0 >= AT_IDENT && LA218_0 <= AT_SIGN)||(LA218_0 >= BOTTOMCENTER_SYM && LA218_0 <= BOTTOMRIGHT_SYM)||(LA218_0 >= CHARSET_SYM && LA218_0 <= COLON)||LA218_0==CONTAINER_SYM||LA218_0==COUNTER_STYLE_SYM||(LA218_0 >= DCOLON && LA218_0 <= DOT)||LA218_0==FONT_FACE_SYM||(LA218_0 >= GEN && LA218_0 <= GREATER)||(LA218_0 >= HASH && LA218_0 <= HASH_SYMBOL)||LA218_0==IDENT||LA218_0==IMPORT_SYM||LA218_0==KEYFRAMES_SYM||LA218_0==LAYER_SYM||(LA218_0 >= LBRACKET && LA218_0 <= LEFTTOP_SYM)||LA218_0==LESS_AND||(LA218_0 >= MEDIA_SYM && LA218_0 <= MOZ_DOCUMENT_SYM)||LA218_0==NAMESPACE_SYM||LA218_0==PAGE_SYM||(LA218_0 >= PIPE && LA218_0 <= PLUS)||(LA218_0 >= RIGHTBOTTOM_SYM && LA218_0 <= RIGHTTOP_SYM)||(LA218_0 >= SASS_AT_ROOT && LA218_0 <= SASS_DEBUG)||(LA218_0 >= SASS_EACH && LA218_0 <= SASS_ELSE)||(LA218_0 >= SASS_ERROR && LA218_0 <= SASS_FUNCTION)||(LA218_0 >= SASS_IF && LA218_0 <= SASS_MIXIN)||(LA218_0 >= SASS_RETURN && LA218_0 <= SEMI)||LA218_0==STAR||LA218_0==SUPPORTS_SYM||LA218_0==TILDE||(LA218_0 >= TOPCENTER_SYM && LA218_0 <= TOPRIGHT_SYM)||LA218_0==VARIABLE||LA218_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt218=1;
					}
					} finally {dbg.exitDecision(218);}

					switch (alt218) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:744:3: declarations
							{
							dbg.location(744,3);
							pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock4247);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(218);}
					dbg.location(745,2);
					match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock4251); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:11: {...}?{...}? sass_content ( SEMI )?
					{
					dbg.location(746,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(746,30);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(746,48);
					pushFollow(FOLLOW_sass_content_in_webkitKeyframesBlock4268);
					sass_content();
					state._fsp--;
					if (state.failed) return;dbg.location(746,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:61: ( SEMI )?
					int alt219=2;
					try { dbg.enterSubRule(219);
					try { dbg.enterDecision(219, decisionCanBacktrack[219]);

					int LA219_0 = input.LA(1);
					if ( (LA219_0==SEMI) ) {
						alt219=1;
					}
					} finally {dbg.exitDecision(219);}

					switch (alt219) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:61: SEMI
							{
							dbg.location(746,61);
							match(input,SEMI,FOLLOW_SEMI_in_webkitKeyframesBlock4270); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(219);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(747, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:1: webkitKeyframeSelectors : ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(749, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:750:2: ( ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			{
			dbg.location(751,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
			int alt221=3;
			try { dbg.enterSubRule(221);
			try { dbg.enterDecision(221, decisionCanBacktrack[221]);

			int LA221_0 = input.LA(1);
			if ( (LA221_0==IDENT) ) {
				int LA221_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
					alt221=1;
				}
				else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
					alt221=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 221, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA221_0==PERCENTAGE) ) {
				alt221=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 221, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(221);}

			switch (alt221) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:4: {...}? IDENT
					{
					dbg.location(751,4);
					if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
					}dbg.location(751,31);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4287); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:39: {...}? IDENT
					{
					dbg.location(751,39);
					if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
					}dbg.location(751,64);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4293); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:72: PERCENTAGE
					{
					dbg.location(751,72);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4297); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(221);}
			dbg.location(751,85);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(225);

			loop225:
			while (true) {
				int alt225=2;
				try { dbg.enterDecision(225, decisionCanBacktrack[225]);

				try {
					isCyclicDecision = true;
					alt225 = dfa225.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(225);}

				switch (alt225) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:87: ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					{
					dbg.location(751,87);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:87: ( ws )?
					int alt222=2;
					try { dbg.enterSubRule(222);
					try { dbg.enterDecision(222, decisionCanBacktrack[222]);

					int LA222_0 = input.LA(1);
					if ( (LA222_0==COMMENT||LA222_0==NL||LA222_0==WS) ) {
						alt222=1;
					}
					} finally {dbg.exitDecision(222);}

					switch (alt222) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:87: ws
							{
							dbg.location(751,87);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors4303);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(222);}
					dbg.location(751,91);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors4306); if (state.failed) return;dbg.location(751,97);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:97: ( ws )?
					int alt223=2;
					try { dbg.enterSubRule(223);
					try { dbg.enterDecision(223, decisionCanBacktrack[223]);

					int LA223_0 = input.LA(1);
					if ( (LA223_0==COMMENT||LA223_0==NL||LA223_0==WS) ) {
						alt223=1;
					}
					} finally {dbg.exitDecision(223);}

					switch (alt223) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:97: ws
							{
							dbg.location(751,97);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors4308);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(223);}
					dbg.location(751,101);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:101: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					int alt224=3;
					try { dbg.enterSubRule(224);
					try { dbg.enterDecision(224, decisionCanBacktrack[224]);

					int LA224_0 = input.LA(1);
					if ( (LA224_0==IDENT) ) {
						int LA224_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
							alt224=1;
						}
						else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
							alt224=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 224, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA224_0==PERCENTAGE) ) {
						alt224=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 224, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(224);}

					switch (alt224) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:103: {...}? IDENT
							{
							dbg.location(751,103);
							if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
							}dbg.location(751,130);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4315); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:138: {...}? IDENT
							{
							dbg.location(751,138);
							if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
							}dbg.location(751,163);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors4321); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:171: PERCENTAGE
							{
							dbg.location(751,171);
							match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4325); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(224);}

					}
					break;

				default :
					break loop225;
				}
			}
			} finally {dbg.exitSubRule(225);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(752, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:754:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE ;
	public final void page() throws RecognitionException {

		    boolean semiRequired = false;

		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(754, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE
			{
			dbg.location(758,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page4349); if (state.failed) return;dbg.location(758,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:16: ( ws )?
			int alt226=2;
			try { dbg.enterSubRule(226);
			try { dbg.enterDecision(226, decisionCanBacktrack[226]);

			int LA226_0 = input.LA(1);
			if ( (LA226_0==COMMENT||LA226_0==NL||LA226_0==WS) ) {
				alt226=1;
			}
			} finally {dbg.exitDecision(226);}

			switch (alt226) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:16: ws
					{
					dbg.location(758,16);
					pushFollow(FOLLOW_ws_in_page4351);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(226);}
			dbg.location(758,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:20: ( IDENT ( ws )? )?
			int alt228=2;
			try { dbg.enterSubRule(228);
			try { dbg.enterDecision(228, decisionCanBacktrack[228]);

			int LA228_0 = input.LA(1);
			if ( (LA228_0==IDENT) ) {
				alt228=1;
			}
			} finally {dbg.exitDecision(228);}

			switch (alt228) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:22: IDENT ( ws )?
					{
					dbg.location(758,22);
					match(input,IDENT,FOLLOW_IDENT_in_page4356); if (state.failed) return;dbg.location(758,28);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:28: ( ws )?
					int alt227=2;
					try { dbg.enterSubRule(227);
					try { dbg.enterDecision(227, decisionCanBacktrack[227]);

					int LA227_0 = input.LA(1);
					if ( (LA227_0==COMMENT||LA227_0==NL||LA227_0==WS) ) {
						alt227=1;
					}
					} finally {dbg.exitDecision(227);}

					switch (alt227) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:28: ws
							{
							dbg.location(758,28);
							pushFollow(FOLLOW_ws_in_page4358);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(227);}

					}
					break;

			}
			} finally {dbg.exitSubRule(228);}
			dbg.location(758,35);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:35: ( pseudoPage ( ws )? )?
			int alt230=2;
			try { dbg.enterSubRule(230);
			try { dbg.enterDecision(230, decisionCanBacktrack[230]);

			int LA230_0 = input.LA(1);
			if ( (LA230_0==COLON) ) {
				alt230=1;
			}
			} finally {dbg.exitDecision(230);}

			switch (alt230) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:36: pseudoPage ( ws )?
					{
					dbg.location(758,36);
					pushFollow(FOLLOW_pseudoPage_in_page4365);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(758,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:47: ( ws )?
					int alt229=2;
					try { dbg.enterSubRule(229);
					try { dbg.enterDecision(229, decisionCanBacktrack[229]);

					int LA229_0 = input.LA(1);
					if ( (LA229_0==COMMENT||LA229_0==NL||LA229_0==WS) ) {
						alt229=1;
					}
					} finally {dbg.exitDecision(229);}

					switch (alt229) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:47: ws
							{
							dbg.location(758,47);
							pushFollow(FOLLOW_ws_in_page4367);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(229);}

					}
					break;

			}
			} finally {dbg.exitSubRule(230);}
			dbg.location(759,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page4380); if (state.failed) return;dbg.location(762,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*
			try { dbg.enterSubRule(237);

			loop237:
			while (true) {
				int alt237=2;
				try { dbg.enterDecision(237, decisionCanBacktrack[237]);

				try {
					isCyclicDecision = true;
					alt237 = dfa237.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(237);}

				switch (alt237) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:15: ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin )
					{
					dbg.location(762,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:15: ( ws )?
					int alt231=2;
					try { dbg.enterSubRule(231);
					try { dbg.enterDecision(231, decisionCanBacktrack[231]);

					int LA231_0 = input.LA(1);
					if ( (LA231_0==COMMENT||LA231_0==NL||LA231_0==WS) ) {
						alt231=1;
					}
					} finally {dbg.exitDecision(231);}

					switch (alt231) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:15: ws
							{
							dbg.location(762,15);
							pushFollow(FOLLOW_ws_in_page4422);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(231);}
					dbg.location(762,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:19: ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? )
					int alt235=2;
					try { dbg.enterSubRule(235);
					try { dbg.enterDecision(235, decisionCanBacktrack[235]);

					int LA235_0 = input.LA(1);
					if ( (LA235_0==SEMI) ) {
						int LA235_1 = input.LA(2);
						if ( (evalPredicate(semiRequired,"semiRequired")) ) {
							alt235=1;
						}
						else if ( (true) ) {
							alt235=2;
						}

					}
					else if ( ((LA235_0 >= AT_IDENT && LA235_0 <= AT_SIGN)||(LA235_0 >= BOTTOMCENTER_SYM && LA235_0 <= BOTTOMRIGHT_SYM)||LA235_0==CHARSET_SYM||LA235_0==COUNTER_STYLE_SYM||LA235_0==FONT_FACE_SYM||LA235_0==GEN||LA235_0==HASH_SYMBOL||LA235_0==IDENT||LA235_0==IMPORT_SYM||LA235_0==KEYFRAMES_SYM||(LA235_0 >= LEFTBOTTOM_SYM && LA235_0 <= LEFTTOP_SYM)||(LA235_0 >= MEDIA_SYM && LA235_0 <= MOZ_DOCUMENT_SYM)||LA235_0==NAMESPACE_SYM||LA235_0==PAGE_SYM||(LA235_0 >= RIGHTBOTTOM_SYM && LA235_0 <= RIGHTTOP_SYM)||(LA235_0 >= SASS_AT_ROOT && LA235_0 <= SASS_DEBUG)||(LA235_0 >= SASS_EACH && LA235_0 <= SASS_ELSE)||LA235_0==SASS_EXTEND||(LA235_0 >= SASS_FOR && LA235_0 <= SASS_FUNCTION)||(LA235_0 >= SASS_IF && LA235_0 <= SASS_MIXIN)||(LA235_0 >= SASS_RETURN && LA235_0 <= SASS_WHILE)||LA235_0==STAR||(LA235_0 >= TOPCENTER_SYM && LA235_0 <= TOPRIGHT_SYM)||LA235_0==VARIABLE||LA235_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt235=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 235, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(235);}

					switch (alt235) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:20: {...}? ( SEMI ( ws )? )
							{
							dbg.location(762,20);
							if ( !(evalPredicate(semiRequired,"semiRequired")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "page", "semiRequired");
							}dbg.location(762,36);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:36: ( SEMI ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:37: SEMI ( ws )?
							{
							dbg.location(762,37);
							match(input,SEMI,FOLLOW_SEMI_in_page4429); if (state.failed) return;dbg.location(762,42);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:42: ( ws )?
							int alt232=2;
							try { dbg.enterSubRule(232);
							try { dbg.enterDecision(232, decisionCanBacktrack[232]);

							int LA232_0 = input.LA(1);
							if ( (LA232_0==COMMENT||LA232_0==NL||LA232_0==WS) ) {
								alt232=1;
							}
							} finally {dbg.exitDecision(232);}

							switch (alt232) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:42: ws
									{
									dbg.location(762,42);
									pushFollow(FOLLOW_ws_in_page4431);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(232);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:49: ( SEMI ( ws )? )?
							{
							dbg.location(762,49);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:49: ( SEMI ( ws )? )?
							int alt234=2;
							try { dbg.enterSubRule(234);
							try { dbg.enterDecision(234, decisionCanBacktrack[234]);

							int LA234_0 = input.LA(1);
							if ( (LA234_0==SEMI) ) {
								alt234=1;
							}
							} finally {dbg.exitDecision(234);}

							switch (alt234) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:50: SEMI ( ws )?
									{
									dbg.location(762,50);
									match(input,SEMI,FOLLOW_SEMI_in_page4438); if (state.failed) return;dbg.location(762,55);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:55: ( ws )?
									int alt233=2;
									try { dbg.enterSubRule(233);
									try { dbg.enterDecision(233, decisionCanBacktrack[233]);

									int LA233_0 = input.LA(1);
									if ( (LA233_0==COMMENT||LA233_0==NL||LA233_0==WS) ) {
										alt233=1;
									}
									} finally {dbg.exitDecision(233);}

									switch (alt233) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:55: ws
											{
											dbg.location(762,55);
											pushFollow(FOLLOW_ws_in_page4440);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(233);}

									}
									break;

							}
							} finally {dbg.exitSubRule(234);}

							}
							break;

					}
					} finally {dbg.exitSubRule(235);}
					dbg.location(762,62);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:62: ( propertyDeclaration | margin )
					int alt236=2;
					try { dbg.enterSubRule(236);
					try { dbg.enterDecision(236, decisionCanBacktrack[236]);

					try {
						isCyclicDecision = true;
						alt236 = dfa236.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(236);}

					switch (alt236) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:63: propertyDeclaration
							{
							dbg.location(762,63);
							pushFollow(FOLLOW_propertyDeclaration_in_page4447);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;dbg.location(762,82);
							if ( state.backtracking==0 ) {semiRequired=true;}
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:762:103: margin
							{
							dbg.location(762,103);
							pushFollow(FOLLOW_margin_in_page4450);
							margin();
							state._fsp--;
							if (state.failed) return;dbg.location(762,109);
							if ( state.backtracking==0 ) {semiRequired=false;}
							}
							break;

					}
					} finally {dbg.exitSubRule(236);}

					}
					break;

				default :
					break loop237;
				}
			}
			} finally {dbg.exitSubRule(237);}
			dbg.location(763,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:763:13: ( SEMI )?
			int alt238=2;
			try { dbg.enterSubRule(238);
			try { dbg.enterDecision(238, decisionCanBacktrack[238]);

			int LA238_0 = input.LA(1);
			if ( (LA238_0==SEMI) ) {
				alt238=1;
			}
			} finally {dbg.exitDecision(238);}

			switch (alt238) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:763:13: SEMI
					{
					dbg.location(763,13);
					match(input,SEMI,FOLLOW_SEMI_in_page4468); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(238);}
			dbg.location(764,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:13: ( ws )?
			int alt239=2;
			try { dbg.enterSubRule(239);
			try { dbg.enterDecision(239, decisionCanBacktrack[239]);

			int LA239_0 = input.LA(1);
			if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {
				alt239=1;
			}
			} finally {dbg.exitDecision(239);}

			switch (alt239) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:13: ws
					{
					dbg.location(764,13);
					pushFollow(FOLLOW_ws_in_page4483);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(239);}
			dbg.location(765,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page4494); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(766, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(768, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(769,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle4511); if (state.failed) return;dbg.location(769,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:25: ( ws )?
			int alt240=2;
			try { dbg.enterSubRule(240);
			try { dbg.enterDecision(240, decisionCanBacktrack[240]);

			int LA240_0 = input.LA(1);
			if ( (LA240_0==COMMENT||LA240_0==NL||LA240_0==WS) ) {
				alt240=1;
			}
			} finally {dbg.exitDecision(240);}

			switch (alt240) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:25: ws
					{
					dbg.location(769,25);
					pushFollow(FOLLOW_ws_in_counterStyle4513);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(240);}
			dbg.location(769,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle4516); if (state.failed) return;dbg.location(769,35);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:35: ( ws )?
			int alt241=2;
			try { dbg.enterSubRule(241);
			try { dbg.enterDecision(241, decisionCanBacktrack[241]);

			int LA241_0 = input.LA(1);
			if ( (LA241_0==COMMENT||LA241_0==NL||LA241_0==WS) ) {
				alt241=1;
			}
			} finally {dbg.exitDecision(241);}

			switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:35: ws
					{
					dbg.location(769,35);
					pushFollow(FOLLOW_ws_in_counterStyle4518);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(241);}
			dbg.location(770,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle4529); if (state.failed) return;dbg.location(770,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:770:16: ( ws )?
			int alt242=2;
			try { dbg.enterSubRule(242);
			try { dbg.enterDecision(242, decisionCanBacktrack[242]);

			int LA242_0 = input.LA(1);
			if ( (LA242_0==COMMENT||LA242_0==NL||LA242_0==WS) ) {
				alt242=1;
			}
			} finally {dbg.exitDecision(242);}

			switch (alt242) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:770:16: ws
					{
					dbg.location(770,16);
					pushFollow(FOLLOW_ws_in_counterStyle4531);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(242);}
			dbg.location(770,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle4534);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(771,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:771:3: ( declarations )?
			int alt243=2;
			try { dbg.enterSubRule(243);
			try { dbg.enterDecision(243, decisionCanBacktrack[243]);

			int LA243_0 = input.LA(1);
			if ( ((LA243_0 >= AT_IDENT && LA243_0 <= AT_SIGN)||(LA243_0 >= BOTTOMCENTER_SYM && LA243_0 <= BOTTOMRIGHT_SYM)||(LA243_0 >= CHARSET_SYM && LA243_0 <= COLON)||LA243_0==CONTAINER_SYM||LA243_0==COUNTER_STYLE_SYM||(LA243_0 >= DCOLON && LA243_0 <= DOT)||LA243_0==FONT_FACE_SYM||(LA243_0 >= GEN && LA243_0 <= GREATER)||(LA243_0 >= HASH && LA243_0 <= HASH_SYMBOL)||LA243_0==IDENT||LA243_0==IMPORT_SYM||LA243_0==KEYFRAMES_SYM||LA243_0==LAYER_SYM||(LA243_0 >= LBRACKET && LA243_0 <= LEFTTOP_SYM)||LA243_0==LESS_AND||(LA243_0 >= MEDIA_SYM && LA243_0 <= MOZ_DOCUMENT_SYM)||LA243_0==NAMESPACE_SYM||LA243_0==PAGE_SYM||(LA243_0 >= PIPE && LA243_0 <= PLUS)||(LA243_0 >= RIGHTBOTTOM_SYM && LA243_0 <= RIGHTTOP_SYM)||(LA243_0 >= SASS_AT_ROOT && LA243_0 <= SASS_DEBUG)||(LA243_0 >= SASS_EACH && LA243_0 <= SASS_ELSE)||(LA243_0 >= SASS_ERROR && LA243_0 <= SASS_FUNCTION)||(LA243_0 >= SASS_IF && LA243_0 <= SASS_MIXIN)||(LA243_0 >= SASS_RETURN && LA243_0 <= SEMI)||LA243_0==STAR||LA243_0==SUPPORTS_SYM||LA243_0==TILDE||(LA243_0 >= TOPCENTER_SYM && LA243_0 <= TOPRIGHT_SYM)||LA243_0==VARIABLE||LA243_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt243=1;
			}
			} finally {dbg.exitDecision(243);}

			switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:771:3: declarations
					{
					dbg.location(771,3);
					pushFollow(FOLLOW_declarations_in_counterStyle4538);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(243);}
			dbg.location(772,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle4549); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(773, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(775, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(776,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace4566); if (state.failed) return;dbg.location(776,21);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:21: ( ws )?
			int alt244=2;
			try { dbg.enterSubRule(244);
			try { dbg.enterDecision(244, decisionCanBacktrack[244]);

			int LA244_0 = input.LA(1);
			if ( (LA244_0==COMMENT||LA244_0==NL||LA244_0==WS) ) {
				alt244=1;
			}
			} finally {dbg.exitDecision(244);}

			switch (alt244) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:21: ws
					{
					dbg.location(776,21);
					pushFollow(FOLLOW_ws_in_fontFace4568);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(244);}
			dbg.location(777,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace4579); if (state.failed) return;dbg.location(777,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:16: ( ws )?
			int alt245=2;
			try { dbg.enterSubRule(245);
			try { dbg.enterDecision(245, decisionCanBacktrack[245]);

			int LA245_0 = input.LA(1);
			if ( (LA245_0==COMMENT||LA245_0==NL||LA245_0==WS) ) {
				alt245=1;
			}
			} finally {dbg.exitDecision(245);}

			switch (alt245) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:16: ws
					{
					dbg.location(777,16);
					pushFollow(FOLLOW_ws_in_fontFace4581);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(245);}
			dbg.location(777,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace4584);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(778,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:778:3: ( declarations )?
			int alt246=2;
			try { dbg.enterSubRule(246);
			try { dbg.enterDecision(246, decisionCanBacktrack[246]);

			int LA246_0 = input.LA(1);
			if ( ((LA246_0 >= AT_IDENT && LA246_0 <= AT_SIGN)||(LA246_0 >= BOTTOMCENTER_SYM && LA246_0 <= BOTTOMRIGHT_SYM)||(LA246_0 >= CHARSET_SYM && LA246_0 <= COLON)||LA246_0==CONTAINER_SYM||LA246_0==COUNTER_STYLE_SYM||(LA246_0 >= DCOLON && LA246_0 <= DOT)||LA246_0==FONT_FACE_SYM||(LA246_0 >= GEN && LA246_0 <= GREATER)||(LA246_0 >= HASH && LA246_0 <= HASH_SYMBOL)||LA246_0==IDENT||LA246_0==IMPORT_SYM||LA246_0==KEYFRAMES_SYM||LA246_0==LAYER_SYM||(LA246_0 >= LBRACKET && LA246_0 <= LEFTTOP_SYM)||LA246_0==LESS_AND||(LA246_0 >= MEDIA_SYM && LA246_0 <= MOZ_DOCUMENT_SYM)||LA246_0==NAMESPACE_SYM||LA246_0==PAGE_SYM||(LA246_0 >= PIPE && LA246_0 <= PLUS)||(LA246_0 >= RIGHTBOTTOM_SYM && LA246_0 <= RIGHTTOP_SYM)||(LA246_0 >= SASS_AT_ROOT && LA246_0 <= SASS_DEBUG)||(LA246_0 >= SASS_EACH && LA246_0 <= SASS_ELSE)||(LA246_0 >= SASS_ERROR && LA246_0 <= SASS_FUNCTION)||(LA246_0 >= SASS_IF && LA246_0 <= SASS_MIXIN)||(LA246_0 >= SASS_RETURN && LA246_0 <= SEMI)||LA246_0==STAR||LA246_0==SUPPORTS_SYM||LA246_0==TILDE||(LA246_0 >= TOPCENTER_SYM && LA246_0 <= TOPRIGHT_SYM)||LA246_0==VARIABLE||LA246_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt246=1;
			}
			} finally {dbg.exitDecision(246);}

			switch (alt246) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:778:3: declarations
					{
					dbg.location(778,3);
					pushFollow(FOLLOW_declarations_in_fontFace4588);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(246);}
			dbg.location(779,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace4599); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(780, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:782:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(782, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(783,4);
			pushFollow(FOLLOW_margin_sym_in_margin4613);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(783,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:15: ( ws )?
			int alt247=2;
			try { dbg.enterSubRule(247);
			try { dbg.enterDecision(247, decisionCanBacktrack[247]);

			int LA247_0 = input.LA(1);
			if ( (LA247_0==COMMENT||LA247_0==NL||LA247_0==WS) ) {
				alt247=1;
			}
			} finally {dbg.exitDecision(247);}

			switch (alt247) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:15: ws
					{
					dbg.location(783,15);
					pushFollow(FOLLOW_ws_in_margin4615);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(247);}
			dbg.location(783,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin4618); if (state.failed) return;dbg.location(783,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:26: ( ws )?
			int alt248=2;
			try { dbg.enterSubRule(248);
			try { dbg.enterDecision(248, decisionCanBacktrack[248]);

			int LA248_0 = input.LA(1);
			if ( (LA248_0==COMMENT||LA248_0==NL||LA248_0==WS) ) {
				alt248=1;
			}
			} finally {dbg.exitDecision(248);}

			switch (alt248) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:26: ws
					{
					dbg.location(783,26);
					pushFollow(FOLLOW_ws_in_margin4620);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(248);}
			dbg.location(783,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin4623);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(783,53);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:53: ( declarations )?
			int alt249=2;
			try { dbg.enterSubRule(249);
			try { dbg.enterDecision(249, decisionCanBacktrack[249]);

			int LA249_0 = input.LA(1);
			if ( ((LA249_0 >= AT_IDENT && LA249_0 <= AT_SIGN)||(LA249_0 >= BOTTOMCENTER_SYM && LA249_0 <= BOTTOMRIGHT_SYM)||(LA249_0 >= CHARSET_SYM && LA249_0 <= COLON)||LA249_0==CONTAINER_SYM||LA249_0==COUNTER_STYLE_SYM||(LA249_0 >= DCOLON && LA249_0 <= DOT)||LA249_0==FONT_FACE_SYM||(LA249_0 >= GEN && LA249_0 <= GREATER)||(LA249_0 >= HASH && LA249_0 <= HASH_SYMBOL)||LA249_0==IDENT||LA249_0==IMPORT_SYM||LA249_0==KEYFRAMES_SYM||LA249_0==LAYER_SYM||(LA249_0 >= LBRACKET && LA249_0 <= LEFTTOP_SYM)||LA249_0==LESS_AND||(LA249_0 >= MEDIA_SYM && LA249_0 <= MOZ_DOCUMENT_SYM)||LA249_0==NAMESPACE_SYM||LA249_0==PAGE_SYM||(LA249_0 >= PIPE && LA249_0 <= PLUS)||(LA249_0 >= RIGHTBOTTOM_SYM && LA249_0 <= RIGHTTOP_SYM)||(LA249_0 >= SASS_AT_ROOT && LA249_0 <= SASS_DEBUG)||(LA249_0 >= SASS_EACH && LA249_0 <= SASS_ELSE)||(LA249_0 >= SASS_ERROR && LA249_0 <= SASS_FUNCTION)||(LA249_0 >= SASS_IF && LA249_0 <= SASS_MIXIN)||(LA249_0 >= SASS_RETURN && LA249_0 <= SEMI)||LA249_0==STAR||LA249_0==SUPPORTS_SYM||LA249_0==TILDE||(LA249_0 >= TOPCENTER_SYM && LA249_0 <= TOPRIGHT_SYM)||LA249_0==VARIABLE||LA249_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt249=1;
			}
			} finally {dbg.exitDecision(249);}

			switch (alt249) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:783:53: declarations
					{
					dbg.location(783,53);
					pushFollow(FOLLOW_declarations_in_margin4625);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(249);}
			dbg.location(783,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin4628); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(784, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(786, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:787:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(787,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(804, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:806:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(806, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:807:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:807:7: COLON IDENT
			{
			dbg.location(807,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage4837); if (state.failed) return;dbg.location(807,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage4839); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(808, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:810:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(810, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:811:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(811,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(813, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:815:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(815, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:816:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(816,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(818, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:820:1: property : ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(820, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:821:5: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable )
			int alt250=6;
			try { dbg.enterDecision(250, decisionCanBacktrack[250]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				switch ( input.LA(2) ) {
				case DOT:
					{
					alt250=6;
					}
					break;
				case HASH_SYMBOL:
					{
					alt250=1;
					}
					break;
				case AT_SIGN:
					{
					alt250=2;
					}
					break;
				case COLON:
				case COMMENT:
				case NL:
				case WS:
					{
					alt250=4;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 250, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH_SYMBOL:
				{
				alt250=1;
				}
				break;
			case AT_SIGN:
				{
				alt250=2;
				}
				break;
			case VARIABLE:
				{
				alt250=3;
				}
				break;
			case MINUS:
				{
				int LA250_5 = input.LA(2);
				if ( (LA250_5==HASH_SYMBOL) ) {
					alt250=1;
				}
				else if ( (LA250_5==AT_SIGN) ) {
					alt250=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 250, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt250=5;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt250=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 250, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(250);}

			switch (alt250) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:825:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(825,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(825,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property4923);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:826:7: {...}? less_selector_interpolation_exp
					{
					dbg.location(826,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isLessSource()");
					}dbg.location(826,25);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_property4933);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:7: VARIABLE
					{
					dbg.location(827,7);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_property4941); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:7: IDENT
					{
					dbg.location(828,7);
					match(input,IDENT,FOLLOW_IDENT_in_property4949); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:829:7: GEN
					{
					dbg.location(829,7);
					match(input,GEN,FOLLOW_GEN_in_property4957); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:7: {...}? cp_variable
					{
					dbg.location(830,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(830,36);
					pushFollow(FOLLOW_cp_variable_in_property4967);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(832, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:837:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(837, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:838:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(839,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map4994);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(839,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map4996); if (state.failed) return;dbg.location(839,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:25: ( ws )?
			int alt251=2;
			try { dbg.enterSubRule(251);
			try { dbg.enterDecision(251, decisionCanBacktrack[251]);

			int LA251_0 = input.LA(1);
			if ( (LA251_0==COMMENT||LA251_0==NL||LA251_0==WS) ) {
				alt251=1;
			}
			} finally {dbg.exitDecision(251);}

			switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:25: ws
					{
					dbg.location(839,25);
					pushFollow(FOLLOW_ws_in_sass_map4998);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(251);}
			dbg.location(839,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map5001); if (state.failed) return;dbg.location(839,36);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:36: ( ws )?
			int alt252=2;
			try { dbg.enterSubRule(252);
			try { dbg.enterDecision(252, decisionCanBacktrack[252]);

			int LA252_0 = input.LA(1);
			if ( (LA252_0==COMMENT||LA252_0==NL||LA252_0==WS) ) {
				alt252=1;
			}
			} finally {dbg.exitDecision(252);}

			switch (alt252) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:839:36: ws
					{
					dbg.location(839,36);
					pushFollow(FOLLOW_ws_in_sass_map5003);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(252);}
			dbg.location(839,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map5006);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(841,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:9: ( sass_map_pairs )?
			int alt253=2;
			try { dbg.enterSubRule(253);
			try { dbg.enterDecision(253, decisionCanBacktrack[253]);

			int LA253_0 = input.LA(1);
			if ( ((LA253_0 >= AT_IDENT && LA253_0 <= AT_SIGN)||(LA253_0 >= BOTTOMCENTER_SYM && LA253_0 <= BOTTOMRIGHT_SYM)||LA253_0==CHARSET_SYM||LA253_0==COMMA||LA253_0==COUNTER_STYLE_SYM||LA253_0==FONT_FACE_SYM||LA253_0==GEN||LA253_0==HASH_SYMBOL||LA253_0==IDENT||LA253_0==IMPORT_SYM||LA253_0==KEYFRAMES_SYM||(LA253_0 >= LEFTBOTTOM_SYM && LA253_0 <= LEFTTOP_SYM)||(LA253_0 >= MEDIA_SYM && LA253_0 <= MOZ_DOCUMENT_SYM)||LA253_0==NAMESPACE_SYM||LA253_0==NUMBER||LA253_0==PAGE_SYM||(LA253_0 >= RIGHTBOTTOM_SYM && LA253_0 <= RIGHTTOP_SYM)||(LA253_0 >= SASS_AT_ROOT && LA253_0 <= SASS_DEBUG)||(LA253_0 >= SASS_EACH && LA253_0 <= SASS_ELSE)||LA253_0==SASS_EXTEND||(LA253_0 >= SASS_FOR && LA253_0 <= SASS_FUNCTION)||(LA253_0 >= SASS_IF && LA253_0 <= SASS_MIXIN)||(LA253_0 >= SASS_RETURN && LA253_0 <= SASS_WHILE)||LA253_0==STRING||(LA253_0 >= TOPCENTER_SYM && LA253_0 <= TOPRIGHT_SYM)||LA253_0==VARIABLE||LA253_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt253=1;
			}
			} finally {dbg.exitDecision(253);}

			switch (alt253) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:841:9: sass_map_pairs
					{
					dbg.location(841,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map5025);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(253);}
			dbg.location(842,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map5032); if (state.failed) return;dbg.location(842,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(256);

			loop256:
			while (true) {
				int alt256=3;
				try { dbg.enterDecision(256, decisionCanBacktrack[256]);

				try {
					isCyclicDecision = true;
					alt256 = dfa256.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(256);}

				switch (alt256) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(842,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(842,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:14: ( ws )?
					int alt254=2;
					try { dbg.enterSubRule(254);
					try { dbg.enterDecision(254, decisionCanBacktrack[254]);

					int LA254_0 = input.LA(1);
					if ( (LA254_0==COMMENT||LA254_0==NL||LA254_0==WS) ) {
						alt254=1;
					}
					} finally {dbg.exitDecision(254);}

					switch (alt254) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:14: ws
							{
							dbg.location(842,14);
							pushFollow(FOLLOW_ws_in_sass_map5036);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(254);}
					dbg.location(842,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map5039); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(842,34);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(842,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:35: ( ws )?
					int alt255=2;
					try { dbg.enterSubRule(255);
					try { dbg.enterDecision(255, decisionCanBacktrack[255]);

					int LA255_0 = input.LA(1);
					if ( (LA255_0==COMMENT||LA255_0==NL||LA255_0==WS) ) {
						alt255=1;
					}
					} finally {dbg.exitDecision(255);}

					switch (alt255) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:842:35: ws
							{
							dbg.location(842,35);
							pushFollow(FOLLOW_ws_in_sass_map5045);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(255);}
					dbg.location(842,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map5048); if (state.failed) return;
					}

					}
					break;

				default :
					break loop256;
				}
			}
			} finally {dbg.exitSubRule(256);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(843, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(845, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:846:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:847:5: cp_variable
			{
			dbg.location(847,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name5072);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(848, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(850, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:852:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(852,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:852:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt261=0;
			try { dbg.enterSubRule(261);

			loop261:
			while (true) {
				int alt261=3;
				try { dbg.enterDecision(261, decisionCanBacktrack[261]);

				int LA261_0 = input.LA(1);
				if ( ((LA261_0 >= AT_IDENT && LA261_0 <= AT_SIGN)||(LA261_0 >= BOTTOMCENTER_SYM && LA261_0 <= BOTTOMRIGHT_SYM)||LA261_0==CHARSET_SYM||LA261_0==COUNTER_STYLE_SYM||LA261_0==FONT_FACE_SYM||LA261_0==GEN||LA261_0==HASH_SYMBOL||LA261_0==IDENT||LA261_0==IMPORT_SYM||LA261_0==KEYFRAMES_SYM||(LA261_0 >= LEFTBOTTOM_SYM && LA261_0 <= LEFTTOP_SYM)||(LA261_0 >= MEDIA_SYM && LA261_0 <= MOZ_DOCUMENT_SYM)||LA261_0==NAMESPACE_SYM||LA261_0==NUMBER||LA261_0==PAGE_SYM||(LA261_0 >= RIGHTBOTTOM_SYM && LA261_0 <= RIGHTTOP_SYM)||(LA261_0 >= SASS_AT_ROOT && LA261_0 <= SASS_DEBUG)||(LA261_0 >= SASS_EACH && LA261_0 <= SASS_ELSE)||LA261_0==SASS_EXTEND||(LA261_0 >= SASS_FOR && LA261_0 <= SASS_FUNCTION)||(LA261_0 >= SASS_IF && LA261_0 <= SASS_MIXIN)||(LA261_0 >= SASS_RETURN && LA261_0 <= SASS_WHILE)||LA261_0==STRING||(LA261_0 >= TOPCENTER_SYM && LA261_0 <= TOPRIGHT_SYM)||LA261_0==VARIABLE||LA261_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt261=1;
				}
				else if ( (LA261_0==COMMA) ) {
					alt261=2;
				}

				} finally {dbg.exitDecision(261);}

				switch (alt261) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(853,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(853,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs5106);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(853,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt258=2;
					try { dbg.enterSubRule(258);
					try { dbg.enterDecision(258, decisionCanBacktrack[258]);

					try {
						isCyclicDecision = true;
						alt258 = dfa258.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(258);}

					switch (alt258) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(853,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:40: ( ws )?
							int alt257=2;
							try { dbg.enterSubRule(257);
							try { dbg.enterDecision(257, decisionCanBacktrack[257]);

							int LA257_0 = input.LA(1);
							if ( (LA257_0==COMMENT||LA257_0==NL||LA257_0==WS) ) {
								alt257=1;
							}
							} finally {dbg.exitDecision(257);}

							switch (alt257) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:40: ws
									{
									dbg.location(853,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs5116);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(257);}
							dbg.location(853,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs5119); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(258);}
					dbg.location(853,52);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:52: ( ws )?
					int alt259=2;
					try { dbg.enterSubRule(259);
					try { dbg.enterDecision(259, decisionCanBacktrack[259]);

					int LA259_0 = input.LA(1);
					if ( (LA259_0==COMMENT||LA259_0==NL||LA259_0==WS) ) {
						alt259=1;
					}
					} finally {dbg.exitDecision(259);}

					switch (alt259) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:52: ws
							{
							dbg.location(853,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs5123);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(259);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:10: ( COMMA ( ws )? )
					{
					dbg.location(855,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:12: COMMA ( ws )?
					{
					dbg.location(855,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs5150); if (state.failed) return;dbg.location(855,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:18: ( ws )?
					int alt260=2;
					try { dbg.enterSubRule(260);
					try { dbg.enterDecision(260, decisionCanBacktrack[260]);

					int LA260_0 = input.LA(1);
					if ( (LA260_0==COMMENT||LA260_0==NL||LA260_0==WS) ) {
						alt260=1;
					}
					} finally {dbg.exitDecision(260);}

					switch (alt260) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:855:18: ws
							{
							dbg.location(855,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs5152);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(260);}

					}

					}
					break;

				default :
					if ( cnt261 >= 1 ) break loop261;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(261, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt261++;
			}
			} finally {dbg.exitSubRule(261);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(857, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:859:1: sass_map_pair : ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(859, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:860:5: ( ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(861,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map )
			int alt264=5;
			try { dbg.enterSubRule(264);
			try { dbg.enterDecision(264, decisionCanBacktrack[264]);

			switch ( input.LA(1) ) {
			case NUMBER:
				{
				alt264=1;
				}
				break;
			case STRING:
				{
				alt264=2;
				}
				break;
			case IDENT:
				{
				int LA264_3 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt264=3;
				}
				else if ( (true) ) {
					alt264=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt264=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 264, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case GEN:
			case HASH_SYMBOL:
			case MINUS:
			case VARIABLE:
				{
				alt264=4;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA264_9 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt264=4;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt264=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 264, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA264_10 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt264=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt264=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 264, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 264, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(264);}

			switch (alt264) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:10: NUMBER
					{
					dbg.location(861,10);
					match(input,NUMBER,FOLLOW_NUMBER_in_sass_map_pair5188); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:17: ( STRING ( ( ws )? STRING )* )
					{
					dbg.location(861,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:17: ( STRING ( ( ws )? STRING )* )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:18: STRING ( ( ws )? STRING )*
					{
					dbg.location(861,18);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair5191); if (state.failed) return;dbg.location(861,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:25: ( ( ws )? STRING )*
					try { dbg.enterSubRule(263);

					loop263:
					while (true) {
						int alt263=2;
						try { dbg.enterDecision(263, decisionCanBacktrack[263]);

						try {
							isCyclicDecision = true;
							alt263 = dfa263.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(263);}

						switch (alt263) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:26: ( ws )? STRING
							{
							dbg.location(861,26);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:26: ( ws )?
							int alt262=2;
							try { dbg.enterSubRule(262);
							try { dbg.enterDecision(262, decisionCanBacktrack[262]);

							int LA262_0 = input.LA(1);
							if ( (LA262_0==COMMENT||LA262_0==NL||LA262_0==WS) ) {
								alt262=1;
							}
							} finally {dbg.exitDecision(262);}

							switch (alt262) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:26: ws
									{
									dbg.location(861,26);
									pushFollow(FOLLOW_ws_in_sass_map_pair5194);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(262);}
							dbg.location(861,30);
							match(input,STRING,FOLLOW_STRING_in_sass_map_pair5197); if (state.failed) return;
							}
							break;

						default :
							break loop263;
						}
					}
					} finally {dbg.exitSubRule(263);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:40: ( ( function )=> function )
					{
					dbg.location(861,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:40: ( ( function )=> function )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:41: ( function )=> function
					{
					dbg.location(861,53);
					pushFollow(FOLLOW_function_in_sass_map_pair5207);
					function();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:63: property
					{
					dbg.location(861,63);
					pushFollow(FOLLOW_property_in_sass_map_pair5210);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:72: sass_map
					{
					dbg.location(861,72);
					pushFollow(FOLLOW_sass_map_in_sass_map_pair5212);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(264);}
			dbg.location(861,82);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:82: ( ws )?
			int alt265=2;
			try { dbg.enterSubRule(265);
			try { dbg.enterDecision(265, decisionCanBacktrack[265]);

			int LA265_0 = input.LA(1);
			if ( (LA265_0==COMMENT||LA265_0==NL||LA265_0==WS) ) {
				alt265=1;
			}
			} finally {dbg.exitDecision(265);}

			switch (alt265) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:82: ws
					{
					dbg.location(861,82);
					pushFollow(FOLLOW_ws_in_sass_map_pair5215);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(265);}
			dbg.location(861,86);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair5218); if (state.failed) return;dbg.location(861,92);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:92: ( ws )?
			int alt266=2;
			try { dbg.enterSubRule(266);
			try { dbg.enterDecision(266, decisionCanBacktrack[266]);

			int LA266_0 = input.LA(1);
			if ( (LA266_0==COMMENT||LA266_0==NL||LA266_0==WS) ) {
				alt266=1;
			}
			} finally {dbg.exitDecision(266);}

			switch (alt266) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:92: ws
					{
					dbg.location(861,92);
					pushFollow(FOLLOW_ws_in_sass_map_pair5220);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(266);}
			dbg.location(861,96);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair5223);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(861,110);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:110: ( ( ws )? prio )?
			int alt268=2;
			try { dbg.enterSubRule(268);
			try { dbg.enterDecision(268, decisionCanBacktrack[268]);

			try {
				isCyclicDecision = true;
				alt268 = dfa268.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(268);}

			switch (alt268) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:111: ( ws )? prio
					{
					dbg.location(861,111);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:111: ( ws )?
					int alt267=2;
					try { dbg.enterSubRule(267);
					try { dbg.enterDecision(267, decisionCanBacktrack[267]);

					int LA267_0 = input.LA(1);
					if ( (LA267_0==COMMENT||LA267_0==NL||LA267_0==WS) ) {
						alt267=1;
					}
					} finally {dbg.exitDecision(267);}

					switch (alt267) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:111: ws
							{
							dbg.location(861,111);
							pushFollow(FOLLOW_ws_in_sass_map_pair5226);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(267);}
					dbg.location(861,115);
					pushFollow(FOLLOW_prio_in_sass_map_pair5229);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(268);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(862, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(864, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:865:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(866,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:866:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
			int alt274=3;
			try { dbg.enterSubRule(274);
			try { dbg.enterDecision(274, decisionCanBacktrack[274]);

			try {
				isCyclicDecision = true;
				alt274 = dfa274.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(274);}

			switch (alt274) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(867,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:14: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(867,14);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule5271); if (state.failed) return;dbg.location(867,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:27: ( ws selectorsGroup )?
					int alt269=2;
					try { dbg.enterSubRule(269);
					try { dbg.enterDecision(269, decisionCanBacktrack[269]);

					try {
						isCyclicDecision = true;
						alt269 = dfa269.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(269);}

					switch (alt269) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:867:28: ws selectorsGroup
							{
							dbg.location(867,28);
							pushFollow(FOLLOW_ws_in_rule5274);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(867,31);
							pushFollow(FOLLOW_selectorsGroup_in_rule5276);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(269);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					{
					dbg.location(868,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:16: SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
					{
					dbg.location(868,16);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule5297); if (state.failed) return;dbg.location(868,29);
					pushFollow(FOLLOW_ws_in_rule5299);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(868,32);
					match(input,LPAREN,FOLLOW_LPAREN_in_rule5301); if (state.failed) return;dbg.location(868,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:39: ( ws )?
					int alt270=2;
					try { dbg.enterSubRule(270);
					try { dbg.enterDecision(270, decisionCanBacktrack[270]);

					int LA270_0 = input.LA(1);
					if ( (LA270_0==COMMENT||LA270_0==NL||LA270_0==WS) ) {
						alt270=1;
					}
					} finally {dbg.exitDecision(270);}

					switch (alt270) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:39: ws
							{
							dbg.location(868,39);
							pushFollow(FOLLOW_ws_in_rule5303);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(270);}
					dbg.location(868,43);
					if ( !(evalPredicate(tokenNameEquals("without") || tokenNameEquals("with"),"tokenNameEquals(\"without\") || tokenNameEquals(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "rule", "tokenNameEquals(\"without\") || tokenNameEquals(\"with\")");
					}dbg.location(868,100);
					match(input,IDENT,FOLLOW_IDENT_in_rule5308); if (state.failed) return;dbg.location(868,128);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:128: ( ws )?
					int alt271=2;
					try { dbg.enterSubRule(271);
					try { dbg.enterDecision(271, decisionCanBacktrack[271]);

					int LA271_0 = input.LA(1);
					if ( (LA271_0==COMMENT||LA271_0==NL||LA271_0==WS) ) {
						alt271=1;
					}
					} finally {dbg.exitDecision(271);}

					switch (alt271) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:128: ws
							{
							dbg.location(868,128);
							pushFollow(FOLLOW_ws_in_rule5312);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(271);}
					dbg.location(868,132);
					match(input,COLON,FOLLOW_COLON_in_rule5315); if (state.failed) return;dbg.location(868,138);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:138: ( ws )?
					int alt272=2;
					try { dbg.enterSubRule(272);
					try { dbg.enterDecision(272, decisionCanBacktrack[272]);

					int LA272_0 = input.LA(1);
					if ( (LA272_0==COMMENT||LA272_0==NL||LA272_0==WS) ) {
						alt272=1;
					}
					} finally {dbg.exitDecision(272);}

					switch (alt272) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:138: ws
							{
							dbg.location(868,138);
							pushFollow(FOLLOW_ws_in_rule5317);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(272);}
					dbg.location(868,142);
					match(input,IDENT,FOLLOW_IDENT_in_rule5320); if (state.failed) return;dbg.location(868,148);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:148: ( ws )?
					int alt273=2;
					try { dbg.enterSubRule(273);
					try { dbg.enterDecision(273, decisionCanBacktrack[273]);

					int LA273_0 = input.LA(1);
					if ( (LA273_0==COMMENT||LA273_0==NL||LA273_0==WS) ) {
						alt273=1;
					}
					} finally {dbg.exitDecision(273);}

					switch (alt273) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:868:148: ws
							{
							dbg.location(868,148);
							pushFollow(FOLLOW_ws_in_rule5322);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(273);}
					dbg.location(868,152);
					match(input,RPAREN,FOLLOW_RPAREN_in_rule5325); if (state.failed) return;
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:869:15: selectorsGroup
					{
					dbg.location(869,15);
					pushFollow(FOLLOW_selectorsGroup_in_rule5343);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(274);}
			dbg.location(870,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:11: ( ws )?
			int alt275=2;
			try { dbg.enterSubRule(275);
			try { dbg.enterDecision(275, decisionCanBacktrack[275]);

			int LA275_0 = input.LA(1);
			if ( (LA275_0==COMMENT||LA275_0==NL||LA275_0==WS) ) {
				alt275=1;
			}
			} finally {dbg.exitDecision(275);}

			switch (alt275) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:870:11: ws
					{
					dbg.location(870,11);
					pushFollow(FOLLOW_ws_in_rule5355);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(275);}
			dbg.location(871,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule5362); if (state.failed) return;dbg.location(871,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:12: ( ws )?
			int alt276=2;
			try { dbg.enterSubRule(276);
			try { dbg.enterDecision(276, decisionCanBacktrack[276]);

			int LA276_0 = input.LA(1);
			if ( (LA276_0==COMMENT||LA276_0==NL||LA276_0==WS) ) {
				alt276=1;
			}
			} finally {dbg.exitDecision(276);}

			switch (alt276) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:871:12: ws
					{
					dbg.location(871,12);
					pushFollow(FOLLOW_ws_in_rule5364);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(276);}
			dbg.location(871,16);
			pushFollow(FOLLOW_syncToFollow_in_rule5367);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(872,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:872:9: ( declarations )?
			int alt277=2;
			try { dbg.enterSubRule(277);
			try { dbg.enterDecision(277, decisionCanBacktrack[277]);

			int LA277_0 = input.LA(1);
			if ( ((LA277_0 >= AT_IDENT && LA277_0 <= AT_SIGN)||(LA277_0 >= BOTTOMCENTER_SYM && LA277_0 <= BOTTOMRIGHT_SYM)||(LA277_0 >= CHARSET_SYM && LA277_0 <= COLON)||LA277_0==CONTAINER_SYM||LA277_0==COUNTER_STYLE_SYM||(LA277_0 >= DCOLON && LA277_0 <= DOT)||LA277_0==FONT_FACE_SYM||(LA277_0 >= GEN && LA277_0 <= GREATER)||(LA277_0 >= HASH && LA277_0 <= HASH_SYMBOL)||LA277_0==IDENT||LA277_0==IMPORT_SYM||LA277_0==KEYFRAMES_SYM||LA277_0==LAYER_SYM||(LA277_0 >= LBRACKET && LA277_0 <= LEFTTOP_SYM)||LA277_0==LESS_AND||(LA277_0 >= MEDIA_SYM && LA277_0 <= MOZ_DOCUMENT_SYM)||LA277_0==NAMESPACE_SYM||LA277_0==PAGE_SYM||(LA277_0 >= PIPE && LA277_0 <= PLUS)||(LA277_0 >= RIGHTBOTTOM_SYM && LA277_0 <= RIGHTTOP_SYM)||(LA277_0 >= SASS_AT_ROOT && LA277_0 <= SASS_DEBUG)||(LA277_0 >= SASS_EACH && LA277_0 <= SASS_ELSE)||(LA277_0 >= SASS_ERROR && LA277_0 <= SASS_FUNCTION)||(LA277_0 >= SASS_IF && LA277_0 <= SASS_MIXIN)||(LA277_0 >= SASS_RETURN && LA277_0 <= SEMI)||LA277_0==STAR||LA277_0==SUPPORTS_SYM||LA277_0==TILDE||(LA277_0 >= TOPCENTER_SYM && LA277_0 <= TOPRIGHT_SYM)||LA277_0==VARIABLE||LA277_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt277=1;
			}
			} finally {dbg.exitDecision(277);}

			switch (alt277) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:872:9: declarations
					{
					dbg.location(872,9);
					pushFollow(FOLLOW_declarations_in_rule5377);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(277);}
			dbg.location(873,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule5384); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(874, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:881:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(881, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:882:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt291=2;
			try { dbg.enterDecision(291, decisionCanBacktrack[291]);

			try {
				isCyclicDecision = true;
				alt291 = dfa291.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(291);}

			switch (alt291) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(883,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(279);

					loop279:
					while (true) {
						int alt279=2;
						try { dbg.enterDecision(279, decisionCanBacktrack[279]);

						int LA279_0 = input.LA(1);
						if ( (LA279_0==SEMI) ) {
							alt279=1;
						}

						} finally {dbg.exitDecision(279);}

						switch (alt279) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:9: SEMI ( ws )?
							{
							dbg.location(883,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations5418); if (state.failed) return;dbg.location(883,14);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:14: ( ws )?
							int alt278=2;
							try { dbg.enterSubRule(278);
							try { dbg.enterDecision(278, decisionCanBacktrack[278]);

							int LA278_0 = input.LA(1);
							if ( (LA278_0==COMMENT||LA278_0==NL||LA278_0==WS) ) {
								alt278=1;
							}
							} finally {dbg.exitDecision(278);}

							switch (alt278) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:14: ws
									{
									dbg.location(883,14);
									pushFollow(FOLLOW_ws_in_declarations5420);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(278);}

							}
							break;

						default :
							break loop279;
						}
					}
					} finally {dbg.exitSubRule(279);}
					dbg.location(883,21);
					pushFollow(FOLLOW_declaration_in_declarations5426);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(883,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(284);

					loop284:
					while (true) {
						int alt284=2;
						try { dbg.enterDecision(284, decisionCanBacktrack[284]);

						try {
							isCyclicDecision = true;
							alt284 = dfa284.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(284);}

						switch (alt284) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(883,34);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt283=2;
							try { dbg.enterSubRule(283);
							try { dbg.enterDecision(283, decisionCanBacktrack[283]);

							try {
								isCyclicDecision = true;
								alt283 = dfa283.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(283);}

							switch (alt283) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(883,35);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(883,36);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:36: ( ws )?
									int alt280=2;
									try { dbg.enterSubRule(280);
									try { dbg.enterDecision(280, decisionCanBacktrack[280]);

									int LA280_0 = input.LA(1);
									if ( (LA280_0==COMMENT||LA280_0==NL||LA280_0==WS) ) {
										alt280=1;
									}
									} finally {dbg.exitDecision(280);}

									switch (alt280) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:36: ws
											{
											dbg.location(883,36);
											pushFollow(FOLLOW_ws_in_declarations5431);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(280);}
									dbg.location(883,40);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:40: ( SEMI ( ws )? )+
									int cnt282=0;
									try { dbg.enterSubRule(282);

									loop282:
									while (true) {
										int alt282=2;
										try { dbg.enterDecision(282, decisionCanBacktrack[282]);

										int LA282_0 = input.LA(1);
										if ( (LA282_0==SEMI) ) {
											alt282=1;
										}

										} finally {dbg.exitDecision(282);}

										switch (alt282) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:41: SEMI ( ws )?
											{
											dbg.location(883,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations5435); if (state.failed) return;dbg.location(883,46);
											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:46: ( ws )?
											int alt281=2;
											try { dbg.enterSubRule(281);
											try { dbg.enterDecision(281, decisionCanBacktrack[281]);

											int LA281_0 = input.LA(1);
											if ( (LA281_0==COMMENT||LA281_0==NL||LA281_0==WS) ) {
												alt281=1;
											}
											} finally {dbg.exitDecision(281);}

											switch (alt281) {
												case 1 :
													dbg.enterAlt(1);

													// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:46: ws
													{
													dbg.location(883,46);
													pushFollow(FOLLOW_ws_in_declarations5437);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(281);}

											}
											break;

										default :
											if ( cnt282 >= 1 ) break loop282;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(282, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt282++;
									}
									} finally {dbg.exitSubRule(282);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:53: ws
									{
									dbg.location(883,53);
									pushFollow(FOLLOW_ws_in_declarations5443);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(283);}
							dbg.location(883,57);
							pushFollow(FOLLOW_declaration_in_declarations5446);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop284;
						}
					}
					} finally {dbg.exitSubRule(284);}
					dbg.location(883,71);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt288=3;
					try { dbg.enterSubRule(288);
					try { dbg.enterDecision(288, decisionCanBacktrack[288]);

					try {
						isCyclicDecision = true;
						alt288 = dfa288.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(288);}

					switch (alt288) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(883,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(883,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:73: ( ws )?
							int alt285=2;
							try { dbg.enterSubRule(285);
							try { dbg.enterDecision(285, decisionCanBacktrack[285]);

							int LA285_0 = input.LA(1);
							if ( (LA285_0==COMMENT||LA285_0==NL||LA285_0==WS) ) {
								alt285=1;
							}
							} finally {dbg.exitDecision(285);}

							switch (alt285) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:73: ws
									{
									dbg.location(883,73);
									pushFollow(FOLLOW_ws_in_declarations5452);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(285);}
							dbg.location(883,77);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:77: ( SEMI ( ws )? )+
							int cnt287=0;
							try { dbg.enterSubRule(287);

							loop287:
							while (true) {
								int alt287=2;
								try { dbg.enterDecision(287, decisionCanBacktrack[287]);

								int LA287_0 = input.LA(1);
								if ( (LA287_0==SEMI) ) {
									alt287=1;
								}

								} finally {dbg.exitDecision(287);}

								switch (alt287) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:78: SEMI ( ws )?
									{
									dbg.location(883,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations5456); if (state.failed) return;dbg.location(883,83);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:83: ( ws )?
									int alt286=2;
									try { dbg.enterSubRule(286);
									try { dbg.enterDecision(286, decisionCanBacktrack[286]);

									int LA286_0 = input.LA(1);
									if ( (LA286_0==COMMENT||LA286_0==NL||LA286_0==WS) ) {
										alt286=1;
									}
									} finally {dbg.exitDecision(286);}

									switch (alt286) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:83: ws
											{
											dbg.location(883,83);
											pushFollow(FOLLOW_ws_in_declarations5458);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(286);}

									}
									break;

								default :
									if ( cnt287 >= 1 ) break loop287;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(287, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt287++;
							}
							} finally {dbg.exitSubRule(287);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:883:90: ws
							{
							dbg.location(883,90);
							pushFollow(FOLLOW_ws_in_declarations5464);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(288);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:8: ( SEMI ( ws )? )+
					{
					dbg.location(884,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:8: ( SEMI ( ws )? )+
					int cnt290=0;
					try { dbg.enterSubRule(290);

					loop290:
					while (true) {
						int alt290=2;
						try { dbg.enterDecision(290, decisionCanBacktrack[290]);

						int LA290_0 = input.LA(1);
						if ( (LA290_0==SEMI) ) {
							alt290=1;
						}

						} finally {dbg.exitDecision(290);}

						switch (alt290) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:9: SEMI ( ws )?
							{
							dbg.location(884,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations5476); if (state.failed) return;dbg.location(884,14);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:14: ( ws )?
							int alt289=2;
							try { dbg.enterSubRule(289);
							try { dbg.enterDecision(289, decisionCanBacktrack[289]);

							int LA289_0 = input.LA(1);
							if ( (LA289_0==COMMENT||LA289_0==NL||LA289_0==WS) ) {
								alt289=1;
							}
							} finally {dbg.exitDecision(289);}

							switch (alt289) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:884:14: ws
									{
									dbg.location(884,14);
									pushFollow(FOLLOW_ws_in_declarations5478);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(289);}

							}
							break;

						default :
							if ( cnt290 >= 1 ) break loop290;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(290, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt290++;
					}
					} finally {dbg.exitSubRule(290);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(885, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:887:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(887, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:888:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN )
			int alt296=18;
			try { dbg.enterDecision(296, decisionCanBacktrack[296]);

			int LA296_0 = input.LA(1);
			if ( (LA296_0==SASS_AT_ROOT) ) {
				int LA296_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_VAR) ) {
				int LA296_2 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred45_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==IDENT) ) {
				int LA296_3 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=2;
				}
				else if ( (synpred42_Css3()) ) {
					alt296=3;
				}
				else if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( (synpred44_Css3()) ) {
					alt296=5;
				}
				else if ( (synpred45_Css3()) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==MINUS) ) {
				int LA296_4 = input.LA(2);
				if ( ((synpred42_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt296=3;
				}
				else if ( ((synpred43_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt296=4;
				}
				else if ( ((synpred44_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt296=5;
				}
				else if ( ((synpred45_Css3()&&((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))||(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==HASH_SYMBOL) ) {
				int LA296_5 = input.LA(2);
				if ( ((synpred42_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=3;
				}
				else if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=5;
				}
				else if ( ((synpred45_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==AT_SIGN) ) {
				int LA296_6 = input.LA(2);
				if ( ((synpred42_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( ((synpred43_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=4;
				}
				else if ( ((synpred44_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred45_Css3())) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==VARIABLE) ) {
				int LA296_7 = input.LA(2);
				if ( (synpred42_Css3()) ) {
					alt296=3;
				}
				else if ( (synpred44_Css3()) ) {
					alt296=5;
				}
				else if ( (synpred45_Css3()) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==GEN) ) {
				int LA296_8 = input.LA(2);
				if ( (synpred42_Css3()) ) {
					alt296=3;
				}
				else if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( (synpred44_Css3()) ) {
					alt296=5;
				}
				else if ( (synpred45_Css3()) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=18;
				}

			}
			else if ( (LA296_0==SASS_MIXIN) ) {
				int LA296_9 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( ((synpred46_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==GREATER||LA296_0==PLUS||LA296_0==TILDE) && (synpred43_Css3())) {
				alt296=4;
			}
			else if ( (LA296_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred43_Css3())) {
				alt296=4;
			}
			else if ( (LA296_0==LESS_AND) ) {
				int LA296_12 = input.LA(2);
				if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( ((synpred46_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=7;
				}
				else if ( ((synpred47_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred48_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==HASH) ) {
				int LA296_13 = input.LA(2);
				if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( ((synpred46_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=7;
				}
				else if ( ((synpred47_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred48_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==DOT) ) {
				int LA296_14 = input.LA(2);
				if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( ((synpred46_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=7;
				}
				else if ( ((synpred47_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred48_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==DIMENSION) && (synpred43_Css3())) {
				alt296=4;
			}
			else if ( (LA296_0==LBRACKET) && (synpred43_Css3())) {
				alt296=4;
			}
			else if ( (LA296_0==COLON||LA296_0==DCOLON) && (synpred43_Css3())) {
				alt296=4;
			}
			else if ( (LA296_0==STAR) ) {
				int LA296_18 = input.LA(2);
				if ( (synpred43_Css3()) ) {
					alt296=4;
				}
				else if ( (synpred44_Css3()) ) {
					alt296=5;
				}
				else if ( (synpred45_Css3()) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==PIPE) && (synpred43_Css3())) {
				alt296=4;
			}
			else if ( (LA296_0==AT_IDENT) ) {
				int LA296_20 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( ((synpred47_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred48_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=9;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==SASS_INCLUDE) ) {
				int LA296_21 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( ((synpred47_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=8;
				}
				else if ( ((synpred48_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt296=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==MEDIA_SYM) ) {
				int LA296_22 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==PAGE_SYM) ) {
				int LA296_23 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==COUNTER_STYLE_SYM) ) {
				int LA296_24 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==FONT_FACE_SYM) ) {
				int LA296_25 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==MOZ_DOCUMENT_SYM) ) {
				int LA296_26 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==CONTAINER_SYM||LA296_0==LAYER_SYM||LA296_0==SUPPORTS_SYM) ) {
				alt296=10;
			}
			else if ( (LA296_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA296_28 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==KEYFRAMES_SYM) ) {
				int LA296_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (true) ) {
					alt296=10;
				}

			}
			else if ( (LA296_0==SASS_IF) ) {
				int LA296_30 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_FOR) ) {
				int LA296_33 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_EACH) ) {
				int LA296_34 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_WHILE) ) {
				int LA296_35 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_EXTEND) ) {
				int LA296_36 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_DEBUG||LA296_0==SASS_WARN) ) {
				int LA296_37 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_CONTENT) ) {
				int LA296_38 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 38, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_RETURN) ) {
				int LA296_39 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 39, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==IMPORT_SYM) ) {
				int LA296_40 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt296=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 40, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA296_0==SASS_ERROR) ) {
				alt296=16;
			}
			else if ( ((LA296_0 >= BOTTOMCENTER_SYM && LA296_0 <= BOTTOMRIGHT_SYM)||LA296_0==CHARSET_SYM||(LA296_0 >= LEFTBOTTOM_SYM && LA296_0 <= LEFTTOP_SYM)||LA296_0==NAMESPACE_SYM||(LA296_0 >= RIGHTBOTTOM_SYM && LA296_0 <= RIGHTTOP_SYM)||LA296_0==SASS_ELSE||(LA296_0 >= SASS_FORWARD && LA296_0 <= SASS_FUNCTION)||LA296_0==SASS_USE||(LA296_0 >= TOPCENTER_SYM && LA296_0 <= TOPRIGHT_SYM)) ) {
				int LA296_42 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred40_Css3())) ) {
					alt296=1;
				}
				else if ( ((synpred41_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=2;
				}
				else if ( (((synpred42_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=3;
				}
				else if ( (((synpred44_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt296=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {
					alt296=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 296, 42, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 296, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(296);}

			switch (alt296) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:889:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(889,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration5507);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:7: ( sass_map )=> sass_map
					{
					dbg.location(890,20);
					pushFollow(FOLLOW_sass_map_in_declaration5520);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:891:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(891,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration5532);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(892,145);
					pushFollow(FOLLOW_rule_in_declaration5595);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(893,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration5607);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(895,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration5646);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:7: ( cp_mixin_declaration )=> cp_mixin_declaration
					{
					dbg.location(896,31);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration5658);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:7: ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(897,25);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration5671);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(897,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:39: ( ( ws )? IMPORTANT_SYM )?
					int alt293=2;
					try { dbg.enterSubRule(293);
					try { dbg.enterDecision(293, decisionCanBacktrack[293]);

					try {
						isCyclicDecision = true;
						alt293 = dfa293.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(293);}

					switch (alt293) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:40: ( ws )? IMPORTANT_SYM
							{
							dbg.location(897,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:40: ( ws )?
							int alt292=2;
							try { dbg.enterSubRule(292);
							try { dbg.enterDecision(292, decisionCanBacktrack[292]);

							int LA292_0 = input.LA(1);
							if ( (LA292_0==COMMENT||LA292_0==NL||LA292_0==WS) ) {
								alt292=1;
							}
							} finally {dbg.exitDecision(292);}

							switch (alt292) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:40: ws
									{
									dbg.location(897,40);
									pushFollow(FOLLOW_ws_in_declaration5674);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(292);}
							dbg.location(897,44);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration5677); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(293);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(898,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(898,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration5694);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(898,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:57: ( ( ws )? IMPORTANT_SYM )?
					int alt295=2;
					try { dbg.enterSubRule(295);
					try { dbg.enterDecision(295, decisionCanBacktrack[295]);

					try {
						isCyclicDecision = true;
						alt295 = dfa295.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(295);}

					switch (alt295) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(898,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:58: ( ws )?
							int alt294=2;
							try { dbg.enterSubRule(294);
							try { dbg.enterDecision(294, decisionCanBacktrack[294]);

							int LA294_0 = input.LA(1);
							if ( (LA294_0==COMMENT||LA294_0==NL||LA294_0==WS) ) {
								alt294=1;
							}
							} finally {dbg.exitDecision(294);}

							switch (alt294) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:58: ws
									{
									dbg.location(898,58);
									pushFollow(FOLLOW_ws_in_declaration5697);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(294);}
							dbg.location(898,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration5700); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(295);}

					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:7: at_rule
					{
					dbg.location(899,7);
					pushFollow(FOLLOW_at_rule_in_declaration5714);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:900:7: {...}? sass_control
					{
					dbg.location(900,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(900,25);
					pushFollow(FOLLOW_sass_control_in_declaration5724);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:901:7: {...}? sass_extend
					{
					dbg.location(901,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(901,25);
					pushFollow(FOLLOW_sass_extend_in_declaration5734);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:902:7: {...}? sass_debug
					{
					dbg.location(902,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(902,25);
					pushFollow(FOLLOW_sass_debug_in_declaration5744);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:7: {...}? sass_content
					{
					dbg.location(903,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(903,25);
					pushFollow(FOLLOW_sass_content_in_declaration5754);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:904:7: {...}? sass_function_return
					{
					dbg.location(904,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(904,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration5764);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:7: {...}? sass_error
					{
					dbg.location(905,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(905,25);
					pushFollow(FOLLOW_sass_error_in_declaration5774);
					sass_error();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:7: {...}? importItem
					{
					dbg.location(906,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(906,25);
					pushFollow(FOLLOW_importItem_in_declaration5784);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:907:7: GEN
					{
					dbg.location(907,7);
					match(input,GEN,FOLLOW_GEN_in_declaration5792); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(908, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:914:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(914, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:915:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(916,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup5826);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(916,18);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(299);

			loop299:
			while (true) {
				int alt299=2;
				try { dbg.enterDecision(299, decisionCanBacktrack[299]);

				try {
					isCyclicDecision = true;
					alt299 = dfa299.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(299);}

				switch (alt299) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(916,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:19: ( ws )?
					int alt297=2;
					try { dbg.enterSubRule(297);
					try { dbg.enterDecision(297, decisionCanBacktrack[297]);

					int LA297_0 = input.LA(1);
					if ( (LA297_0==COMMENT||LA297_0==NL||LA297_0==WS) ) {
						alt297=1;
					}
					} finally {dbg.exitDecision(297);}

					switch (alt297) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:19: ws
							{
							dbg.location(916,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup5829);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(297);}
					dbg.location(916,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup5832); if (state.failed) return;dbg.location(916,29);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:29: ( ws )?
					int alt298=2;
					try { dbg.enterSubRule(298);
					try { dbg.enterDecision(298, decisionCanBacktrack[298]);

					int LA298_0 = input.LA(1);
					if ( (LA298_0==COMMENT||LA298_0==NL||LA298_0==WS) ) {
						alt298=1;
					}
					} finally {dbg.exitDecision(298);}

					switch (alt298) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:29: ws
							{
							dbg.location(916,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup5834);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(298);}
					dbg.location(916,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup5837);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop299;
				}
			}
			} finally {dbg.exitSubRule(299);}
			dbg.location(916,44);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:44: ({...}? COMMA )?
			int alt300=2;
			try { dbg.enterSubRule(300);
			try { dbg.enterDecision(300, decisionCanBacktrack[300]);

			int LA300_0 = input.LA(1);
			if ( (LA300_0==COMMA) ) {
				alt300=1;
			}
			} finally {dbg.exitDecision(300);}

			switch (alt300) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:916:45: {...}? COMMA
					{
					dbg.location(916,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(916,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup5844); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(300);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(917, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(919, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator )
			int alt307=2;
			try { dbg.enterDecision(307, decisionCanBacktrack[307]);

			try {
				isCyclicDecision = true;
				alt307 = dfa307.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(307);}

			switch (alt307) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					{
					dbg.location(920,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:8: ( combinator ( ws )? )?
					int alt302=2;
					try { dbg.enterSubRule(302);
					try { dbg.enterDecision(302, decisionCanBacktrack[302]);

					int LA302_0 = input.LA(1);
					if ( (LA302_0==GREATER||LA302_0==PLUS||LA302_0==TILDE) ) {
						alt302=1;
					}
					} finally {dbg.exitDecision(302);}

					switch (alt302) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:9: combinator ( ws )?
							{
							dbg.location(920,9);
							pushFollow(FOLLOW_combinator_in_selector5865);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(920,20);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:20: ( ws )?
							int alt301=2;
							try { dbg.enterSubRule(301);
							try { dbg.enterDecision(301, decisionCanBacktrack[301]);

							int LA301_0 = input.LA(1);
							if ( (LA301_0==COMMENT||LA301_0==NL||LA301_0==WS) ) {
								alt301=1;
							}
							} finally {dbg.exitDecision(301);}

							switch (alt301) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:20: ws
									{
									dbg.location(920,20);
									pushFollow(FOLLOW_ws_in_selector5867);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(301);}

							}
							break;

					}
					} finally {dbg.exitSubRule(302);}
					dbg.location(920,26);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector5872);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;dbg.location(920,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					try { dbg.enterSubRule(306);

					loop306:
					while (true) {
						int alt306=2;
						try { dbg.enterDecision(306, decisionCanBacktrack[306]);

						try {
							isCyclicDecision = true;
							alt306 = dfa306.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(306);}

						switch (alt306) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
							{
							dbg.location(920,51);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:51: ( ( ( ws )? combinator ( ws )? ) | ws )
							int alt305=2;
							try { dbg.enterSubRule(305);
							try { dbg.enterDecision(305, decisionCanBacktrack[305]);

							try {
								isCyclicDecision = true;
								alt305 = dfa305.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(305);}

							switch (alt305) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:52: ( ( ws )? combinator ( ws )? )
									{
									dbg.location(920,52);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:52: ( ( ws )? combinator ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:53: ( ws )? combinator ( ws )?
									{
									dbg.location(920,53);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:53: ( ws )?
									int alt303=2;
									try { dbg.enterSubRule(303);
									try { dbg.enterDecision(303, decisionCanBacktrack[303]);

									int LA303_0 = input.LA(1);
									if ( (LA303_0==COMMENT||LA303_0==NL||LA303_0==WS) ) {
										alt303=1;
									}
									} finally {dbg.exitDecision(303);}

									switch (alt303) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:53: ws
											{
											dbg.location(920,53);
											pushFollow(FOLLOW_ws_in_selector5878);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(303);}
									dbg.location(920,57);
									pushFollow(FOLLOW_combinator_in_selector5881);
									combinator();
									state._fsp--;
									if (state.failed) return;dbg.location(920,68);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:68: ( ws )?
									int alt304=2;
									try { dbg.enterSubRule(304);
									try { dbg.enterDecision(304, decisionCanBacktrack[304]);

									int LA304_0 = input.LA(1);
									if ( (LA304_0==COMMENT||LA304_0==NL||LA304_0==WS) ) {
										alt304=1;
									}
									} finally {dbg.exitDecision(304);}

									switch (alt304) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:68: ws
											{
											dbg.location(920,68);
											pushFollow(FOLLOW_ws_in_selector5883);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(304);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:73: ws
									{
									dbg.location(920,73);
									pushFollow(FOLLOW_ws_in_selector5887);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(305);}
							dbg.location(920,77);
							pushFollow(FOLLOW_simpleSelectorSequence_in_selector5890);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop306;
						}
					}
					} finally {dbg.exitSubRule(306);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:921:10: {...}? combinator
					{
					dbg.location(921,10);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selector", "isScssSource()");
					}dbg.location(921,28);
					pushFollow(FOLLOW_combinator_in_selector5905);
					combinator();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(922, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(924, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:925:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(925,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(927, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(929, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:930:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt316=2;
			try { dbg.enterDecision(316, decisionCanBacktrack[316]);

			int LA316_0 = input.LA(1);
			if ( (LA316_0==AT_SIGN||LA316_0==COLON||(LA316_0 >= DCOLON && LA316_0 <= DOT)||(LA316_0 >= HASH && LA316_0 <= HASH_SYMBOL)||LA316_0==LBRACKET||LA316_0==MINUS||LA316_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt316=1;
			}
			else if ( (LA316_0==LESS_AND) ) {
				int LA316_2 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt316=1;
				}
				else if ( (synpred50_Css3()) ) {
					alt316=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 316, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA316_0==IDENT) ) {
				int LA316_3 = input.LA(2);
				if ( (LA316_3==HASH_SYMBOL) ) {
					int LA316_7 = input.LA(3);
					if ( (LA316_7==LBRACE) ) {
						alt316=1;
					}
					else if ( (LA316_7==NAME) && (synpred50_Css3())) {
						alt316=2;
					}
					else if ( (LA316_7==IDENT||LA316_7==MINUS) && (synpred50_Css3())) {
						alt316=2;
					}
					else if ( (LA316_7==AT_SIGN) && (synpred50_Css3())) {
						alt316=2;
					}

				}
				else if ( (LA316_3==AT_SIGN) ) {
					alt316=1;
				}
				else if ( (LA316_3==PIPE) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==COMMENT||LA316_3==NL||LA316_3==WS) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==SASS_EXTEND_ONLY_SELECTOR) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==LESS_AND) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==HASH) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==DOT) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==DIMENSION) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==LBRACKET) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==COLON||LA316_3==DCOLON) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==GREATER||LA316_3==PLUS||LA316_3==TILDE) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==COMMA) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==LBRACE) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==RPAREN) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==SEMI) && (synpred50_Css3())) {
					alt316=2;
				}
				else if ( (LA316_3==RBRACE) && (synpred50_Css3())) {
					alt316=2;
				}

			}
			else if ( (LA316_0==STAR) && (synpred50_Css3())) {
				alt316=2;
			}
			else if ( (LA316_0==PIPE) && (synpred50_Css3())) {
				alt316=2;
			}
			else if ( (LA316_0==GEN) && (synpred50_Css3())) {
				alt316=2;
			}

			} finally {dbg.exitDecision(316);}

			switch (alt316) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					{
					dbg.location(931,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
					int alt308=3;
					try { dbg.enterSubRule(308);
					try { dbg.enterDecision(308, decisionCanBacktrack[308]);

					switch ( input.LA(1) ) {
					case COLON:
					case DCOLON:
					case DIMENSION:
					case DOT:
					case HASH:
					case LBRACKET:
					case LESS_AND:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt308=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA308_2 = input.LA(2);
						if ( (LA308_2==LBRACE) ) {
							alt308=2;
						}
						else if ( (LA308_2==AT_SIGN||LA308_2==IDENT||LA308_2==MINUS||LA308_2==NAME) ) {
							alt308=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 308, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						int LA308_3 = input.LA(2);
						if ( (LA308_3==HASH_SYMBOL) ) {
							alt308=2;
						}
						else if ( (LA308_3==AT_SIGN) ) {
							alt308=3;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 308, 3, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case AT_SIGN:
						{
						alt308=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 308, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(308);}

					switch (alt308) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:10: elementSubsequent
							{
							dbg.location(931,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence5957);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:30: {...}? sass_selector_interpolation_exp
							{
							dbg.location(931,30);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(931,48);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence5963);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:11: {...}? less_selector_interpolation_exp
							{
							dbg.location(932,11);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
							}dbg.location(932,29);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence5977);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(308);}
					dbg.location(932,64);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:64: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					try { dbg.enterSubRule(312);

					loop312:
					while (true) {
						int alt312=2;
						try { dbg.enterDecision(312, decisionCanBacktrack[312]);

						int LA312_0 = input.LA(1);
						if ( (LA312_0==COMMENT||LA312_0==NL||LA312_0==WS) ) {
							int LA312_1 = input.LA(2);
							if ( (synpred49_Css3()) ) {
								alt312=1;
							}

						}
						else if ( (LA312_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred49_Css3())) {
							alt312=1;
						}
						else if ( (LA312_0==LESS_AND) && (synpred49_Css3())) {
							alt312=1;
						}
						else if ( (LA312_0==HASH) && (synpred49_Css3())) {
							alt312=1;
						}
						else if ( (LA312_0==HASH_SYMBOL) && (synpred49_Css3())) {
							alt312=1;
						}
						else if ( (LA312_0==DOT) && (synpred49_Css3())) {
							alt312=1;
						}
						else if ( (LA312_0==DIMENSION) && (synpred49_Css3())) {
							alt312=1;
						}
						else if ( (LA312_0==LBRACKET) && (synpred49_Css3())) {
							alt312=1;
						}
						else if ( (LA312_0==COLON||LA312_0==DCOLON) && (synpred49_Css3())) {
							alt312=1;
						}

						} finally {dbg.exitDecision(312);}

						switch (alt312) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:65: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							{
							dbg.location(932,79);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							int alt311=2;
							try { dbg.enterSubRule(311);
							try { dbg.enterDecision(311, decisionCanBacktrack[311]);

							try {
								isCyclicDecision = true;
								alt311 = dfa311.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(311);}

							switch (alt311) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:80: ( ( ws )? elementSubsequent )
									{
									dbg.location(932,80);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:80: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:81: ( ws )? elementSubsequent
									{
									dbg.location(932,81);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:81: ( ws )?
									int alt309=2;
									try { dbg.enterSubRule(309);
									try { dbg.enterDecision(309, decisionCanBacktrack[309]);

									int LA309_0 = input.LA(1);
									if ( (LA309_0==COMMENT||LA309_0==NL||LA309_0==WS) ) {
										alt309=1;
									}
									} finally {dbg.exitDecision(309);}

									switch (alt309) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:81: ws
											{
											dbg.location(932,81);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence5992);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(309);}
									dbg.location(932,85);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence5995);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									{
									dbg.location(932,105);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:106: ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									{
									dbg.location(932,106);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence6000);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(932,109);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:109: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									int alt310=2;
									try { dbg.enterSubRule(310);
									try { dbg.enterDecision(310, decisionCanBacktrack[310]);

									switch ( input.LA(1) ) {
									case IDENT:
									case MINUS:
										{
										int LA310_1 = input.LA(2);
										if ( (LA310_1==HASH_SYMBOL) ) {
											alt310=1;
										}
										else if ( (LA310_1==AT_SIGN) ) {
											alt310=2;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return;}
											int nvaeMark = input.mark();
											try {
												input.consume();
												NoViableAltException nvae =
													new NoViableAltException("", 310, 1, input);
												dbg.recognitionException(nvae);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case HASH_SYMBOL:
										{
										alt310=1;
										}
										break;
									case AT_SIGN:
										{
										alt310=2;
										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return;}
										NoViableAltException nvae =
											new NoViableAltException("", 310, 0, input);
										dbg.recognitionException(nvae);
										throw nvae;
									}
									} finally {dbg.exitDecision(310);}

									switch (alt310) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:110: {...}? sass_selector_interpolation_exp
											{
											dbg.location(932,110);
											if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
											}dbg.location(932,128);
											pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6005);
											sass_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;
										case 2 :
											dbg.enterAlt(2);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:162: {...}? less_selector_interpolation_exp
											{
											dbg.location(932,162);
											if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
											}dbg.location(932,180);
											pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence6011);
											less_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(310);}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(311);}

							}
							break;

						default :
							break loop312;
						}
					}
					} finally {dbg.exitSubRule(312);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(933,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence6025);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(933,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(315);

					loop315:
					while (true) {
						int alt315=2;
						try { dbg.enterDecision(315, decisionCanBacktrack[315]);

						int LA315_0 = input.LA(1);
						if ( (LA315_0==COMMENT||LA315_0==NL||LA315_0==WS) ) {
							int LA315_1 = input.LA(2);
							if ( (synpred51_Css3()) ) {
								alt315=1;
							}

						}
						else if ( (LA315_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred51_Css3())) {
							alt315=1;
						}
						else if ( (LA315_0==LESS_AND) && (synpred51_Css3())) {
							alt315=1;
						}
						else if ( (LA315_0==HASH) && (synpred51_Css3())) {
							alt315=1;
						}
						else if ( (LA315_0==HASH_SYMBOL) && (synpred51_Css3())) {
							alt315=1;
						}
						else if ( (LA315_0==DOT) && (synpred51_Css3())) {
							alt315=1;
						}
						else if ( (LA315_0==DIMENSION) && (synpred51_Css3())) {
							alt315=1;
						}
						else if ( (LA315_0==LBRACKET) && (synpred51_Css3())) {
							alt315=1;
						}
						else if ( (LA315_0==COLON||LA315_0==DCOLON) && (synpred51_Css3())) {
							alt315=1;
						}

						} finally {dbg.exitDecision(315);}

						switch (alt315) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(933,48);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt314=2;
							try { dbg.enterSubRule(314);
							try { dbg.enterDecision(314, decisionCanBacktrack[314]);

							try {
								isCyclicDecision = true;
								alt314 = dfa314.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(314);}

							switch (alt314) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(933,49);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:50: ( ws )? elementSubsequent
									{
									dbg.location(933,50);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:50: ( ws )?
									int alt313=2;
									try { dbg.enterSubRule(313);
									try { dbg.enterDecision(313, decisionCanBacktrack[313]);

									int LA313_0 = input.LA(1);
									if ( (LA313_0==COMMENT||LA313_0==NL||LA313_0==WS) ) {
										alt313=1;
									}
									} finally {dbg.exitDecision(313);}

									switch (alt313) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:50: ws
											{
											dbg.location(933,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence6037);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(313);}
									dbg.location(933,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence6040);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(933,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(933,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence6047);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(933,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6049);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(314);}

							}
							break;

						default :
							break loop315;
						}
					}
					} finally {dbg.exitSubRule(315);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(934, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:941:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(941, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND )
			int alt317=8;
			try { dbg.enterDecision(317, decisionCanBacktrack[317]);

			switch ( input.LA(1) ) {
			case HASH_SYMBOL:
				{
				alt317=1;
				}
				break;
			case HASH:
				{
				alt317=2;
				}
				break;
			case DOT:
				{
				alt317=3;
				}
				break;
			case LBRACKET:
				{
				alt317=4;
				}
				break;
			case COLON:
				{
				alt317=5;
				}
				break;
			case DCOLON:
				{
				alt317=6;
				}
				break;
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt317=7;
				}
				break;
			case LESS_AND:
				{
				alt317=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 317, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(317);}

			switch (alt317) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:7: HASH_SYMBOL
					{
					dbg.location(942,7);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_esPred6074); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:21: HASH
					{
					dbg.location(942,21);
					match(input,HASH,FOLLOW_HASH_in_esPred6078); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:28: DOT
					{
					dbg.location(942,28);
					match(input,DOT,FOLLOW_DOT_in_esPred6082); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:34: LBRACKET
					{
					dbg.location(942,34);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_esPred6086); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:45: COLON
					{
					dbg.location(942,45);
					match(input,COLON,FOLLOW_COLON_in_esPred6090); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:53: DCOLON
					{
					dbg.location(942,53);
					match(input,DCOLON,FOLLOW_DCOLON_in_esPred6094); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:62: SASS_EXTEND_ONLY_SELECTOR
					{
					dbg.location(942,62);
					match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred6098); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:90: {...}? LESS_AND
					{
					dbg.location(942,90);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "esPred", "isCssPreprocessorSource()");
					}dbg.location(942,119);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_esPred6104); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(943, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(945, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(947,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt318=2;
			try { dbg.enterSubRule(318);
			try { dbg.enterDecision(318, decisionCanBacktrack[318]);

			int LA318_0 = input.LA(1);
			if ( (LA318_0==IDENT) ) {
				int LA318_1 = input.LA(2);
				if ( (LA318_1==PIPE) && (synpred52_Css3())) {
					alt318=1;
				}
			}
			else if ( (LA318_0==STAR) ) {
				int LA318_2 = input.LA(2);
				if ( (LA318_2==PIPE) && (synpred52_Css3())) {
					alt318=1;
				}
			}
			else if ( (LA318_0==PIPE) && (synpred52_Css3())) {
				alt318=1;
			}
			} finally {dbg.exitDecision(318);}

			switch (alt318) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(947,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector6146);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(318);}
			dbg.location(947,49);
			pushFollow(FOLLOW_elementName_in_typeSelector6150);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(948, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(950, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(951,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:5: ( namespacePrefixName | STAR )?
			int alt319=3;
			try { dbg.enterSubRule(319);
			try { dbg.enterDecision(319, decisionCanBacktrack[319]);

			int LA319_0 = input.LA(1);
			if ( (LA319_0==IDENT) ) {
				alt319=1;
			}
			else if ( (LA319_0==STAR) ) {
				alt319=2;
			}
			} finally {dbg.exitDecision(319);}

			switch (alt319) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:7: namespacePrefixName
					{
					dbg.location(951,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix6165);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:951:29: STAR
					{
					dbg.location(951,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix6169); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(319);}
			dbg.location(951,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix6173); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(952, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:955:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(955, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:956:5: ( ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:957:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(957,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:957:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			int alt321=7;
			try { dbg.enterSubRule(321);
			try { dbg.enterDecision(321, decisionCanBacktrack[321]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt321=1;
				}
				break;
			case LESS_AND:
				{
				switch ( input.LA(2) ) {
				case IDENT:
					{
					int LA321_7 = input.LA(3);
					if ( ((LA321_7 >= COLON && LA321_7 <= COMMENT)||(LA321_7 >= DCOLON && LA321_7 <= DOT)||LA321_7==GREATER||(LA321_7 >= HASH && LA321_7 <= HASH_SYMBOL)||LA321_7==IDENT||(LA321_7 >= LBRACE && LA321_7 <= LBRACKET)||LA321_7==LESS_AND||LA321_7==NL||LA321_7==NUMBER||LA321_7==PLUS||LA321_7==RBRACE||LA321_7==RPAREN||LA321_7==SASS_EXTEND_ONLY_SELECTOR||LA321_7==SEMI||LA321_7==TILDE||LA321_7==WS) ) {
						alt321=2;
					}
					else if ( (LA321_7==AT_SIGN) ) {
						alt321=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 321, 7, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case COLON:
				case COMMA:
				case COMMENT:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case LBRACE:
				case LBRACKET:
				case LESS_AND:
				case NL:
				case NUMBER:
				case PLUS:
				case RBRACE:
				case RPAREN:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SEMI:
				case TILDE:
				case WS:
					{
					alt321=2;
					}
					break;
				case AT_SIGN:
				case MINUS:
					{
					alt321=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 321, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt321=4;
				}
				break;
			case DIMENSION:
			case DOT:
				{
				alt321=5;
				}
				break;
			case LBRACKET:
				{
				alt321=6;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt321=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 321, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(321);}

			switch (alt321) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:958:9: {...}? sass_extend_only_selector
					{
					dbg.location(958,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(958,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent6205);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:959:11: {...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					{
					dbg.location(959,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isCssPreprocessorSource()");
					}dbg.location(959,40);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent6219); if (state.failed) return;dbg.location(959,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:959:49: ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					try { dbg.enterSubRule(320);

					loop320:
					while (true) {
						int alt320=4;
						try { dbg.enterDecision(320, decisionCanBacktrack[320]);

						switch ( input.LA(1) ) {
						case HASH_SYMBOL:
							{
							int LA320_2 = input.LA(2);
							if ( (LA320_2==LBRACE) ) {
								alt320=3;
							}

							}
							break;
						case IDENT:
							{
							alt320=1;
							}
							break;
						case NUMBER:
							{
							alt320=2;
							}
							break;
						}
						} finally {dbg.exitDecision(320);}

						switch (alt320) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:959:50: IDENT
							{
							dbg.location(959,50);
							match(input,IDENT,FOLLOW_IDENT_in_elementSubsequent6222); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:959:58: NUMBER
							{
							dbg.location(959,58);
							match(input,NUMBER,FOLLOW_NUMBER_in_elementSubsequent6226); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:959:67: {...}? sass_interpolation_expression_var
							{
							dbg.location(959,67);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
							}dbg.location(959,85);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_elementSubsequent6232);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop320;
						}
					}
					} finally {dbg.exitSubRule(320);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:960:11: {...}? LESS_AND less_selector_interpolation_exp
					{
					dbg.location(960,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(960,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent6248); if (state.failed) return;dbg.location(960,38);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_elementSubsequent6250);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:961:8: cssId
					{
					dbg.location(961,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent6259);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:962:8: cssClass
					{
					dbg.location(962,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent6268);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:963:11: slAttribute
					{
					dbg.location(963,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent6280);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:964:11: pseudo
					{
					dbg.location(964,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent6292);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(321);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(966, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(969, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) )
			int alt324=2;
			try { dbg.enterDecision(324, decisionCanBacktrack[324]);

			int LA324_0 = input.LA(1);
			if ( (LA324_0==HASH) ) {
				alt324=1;
			}
			else if ( (LA324_0==HASH_SYMBOL) ) {
				alt324=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 324, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(324);}

			switch (alt324) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(970,7);
					match(input,HASH,FOLLOW_HASH_in_cssId6316); if (state.failed) return;dbg.location(970,12);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:12: ({...}? sass_selector_interpolation_exp )?
					int alt322=2;
					try { dbg.enterSubRule(322);
					try { dbg.enterDecision(322, decisionCanBacktrack[322]);

					int LA322_0 = input.LA(1);
					if ( (LA322_0==IDENT||LA322_0==MINUS) ) {
						alt322=1;
					}
					else if ( (LA322_0==HASH_SYMBOL) ) {
						int LA322_2 = input.LA(2);
						if ( (LA322_2==LBRACE) ) {
							alt322=1;
						}
					}
					} finally {dbg.exitDecision(322);}

					switch (alt322) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:970:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(970,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(970,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId6321);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(322);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					{
					dbg.location(972,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp )
					{
					dbg.location(972,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId6343); if (state.failed) return;dbg.location(973,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:13: ( NAME |{...}? less_selector_interpolation_exp )
					int alt323=2;
					try { dbg.enterSubRule(323);
					try { dbg.enterDecision(323, decisionCanBacktrack[323]);

					int LA323_0 = input.LA(1);
					if ( (LA323_0==NAME) ) {
						alt323=1;
					}
					else if ( (LA323_0==AT_SIGN||LA323_0==IDENT||LA323_0==MINUS) ) {
						alt323=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 323, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(323);}

					switch (alt323) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:15: NAME
							{
							dbg.location(973,15);
							match(input,NAME,FOLLOW_NAME_in_cssId6359); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:974:17: {...}? less_selector_interpolation_exp
							{
							dbg.location(974,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(974,35);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssId6379);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(323);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(977, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:1: cssClass : ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION );
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(983, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:5: ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION )
			int alt326=2;
			try { dbg.enterDecision(326, decisionCanBacktrack[326]);

			int LA326_0 = input.LA(1);
			if ( (LA326_0==DOT) ) {
				alt326=1;
			}
			else if ( (LA326_0==DIMENSION) ) {
				alt326=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 326, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(326);}

			switch (alt326) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					{
					dbg.location(984,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:8: DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					{
					dbg.location(984,8);
					match(input,DOT,FOLLOW_DOT_in_cssClass6431); if (state.failed) return;dbg.location(985,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:985:9: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					int alt325=5;
					try { dbg.enterSubRule(325);
					try { dbg.enterDecision(325, decisionCanBacktrack[325]);

					switch ( input.LA(1) ) {
					case IDENT:
						{
						switch ( input.LA(2) ) {
						case HASH_SYMBOL:
							{
							int LA325_7 = input.LA(3);
							if ( (LA325_7==LBRACE) ) {
								alt325=1;
							}
							else if ( (LA325_7==AT_SIGN||LA325_7==IDENT||LA325_7==MINUS||LA325_7==NAME) ) {
								alt325=3;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 325, 7, input);
									dbg.recognitionException(nvae);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

							}
							break;
						case AT_SIGN:
							{
							alt325=2;
							}
							break;
						case COLON:
						case COMMA:
						case COMMENT:
						case DCOLON:
						case DIMENSION:
						case DOT:
						case GREATER:
						case HASH:
						case LBRACE:
						case LBRACKET:
						case LESS_AND:
						case NL:
						case PLUS:
						case RBRACE:
						case RPAREN:
						case SASS_EXTEND_ONLY_SELECTOR:
						case SEMI:
						case TILDE:
						case WS:
							{
							alt325=3;
							}
							break;
						default:
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 325, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}
						}
						break;
					case HASH_SYMBOL:
						{
						alt325=1;
						}
						break;
					case AT_SIGN:
						{
						alt325=2;
						}
						break;
					case MINUS:
						{
						int LA325_4 = input.LA(2);
						if ( (LA325_4==HASH_SYMBOL) ) {
							alt325=1;
						}
						else if ( (LA325_4==AT_SIGN) ) {
							alt325=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 325, 4, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case NOT:
						{
						alt325=4;
						}
						break;
					case GEN:
						{
						alt325=5;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 325, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(325);}

					switch (alt325) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:986:14: {...}? sass_selector_interpolation_exp
							{
							dbg.location(986,14);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isScssSource()");
							}dbg.location(986,33);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass6459);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:15: {...}? less_selector_interpolation_exp
							{
							dbg.location(987,15);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isLessSource()");
							}dbg.location(987,33);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssClass6477);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:15: IDENT
							{
							dbg.location(988,15);
							match(input,IDENT,FOLLOW_IDENT_in_cssClass6493); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:15: NOT
							{
							dbg.location(989,15);
							match(input,NOT,FOLLOW_NOT_in_cssClass6509); if (state.failed) return;
							}
							break;
						case 5 :
							dbg.enterAlt(5);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:990:15: GEN
							{
							dbg.location(990,15);
							match(input,GEN,FOLLOW_GEN_in_cssClass6525); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(325);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:11: {...}? DIMENSION
					{
					dbg.location(992,11);
					if ( !(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "tokenNameStartsWith(\".\")");
					}dbg.location(992,39);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_cssClass6549); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(993, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1000, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1001:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1001,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1002, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1004, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(1005,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute6605); if (state.failed) return;dbg.location(1006,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1006:6: ( namespacePrefix )?
			int alt327=2;
			try { dbg.enterSubRule(327);
			try { dbg.enterDecision(327, decisionCanBacktrack[327]);

			int LA327_0 = input.LA(1);
			if ( (LA327_0==IDENT) ) {
				int LA327_1 = input.LA(2);
				if ( (LA327_1==PIPE) ) {
					alt327=1;
				}
			}
			else if ( (LA327_0==PIPE||LA327_0==STAR) ) {
				alt327=1;
			}
			} finally {dbg.exitDecision(327);}

			switch (alt327) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1006:6: namespacePrefix
					{
					dbg.location(1006,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute6612);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(327);}
			dbg.location(1006,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1006:23: ( ws )?
			int alt328=2;
			try { dbg.enterSubRule(328);
			try { dbg.enterDecision(328, decisionCanBacktrack[328]);

			int LA328_0 = input.LA(1);
			if ( (LA328_0==COMMENT||LA328_0==NL||LA328_0==WS) ) {
				alt328=1;
			}
			} finally {dbg.exitDecision(328);}

			switch (alt328) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1006:23: ws
					{
					dbg.location(1006,23);
					pushFollow(FOLLOW_ws_in_slAttribute6615);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(328);}
			dbg.location(1007,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute6626);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(1007,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:25: ( ws )?
			int alt329=2;
			try { dbg.enterSubRule(329);
			try { dbg.enterDecision(329, decisionCanBacktrack[329]);

			int LA329_0 = input.LA(1);
			if ( (LA329_0==COMMENT||LA329_0==NL||LA329_0==WS) ) {
				alt329=1;
			}
			} finally {dbg.exitDecision(329);}

			switch (alt329) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1007:25: ws
					{
					dbg.location(1007,25);
					pushFollow(FOLLOW_ws_in_slAttribute6628);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(329);}
			dbg.location(1009,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1009:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt332=2;
			try { dbg.enterSubRule(332);
			try { dbg.enterDecision(332, decisionCanBacktrack[332]);

			int LA332_0 = input.LA(1);
			if ( (LA332_0==BEGINS||LA332_0==CONTAINS||LA332_0==DASHMATCH||LA332_0==ENDS||LA332_0==INCLUDES||LA332_0==OPEQ) ) {
				alt332=1;
			}
			} finally {dbg.exitDecision(332);}

			switch (alt332) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1010:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(1010,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1018,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:17: ( ws )?
					int alt330=2;
					try { dbg.enterSubRule(330);
					try { dbg.enterDecision(330, decisionCanBacktrack[330]);

					int LA330_0 = input.LA(1);
					if ( (LA330_0==COMMENT||LA330_0==NL||LA330_0==WS) ) {
						alt330=1;
					}
					} finally {dbg.exitDecision(330);}

					switch (alt330) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:17: ws
							{
							dbg.location(1018,17);
							pushFollow(FOLLOW_ws_in_slAttribute6842);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(330);}
					dbg.location(1019,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute6861);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1020,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1020:17: ( ws )?
					int alt331=2;
					try { dbg.enterSubRule(331);
					try { dbg.enterDecision(331, decisionCanBacktrack[331]);

					int LA331_0 = input.LA(1);
					if ( (LA331_0==COMMENT||LA331_0==NL||LA331_0==WS) ) {
						alt331=1;
					}
					} finally {dbg.exitDecision(331);}

					switch (alt331) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1020:17: ws
							{
							dbg.location(1020,17);
							pushFollow(FOLLOW_ws_in_slAttribute6879);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(331);}

					}
					break;

			}
			} finally {dbg.exitSubRule(332);}
			dbg.location(1023,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute6904); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1024, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1031:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1031, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1032:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1032:4: IDENT
			{
			dbg.location(1032,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName6920); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1033, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1035:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1035, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1036,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1041, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1043:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1043, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1044:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1044:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			{
			dbg.location(1044,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1045,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			int alt349=5;
			try { dbg.enterSubRule(349);
			try { dbg.enterDecision(349, decisionCanBacktrack[349]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA349_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")),""))) ) {
					alt349=1;
				}
				else if ( (evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")) ) {
					alt349=4;
				}
				else if ( ((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt349=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 349, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				alt349=2;
				}
				break;
			case NOT:
				{
				alt349=3;
				}
				break;
			case GEN:
				{
				alt349=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 349, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(349);}

			switch (alt349) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(1046,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(1047,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1048,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt337=2;
					try { dbg.enterSubRule(337);
					try { dbg.enterDecision(337, decisionCanBacktrack[337]);

					try {
						isCyclicDecision = true;
						alt337 = dfa337.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(337);}

					switch (alt337) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(1049,25);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:25: ( ws )?
							int alt333=2;
							try { dbg.enterSubRule(333);
							try { dbg.enterDecision(333, decisionCanBacktrack[333]);

							int LA333_0 = input.LA(1);
							if ( (LA333_0==COMMENT||LA333_0==NL||LA333_0==WS) ) {
								alt333=1;
							}
							} finally {dbg.exitDecision(333);}

							switch (alt333) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:25: ws
									{
									dbg.location(1049,25);
									pushFollow(FOLLOW_ws_in_pseudo7112);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(333);}
							dbg.location(1049,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7115); if (state.failed) return;dbg.location(1049,36);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:36: ( ws )?
							int alt334=2;
							try { dbg.enterSubRule(334);
							try { dbg.enterDecision(334, decisionCanBacktrack[334]);

							int LA334_0 = input.LA(1);
							if ( (LA334_0==COMMENT||LA334_0==NL||LA334_0==WS) ) {
								alt334=1;
							}
							} finally {dbg.exitDecision(334);}

							switch (alt334) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:36: ws
									{
									dbg.location(1049,36);
									pushFollow(FOLLOW_ws_in_pseudo7117);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(334);}
							dbg.location(1049,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:40: ( ( expression ( ws )? ) | STAR )?
							int alt336=3;
							try { dbg.enterSubRule(336);
							try { dbg.enterDecision(336, decisionCanBacktrack[336]);

							int LA336_0 = input.LA(1);
							if ( ((LA336_0 >= ANGLE && LA336_0 <= AT_SIGN)||(LA336_0 >= BOTTOMCENTER_SYM && LA336_0 <= BOTTOMRIGHT_SYM)||LA336_0==CHARSET_SYM||LA336_0==COUNTER_STYLE_SYM||LA336_0==DIMENSION||LA336_0==EMS||LA336_0==EXS||(LA336_0 >= FONT_FACE_SYM && LA336_0 <= FREQ)||LA336_0==GEN||(LA336_0 >= HASH && LA336_0 <= HASH_SYMBOL)||LA336_0==IDENT||LA336_0==IMPORT_SYM||LA336_0==KEYFRAMES_SYM||(LA336_0 >= LBRACKET && LA336_0 <= LENGTH)||(LA336_0 >= LESS_AND && LA336_0 <= LESS_JS_STRING)||(LA336_0 >= MEDIA_SYM && LA336_0 <= MOZ_DOCUMENT_SYM)||LA336_0==NAMESPACE_SYM||LA336_0==NUMBER||(LA336_0 >= PAGE_SYM && LA336_0 <= PERCENTAGE_SYMBOL)||LA336_0==PLUS||(LA336_0 >= REM && LA336_0 <= RIGHTTOP_SYM)||(LA336_0 >= SASS_AT_ROOT && LA336_0 <= SASS_DEBUG)||(LA336_0 >= SASS_EACH && LA336_0 <= SASS_ELSE)||LA336_0==SASS_EXTEND||(LA336_0 >= SASS_FOR && LA336_0 <= SASS_FUNCTION)||(LA336_0 >= SASS_IF && LA336_0 <= SASS_MIXIN)||(LA336_0 >= SASS_RETURN && LA336_0 <= SASS_WHILE)||LA336_0==STRING||(LA336_0 >= TILDE && LA336_0 <= TOPRIGHT_SYM)||(LA336_0 >= URANGE && LA336_0 <= URI)||LA336_0==VARIABLE||LA336_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt336=1;
							}
							else if ( (LA336_0==STAR) ) {
								alt336=2;
							}
							} finally {dbg.exitDecision(336);}

							switch (alt336) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:42: ( expression ( ws )? )
									{
									dbg.location(1049,42);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:43: expression ( ws )?
									{
									dbg.location(1049,43);
									pushFollow(FOLLOW_expression_in_pseudo7123);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(1049,54);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:54: ( ws )?
									int alt335=2;
									try { dbg.enterSubRule(335);
									try { dbg.enterDecision(335, decisionCanBacktrack[335]);

									int LA335_0 = input.LA(1);
									if ( (LA335_0==COMMENT||LA335_0==NL||LA335_0==WS) ) {
										alt335=1;
									}
									} finally {dbg.exitDecision(335);}

									switch (alt335) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:54: ws
											{
											dbg.location(1049,54);
											pushFollow(FOLLOW_ws_in_pseudo7125);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(335);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1049:61: STAR
									{
									dbg.location(1049,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo7131); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(336);}
							dbg.location(1049,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7136); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(337);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:19: {...}? sass_interpolation_expression_var
					{
					dbg.location(1052,19);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isScssSource()");
					}dbg.location(1052,37);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_pseudo7199);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(1053,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:21: NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(1053,21);
					match(input,NOT,FOLLOW_NOT_in_pseudo7221); if (state.failed) return;dbg.location(1053,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:25: ( ws )?
					int alt338=2;
					try { dbg.enterSubRule(338);
					try { dbg.enterDecision(338, decisionCanBacktrack[338]);

					int LA338_0 = input.LA(1);
					if ( (LA338_0==COMMENT||LA338_0==NL||LA338_0==WS) ) {
						alt338=1;
					}
					} finally {dbg.exitDecision(338);}

					switch (alt338) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:25: ws
							{
							dbg.location(1053,25);
							pushFollow(FOLLOW_ws_in_pseudo7223);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(338);}
					dbg.location(1053,29);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7226); if (state.failed) return;dbg.location(1053,36);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:36: ( ws )?
					int alt339=2;
					try { dbg.enterSubRule(339);
					try { dbg.enterDecision(339, decisionCanBacktrack[339]);

					int LA339_0 = input.LA(1);
					if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
						alt339=1;
					}
					} finally {dbg.exitDecision(339);}

					switch (alt339) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:36: ws
							{
							dbg.location(1053,36);
							pushFollow(FOLLOW_ws_in_pseudo7228);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(339);}
					dbg.location(1053,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:40: ( selectorsGroup ( ws )? )?
					int alt341=2;
					try { dbg.enterSubRule(341);
					try { dbg.enterDecision(341, decisionCanBacktrack[341]);

					int LA341_0 = input.LA(1);
					if ( (LA341_0==AT_SIGN||LA341_0==COLON||(LA341_0 >= DCOLON && LA341_0 <= DOT)||(LA341_0 >= GEN && LA341_0 <= GREATER)||(LA341_0 >= HASH && LA341_0 <= HASH_SYMBOL)||LA341_0==IDENT||LA341_0==LBRACKET||LA341_0==LESS_AND||LA341_0==MINUS||(LA341_0 >= PIPE && LA341_0 <= PLUS)||LA341_0==SASS_EXTEND_ONLY_SELECTOR||LA341_0==STAR||LA341_0==TILDE) ) {
						alt341=1;
					}
					} finally {dbg.exitDecision(341);}

					switch (alt341) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:42: selectorsGroup ( ws )?
							{
							dbg.location(1053,42);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7233);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(1053,57);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:57: ( ws )?
							int alt340=2;
							try { dbg.enterSubRule(340);
							try { dbg.enterDecision(340, decisionCanBacktrack[340]);

							int LA340_0 = input.LA(1);
							if ( (LA340_0==COMMENT||LA340_0==NL||LA340_0==WS) ) {
								alt340=1;
							}
							} finally {dbg.exitDecision(340);}

							switch (alt340) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:57: ws
									{
									dbg.location(1053,57);
									pushFollow(FOLLOW_ws_in_pseudo7235);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(340);}

							}
							break;

					}
					} finally {dbg.exitSubRule(341);}
					dbg.location(1053,63);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7240); if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:19: {...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(1054,19);
					if ( !(evalPredicate(tokenNameEquals("is") || tokenNameEquals("where") || tokenNameEquals("has"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"is\") || tokenNameEquals(\"where\") || tokenNameEquals(\"has\")");
					}dbg.location(1054,98);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:98: ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:100: IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(1054,100);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo7266); if (state.failed) return;dbg.location(1054,106);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:106: ( ws )?
					int alt342=2;
					try { dbg.enterSubRule(342);
					try { dbg.enterDecision(342, decisionCanBacktrack[342]);

					int LA342_0 = input.LA(1);
					if ( (LA342_0==COMMENT||LA342_0==NL||LA342_0==WS) ) {
						alt342=1;
					}
					} finally {dbg.exitDecision(342);}

					switch (alt342) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:106: ws
							{
							dbg.location(1054,106);
							pushFollow(FOLLOW_ws_in_pseudo7268);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(342);}
					dbg.location(1054,110);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7271); if (state.failed) return;dbg.location(1054,117);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:117: ( ws )?
					int alt343=2;
					try { dbg.enterSubRule(343);
					try { dbg.enterDecision(343, decisionCanBacktrack[343]);

					int LA343_0 = input.LA(1);
					if ( (LA343_0==COMMENT||LA343_0==NL||LA343_0==WS) ) {
						alt343=1;
					}
					} finally {dbg.exitDecision(343);}

					switch (alt343) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:117: ws
							{
							dbg.location(1054,117);
							pushFollow(FOLLOW_ws_in_pseudo7273);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(343);}
					dbg.location(1054,121);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:121: ( selectorsGroup ( ws )? )?
					int alt345=2;
					try { dbg.enterSubRule(345);
					try { dbg.enterDecision(345, decisionCanBacktrack[345]);

					int LA345_0 = input.LA(1);
					if ( (LA345_0==AT_SIGN||LA345_0==COLON||(LA345_0 >= DCOLON && LA345_0 <= DOT)||(LA345_0 >= GEN && LA345_0 <= GREATER)||(LA345_0 >= HASH && LA345_0 <= HASH_SYMBOL)||LA345_0==IDENT||LA345_0==LBRACKET||LA345_0==LESS_AND||LA345_0==MINUS||(LA345_0 >= PIPE && LA345_0 <= PLUS)||LA345_0==SASS_EXTEND_ONLY_SELECTOR||LA345_0==STAR||LA345_0==TILDE) ) {
						alt345=1;
					}
					} finally {dbg.exitDecision(345);}

					switch (alt345) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:123: selectorsGroup ( ws )?
							{
							dbg.location(1054,123);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7278);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(1054,138);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:138: ( ws )?
							int alt344=2;
							try { dbg.enterSubRule(344);
							try { dbg.enterDecision(344, decisionCanBacktrack[344]);

							int LA344_0 = input.LA(1);
							if ( (LA344_0==COMMENT||LA344_0==NL||LA344_0==WS) ) {
								alt344=1;
							}
							} finally {dbg.exitDecision(344);}

							switch (alt344) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:138: ws
									{
									dbg.location(1054,138);
									pushFollow(FOLLOW_ws_in_pseudo7280);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(344);}

							}
							break;

					}
					} finally {dbg.exitSubRule(345);}
					dbg.location(1054,144);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7285); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					{
					dbg.location(1055,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:20: {...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN
					{
					dbg.location(1055,20);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isLessSource()");
					}dbg.location(1055,38);
					if ( !(evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"extend\")");
					}dbg.location(1055,67);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo7312); if (state.failed) return;dbg.location(1055,73);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:73: ( ws )?
					int alt346=2;
					try { dbg.enterSubRule(346);
					try { dbg.enterDecision(346, decisionCanBacktrack[346]);

					int LA346_0 = input.LA(1);
					if ( (LA346_0==COMMENT||LA346_0==NL||LA346_0==WS) ) {
						alt346=1;
					}
					} finally {dbg.exitDecision(346);}

					switch (alt346) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:73: ws
							{
							dbg.location(1055,73);
							pushFollow(FOLLOW_ws_in_pseudo7314);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(346);}
					dbg.location(1055,77);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo7317); if (state.failed) return;dbg.location(1055,84);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:84: ( ws )?
					int alt347=2;
					try { dbg.enterSubRule(347);
					try { dbg.enterDecision(347, decisionCanBacktrack[347]);

					int LA347_0 = input.LA(1);
					if ( (LA347_0==COMMENT||LA347_0==NL||LA347_0==WS) ) {
						alt347=1;
					}
					} finally {dbg.exitDecision(347);}

					switch (alt347) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:84: ws
							{
							dbg.location(1055,84);
							pushFollow(FOLLOW_ws_in_pseudo7319);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(347);}
					dbg.location(1055,88);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:88: ( selectorsGroup )?
					int alt348=2;
					try { dbg.enterSubRule(348);
					try { dbg.enterDecision(348, decisionCanBacktrack[348]);

					int LA348_0 = input.LA(1);
					if ( (LA348_0==AT_SIGN||LA348_0==COLON||(LA348_0 >= DCOLON && LA348_0 <= DOT)||(LA348_0 >= GEN && LA348_0 <= GREATER)||(LA348_0 >= HASH && LA348_0 <= HASH_SYMBOL)||LA348_0==IDENT||LA348_0==LBRACKET||LA348_0==LESS_AND||LA348_0==MINUS||(LA348_0 >= PIPE && LA348_0 <= PLUS)||LA348_0==SASS_EXTEND_ONLY_SELECTOR||LA348_0==STAR||LA348_0==TILDE) ) {
						alt348=1;
					}
					} finally {dbg.exitDecision(348);}

					switch (alt348) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1055:88: selectorsGroup
							{
							dbg.location(1055,88);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo7322);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(348);}
					dbg.location(1055,104);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo7325); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(349);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1057, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:1: propertyDeclaration : ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue |{...}? property ( ws )? COLON ( ws )? ( componentValueOuter )? | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1059, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:5: ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue |{...}? property ( ws )? COLON ( ws )? ( componentValueOuter )? | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? )
			int alt361=3;
			try { dbg.enterDecision(361, decisionCanBacktrack[361]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA361_1 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt361=1;
				}
				else if ( (true) ) {
					alt361=3;
				}

				}
				break;
			case IDENT:
				{
				int LA361_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt361=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt361=2;
				}
				else if ( (true) ) {
					alt361=3;
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA361_3 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt361=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA361_4 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt361=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA361_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt361=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt361=2;
				}
				else if ( (true) ) {
					alt361=3;
				}

				}
				break;
			case MINUS:
				{
				int LA361_6 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt361=1;
				}
				else if ( ((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt361=2;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA361_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
					alt361=1;
				}
				else if ( (evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
					alt361=2;
				}
				else if ( (true) ) {
					alt361=3;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA361_8 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=1;
				}
				else if ( (((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt361=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA361_9 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=1;
				}
				else if ( (((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt361=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 361, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(361);}

			switch (alt361) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:7: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(1061,7);
					if ( !(evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")");
					}dbg.location(1061,66);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:66: ( STAR )?
					int alt350=2;
					try { dbg.enterSubRule(350);
					try { dbg.enterDecision(350, decisionCanBacktrack[350]);

					int LA350_0 = input.LA(1);
					if ( (LA350_0==STAR) ) {
						alt350=1;
					}
					} finally {dbg.exitDecision(350);}

					switch (alt350) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:66: STAR
							{
							dbg.location(1061,66);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration7367); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(350);}
					dbg.location(1061,72);
					pushFollow(FOLLOW_property_in_propertyDeclaration7370);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1061,81);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:81: ( ws )?
					int alt351=2;
					try { dbg.enterSubRule(351);
					try { dbg.enterDecision(351, decisionCanBacktrack[351]);

					int LA351_0 = input.LA(1);
					if ( (LA351_0==COMMENT||LA351_0==NL||LA351_0==WS) ) {
						alt351=1;
					}
					} finally {dbg.exitDecision(351);}

					switch (alt351) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:81: ws
							{
							dbg.location(1061,81);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7372);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(351);}
					dbg.location(1061,85);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7375); if (state.failed) return;dbg.location(1061,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:91: ( ws )?
					int alt352=2;
					try { dbg.enterSubRule(352);
					try { dbg.enterDecision(352, decisionCanBacktrack[352]);

					int LA352_0 = input.LA(1);
					if ( (LA352_0==COMMENT||LA352_0==NL||LA352_0==WS) ) {
						alt352=1;
					}
					} finally {dbg.exitDecision(352);}

					switch (alt352) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1061:91: ws
							{
							dbg.location(1061,91);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7377);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(352);}
					dbg.location(1061,95);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration7380);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:7: {...}? property ( ws )? COLON ( ws )? ( componentValueOuter )?
					{
					dbg.location(1062,7);
					if ( !(evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "tokenNameStartsWith(\"--\")");
					}dbg.location(1062,36);
					pushFollow(FOLLOW_property_in_propertyDeclaration7391);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1062,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:45: ( ws )?
					int alt353=2;
					try { dbg.enterSubRule(353);
					try { dbg.enterDecision(353, decisionCanBacktrack[353]);

					int LA353_0 = input.LA(1);
					if ( (LA353_0==COMMENT||LA353_0==NL||LA353_0==WS) ) {
						alt353=1;
					}
					} finally {dbg.exitDecision(353);}

					switch (alt353) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:45: ws
							{
							dbg.location(1062,45);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7393);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(353);}
					dbg.location(1062,49);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7396); if (state.failed) return;dbg.location(1062,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:55: ( ws )?
					int alt354=2;
					try { dbg.enterSubRule(354);
					try { dbg.enterDecision(354, decisionCanBacktrack[354]);

					int LA354_0 = input.LA(1);
					if ( (LA354_0==COMMENT||LA354_0==NL||LA354_0==WS) ) {
						alt354=1;
					}
					} finally {dbg.exitDecision(354);}

					switch (alt354) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:55: ws
							{
							dbg.location(1062,55);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7398);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(354);}
					dbg.location(1062,59);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:59: ( componentValueOuter )?
					int alt355=2;
					try { dbg.enterSubRule(355);
					try { dbg.enterDecision(355, decisionCanBacktrack[355]);

					switch ( input.LA(1) ) {
						case LBRACE:
						case LPAREN:
							{
							alt355=1;
							}
							break;
						case LBRACKET:
							{
							alt355=1;
							}
							break;
						case IDENT:
							{
							alt355=1;
							}
							break;
						case COMMENT:
						case NL:
						case WS:
							{
							alt355=1;
							}
							break;
						case LESS_AND:
							{
							alt355=1;
							}
							break;
						case DOT:
							{
							alt355=1;
							}
							break;
						case HASH:
							{
							alt355=1;
							}
							break;
						case SASS_MIXIN:
							{
							alt355=1;
							}
							break;
						case AT_IDENT:
							{
							alt355=1;
							}
							break;
						case SASS_INCLUDE:
							{
							alt355=1;
							}
							break;
						case SASS_AT_ROOT:
							{
							alt355=1;
							}
							break;
						case GREATER:
						case PLUS:
						case TILDE:
							{
							alt355=1;
							}
							break;
						case SASS_EXTEND_ONLY_SELECTOR:
							{
							int LA355_16 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(isScssSource(),"isScssSource()"),""))) ) {
								alt355=1;
							}
							}
							break;
						case HASH_SYMBOL:
							{
							alt355=1;
							}
							break;
						case DIMENSION:
							{
							int LA355_18 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt355=1;
							}
							}
							break;
						case COLON:
						case DCOLON:
							{
							alt355=1;
							}
							break;
						case MINUS:
							{
							alt355=1;
							}
							break;
						case AT_SIGN:
							{
							alt355=1;
							}
							break;
						case STAR:
							{
							alt355=1;
							}
							break;
						case PIPE:
							{
							alt355=1;
							}
							break;
						case GEN:
							{
							alt355=1;
							}
							break;
						case VARIABLE:
							{
							alt355=1;
							}
							break;
						case SASS_DEBUG:
						case SASS_WARN:
							{
							alt355=1;
							}
							break;
						case SASS_VAR:
							{
							alt355=1;
							}
							break;
						case SUPPORTS_SYM:
							{
							alt355=1;
							}
							break;
						case SASS_IF:
							{
							alt355=1;
							}
							break;
						case SASS_FOR:
							{
							alt355=1;
							}
							break;
						case SASS_EACH:
							{
							alt355=1;
							}
							break;
						case SASS_WHILE:
							{
							alt355=1;
							}
							break;
						case A:
						case ANGLE:
						case B:
						case BEGINS:
						case C:
						case CDC:
						case CDO:
						case COMMA:
						case CONTAINER_SYM:
						case CONTAINS:
						case CP_DOTS:
						case CP_EQ:
						case CP_NOT_EQ:
						case D:
						case DASHMATCH:
						case E:
						case EMS:
						case ENDS:
						case ESCAPE:
						case EXCLAMATION_MARK:
						case EXS:
						case F:
						case FREQ:
						case G:
						case GREATER_OR_EQ:
						case H:
						case HEXCHAR:
						case HEXCHAR_WILDCARD:
						case I:
						case IMPORTANT_SYM:
						case INCLUDES:
						case INVALID:
						case J:
						case K:
						case L:
						case LAYER_SYM:
						case LENGTH:
						case LESS:
						case LESS_JS_STRING:
						case LESS_OR_EQ:
						case LESS_REST:
						case LINE_COMMENT:
						case M:
						case MOZ_DOMAIN:
						case MOZ_REGEXP:
						case MOZ_URL_PREFIX:
						case N:
						case NAME:
						case NMCHAR:
						case NMSTART:
						case NONASCII:
						case NOT:
						case NUMBER:
						case O:
						case OPEQ:
						case P:
						case PERCENTAGE:
						case PERCENTAGE_SYMBOL:
						case Q:
						case R:
						case REM:
						case RESOLUTION:
						case S:
						case SASS_CONTENT:
						case SASS_DEFAULT:
						case SASS_ELSEIF:
						case SASS_ERROR:
						case SASS_GLOBAL:
						case SASS_OPTIONAL:
						case SOLIDUS:
						case STRING:
						case T:
						case TIME:
						case U:
						case UNICODE:
						case URANGE:
						case URI:
						case URL:
						case V:
						case W:
						case X:
						case Y:
						case Z:
							{
							alt355=1;
							}
							break;
						case IMPORT_SYM:
							{
							alt355=1;
							}
							break;
						case PAGE_SYM:
							{
							alt355=1;
							}
							break;
						case FONT_FACE_SYM:
							{
							alt355=1;
							}
							break;
						case MOZ_DOCUMENT_SYM:
							{
							alt355=1;
							}
							break;
						case WEBKIT_KEYFRAMES_SYM:
							{
							alt355=1;
							}
							break;
						case KEYFRAMES_SYM:
							{
							alt355=1;
							}
							break;
						case MEDIA_SYM:
							{
							alt355=1;
							}
							break;
						case SASS_EXTEND:
							{
							alt355=1;
							}
							break;
						case BOTTOMCENTER_SYM:
						case BOTTOMLEFTCORNER_SYM:
						case BOTTOMLEFT_SYM:
						case BOTTOMRIGHTCORNER_SYM:
						case BOTTOMRIGHT_SYM:
						case LEFTBOTTOM_SYM:
						case LEFTMIDDLE_SYM:
						case LEFTTOP_SYM:
						case RIGHTBOTTOM_SYM:
						case RIGHTMIDDLE_SYM:
						case RIGHTTOP_SYM:
						case TOPCENTER_SYM:
						case TOPLEFTCORNER_SYM:
						case TOPLEFT_SYM:
						case TOPRIGHTCORNER_SYM:
						case TOPRIGHT_SYM:
							{
							alt355=1;
							}
							break;
						case CHARSET_SYM:
						case COUNTER_STYLE_SYM:
						case NAMESPACE_SYM:
						case SASS_ELSE:
						case SASS_FORWARD:
						case SASS_FUNCTION:
						case SASS_RETURN:
						case SASS_USE:
							{
							alt355=1;
							}
							break;
					}
					} finally {dbg.exitDecision(355);}

					switch (alt355) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1062:59: componentValueOuter
							{
							dbg.location(1062,59);
							pushFollow(FOLLOW_componentValueOuter_in_propertyDeclaration7401);
							componentValueOuter();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(355);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:7: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(1063,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:7: ( STAR )?
					int alt356=2;
					try { dbg.enterSubRule(356);
					try { dbg.enterDecision(356, decisionCanBacktrack[356]);

					int LA356_0 = input.LA(1);
					if ( (LA356_0==STAR) ) {
						alt356=1;
					}
					} finally {dbg.exitDecision(356);}

					switch (alt356) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:7: STAR
							{
							dbg.location(1063,7);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration7410); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(356);}
					dbg.location(1063,13);
					pushFollow(FOLLOW_property_in_propertyDeclaration7413);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(1063,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:22: ( ws )?
					int alt357=2;
					try { dbg.enterSubRule(357);
					try { dbg.enterDecision(357, decisionCanBacktrack[357]);

					int LA357_0 = input.LA(1);
					if ( (LA357_0==COMMENT||LA357_0==NL||LA357_0==WS) ) {
						alt357=1;
					}
					} finally {dbg.exitDecision(357);}

					switch (alt357) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:22: ws
							{
							dbg.location(1063,22);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7415);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(357);}
					dbg.location(1063,26);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration7418); if (state.failed) return;dbg.location(1063,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:32: ( ws )?
					int alt358=2;
					try { dbg.enterSubRule(358);
					try { dbg.enterDecision(358, decisionCanBacktrack[358]);

					int LA358_0 = input.LA(1);
					if ( (LA358_0==COMMENT||LA358_0==NL||LA358_0==WS) ) {
						alt358=1;
					}
					} finally {dbg.exitDecision(358);}

					switch (alt358) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:32: ws
							{
							dbg.location(1063,32);
							pushFollow(FOLLOW_ws_in_propertyDeclaration7420);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(358);}
					dbg.location(1063,36);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration7423);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1063,50);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:50: ( ( ws )? prio )?
					int alt360=2;
					try { dbg.enterSubRule(360);
					try { dbg.enterDecision(360, decisionCanBacktrack[360]);

					try {
						isCyclicDecision = true;
						alt360 = dfa360.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(360);}

					switch (alt360) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:51: ( ws )? prio
							{
							dbg.location(1063,51);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:51: ( ws )?
							int alt359=2;
							try { dbg.enterSubRule(359);
							try { dbg.enterDecision(359, decisionCanBacktrack[359]);

							int LA359_0 = input.LA(1);
							if ( (LA359_0==COMMENT||LA359_0==NL||LA359_0==WS) ) {
								alt359=1;
							}
							} finally {dbg.exitDecision(359);}

							switch (alt359) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:51: ws
									{
									dbg.location(1063,51);
									pushFollow(FOLLOW_ws_in_propertyDeclaration7426);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(359);}
							dbg.location(1063,55);
							pushFollow(FOLLOW_prio_in_propertyDeclaration7429);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(360);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1065, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1074, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1075:5: ({...}? cp_expression_list | propertyValue )
			int alt362=2;
			try { dbg.enterDecision(362, decisionCanBacktrack[362]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt362=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA362_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case IDENT:
				{
				int LA362_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case VARIABLE:
				{
				int LA362_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case LBRACKET:
				{
				int LA362_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA362_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case URANGE:
				{
				int LA362_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA362_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA362_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case EMS:
				{
				int LA362_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case REM:
				{
				int LA362_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case EXS:
				{
				int LA362_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA362_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case TIME:
				{
				int LA362_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case FREQ:
				{
				int LA362_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA362_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA362_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case STRING:
				{
				int LA362_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case TILDE:
				{
				int LA362_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA362_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case GEN:
				{
				int LA362_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case URI:
				{
				int LA362_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case HASH:
				{
				int LA362_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (true) ) {
					alt362=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA362_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt362=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt362=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 362, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA362_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt362=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt362=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 362, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA362_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt362=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt362=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 362, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA362_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt362=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt362=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 362, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA362_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt362=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt362=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 362, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA362_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt362=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 362, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 362, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(362);}

			switch (alt362) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:5: {...}? cp_expression_list
					{
					dbg.location(1076,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(1076,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue7469);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1077:7: propertyValue
					{
					dbg.location(1077,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue7477);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1078, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1080:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1080, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1081:2: ( expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:9: expression
			{
			dbg.location(1082,9);
			pushFollow(FOLLOW_expression_in_propertyValue7499);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1083, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1086:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1086, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1088:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(1089,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1089:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt363=0;
			try { dbg.enterSubRule(363);

			loop363:
			while (true) {
				int alt363=2;
				try { dbg.enterDecision(363, decisionCanBacktrack[363]);

				int LA363_0 = input.LA(1);
				if ( ((LA363_0 >= A && LA363_0 <= ANGLE)||(LA363_0 >= AT_SIGN && LA363_0 <= LAYER_SYM)||(LA363_0 >= LBRACKET && LA363_0 <= R)||(LA363_0 >= RBRACKET && LA363_0 <= SASS_USE)||(LA363_0 >= SASS_WARN && LA363_0 <= SASS_WHILE)||(LA363_0 >= STRING && LA363_0 <= Z)) ) {
					alt363=1;
				}

				} finally {dbg.exitDecision(363);}

				switch (alt363) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1089,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_USE)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt363 >= 1 ) break loop363;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(363, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt363++;
			}
			} finally {dbg.exitSubRule(363);}
			dbg.location(1089,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1090, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "preservedToken"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1092:1: preservedToken : ~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET ) ;
	public final void preservedToken() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "preservedToken");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1092, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1092:15: (~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1092,15);
			if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LINE_COMMENT)||(input.LA(1) >= M && input.LA(1) <= R)||(input.LA(1) >= REM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1092, 75);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "preservedToken");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "preservedToken"



	// $ANTLR start "preservedTokenTopLevel"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:1: preservedTokenTopLevel : ~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET | SEMI ) ;
	public final void preservedTokenTopLevel() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "preservedTokenTopLevel");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1094, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:23: (~ ( LPAREN | LBRACE | LBRACKET | RPAREN | RBRACE | RBRACKET | SEMI ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1094,23);
			if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LINE_COMMENT)||(input.LA(1) >= M && input.LA(1) <= R)||(input.LA(1) >= REM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1094, 91);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "preservedTokenTopLevel");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "preservedTokenTopLevel"



	// $ANTLR start "braceBlock2"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1097:1: braceBlock2 : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void braceBlock2() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "braceBlock2");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1097, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1097:12: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1098:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1098,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_braceBlock27660); if (state.failed) return;dbg.location(1098,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1098:12: ( ws )?
			int alt364=2;
			try { dbg.enterSubRule(364);
			try { dbg.enterDecision(364, decisionCanBacktrack[364]);

			int LA364_0 = input.LA(1);
			if ( (LA364_0==COMMENT||LA364_0==NL||LA364_0==WS) ) {
				alt364=1;
			}
			} finally {dbg.exitDecision(364);}

			switch (alt364) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1098:12: ws
					{
					dbg.location(1098,12);
					pushFollow(FOLLOW_ws_in_braceBlock27662);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(364);}
			dbg.location(1099,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:9: ( declarations )?
			int alt365=2;
			try { dbg.enterSubRule(365);
			try { dbg.enterDecision(365, decisionCanBacktrack[365]);

			int LA365_0 = input.LA(1);
			if ( ((LA365_0 >= AT_IDENT && LA365_0 <= AT_SIGN)||(LA365_0 >= BOTTOMCENTER_SYM && LA365_0 <= BOTTOMRIGHT_SYM)||(LA365_0 >= CHARSET_SYM && LA365_0 <= COLON)||LA365_0==CONTAINER_SYM||LA365_0==COUNTER_STYLE_SYM||(LA365_0 >= DCOLON && LA365_0 <= DOT)||LA365_0==FONT_FACE_SYM||(LA365_0 >= GEN && LA365_0 <= GREATER)||(LA365_0 >= HASH && LA365_0 <= HASH_SYMBOL)||LA365_0==IDENT||LA365_0==IMPORT_SYM||LA365_0==KEYFRAMES_SYM||LA365_0==LAYER_SYM||(LA365_0 >= LBRACKET && LA365_0 <= LEFTTOP_SYM)||LA365_0==LESS_AND||(LA365_0 >= MEDIA_SYM && LA365_0 <= MOZ_DOCUMENT_SYM)||LA365_0==NAMESPACE_SYM||LA365_0==PAGE_SYM||(LA365_0 >= PIPE && LA365_0 <= PLUS)||(LA365_0 >= RIGHTBOTTOM_SYM && LA365_0 <= RIGHTTOP_SYM)||(LA365_0 >= SASS_AT_ROOT && LA365_0 <= SASS_DEBUG)||(LA365_0 >= SASS_EACH && LA365_0 <= SASS_ELSE)||(LA365_0 >= SASS_ERROR && LA365_0 <= SASS_FUNCTION)||(LA365_0 >= SASS_IF && LA365_0 <= SASS_MIXIN)||(LA365_0 >= SASS_RETURN && LA365_0 <= SEMI)||LA365_0==STAR||LA365_0==SUPPORTS_SYM||LA365_0==TILDE||(LA365_0 >= TOPCENTER_SYM && LA365_0 <= TOPRIGHT_SYM)||LA365_0==VARIABLE||LA365_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt365=1;
			}
			} finally {dbg.exitDecision(365);}

			switch (alt365) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1099:9: declarations
					{
					dbg.location(1099,9);
					pushFollow(FOLLOW_declarations_in_braceBlock27673);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(365);}
			dbg.location(1100,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_braceBlock27680); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1101, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "braceBlock2");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "braceBlock2"



	// $ANTLR start "braceBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1104:1: braceBlock : LBRACE ( componentValue )* RBRACE ;
	public final void braceBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "braceBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1104, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1104:11: ( LBRACE ( componentValue )* RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1104:13: LBRACE ( componentValue )* RBRACE
			{
			dbg.location(1104,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_braceBlock7693); if (state.failed) return;dbg.location(1104,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1104:20: ( componentValue )*
			try { dbg.enterSubRule(366);

			loop366:
			while (true) {
				int alt366=2;
				try { dbg.enterDecision(366, decisionCanBacktrack[366]);

				int LA366_0 = input.LA(1);
				if ( ((LA366_0 >= A && LA366_0 <= R)||(LA366_0 >= REM && LA366_0 <= RIGHTTOP_SYM)||(LA366_0 >= S && LA366_0 <= Z)) ) {
					alt366=1;
				}

				} finally {dbg.exitDecision(366);}

				switch (alt366) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1104:20: componentValue
					{
					dbg.location(1104,20);
					pushFollow(FOLLOW_componentValue_in_braceBlock7695);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop366;
				}
			}
			} finally {dbg.exitSubRule(366);}
			dbg.location(1104,36);
			match(input,RBRACE,FOLLOW_RBRACE_in_braceBlock7698); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1104, 41);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "braceBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "braceBlock"



	// $ANTLR start "bracketBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:1: bracketBlock : LBRACKET ( componentValue )+ RBRACKET ;
	public final void bracketBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bracketBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1106, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:13: ( LBRACKET ( componentValue )+ RBRACKET )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:15: LBRACKET ( componentValue )+ RBRACKET
			{
			dbg.location(1106,15);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_bracketBlock7705); if (state.failed) return;dbg.location(1106,24);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:24: ( componentValue )+
			int cnt367=0;
			try { dbg.enterSubRule(367);

			loop367:
			while (true) {
				int alt367=2;
				try { dbg.enterDecision(367, decisionCanBacktrack[367]);

				int LA367_0 = input.LA(1);
				if ( ((LA367_0 >= A && LA367_0 <= R)||(LA367_0 >= REM && LA367_0 <= RIGHTTOP_SYM)||(LA367_0 >= S && LA367_0 <= Z)) ) {
					alt367=1;
				}

				} finally {dbg.exitDecision(367);}

				switch (alt367) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1106:24: componentValue
					{
					dbg.location(1106,24);
					pushFollow(FOLLOW_componentValue_in_bracketBlock7707);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					if ( cnt367 >= 1 ) break loop367;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(367, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt367++;
			}
			} finally {dbg.exitSubRule(367);}
			dbg.location(1106,40);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_bracketBlock7710); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1106, 47);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bracketBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bracketBlock"



	// $ANTLR start "parenBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:1: parenBlock : LPAREN ( componentValue )+ RPAREN ;
	public final void parenBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "parenBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1108, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:11: ( LPAREN ( componentValue )+ RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:13: LPAREN ( componentValue )+ RPAREN
			{
			dbg.location(1108,13);
			match(input,LPAREN,FOLLOW_LPAREN_in_parenBlock7717); if (state.failed) return;dbg.location(1108,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:20: ( componentValue )+
			int cnt368=0;
			try { dbg.enterSubRule(368);

			loop368:
			while (true) {
				int alt368=2;
				try { dbg.enterDecision(368, decisionCanBacktrack[368]);

				int LA368_0 = input.LA(1);
				if ( ((LA368_0 >= A && LA368_0 <= R)||(LA368_0 >= REM && LA368_0 <= RIGHTTOP_SYM)||(LA368_0 >= S && LA368_0 <= Z)) ) {
					alt368=1;
				}

				} finally {dbg.exitDecision(368);}

				switch (alt368) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:20: componentValue
					{
					dbg.location(1108,20);
					pushFollow(FOLLOW_componentValue_in_parenBlock7719);
					componentValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					if ( cnt368 >= 1 ) break loop368;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(368, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt368++;
			}
			} finally {dbg.exitSubRule(368);}
			dbg.location(1108,36);
			match(input,RPAREN,FOLLOW_RPAREN_in_parenBlock7722); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1108, 41);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "parenBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "parenBlock"



	// $ANTLR start "componentValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:1: componentValue : ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedToken );
	public final void componentValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "componentValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1110, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:15: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedToken )
			int alt369=5;
			try { dbg.enterDecision(369, decisionCanBacktrack[369]);

			switch ( input.LA(1) ) {
			case LPAREN:
				{
				alt369=1;
				}
				break;
			case LBRACE:
				{
				alt369=2;
				}
				break;
			case LBRACKET:
				{
				alt369=3;
				}
				break;
			case IDENT:
				{
				int LA369_4 = input.LA(2);
				if ( (synpred53_Css3()) ) {
					alt369=4;
				}
				else if ( (true) ) {
					alt369=5;
				}

				}
				break;
			case A:
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case B:
			case BEGINS:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case C:
			case CDC:
			case CDO:
			case CHARSET_SYM:
			case COLON:
			case COMMA:
			case COMMENT:
			case CONTAINER_SYM:
			case CONTAINS:
			case COUNTER_STYLE_SYM:
			case CP_DOTS:
			case CP_EQ:
			case CP_NOT_EQ:
			case D:
			case DASHMATCH:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case E:
			case EMS:
			case ENDS:
			case ESCAPE:
			case EXCLAMATION_MARK:
			case EXS:
			case F:
			case FONT_FACE_SYM:
			case FREQ:
			case G:
			case GEN:
			case GREATER:
			case GREATER_OR_EQ:
			case H:
			case HASH:
			case HASH_SYMBOL:
			case HEXCHAR:
			case HEXCHAR_WILDCARD:
			case I:
			case IMPORTANT_SYM:
			case IMPORT_SYM:
			case INCLUDES:
			case INVALID:
			case J:
			case K:
			case KEYFRAMES_SYM:
			case L:
			case LAYER_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS:
			case LESS_AND:
			case LESS_JS_STRING:
			case LESS_OR_EQ:
			case LESS_REST:
			case LINE_COMMENT:
			case M:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case MOZ_DOMAIN:
			case MOZ_REGEXP:
			case MOZ_URL_PREFIX:
			case N:
			case NAME:
			case NAMESPACE_SYM:
			case NL:
			case NMCHAR:
			case NMSTART:
			case NONASCII:
			case NOT:
			case NUMBER:
			case O:
			case OPEQ:
			case P:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PIPE:
			case PLUS:
			case Q:
			case R:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case S:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_DEFAULT:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ELSEIF:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_GLOBAL:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_OPTIONAL:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case SEMI:
			case SOLIDUS:
			case STAR:
			case STRING:
			case SUPPORTS_SYM:
			case T:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case U:
			case UNICODE:
			case URANGE:
			case URI:
			case URL:
			case V:
			case VARIABLE:
			case W:
			case WEBKIT_KEYFRAMES_SYM:
			case WS:
			case X:
			case Y:
			case Z:
				{
				alt369=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 369, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(369);}

			switch (alt369) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:17: parenBlock
					{
					dbg.location(1110,17);
					pushFollow(FOLLOW_parenBlock_in_componentValue7729);
					parenBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:30: braceBlock
					{
					dbg.location(1110,30);
					pushFollow(FOLLOW_braceBlock_in_componentValue7733);
					braceBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:43: bracketBlock
					{
					dbg.location(1110,43);
					pushFollow(FOLLOW_bracketBlock_in_componentValue7737);
					bracketBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:58: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1110,87);
					pushFollow(FOLLOW_function_in_componentValue7752);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:98: preservedToken
					{
					dbg.location(1110,98);
					pushFollow(FOLLOW_preservedToken_in_componentValue7756);
					preservedToken();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1110, 111);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "componentValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "componentValue"



	// $ANTLR start "componentValueOuter"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:1: componentValueOuter : ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )* ;
	public final void componentValueOuter() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "componentValueOuter");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1112, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:20: ( ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:22: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel ) ( componentValueOuter )*
			{
			dbg.location(1112,22);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:22: ( parenBlock | braceBlock | bracketBlock | ( functionName ( ws )? LPAREN )=> function | preservedTokenTopLevel )
			int alt370=5;
			try { dbg.enterSubRule(370);
			try { dbg.enterDecision(370, decisionCanBacktrack[370]);

			switch ( input.LA(1) ) {
			case LPAREN:
				{
				alt370=1;
				}
				break;
			case LBRACE:
				{
				alt370=2;
				}
				break;
			case LBRACKET:
				{
				alt370=3;
				}
				break;
			case IDENT:
				{
				int LA370_4 = input.LA(2);
				if ( (synpred54_Css3()) ) {
					alt370=4;
				}
				else if ( (true) ) {
					alt370=5;
				}

				}
				break;
			case A:
			case ANGLE:
			case AT_IDENT:
			case AT_SIGN:
			case B:
			case BEGINS:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case C:
			case CDC:
			case CDO:
			case CHARSET_SYM:
			case COLON:
			case COMMA:
			case COMMENT:
			case CONTAINER_SYM:
			case CONTAINS:
			case COUNTER_STYLE_SYM:
			case CP_DOTS:
			case CP_EQ:
			case CP_NOT_EQ:
			case D:
			case DASHMATCH:
			case DCOLON:
			case DIMENSION:
			case DOT:
			case E:
			case EMS:
			case ENDS:
			case ESCAPE:
			case EXCLAMATION_MARK:
			case EXS:
			case F:
			case FONT_FACE_SYM:
			case FREQ:
			case G:
			case GEN:
			case GREATER:
			case GREATER_OR_EQ:
			case H:
			case HASH:
			case HASH_SYMBOL:
			case HEXCHAR:
			case HEXCHAR_WILDCARD:
			case I:
			case IMPORTANT_SYM:
			case IMPORT_SYM:
			case INCLUDES:
			case INVALID:
			case J:
			case K:
			case KEYFRAMES_SYM:
			case L:
			case LAYER_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case LENGTH:
			case LESS:
			case LESS_AND:
			case LESS_JS_STRING:
			case LESS_OR_EQ:
			case LESS_REST:
			case LINE_COMMENT:
			case M:
			case MEDIA_SYM:
			case MINUS:
			case MOZ_DOCUMENT_SYM:
			case MOZ_DOMAIN:
			case MOZ_REGEXP:
			case MOZ_URL_PREFIX:
			case N:
			case NAME:
			case NAMESPACE_SYM:
			case NL:
			case NMCHAR:
			case NMSTART:
			case NONASCII:
			case NOT:
			case NUMBER:
			case O:
			case OPEQ:
			case P:
			case PAGE_SYM:
			case PERCENTAGE:
			case PERCENTAGE_SYMBOL:
			case PIPE:
			case PLUS:
			case Q:
			case R:
			case REM:
			case RESOLUTION:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case S:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_DEFAULT:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_ELSEIF:
			case SASS_ERROR:
			case SASS_EXTEND:
			case SASS_EXTEND_ONLY_SELECTOR:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_GLOBAL:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_OPTIONAL:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case SOLIDUS:
			case STAR:
			case STRING:
			case SUPPORTS_SYM:
			case T:
			case TILDE:
			case TIME:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case U:
			case UNICODE:
			case URANGE:
			case URI:
			case URL:
			case V:
			case VARIABLE:
			case W:
			case WEBKIT_KEYFRAMES_SYM:
			case WS:
			case X:
			case Y:
			case Z:
				{
				alt370=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 370, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(370);}

			switch (alt370) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:23: parenBlock
					{
					dbg.location(1112,23);
					pushFollow(FOLLOW_parenBlock_in_componentValueOuter7764);
					parenBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:36: braceBlock
					{
					dbg.location(1112,36);
					pushFollow(FOLLOW_braceBlock_in_componentValueOuter7768);
					braceBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:49: bracketBlock
					{
					dbg.location(1112,49);
					pushFollow(FOLLOW_bracketBlock_in_componentValueOuter7772);
					bracketBlock();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:64: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1112,93);
					pushFollow(FOLLOW_function_in_componentValueOuter7787);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:104: preservedTokenTopLevel
					{
					dbg.location(1112,104);
					pushFollow(FOLLOW_preservedTokenTopLevel_in_componentValueOuter7791);
					preservedTokenTopLevel();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(370);}
			dbg.location(1112,128);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:128: ( componentValueOuter )*
			try { dbg.enterSubRule(371);

			loop371:
			while (true) {
				int alt371=2;
				try { dbg.enterDecision(371, decisionCanBacktrack[371]);

				switch ( input.LA(1) ) {
				case COMMENT:
				case NL:
				case WS:
					{
					alt371=1;
					}
					break;
				case LESS_AND:
					{
					alt371=1;
					}
					break;
				case DOT:
					{
					alt371=1;
					}
					break;
				case HASH:
					{
					alt371=1;
					}
					break;
				case SASS_MIXIN:
					{
					alt371=1;
					}
					break;
				case AT_IDENT:
					{
					alt371=1;
					}
					break;
				case SASS_INCLUDE:
					{
					alt371=1;
					}
					break;
				case SASS_AT_ROOT:
					{
					alt371=1;
					}
					break;
				case GREATER:
				case PLUS:
				case TILDE:
					{
					alt371=1;
					}
					break;
				case SASS_EXTEND_ONLY_SELECTOR:
					{
					alt371=1;
					}
					break;
				case HASH_SYMBOL:
					{
					alt371=1;
					}
					break;
				case DIMENSION:
					{
					alt371=1;
					}
					break;
				case LBRACKET:
					{
					alt371=1;
					}
					break;
				case COLON:
				case DCOLON:
					{
					alt371=1;
					}
					break;
				case IDENT:
					{
					alt371=1;
					}
					break;
				case AT_SIGN:
					{
					alt371=1;
					}
					break;
				case MINUS:
					{
					alt371=1;
					}
					break;
				case STAR:
					{
					alt371=1;
					}
					break;
				case PIPE:
					{
					alt371=1;
					}
					break;
				case GEN:
					{
					alt371=1;
					}
					break;
				case VARIABLE:
					{
					alt371=1;
					}
					break;
				case SASS_DEBUG:
				case SASS_WARN:
					{
					alt371=1;
					}
					break;
				case SASS_VAR:
					{
					alt371=1;
					}
					break;
				case SASS_IF:
					{
					alt371=1;
					}
					break;
				case SASS_FOR:
					{
					alt371=1;
					}
					break;
				case SASS_EACH:
					{
					alt371=1;
					}
					break;
				case SASS_WHILE:
					{
					alt371=1;
					}
					break;
				case SASS_CONTENT:
					{
					alt371=1;
					}
					break;
				case IMPORT_SYM:
					{
					alt371=1;
					}
					break;
				case PAGE_SYM:
					{
					alt371=1;
					}
					break;
				case FONT_FACE_SYM:
					{
					alt371=1;
					}
					break;
				case MOZ_DOCUMENT_SYM:
					{
					alt371=1;
					}
					break;
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt371=1;
					}
					break;
				case KEYFRAMES_SYM:
					{
					alt371=1;
					}
					break;
				case MEDIA_SYM:
					{
					alt371=1;
					}
					break;
				case SASS_EXTEND:
					{
					alt371=1;
					}
					break;
				case SUPPORTS_SYM:
					{
					alt371=1;
					}
					break;
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
					{
					alt371=1;
					}
					break;
				case CHARSET_SYM:
				case COUNTER_STYLE_SYM:
				case NAMESPACE_SYM:
				case SASS_ELSE:
				case SASS_FORWARD:
				case SASS_FUNCTION:
				case SASS_RETURN:
				case SASS_USE:
					{
					alt371=1;
					}
					break;
				case LPAREN:
					{
					alt371=1;
					}
					break;
				case LBRACE:
					{
					alt371=1;
					}
					break;
				case A:
				case ANGLE:
				case B:
				case BEGINS:
				case C:
				case CDC:
				case CDO:
				case COMMA:
				case CONTAINER_SYM:
				case CONTAINS:
				case CP_DOTS:
				case CP_EQ:
				case CP_NOT_EQ:
				case D:
				case DASHMATCH:
				case E:
				case EMS:
				case ENDS:
				case ESCAPE:
				case EXCLAMATION_MARK:
				case EXS:
				case F:
				case FREQ:
				case G:
				case GREATER_OR_EQ:
				case H:
				case HEXCHAR:
				case HEXCHAR_WILDCARD:
				case I:
				case IMPORTANT_SYM:
				case INCLUDES:
				case INVALID:
				case J:
				case K:
				case L:
				case LAYER_SYM:
				case LENGTH:
				case LESS:
				case LESS_JS_STRING:
				case LESS_OR_EQ:
				case LESS_REST:
				case LINE_COMMENT:
				case M:
				case MOZ_DOMAIN:
				case MOZ_REGEXP:
				case MOZ_URL_PREFIX:
				case N:
				case NAME:
				case NMCHAR:
				case NMSTART:
				case NONASCII:
				case NOT:
				case NUMBER:
				case O:
				case OPEQ:
				case P:
				case PERCENTAGE:
				case PERCENTAGE_SYMBOL:
				case Q:
				case R:
				case REM:
				case RESOLUTION:
				case S:
				case SASS_DEFAULT:
				case SASS_ELSEIF:
				case SASS_ERROR:
				case SASS_GLOBAL:
				case SASS_OPTIONAL:
				case SOLIDUS:
				case STRING:
				case T:
				case TIME:
				case U:
				case UNICODE:
				case URANGE:
				case URI:
				case URL:
				case V:
				case W:
				case X:
				case Y:
				case Z:
					{
					alt371=1;
					}
					break;
				}
				} finally {dbg.exitDecision(371);}

				switch (alt371) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:128: componentValueOuter
					{
					dbg.location(1112,128);
					pushFollow(FOLLOW_componentValueOuter_in_componentValueOuter7794);
					componentValueOuter();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop371;
				}
			}
			} finally {dbg.exitSubRule(371);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1112, 147);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "componentValueOuter");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "componentValueOuter"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1116:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1116, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1121:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1122:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1122, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1124, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1129:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1129, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1131:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1131, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:13: SEMI
			{
			dbg.location(1136,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI7883); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1137, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1140:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1140, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1144:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1145:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1145, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1147:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1147, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1148:7: IMPORTANT_SYM
			{
			dbg.location(1148,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio7928); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1149, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1151:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1151, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(1152,7);
			pushFollow(FOLLOW_term_in_expression7945);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(1152,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(375);

			loop375:
			while (true) {
				int alt375=2;
				try { dbg.enterDecision(375, decisionCanBacktrack[375]);

				try {
					isCyclicDecision = true;
					alt375 = dfa375.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(375);}

				switch (alt375) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(1152,66);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt374=3;
					try { dbg.enterSubRule(374);
					try { dbg.enterDecision(374, decisionCanBacktrack[374]);

					try {
						isCyclicDecision = true;
						alt374 = dfa374.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(374);}

					switch (alt374) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:68: ws
							{
							dbg.location(1152,68);
							pushFollow(FOLLOW_ws_in_expression7977);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(1152,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:74: ( ws )? operator ( ws )?
							{
							dbg.location(1152,74);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:74: ( ws )?
							int alt372=2;
							try { dbg.enterSubRule(372);
							try { dbg.enterDecision(372, decisionCanBacktrack[372]);

							int LA372_0 = input.LA(1);
							if ( (LA372_0==COMMENT||LA372_0==NL||LA372_0==WS) ) {
								alt372=1;
							}
							} finally {dbg.exitDecision(372);}

							switch (alt372) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:74: ws
									{
									dbg.location(1152,74);
									pushFollow(FOLLOW_ws_in_expression7982);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(372);}
							dbg.location(1152,78);
							pushFollow(FOLLOW_operator_in_expression7985);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1152,87);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:87: ( ws )?
							int alt373=2;
							try { dbg.enterSubRule(373);
							try { dbg.enterDecision(373, decisionCanBacktrack[373]);

							int LA373_0 = input.LA(1);
							if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
								alt373=1;
							}
							} finally {dbg.exitDecision(373);}

							switch (alt373) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:87: ws
									{
									dbg.location(1152,87);
									pushFollow(FOLLOW_ws_in_expression7987);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(373);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(374);}
					dbg.location(1152,109);
					pushFollow(FOLLOW_term_in_expression7996);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop375;
				}
			}
			} finally {dbg.exitSubRule(375);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1153, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1155:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1155, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1156:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			{
			dbg.location(1157,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:5: ( unaryOperator ( ws )? )?
			int alt377=2;
			try { dbg.enterSubRule(377);
			try { dbg.enterDecision(377, decisionCanBacktrack[377]);

			int LA377_0 = input.LA(1);
			if ( (LA377_0==MINUS||LA377_0==PLUS) ) {
				alt377=1;
			}
			} finally {dbg.exitDecision(377);}

			switch (alt377) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:7: unaryOperator ( ws )?
					{
					dbg.location(1157,7);
					pushFollow(FOLLOW_unaryOperator_in_term8021);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(1157,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:21: ( ws )?
					int alt376=2;
					try { dbg.enterSubRule(376);
					try { dbg.enterDecision(376, decisionCanBacktrack[376]);

					int LA376_0 = input.LA(1);
					if ( (LA376_0==COMMENT||LA376_0==NL||LA376_0==WS) ) {
						alt376=1;
					}
					} finally {dbg.exitDecision(376);}

					switch (alt376) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1157:21: ws
							{
							dbg.location(1157,21);
							pushFollow(FOLLOW_ws_in_term8023);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(376);}

					}
					break;

			}
			} finally {dbg.exitSubRule(377);}
			dbg.location(1158,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1158:5: ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			int alt381=27;
			try { dbg.enterSubRule(381);
			try { dbg.enterDecision(381, decisionCanBacktrack[381]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA381_1 = input.LA(2);
				if ( (synpred56_Css3()) ) {
					alt381=1;
				}
				else if ( (evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
					alt381=3;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt381=23;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 381, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				alt381=2;
				}
				break;
			case LBRACKET:
				{
				alt381=4;
				}
				break;
			case NUMBER:
				{
				alt381=5;
				}
				break;
			case URANGE:
				{
				alt381=6;
				}
				break;
			case PERCENTAGE:
				{
				alt381=7;
				}
				break;
			case LENGTH:
				{
				alt381=8;
				}
				break;
			case EMS:
				{
				alt381=9;
				}
				break;
			case REM:
				{
				alt381=10;
				}
				break;
			case EXS:
				{
				alt381=11;
				}
				break;
			case ANGLE:
				{
				alt381=12;
				}
				break;
			case TIME:
				{
				alt381=13;
				}
				break;
			case FREQ:
				{
				alt381=14;
				}
				break;
			case RESOLUTION:
				{
				alt381=15;
				}
				break;
			case DIMENSION:
				{
				alt381=16;
				}
				break;
			case STRING:
				{
				alt381=17;
				}
				break;
			case TILDE:
				{
				alt381=18;
				}
				break;
			case LESS_JS_STRING:
				{
				alt381=19;
				}
				break;
			case GEN:
				{
				alt381=20;
				}
				break;
			case URI:
				{
				alt381=21;
				}
				break;
			case HASH:
				{
				alt381=22;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt381=23;
				}
				break;
			case LESS_AND:
				{
				alt381=24;
				}
				break;
			case HASH_SYMBOL:
				{
				alt381=25;
				}
				break;
			case AT_SIGN:
				{
				alt381=26;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt381=27;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 381, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(381);}

			switch (alt381) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(1159,36);
					pushFollow(FOLLOW_function_in_term8052);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:11: VARIABLE
					{
					dbg.location(1160,11);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_term8065); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1161:11: {...}? IDENT
					{
					dbg.location(1161,11);
					if ( !(evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "! (isScssSource() && tokenNameEquals2(\".\"))");
					}dbg.location(1161,58);
					match(input,IDENT,FOLLOW_IDENT_in_term8079); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					{
					dbg.location(1162,11);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:12: LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET
					{
					dbg.location(1162,12);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_term8092); if (state.failed) return;dbg.location(1162,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:21: ( WS )?
					int alt378=2;
					try { dbg.enterSubRule(378);
					try { dbg.enterDecision(378, decisionCanBacktrack[378]);

					int LA378_0 = input.LA(1);
					if ( (LA378_0==WS) ) {
						alt378=1;
					}
					} finally {dbg.exitDecision(378);}

					switch (alt378) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:21: WS
							{
							dbg.location(1162,21);
							match(input,WS,FOLLOW_WS_in_term8094); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(378);}
					dbg.location(1162,25);
					match(input,IDENT,FOLLOW_IDENT_in_term8097); if (state.failed) return;dbg.location(1162,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:31: ( WS IDENT )*
					try { dbg.enterSubRule(379);

					loop379:
					while (true) {
						int alt379=2;
						try { dbg.enterDecision(379, decisionCanBacktrack[379]);

						int LA379_0 = input.LA(1);
						if ( (LA379_0==WS) ) {
							int LA379_1 = input.LA(2);
							if ( (LA379_1==IDENT) ) {
								alt379=1;
							}

						}

						} finally {dbg.exitDecision(379);}

						switch (alt379) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:32: WS IDENT
							{
							dbg.location(1162,32);
							match(input,WS,FOLLOW_WS_in_term8100); if (state.failed) return;dbg.location(1162,35);
							match(input,IDENT,FOLLOW_IDENT_in_term8102); if (state.failed) return;
							}
							break;

						default :
							break loop379;
						}
					}
					} finally {dbg.exitSubRule(379);}
					dbg.location(1162,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:43: ( WS )?
					int alt380=2;
					try { dbg.enterSubRule(380);
					try { dbg.enterDecision(380, decisionCanBacktrack[380]);

					int LA380_0 = input.LA(1);
					if ( (LA380_0==WS) ) {
						alt380=1;
					}
					} finally {dbg.exitDecision(380);}

					switch (alt380) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:43: WS
							{
							dbg.location(1162,43);
							match(input,WS,FOLLOW_WS_in_term8106); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(380);}
					dbg.location(1162,47);
					match(input,RBRACKET,FOLLOW_RBRACKET_in_term8109); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1163:11: NUMBER
					{
					dbg.location(1163,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term8122); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1164:11: URANGE
					{
					dbg.location(1164,11);
					match(input,URANGE,FOLLOW_URANGE_in_term8134); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1165:11: PERCENTAGE
					{
					dbg.location(1165,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term8146); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1166:11: LENGTH
					{
					dbg.location(1166,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term8158); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1167:11: EMS
					{
					dbg.location(1167,11);
					match(input,EMS,FOLLOW_EMS_in_term8170); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1168:11: REM
					{
					dbg.location(1168,11);
					match(input,REM,FOLLOW_REM_in_term8182); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1169:11: EXS
					{
					dbg.location(1169,11);
					match(input,EXS,FOLLOW_EXS_in_term8194); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1170:11: ANGLE
					{
					dbg.location(1170,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term8206); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1171:11: TIME
					{
					dbg.location(1171,11);
					match(input,TIME,FOLLOW_TIME_in_term8218); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1172:11: FREQ
					{
					dbg.location(1172,11);
					match(input,FREQ,FOLLOW_FREQ_in_term8230); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:11: RESOLUTION
					{
					dbg.location(1173,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term8242); if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:11: DIMENSION
					{
					dbg.location(1174,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term8254); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1175:11: STRING
					{
					dbg.location(1175,11);
					match(input,STRING,FOLLOW_STRING_in_term8271); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(1176,11);
					match(input,TILDE,FOLLOW_TILDE_in_term8283); if (state.failed) return;dbg.location(1176,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1177:11: LESS_JS_STRING
					{
					dbg.location(1177,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term8306); if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1178:11: GEN
					{
					dbg.location(1178,11);
					match(input,GEN,FOLLOW_GEN_in_term8321); if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1179:11: URI
					{
					dbg.location(1179,11);
					match(input,URI,FOLLOW_URI_in_term8333); if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1180:11: hexColor
					{
					dbg.location(1180,11);
					pushFollow(FOLLOW_hexColor_in_term8345);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 23 :
					dbg.enterAlt(23);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1181:11: {...}? cp_variable
					{
					dbg.location(1181,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1181,40);
					pushFollow(FOLLOW_cp_variable_in_term8359);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 24 :
					dbg.enterAlt(24);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1182:11: {...}? LESS_AND
					{
					dbg.location(1182,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1182,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_term8373); if (state.failed) return;
					}
					break;
				case 25 :
					dbg.enterAlt(25);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1183:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(1183,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1183,29);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term8387);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 26 :
					dbg.enterAlt(26);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1184:11: {...}? less_selector_interpolation
					{
					dbg.location(1184,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isLessSource()");
					}dbg.location(1184,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_term8401);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 27 :
					dbg.enterAlt(27);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:11: {...}? cp_term_symbol
					{
					dbg.location(1185,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1185,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term8415);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(381);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1187, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1192:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1192, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:7: PERCENTAGE_SYMBOL
			{
			dbg.location(1193,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol8442); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1194, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:1: function : functionName LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1196, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:2: ( functionName LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1197:5: functionName LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(1197,5);
			pushFollow(FOLLOW_functionName_in_function8458);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(1198,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function8462); if (state.failed) return;dbg.location(1198,10);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1198:10: ( ws )?
			int alt382=2;
			try { dbg.enterSubRule(382);
			try { dbg.enterDecision(382, decisionCanBacktrack[382]);

			int LA382_0 = input.LA(1);
			if ( (LA382_0==COMMENT||LA382_0==NL||LA382_0==WS) ) {
				alt382=1;
			}
			} finally {dbg.exitDecision(382);}

			switch (alt382) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1198:10: ws
					{
					dbg.location(1198,10);
					pushFollow(FOLLOW_ws_in_function8464);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(382);}
			dbg.location(1199,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1199:3: ( fnAttributes |)
			int alt383=2;
			try { dbg.enterSubRule(383);
			try { dbg.enterDecision(383, decisionCanBacktrack[383]);

			int LA383_0 = input.LA(1);
			if ( ((LA383_0 >= ANGLE && LA383_0 <= AT_SIGN)||(LA383_0 >= BOTTOMCENTER_SYM && LA383_0 <= BOTTOMRIGHT_SYM)||LA383_0==CHARSET_SYM||LA383_0==COUNTER_STYLE_SYM||LA383_0==DIMENSION||LA383_0==EMS||LA383_0==EXS||(LA383_0 >= FONT_FACE_SYM && LA383_0 <= FREQ)||LA383_0==GEN||(LA383_0 >= HASH && LA383_0 <= HASH_SYMBOL)||(LA383_0 >= IDENT && LA383_0 <= IMPORT_SYM)||LA383_0==KEYFRAMES_SYM||(LA383_0 >= LBRACE && LA383_0 <= LENGTH)||(LA383_0 >= LESS_AND && LA383_0 <= LESS_JS_STRING)||LA383_0==LPAREN||(LA383_0 >= MEDIA_SYM && LA383_0 <= MOZ_DOCUMENT_SYM)||LA383_0==NAMESPACE_SYM||(LA383_0 >= NOT && LA383_0 <= NUMBER)||(LA383_0 >= PAGE_SYM && LA383_0 <= PERCENTAGE_SYMBOL)||LA383_0==PLUS||(LA383_0 >= REM && LA383_0 <= RIGHTTOP_SYM)||(LA383_0 >= SASS_AT_ROOT && LA383_0 <= SASS_DEBUG)||(LA383_0 >= SASS_EACH && LA383_0 <= SASS_ELSE)||LA383_0==SASS_EXTEND||(LA383_0 >= SASS_FOR && LA383_0 <= SASS_FUNCTION)||(LA383_0 >= SASS_IF && LA383_0 <= SASS_MIXIN)||(LA383_0 >= SASS_RETURN && LA383_0 <= SASS_WHILE)||LA383_0==STRING||(LA383_0 >= TILDE && LA383_0 <= TOPRIGHT_SYM)||(LA383_0 >= URANGE && LA383_0 <= URI)||LA383_0==VARIABLE||LA383_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt383=1;
			}
			else if ( (LA383_0==RPAREN) ) {
				alt383=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 383, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(383);}

			switch (alt383) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1200:21: fnAttributes
					{
					dbg.location(1200,21);
					pushFollow(FOLLOW_fnAttributes_in_function8491);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(383);}
			dbg.location(1203,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function8522); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1204, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1210:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1210, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(1215,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:9: ( IDENT COLON )?
			int alt384=2;
			try { dbg.enterSubRule(384);
			try { dbg.enterDecision(384, decisionCanBacktrack[384]);

			int LA384_0 = input.LA(1);
			if ( (LA384_0==IDENT) ) {
				int LA384_1 = input.LA(2);
				if ( (LA384_1==COLON) ) {
					alt384=1;
				}
			}
			} finally {dbg.exitDecision(384);}

			switch (alt384) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:10: IDENT COLON
					{
					dbg.location(1215,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName8574); if (state.failed) return;dbg.location(1215,16);
					match(input,COLON,FOLLOW_COLON_in_functionName8576); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(384);}
			dbg.location(1215,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName8580); if (state.failed) return;dbg.location(1215,30);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:30: ( DOT IDENT )*
			try { dbg.enterSubRule(385);

			loop385:
			while (true) {
				int alt385=2;
				try { dbg.enterDecision(385, decisionCanBacktrack[385]);

				int LA385_0 = input.LA(1);
				if ( (LA385_0==DOT) ) {
					alt385=1;
				}

				} finally {dbg.exitDecision(385);}

				switch (alt385) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:31: DOT IDENT
					{
					dbg.location(1215,31);
					match(input,DOT,FOLLOW_DOT_in_functionName8583); if (state.failed) return;dbg.location(1215,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName8585); if (state.failed) return;
					}
					break;

				default :
					break loop385;
				}
			}
			} finally {dbg.exitSubRule(385);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1216, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1218:1: fnAttributes : fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1218, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1219:5: ( fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:5: fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(1220,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes8609);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(1220,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*
			try { dbg.enterSubRule(389);

			loop389:
			while (true) {
				int alt389=2;
				try { dbg.enterDecision(389, decisionCanBacktrack[389]);

				try {
					isCyclicDecision = true;
					alt389 = dfa389.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(389);}

				switch (alt389) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:18: ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute
					{
					dbg.location(1220,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:18: ( ws )?
					int alt386=2;
					try { dbg.enterSubRule(386);
					try { dbg.enterDecision(386, decisionCanBacktrack[386]);

					int LA386_0 = input.LA(1);
					if ( (LA386_0==COMMENT||LA386_0==NL||LA386_0==WS) ) {
						alt386=1;
					}
					} finally {dbg.exitDecision(386);}

					switch (alt386) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:18: ws
							{
							dbg.location(1220,18);
							pushFollow(FOLLOW_ws_in_fnAttributes8612);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(386);}
					dbg.location(1220,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:22: ( COMMA |{...}? SEMI )
					int alt387=2;
					try { dbg.enterSubRule(387);
					try { dbg.enterDecision(387, decisionCanBacktrack[387]);

					int LA387_0 = input.LA(1);
					if ( (LA387_0==COMMA) ) {
						alt387=1;
					}
					else if ( (LA387_0==SEMI) ) {
						alt387=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 387, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(387);}

					switch (alt387) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:23: COMMA
							{
							dbg.location(1220,23);
							match(input,COMMA,FOLLOW_COMMA_in_fnAttributes8616); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:31: {...}? SEMI
							{
							dbg.location(1220,31);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "fnAttributes", "isLessSource()");
							}dbg.location(1220,49);
							match(input,SEMI,FOLLOW_SEMI_in_fnAttributes8622); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(387);}
					dbg.location(1220,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:55: ( ws )?
					int alt388=2;
					try { dbg.enterSubRule(388);
					try { dbg.enterDecision(388, decisionCanBacktrack[388]);

					int LA388_0 = input.LA(1);
					if ( (LA388_0==COMMENT||LA388_0==NL||LA388_0==WS) ) {
						alt388=1;
					}
					} finally {dbg.exitDecision(388);}

					switch (alt388) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:55: ws
							{
							dbg.location(1220,55);
							pushFollow(FOLLOW_ws_in_fnAttributes8625);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(388);}
					dbg.location(1220,59);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes8628);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop389;
				}
			}
			} finally {dbg.exitSubRule(389);}
			dbg.location(1220,73);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:73: ( ws )?
			int alt390=2;
			try { dbg.enterSubRule(390);
			try { dbg.enterDecision(390, decisionCanBacktrack[390]);

			int LA390_0 = input.LA(1);
			if ( (LA390_0==COMMENT||LA390_0==NL||LA390_0==WS) ) {
				alt390=1;
			}
			} finally {dbg.exitDecision(390);}

			switch (alt390) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1220:73: ws
					{
					dbg.location(1220,73);
					pushFollow(FOLLOW_ws_in_fnAttributes8632);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(390);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1221, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1223:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1223, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1224:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt393=3;
			try { dbg.enterDecision(393, decisionCanBacktrack[393]);

			int LA393_0 = input.LA(1);
			if ( (LA393_0==IDENT) ) {
				int LA393_1 = input.LA(2);
				if ( (synpred57_Css3()) ) {
					alt393=1;
				}
				else if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==AT_IDENT||(LA393_0 >= BOTTOMCENTER_SYM && LA393_0 <= BOTTOMRIGHT_SYM)||LA393_0==CHARSET_SYM||LA393_0==COUNTER_STYLE_SYM||LA393_0==FONT_FACE_SYM||LA393_0==IMPORT_SYM||LA393_0==KEYFRAMES_SYM||(LA393_0 >= LEFTBOTTOM_SYM && LA393_0 <= LEFTTOP_SYM)||LA393_0==MEDIA_SYM||LA393_0==MOZ_DOCUMENT_SYM||LA393_0==NAMESPACE_SYM||LA393_0==PAGE_SYM||(LA393_0 >= RIGHTBOTTOM_SYM && LA393_0 <= RIGHTTOP_SYM)||(LA393_0 >= SASS_AT_ROOT && LA393_0 <= SASS_DEBUG)||(LA393_0 >= SASS_EACH && LA393_0 <= SASS_ELSE)||LA393_0==SASS_EXTEND||(LA393_0 >= SASS_FOR && LA393_0 <= SASS_FUNCTION)||(LA393_0 >= SASS_IF && LA393_0 <= SASS_MIXIN)||(LA393_0 >= SASS_RETURN && LA393_0 <= SASS_USE)||(LA393_0 >= SASS_WARN && LA393_0 <= SASS_WHILE)||(LA393_0 >= TOPCENTER_SYM && LA393_0 <= TOPRIGHT_SYM)||LA393_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA393_2 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred57_Css3())) ) {
					alt393=1;
				}
				else if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt393=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt393=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 393, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA393_0==SASS_VAR) ) {
				int LA393_3 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred57_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt393=1;
				}
				else if ( (((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt393=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt393=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 393, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA393_0==LBRACE) && (synpred58_Css3())) {
				alt393=2;
			}
			else if ( (LA393_0==NOT) && (synpred58_Css3())) {
				alt393=2;
			}
			else if ( (LA393_0==MINUS||LA393_0==PLUS) ) {
				int LA393_6 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==VARIABLE) ) {
				int LA393_7 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==LBRACKET) ) {
				int LA393_8 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==NUMBER) ) {
				int LA393_9 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==URANGE) ) {
				int LA393_10 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==PERCENTAGE) ) {
				int LA393_11 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==LENGTH) ) {
				int LA393_12 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==EMS) ) {
				int LA393_13 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==REM) ) {
				int LA393_14 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==EXS) ) {
				int LA393_15 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==ANGLE) ) {
				int LA393_16 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==TIME) ) {
				int LA393_17 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==FREQ) ) {
				int LA393_18 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==RESOLUTION) ) {
				int LA393_19 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==DIMENSION) ) {
				int LA393_20 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==STRING) ) {
				int LA393_21 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==TILDE) ) {
				int LA393_22 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==LESS_JS_STRING) ) {
				int LA393_23 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==GEN) ) {
				int LA393_24 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==URI) ) {
				int LA393_25 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==HASH) ) {
				int LA393_26 = input.LA(2);
				if ( (synpred58_Css3()) ) {
					alt393=2;
				}
				else if ( (true) ) {
					alt393=3;
				}

			}
			else if ( (LA393_0==LESS_AND) ) {
				int LA393_27 = input.LA(2);
				if ( ((synpred58_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt393=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt393=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 393, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA393_0==HASH_SYMBOL) ) {
				int LA393_28 = input.LA(2);
				if ( ((synpred58_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt393=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt393=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 393, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA393_0==AT_SIGN) ) {
				int LA393_29 = input.LA(2);
				if ( ((synpred58_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt393=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt393=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 393, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA393_0==PERCENTAGE_SYMBOL) ) {
				int LA393_30 = input.LA(2);
				if ( ((synpred58_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
					alt393=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt393=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 393, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA393_0==IMPORTANT_SYM) && (synpred58_Css3())) {
				alt393=2;
			}
			else if ( (LA393_0==LPAREN) && (synpred58_Css3())) {
				alt393=2;
			}

			} finally {dbg.exitDecision(393);}

			switch (alt393) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(1225,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute8669);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(1225,62);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:62: ( ws )?
					int alt391=2;
					try { dbg.enterSubRule(391);
					try { dbg.enterDecision(391, decisionCanBacktrack[391]);

					int LA391_0 = input.LA(1);
					if ( (LA391_0==COMMENT||LA391_0==NL||LA391_0==WS) ) {
						alt391=1;
					}
					} finally {dbg.exitDecision(391);}

					switch (alt391) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:62: ws
							{
							dbg.location(1225,62);
							pushFollow(FOLLOW_ws_in_fnAttribute8671);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(391);}
					dbg.location(1225,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1225,79);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:79: ( ws )?
					int alt392=2;
					try { dbg.enterSubRule(392);
					try { dbg.enterDecision(392, decisionCanBacktrack[392]);

					int LA392_0 = input.LA(1);
					if ( (LA392_0==COMMENT||LA392_0==NL||LA392_0==WS) ) {
						alt392=1;
					}
					} finally {dbg.exitDecision(392);}

					switch (alt392) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:79: ws
							{
							dbg.location(1225,79);
							pushFollow(FOLLOW_ws_in_fnAttribute8680);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(392);}
					dbg.location(1225,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute8683);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:11: ( cp_expression )=> cp_expression
					{
					dbg.location(1226,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute8700);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1227:11: expression
					{
					dbg.location(1227,11);
					pushFollow(FOLLOW_expression_in_fnAttribute8712);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1228, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1230:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1230, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt395=2;
			try { dbg.enterDecision(395, decisionCanBacktrack[395]);

			int LA395_0 = input.LA(1);
			if ( (LA395_0==IDENT) ) {
				int LA395_1 = input.LA(2);
				if ( (LA395_1==DOT) ) {
					int LA395_3 = input.LA(3);
					if ( (LA395_3==SASS_VAR) ) {
						alt395=2;
					}
					else if ( (LA395_3==IDENT) ) {
						alt395=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 395, 3, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA395_1==COLON||LA395_1==COMMENT||LA395_1==NL||LA395_1==OPEQ||LA395_1==WS) ) {
					alt395=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 395, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA395_0==AT_IDENT||(LA395_0 >= BOTTOMCENTER_SYM && LA395_0 <= BOTTOMRIGHT_SYM)||LA395_0==CHARSET_SYM||LA395_0==COUNTER_STYLE_SYM||LA395_0==FONT_FACE_SYM||LA395_0==IMPORT_SYM||LA395_0==KEYFRAMES_SYM||(LA395_0 >= LEFTBOTTOM_SYM && LA395_0 <= LEFTTOP_SYM)||LA395_0==MEDIA_SYM||LA395_0==MOZ_DOCUMENT_SYM||LA395_0==NAMESPACE_SYM||LA395_0==PAGE_SYM||(LA395_0 >= RIGHTBOTTOM_SYM && LA395_0 <= RIGHTTOP_SYM)||(LA395_0 >= SASS_AT_ROOT && LA395_0 <= SASS_DEBUG)||(LA395_0 >= SASS_EACH && LA395_0 <= SASS_ELSE)||LA395_0==SASS_EXTEND||(LA395_0 >= SASS_FOR && LA395_0 <= SASS_FUNCTION)||(LA395_0 >= SASS_IF && LA395_0 <= SASS_MIXIN)||(LA395_0 >= SASS_RETURN && LA395_0 <= SASS_WHILE)||(LA395_0 >= TOPCENTER_SYM && LA395_0 <= TOPRIGHT_SYM)||LA395_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt395=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 395, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(395);}

			switch (alt395) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1232:13: IDENT ( DOT IDENT )*
					{
					dbg.location(1232,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName8735); if (state.failed) return;dbg.location(1232,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1232:19: ( DOT IDENT )*
					try { dbg.enterSubRule(394);

					loop394:
					while (true) {
						int alt394=2;
						try { dbg.enterDecision(394, decisionCanBacktrack[394]);

						int LA394_0 = input.LA(1);
						if ( (LA394_0==DOT) ) {
							alt394=1;
						}

						} finally {dbg.exitDecision(394);}

						switch (alt394) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1232:20: DOT IDENT
							{
							dbg.location(1232,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName8738); if (state.failed) return;dbg.location(1232,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName8740); if (state.failed) return;
							}
							break;

						default :
							break loop394;
						}
					}
					} finally {dbg.exitSubRule(394);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1233:15: {...}? cp_variable
					{
					dbg.location(1233,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(1233,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName8760);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1234, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1236, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt400=2;
			try { dbg.enterDecision(400, decisionCanBacktrack[400]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA400_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA400_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA400_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LBRACKET:
				{
				int LA400_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA400_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URANGE:
				{
				int LA400_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA400_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA400_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA400_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA400_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA400_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA400_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA400_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA400_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA400_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA400_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA400_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA400_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA400_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA400_20 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA400_21 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA400_22 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA400_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt400=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA400_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt400=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA400_25 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt400=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA400_26 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt400=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA400_27 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt400=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA400_28 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt400=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 400, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt400=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 400, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(400);}

			switch (alt400) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(1238,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue8783);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(1238,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(399);

					loop399:
					while (true) {
						int alt399=2;
						try { dbg.enterDecision(399, decisionCanBacktrack[399]);

						try {
							isCyclicDecision = true;
							alt399 = dfa399.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(399);}

						switch (alt399) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(1238,71);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt398=3;
							try { dbg.enterSubRule(398);
							try { dbg.enterDecision(398, decisionCanBacktrack[398]);

							try {
								isCyclicDecision = true;
								alt398 = dfa398.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(398);}

							switch (alt398) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:73: ws
									{
									dbg.location(1238,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue8815);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(1238,78);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(1238,79);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:79: ( ws )?
									int alt396=2;
									try { dbg.enterSubRule(396);
									try { dbg.enterDecision(396, decisionCanBacktrack[396]);

									int LA396_0 = input.LA(1);
									if ( (LA396_0==COMMENT||LA396_0==NL||LA396_0==WS) ) {
										alt396=1;
									}
									} finally {dbg.exitDecision(396);}

									switch (alt396) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:79: ws
											{
											dbg.location(1238,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue8820);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(396);}
									dbg.location(1238,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue8823); if (state.failed) return;dbg.location(1238,91);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:91: ( ws )?
									int alt397=2;
									try { dbg.enterSubRule(397);
									try { dbg.enterDecision(397, decisionCanBacktrack[397]);

									int LA397_0 = input.LA(1);
									if ( (LA397_0==COMMENT||LA397_0==NL||LA397_0==WS) ) {
										alt397=1;
									}
									} finally {dbg.exitDecision(397);}

									switch (alt397) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:91: ws
											{
											dbg.location(1238,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue8825);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(397);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(398);}
							dbg.location(1238,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue8834);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop399;
						}
					}
					} finally {dbg.exitSubRule(399);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1239:15: {...}? cp_math_expression
					{
					dbg.location(1239,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(1239,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue8855);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1240, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1242:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1242, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1243:5: ( HASH )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1243:7: HASH
			{
			dbg.location(1243,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor8869); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1244, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1246:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1246, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1247:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1247:7: ( WS | NL | COMMENT )+
			{
			dbg.location(1247,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1247:7: ( WS | NL | COMMENT )+
			int cnt401=0;
			try { dbg.enterSubRule(401);

			loop401:
			while (true) {
				int alt401=2;
				try { dbg.enterDecision(401, decisionCanBacktrack[401]);

				int LA401_0 = input.LA(1);
				if ( (LA401_0==COMMENT||LA401_0==NL||LA401_0==WS) ) {
					alt401=1;
				}

				} finally {dbg.exitDecision(401);}

				switch (alt401) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1247,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt401 >= 1 ) break loop401;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(401, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt401++;
			}
			} finally {dbg.exitSubRule(401);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1248, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1253:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1253, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1254:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt409=2;
			try { dbg.enterDecision(409, decisionCanBacktrack[409]);

			switch ( input.LA(1) ) {
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case KEYFRAMES_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FORWARD:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_USE:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA409_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt409=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt409=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 409, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA409_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt409=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt409=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 409, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA409_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt409=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt409=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 409, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 409, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(409);}

			switch (alt409) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1255,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1255,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration8929);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1255,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:39: ( ws )?
					int alt402=2;
					try { dbg.enterSubRule(402);
					try { dbg.enterDecision(402, decisionCanBacktrack[402]);

					int LA402_0 = input.LA(1);
					if ( (LA402_0==COMMENT||LA402_0==NL||LA402_0==WS) ) {
						alt402=1;
					}
					} finally {dbg.exitDecision(402);}

					switch (alt402) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:39: ws
							{
							dbg.location(1255,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8931);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(402);}
					dbg.location(1255,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration8934); if (state.failed) return;dbg.location(1255,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:49: ( ws )?
					int alt403=2;
					try { dbg.enterSubRule(403);
					try { dbg.enterDecision(403, decisionCanBacktrack[403]);

					int LA403_0 = input.LA(1);
					if ( (LA403_0==COMMENT||LA403_0==NL||LA403_0==WS) ) {
						alt403=1;
					}
					} finally {dbg.exitDecision(403);}

					switch (alt403) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:49: ws
							{
							dbg.location(1255,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8936);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(403);}
					dbg.location(1255,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration8939);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1257,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1257,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration8961);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1257,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:39: ( ws )?
					int alt404=2;
					try { dbg.enterSubRule(404);
					try { dbg.enterDecision(404, decisionCanBacktrack[404]);

					int LA404_0 = input.LA(1);
					if ( (LA404_0==COMMENT||LA404_0==NL||LA404_0==WS) ) {
						alt404=1;
					}
					} finally {dbg.exitDecision(404);}

					switch (alt404) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:39: ws
							{
							dbg.location(1257,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8963);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(404);}
					dbg.location(1257,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration8966); if (state.failed) return;dbg.location(1257,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:49: ( ws )?
					int alt405=2;
					try { dbg.enterSubRule(405);
					try { dbg.enterDecision(405, decisionCanBacktrack[405]);

					int LA405_0 = input.LA(1);
					if ( (LA405_0==COMMENT||LA405_0==NL||LA405_0==WS) ) {
						alt405=1;
					}
					} finally {dbg.exitDecision(405);}

					switch (alt405) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:49: ws
							{
							dbg.location(1257,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration8968);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(405);}
					dbg.location(1257,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration8971);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1257,72);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(408);

					loop408:
					while (true) {
						int alt408=3;
						try { dbg.enterDecision(408, decisionCanBacktrack[408]);

						try {
							isCyclicDecision = true;
							alt408 = dfa408.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(408);}

						switch (alt408) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1257,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1257,74);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:74: ( ws )?
							int alt406=2;
							try { dbg.enterSubRule(406);
							try { dbg.enterDecision(406, decisionCanBacktrack[406]);

							int LA406_0 = input.LA(1);
							if ( (LA406_0==COMMENT||LA406_0==NL||LA406_0==WS) ) {
								alt406=1;
							}
							} finally {dbg.exitDecision(406);}

							switch (alt406) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:74: ws
									{
									dbg.location(1257,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration8975);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(406);}
							dbg.location(1257,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration8978); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1257,94);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1257,95);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:95: ( ws )?
							int alt407=2;
							try { dbg.enterSubRule(407);
							try { dbg.enterDecision(407, decisionCanBacktrack[407]);

							int LA407_0 = input.LA(1);
							if ( (LA407_0==COMMENT||LA407_0==NL||LA407_0==WS) ) {
								alt407=1;
							}
							} finally {dbg.exitDecision(407);}

							switch (alt407) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1257:95: ws
									{
									dbg.location(1257,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration8984);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(407);}
							dbg.location(1257,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration8987); if (state.failed) return;
							}

							}
							break;

						default :
							break loop408;
						}
					}
					} finally {dbg.exitSubRule(408);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1258, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1261:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD | KEYFRAMES_SYM ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1261, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD | KEYFRAMES_SYM ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) )
			int alt411=2;
			try { dbg.enterDecision(411, decisionCanBacktrack[411]);

			int LA411_0 = input.LA(1);
			if ( (LA411_0==AT_IDENT||(LA411_0 >= BOTTOMCENTER_SYM && LA411_0 <= BOTTOMRIGHT_SYM)||LA411_0==CHARSET_SYM||LA411_0==COUNTER_STYLE_SYM||LA411_0==FONT_FACE_SYM||LA411_0==IMPORT_SYM||LA411_0==KEYFRAMES_SYM||(LA411_0 >= LEFTBOTTOM_SYM && LA411_0 <= LEFTTOP_SYM)||LA411_0==MEDIA_SYM||LA411_0==MOZ_DOCUMENT_SYM||LA411_0==NAMESPACE_SYM||LA411_0==PAGE_SYM||(LA411_0 >= RIGHTBOTTOM_SYM && LA411_0 <= RIGHTTOP_SYM)||(LA411_0 >= SASS_AT_ROOT && LA411_0 <= SASS_DEBUG)||(LA411_0 >= SASS_EACH && LA411_0 <= SASS_ELSE)||LA411_0==SASS_EXTEND||(LA411_0 >= SASS_FOR && LA411_0 <= SASS_FUNCTION)||(LA411_0 >= SASS_IF && LA411_0 <= SASS_MIXIN)||(LA411_0 >= SASS_RETURN && LA411_0 <= SASS_USE)||(LA411_0 >= SASS_WARN && LA411_0 <= SASS_WHILE)||(LA411_0 >= TOPCENTER_SYM && LA411_0 <= TOPRIGHT_SYM)||LA411_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt411=1;
			}
			else if ( (LA411_0==IDENT||LA411_0==SASS_VAR) ) {
				alt411=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 411, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(411);}

			switch (alt411) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1264:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT | SASS_USE | SASS_FORWARD | KEYFRAMES_SYM )
					{
					dbg.location(1264,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1264,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||input.LA(1)==KEYFRAMES_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||(input.LA(1) >= SASS_FOR && input.LA(1) <= SASS_FUNCTION)||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||(input.LA(1) >= SASS_RETURN && input.LA(1) <= SASS_USE)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1266:9: {...}? ( SASS_VAR | IDENT DOT SASS_VAR )
					{
					dbg.location(1266,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1266,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1266:27: ( SASS_VAR | IDENT DOT SASS_VAR )
					int alt410=2;
					try { dbg.enterSubRule(410);
					try { dbg.enterDecision(410, decisionCanBacktrack[410]);

					int LA410_0 = input.LA(1);
					if ( (LA410_0==SASS_VAR) ) {
						alt410=1;
					}
					else if ( (LA410_0==IDENT) ) {
						alt410=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 410, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(410);}

					switch (alt410) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1266:29: SASS_VAR
							{
							dbg.location(1266,29);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable9223); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1266:40: IDENT DOT SASS_VAR
							{
							dbg.location(1266,40);
							match(input,IDENT,FOLLOW_IDENT_in_cp_variable9227); if (state.failed) return;dbg.location(1266,46);
							match(input,DOT,FOLLOW_DOT_in_cp_variable9229); if (state.failed) return;dbg.location(1266,50);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable9231); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(410);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1267, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1270:1: cp_expression_list : ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1270, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1271:5: ( ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:5: ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1272,24);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list9261);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1273,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(414);

			loop414:
			while (true) {
				int alt414=2;
				try { dbg.enterDecision(414, decisionCanBacktrack[414]);

				try {
					isCyclicDecision = true;
					alt414 = dfa414.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(414);}

				switch (alt414) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1273,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:37: ( ws )?
					int alt412=2;
					try { dbg.enterSubRule(412);
					try { dbg.enterDecision(412, decisionCanBacktrack[412]);

					int LA412_0 = input.LA(1);
					if ( (LA412_0==COMMENT||LA412_0==NL||LA412_0==WS) ) {
						alt412=1;
					}
					} finally {dbg.exitDecision(412);}

					switch (alt412) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:37: ws
							{
							dbg.location(1273,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list9280);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(412);}
					dbg.location(1273,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list9283); if (state.failed) return;dbg.location(1273,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:47: ( ws )?
					int alt413=2;
					try { dbg.enterSubRule(413);
					try { dbg.enterDecision(413, decisionCanBacktrack[413]);

					int LA413_0 = input.LA(1);
					if ( (LA413_0==COMMENT||LA413_0==NL||LA413_0==WS) ) {
						alt413=1;
					}
					} finally {dbg.exitDecision(413);}

					switch (alt413) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:47: ws
							{
							dbg.location(1273,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list9285);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(413);}
					dbg.location(1273,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list9288);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop414;
				}
			}
			} finally {dbg.exitSubRule(414);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1274, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1286:1: cp_expression : ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN );
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1286, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:5: ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			int alt423=3;
			try { dbg.enterDecision(423, decisionCanBacktrack[423]);

			int LA423_0 = input.LA(1);
			if ( (LA423_0==LBRACE) ) {
				alt423=1;
			}
			else if ( (LA423_0==NOT) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==MINUS||LA423_0==PLUS) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==IDENT) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==VARIABLE) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==LBRACKET) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==NUMBER) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==URANGE) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==PERCENTAGE) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==LENGTH) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==EMS) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==REM) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==EXS) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==ANGLE) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==TIME) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==FREQ) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==RESOLUTION) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==DIMENSION) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==STRING) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==TILDE) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==LESS_JS_STRING) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==GEN) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==URI) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==HASH) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==AT_IDENT||(LA423_0 >= BOTTOMCENTER_SYM && LA423_0 <= BOTTOMRIGHT_SYM)||LA423_0==CHARSET_SYM||LA423_0==COUNTER_STYLE_SYM||LA423_0==FONT_FACE_SYM||LA423_0==IMPORT_SYM||LA423_0==KEYFRAMES_SYM||(LA423_0 >= LEFTBOTTOM_SYM && LA423_0 <= LEFTTOP_SYM)||LA423_0==MEDIA_SYM||LA423_0==MOZ_DOCUMENT_SYM||LA423_0==NAMESPACE_SYM||LA423_0==PAGE_SYM||(LA423_0 >= RIGHTBOTTOM_SYM && LA423_0 <= RIGHTTOP_SYM)||(LA423_0 >= SASS_AT_ROOT && LA423_0 <= SASS_DEBUG)||(LA423_0 >= SASS_EACH && LA423_0 <= SASS_ELSE)||LA423_0==SASS_EXTEND||(LA423_0 >= SASS_FOR && LA423_0 <= SASS_FUNCTION)||(LA423_0 >= SASS_IF && LA423_0 <= SASS_MIXIN)||(LA423_0 >= SASS_RETURN && LA423_0 <= SASS_USE)||(LA423_0 >= SASS_WARN && LA423_0 <= SASS_WHILE)||(LA423_0 >= TOPCENTER_SYM && LA423_0 <= TOPRIGHT_SYM)||LA423_0==WEBKIT_KEYFRAMES_SYM) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==SASS_VAR) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==LESS_AND) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==HASH_SYMBOL) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==AT_SIGN) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==PERCENTAGE_SYMBOL) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==IMPORTANT_SYM) && (synpred62_Css3())) {
				alt423=2;
			}
			else if ( (LA423_0==LPAREN) ) {
				int LA423_32 = input.LA(2);
				if ( (synpred62_Css3()) ) {
					alt423=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt423=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 423, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 423, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(423);}

			switch (alt423) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:5: {...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					{
					dbg.location(1288,5);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isLessSource()");
					}dbg.location(1288,23);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:23: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:24: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(1288,24);
					match(input,LBRACE,FOLLOW_LBRACE_in_cp_expression9324); if (state.failed) return;dbg.location(1288,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:31: ( ws )?
					int alt415=2;
					try { dbg.enterSubRule(415);
					try { dbg.enterDecision(415, decisionCanBacktrack[415]);

					int LA415_0 = input.LA(1);
					if ( (LA415_0==COMMENT||LA415_0==NL||LA415_0==WS) ) {
						alt415=1;
					}
					} finally {dbg.exitDecision(415);}

					switch (alt415) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:31: ws
							{
							dbg.location(1288,31);
							pushFollow(FOLLOW_ws_in_cp_expression9326);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(415);}
					dbg.location(1288,35);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression9329);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1288,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:48: ( declarations )?
					int alt416=2;
					try { dbg.enterSubRule(416);
					try { dbg.enterDecision(416, decisionCanBacktrack[416]);

					int LA416_0 = input.LA(1);
					if ( ((LA416_0 >= AT_IDENT && LA416_0 <= AT_SIGN)||(LA416_0 >= BOTTOMCENTER_SYM && LA416_0 <= BOTTOMRIGHT_SYM)||(LA416_0 >= CHARSET_SYM && LA416_0 <= COLON)||LA416_0==CONTAINER_SYM||LA416_0==COUNTER_STYLE_SYM||(LA416_0 >= DCOLON && LA416_0 <= DOT)||LA416_0==FONT_FACE_SYM||(LA416_0 >= GEN && LA416_0 <= GREATER)||(LA416_0 >= HASH && LA416_0 <= HASH_SYMBOL)||LA416_0==IDENT||LA416_0==IMPORT_SYM||LA416_0==KEYFRAMES_SYM||LA416_0==LAYER_SYM||(LA416_0 >= LBRACKET && LA416_0 <= LEFTTOP_SYM)||LA416_0==LESS_AND||(LA416_0 >= MEDIA_SYM && LA416_0 <= MOZ_DOCUMENT_SYM)||LA416_0==NAMESPACE_SYM||LA416_0==PAGE_SYM||(LA416_0 >= PIPE && LA416_0 <= PLUS)||(LA416_0 >= RIGHTBOTTOM_SYM && LA416_0 <= RIGHTTOP_SYM)||(LA416_0 >= SASS_AT_ROOT && LA416_0 <= SASS_DEBUG)||(LA416_0 >= SASS_EACH && LA416_0 <= SASS_ELSE)||(LA416_0 >= SASS_ERROR && LA416_0 <= SASS_FUNCTION)||(LA416_0 >= SASS_IF && LA416_0 <= SASS_MIXIN)||(LA416_0 >= SASS_RETURN && LA416_0 <= SEMI)||LA416_0==STAR||LA416_0==SUPPORTS_SYM||LA416_0==TILDE||(LA416_0 >= TOPCENTER_SYM && LA416_0 <= TOPRIGHT_SYM)||LA416_0==VARIABLE||LA416_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt416=1;
					}
					} finally {dbg.exitDecision(416);}

					switch (alt416) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:48: declarations
							{
							dbg.location(1288,48);
							pushFollow(FOLLOW_declarations_in_cp_expression9331);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(416);}
					dbg.location(1288,62);
					match(input,RBRACE,FOLLOW_RBRACE_in_cp_expression9334); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:7: ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					{
					dbg.location(1289,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:31: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:32: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					{
					dbg.location(1289,32);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9350);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;dbg.location(1290,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1290:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					try { dbg.enterSubRule(420);

					loop420:
					while (true) {
						int alt420=3;
						try { dbg.enterDecision(420, decisionCanBacktrack[420]);

						try {
							isCyclicDecision = true;
							alt420 = dfa420.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(420);}

						switch (alt420) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
							{
							dbg.location(1291,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:39: ( ( ws )? cp_expression_operator ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:40: ( ws )? cp_expression_operator ( ws )?
							{
							dbg.location(1291,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:40: ( ws )?
							int alt417=2;
							try { dbg.enterSubRule(417);
							try { dbg.enterDecision(417, decisionCanBacktrack[417]);

							int LA417_0 = input.LA(1);
							if ( (LA417_0==COMMENT||LA417_0==NL||LA417_0==WS) ) {
								alt417=1;
							}
							} finally {dbg.exitDecision(417);}

							switch (alt417) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:40: ws
									{
									dbg.location(1291,40);
									pushFollow(FOLLOW_ws_in_cp_expression9374);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(417);}
							dbg.location(1291,44);
							pushFollow(FOLLOW_cp_expression_operator_in_cp_expression9377);
							cp_expression_operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1291,67);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:67: ( ws )?
							int alt418=2;
							try { dbg.enterSubRule(418);
							try { dbg.enterDecision(418, decisionCanBacktrack[418]);

							int LA418_0 = input.LA(1);
							if ( (LA418_0==COMMENT||LA418_0==NL||LA418_0==WS) ) {
								alt418=1;
							}
							} finally {dbg.exitDecision(418);}

							switch (alt418) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:67: ws
									{
									dbg.location(1291,67);
									pushFollow(FOLLOW_ws_in_cp_expression9379);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(418);}

							}
							dbg.location(1291,72);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9383);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
							{
							dbg.location(1292,37);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:37: ( ws )?
							int alt419=2;
							try { dbg.enterSubRule(419);
							try { dbg.enterDecision(419, decisionCanBacktrack[419]);

							int LA419_0 = input.LA(1);
							if ( (LA419_0==COMMENT||LA419_0==NL||LA419_0==WS) ) {
								alt419=1;
							}
							} finally {dbg.exitDecision(419);}

							switch (alt419) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:37: ws
									{
									dbg.location(1292,37);
									pushFollow(FOLLOW_ws_in_cp_expression9402);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(419);}
							dbg.location(1292,41);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression9405);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop420;
						}
					}
					} finally {dbg.exitSubRule(420);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:7: {...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
					{
					dbg.location(1294,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isScssSource()");
					}dbg.location(1294,25);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression9423); if (state.failed) return;dbg.location(1294,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:32: ( ws )?
					int alt421=2;
					try { dbg.enterSubRule(421);
					try { dbg.enterDecision(421, decisionCanBacktrack[421]);

					int LA421_0 = input.LA(1);
					if ( (LA421_0==COMMENT||LA421_0==NL||LA421_0==WS) ) {
						alt421=1;
					}
					} finally {dbg.exitDecision(421);}

					switch (alt421) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:32: ws
							{
							dbg.location(1294,32);
							pushFollow(FOLLOW_ws_in_cp_expression9425);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(421);}
					dbg.location(1294,36);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression9428);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1294,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:49: ( sass_map_pairs )?
					int alt422=2;
					try { dbg.enterSubRule(422);
					try { dbg.enterDecision(422, decisionCanBacktrack[422]);

					int LA422_0 = input.LA(1);
					if ( ((LA422_0 >= AT_IDENT && LA422_0 <= AT_SIGN)||(LA422_0 >= BOTTOMCENTER_SYM && LA422_0 <= BOTTOMRIGHT_SYM)||LA422_0==CHARSET_SYM||LA422_0==COMMA||LA422_0==COUNTER_STYLE_SYM||LA422_0==FONT_FACE_SYM||LA422_0==GEN||LA422_0==HASH_SYMBOL||LA422_0==IDENT||LA422_0==IMPORT_SYM||LA422_0==KEYFRAMES_SYM||(LA422_0 >= LEFTBOTTOM_SYM && LA422_0 <= LEFTTOP_SYM)||(LA422_0 >= MEDIA_SYM && LA422_0 <= MOZ_DOCUMENT_SYM)||LA422_0==NAMESPACE_SYM||LA422_0==NUMBER||LA422_0==PAGE_SYM||(LA422_0 >= RIGHTBOTTOM_SYM && LA422_0 <= RIGHTTOP_SYM)||(LA422_0 >= SASS_AT_ROOT && LA422_0 <= SASS_DEBUG)||(LA422_0 >= SASS_EACH && LA422_0 <= SASS_ELSE)||LA422_0==SASS_EXTEND||(LA422_0 >= SASS_FOR && LA422_0 <= SASS_FUNCTION)||(LA422_0 >= SASS_IF && LA422_0 <= SASS_MIXIN)||(LA422_0 >= SASS_RETURN && LA422_0 <= SASS_WHILE)||LA422_0==STRING||(LA422_0 >= TOPCENTER_SYM && LA422_0 <= TOPRIGHT_SYM)||LA422_0==VARIABLE||LA422_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt422=1;
					}
					} finally {dbg.exitDecision(422);}

					switch (alt422) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1294:49: sass_map_pairs
							{
							dbg.location(1294,49);
							pushFollow(FOLLOW_sass_map_pairs_in_cp_expression9430);
							sass_map_pairs();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(422);}
					dbg.location(1294,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression9433); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1295, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1297:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1297, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1298:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt424=8;
			try { dbg.enterDecision(424, decisionCanBacktrack[424]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA424_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt424=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt424=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 424, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt424=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt424=4;
				}
				break;
			case LESS:
				{
				alt424=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt424=6;
				}
				break;
			case GREATER:
				{
				alt424=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt424=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 424, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(424);}

			switch (alt424) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:5: key_or
					{
					dbg.location(1299,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator9454);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:14: key_and
					{
					dbg.location(1299,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator9458);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:25: CP_EQ
					{
					dbg.location(1299,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator9463); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:33: CP_NOT_EQ
					{
					dbg.location(1299,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator9467); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:45: LESS
					{
					dbg.location(1299,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator9471); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:52: LESS_OR_EQ
					{
					dbg.location(1299,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator9475); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:65: GREATER
					{
					dbg.location(1299,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator9479); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1299:75: GREATER_OR_EQ
					{
					dbg.location(1299,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator9483); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1300, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1302:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1302, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1303:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1304,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:9: ( NOT ( ws )? )?
			int alt426=2;
			try { dbg.enterSubRule(426);
			try { dbg.enterDecision(426, decisionCanBacktrack[426]);

			int LA426_0 = input.LA(1);
			if ( (LA426_0==NOT) ) {
				alt426=1;
			}
			} finally {dbg.exitDecision(426);}

			switch (alt426) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:10: NOT ( ws )?
					{
					dbg.location(1304,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom9509); if (state.failed) return;dbg.location(1304,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:14: ( ws )?
					int alt425=2;
					try { dbg.enterSubRule(425);
					try { dbg.enterDecision(425, decisionCanBacktrack[425]);

					int LA425_0 = input.LA(1);
					if ( (LA425_0==COMMENT||LA425_0==NL||LA425_0==WS) ) {
						alt425=1;
					}
					} finally {dbg.exitDecision(425);}

					switch (alt425) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1304:14: ws
							{
							dbg.location(1304,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom9511);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(425);}

					}
					break;

			}
			} finally {dbg.exitSubRule(426);}
			dbg.location(1305,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1305:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt430=2;
			try { dbg.enterSubRule(430);
			try { dbg.enterDecision(430, decisionCanBacktrack[430]);

			int LA430_0 = input.LA(1);
			if ( (LA430_0==MINUS||LA430_0==PLUS) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==IDENT) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==VARIABLE) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==LBRACKET) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==NUMBER) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==URANGE) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==PERCENTAGE) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==LENGTH) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==EMS) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==REM) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==EXS) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==ANGLE) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==TIME) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==FREQ) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==RESOLUTION) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==DIMENSION) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==STRING) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==TILDE) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==LESS_JS_STRING) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==GEN) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==URI) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==HASH) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==AT_IDENT||(LA430_0 >= BOTTOMCENTER_SYM && LA430_0 <= BOTTOMRIGHT_SYM)||LA430_0==CHARSET_SYM||LA430_0==COUNTER_STYLE_SYM||LA430_0==FONT_FACE_SYM||LA430_0==IMPORT_SYM||LA430_0==KEYFRAMES_SYM||(LA430_0 >= LEFTBOTTOM_SYM && LA430_0 <= LEFTTOP_SYM)||LA430_0==MEDIA_SYM||LA430_0==MOZ_DOCUMENT_SYM||LA430_0==NAMESPACE_SYM||LA430_0==PAGE_SYM||(LA430_0 >= RIGHTBOTTOM_SYM && LA430_0 <= RIGHTTOP_SYM)||(LA430_0 >= SASS_AT_ROOT && LA430_0 <= SASS_DEBUG)||(LA430_0 >= SASS_EACH && LA430_0 <= SASS_ELSE)||LA430_0==SASS_EXTEND||(LA430_0 >= SASS_FOR && LA430_0 <= SASS_FUNCTION)||(LA430_0 >= SASS_IF && LA430_0 <= SASS_MIXIN)||(LA430_0 >= SASS_RETURN && LA430_0 <= SASS_USE)||(LA430_0 >= SASS_WARN && LA430_0 <= SASS_WHILE)||(LA430_0 >= TOPCENTER_SYM && LA430_0 <= TOPRIGHT_SYM)||LA430_0==WEBKIT_KEYFRAMES_SYM) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==SASS_VAR) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==LESS_AND) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==HASH_SYMBOL) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==AT_SIGN) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==PERCENTAGE_SYMBOL) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==IMPORTANT_SYM) && (synpred65_Css3())) {
				alt430=1;
			}
			else if ( (LA430_0==LPAREN) ) {
				int LA430_30 = input.LA(2);
				if ( (synpred65_Css3()) ) {
					alt430=1;
				}
				else if ( (true) ) {
					alt430=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 430, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(430);}

			switch (alt430) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1306:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1306,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom9542);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1307,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom9558); if (state.failed) return;dbg.location(1307,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:22: ( ws )?
					int alt427=2;
					try { dbg.enterSubRule(427);
					try { dbg.enterDecision(427, decisionCanBacktrack[427]);

					int LA427_0 = input.LA(1);
					if ( (LA427_0==COMMENT||LA427_0==NL||LA427_0==WS) ) {
						alt427=1;
					}
					} finally {dbg.exitDecision(427);}

					switch (alt427) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:22: ws
							{
							dbg.location(1307,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom9560);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(427);}
					dbg.location(1307,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:26: ( cp_expression_list ( ws )? )?
					int alt429=2;
					try { dbg.enterSubRule(429);
					try { dbg.enterDecision(429, decisionCanBacktrack[429]);

					int LA429_0 = input.LA(1);
					if ( ((LA429_0 >= ANGLE && LA429_0 <= AT_SIGN)||(LA429_0 >= BOTTOMCENTER_SYM && LA429_0 <= BOTTOMRIGHT_SYM)||LA429_0==CHARSET_SYM||LA429_0==COUNTER_STYLE_SYM||LA429_0==DIMENSION||LA429_0==EMS||LA429_0==EXS||(LA429_0 >= FONT_FACE_SYM && LA429_0 <= FREQ)||LA429_0==GEN||(LA429_0 >= HASH && LA429_0 <= HASH_SYMBOL)||(LA429_0 >= IDENT && LA429_0 <= IMPORT_SYM)||LA429_0==KEYFRAMES_SYM||(LA429_0 >= LBRACE && LA429_0 <= LENGTH)||(LA429_0 >= LESS_AND && LA429_0 <= LESS_JS_STRING)||LA429_0==LPAREN||(LA429_0 >= MEDIA_SYM && LA429_0 <= MOZ_DOCUMENT_SYM)||LA429_0==NAMESPACE_SYM||(LA429_0 >= NOT && LA429_0 <= NUMBER)||(LA429_0 >= PAGE_SYM && LA429_0 <= PERCENTAGE_SYMBOL)||LA429_0==PLUS||(LA429_0 >= REM && LA429_0 <= RIGHTTOP_SYM)||(LA429_0 >= SASS_AT_ROOT && LA429_0 <= SASS_DEBUG)||(LA429_0 >= SASS_EACH && LA429_0 <= SASS_ELSE)||LA429_0==SASS_EXTEND||(LA429_0 >= SASS_FOR && LA429_0 <= SASS_FUNCTION)||(LA429_0 >= SASS_IF && LA429_0 <= SASS_MIXIN)||(LA429_0 >= SASS_RETURN && LA429_0 <= SASS_WHILE)||LA429_0==STRING||(LA429_0 >= TILDE && LA429_0 <= TOPRIGHT_SYM)||(LA429_0 >= URANGE && LA429_0 <= URI)||LA429_0==VARIABLE||LA429_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt429=1;
					}
					} finally {dbg.exitDecision(429);}

					switch (alt429) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:27: cp_expression_list ( ws )?
							{
							dbg.location(1307,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom9564);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1307,46);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:46: ( ws )?
							int alt428=2;
							try { dbg.enterSubRule(428);
							try { dbg.enterDecision(428, decisionCanBacktrack[428]);

							int LA428_0 = input.LA(1);
							if ( (LA428_0==COMMENT||LA428_0==NL||LA428_0==WS) ) {
								alt428=1;
							}
							} finally {dbg.exitDecision(428);}

							switch (alt428) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1307:46: ws
									{
									dbg.location(1307,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom9566);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(428);}

							}
							break;

					}
					} finally {dbg.exitSubRule(429);}
					dbg.location(1307,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom9571); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(430);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1309, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1312:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1312, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1313:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1314,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions9603);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1315,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(431);

			loop431:
			while (true) {
				int alt431=2;
				try { dbg.enterDecision(431, decisionCanBacktrack[431]);

				int LA431_0 = input.LA(1);
				if ( (LA431_0==COMMENT||LA431_0==NL||LA431_0==WS) ) {
					alt431=1;
				}

				} finally {dbg.exitDecision(431);}

				switch (alt431) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:6: ws cp_math_expression
					{
					dbg.location(1315,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions9610);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1315,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions9612);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop431;
				}
			}
			} finally {dbg.exitSubRule(431);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1316, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1330, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1331,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression9646);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1332,10);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1332:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(434);

			loop434:
			while (true) {
				int alt434=2;
				try { dbg.enterDecision(434, decisionCanBacktrack[434]);

				try {
					isCyclicDecision = true;
					alt434 = dfa434.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(434);}

				switch (alt434) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1333,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:48: ( ws )?
					int alt432=2;
					try { dbg.enterSubRule(432);
					try { dbg.enterDecision(432, decisionCanBacktrack[432]);

					int LA432_0 = input.LA(1);
					if ( (LA432_0==COMMENT||LA432_0==NL||LA432_0==WS) ) {
						alt432=1;
					}
					} finally {dbg.exitDecision(432);}

					switch (alt432) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:48: ws
							{
							dbg.location(1333,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression9688);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(432);}
					dbg.location(1333,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1333,78);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:78: ( ws )?
					int alt433=2;
					try { dbg.enterSubRule(433);
					try { dbg.enterDecision(433, decisionCanBacktrack[433]);

					int LA433_0 = input.LA(1);
					if ( (LA433_0==COMMENT||LA433_0==NL||LA433_0==WS) ) {
						alt433=1;
					}
					} finally {dbg.exitDecision(433);}

					switch (alt433) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:78: ws
							{
							dbg.location(1333,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression9701);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(433);}
					dbg.location(1333,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression9704);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop434;
				}
			}
			} finally {dbg.exitSubRule(434);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1335, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1337:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1337, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1338:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt439=3;
			try { dbg.enterDecision(439, decisionCanBacktrack[439]);

			try {
				isCyclicDecision = true;
				alt439 = dfa439.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(439);}

			switch (alt439) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1339:5: term
					{
					dbg.location(1339,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom9737);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:7: IMPORTANT_SYM
					{
					dbg.location(1340,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom9745); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1341,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:7: ( unaryOperator ( ws )? )?
					int alt436=2;
					try { dbg.enterSubRule(436);
					try { dbg.enterDecision(436, decisionCanBacktrack[436]);

					int LA436_0 = input.LA(1);
					if ( (LA436_0==MINUS||LA436_0==PLUS) ) {
						alt436=1;
					}
					} finally {dbg.exitDecision(436);}

					switch (alt436) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:9: unaryOperator ( ws )?
							{
							dbg.location(1341,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom9756);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1341,23);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:23: ( ws )?
							int alt435=2;
							try { dbg.enterSubRule(435);
							try { dbg.enterDecision(435, decisionCanBacktrack[435]);

							int LA435_0 = input.LA(1);
							if ( (LA435_0==COMMENT||LA435_0==NL||LA435_0==WS) ) {
								alt435=1;
							}
							} finally {dbg.exitDecision(435);}

							switch (alt435) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:23: ws
									{
									dbg.location(1341,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom9758);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(435);}

							}
							break;

					}
					} finally {dbg.exitSubRule(436);}
					dbg.location(1341,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom9764); if (state.failed) return;dbg.location(1341,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:37: ( ws )?
					int alt437=2;
					try { dbg.enterSubRule(437);
					try { dbg.enterDecision(437, decisionCanBacktrack[437]);

					int LA437_0 = input.LA(1);
					if ( (LA437_0==COMMENT||LA437_0==NL||LA437_0==WS) ) {
						alt437=1;
					}
					} finally {dbg.exitDecision(437);}

					switch (alt437) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:37: ws
							{
							dbg.location(1341,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom9766);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(437);}
					dbg.location(1341,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom9769);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1341,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:60: ( ws )?
					int alt438=2;
					try { dbg.enterSubRule(438);
					try { dbg.enterDecision(438, decisionCanBacktrack[438]);

					int LA438_0 = input.LA(1);
					if ( (LA438_0==COMMENT||LA438_0==NL||LA438_0==WS) ) {
						alt438=1;
					}
					} finally {dbg.exitDecision(438);}

					switch (alt438) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:60: ws
							{
							dbg.location(1341,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom9771);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(438);}
					dbg.location(1341,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom9774); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1342, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:1: cp_mixin_declaration : ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1350, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1351:5: ( ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1352:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1352,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1352:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt451=2;
			try { dbg.enterSubRule(451);
			try { dbg.enterDecision(451, decisionCanBacktrack[451]);

			int LA451_0 = input.LA(1);
			if ( (LA451_0==DOT||LA451_0==HASH||LA451_0==LESS_AND) ) {
				alt451=1;
			}
			else if ( (LA451_0==SASS_MIXIN) ) {
				alt451=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 451, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(451);}

			switch (alt451) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:9: {...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1353,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1353,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:27: ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) )
					int alt444=2;
					try { dbg.enterSubRule(444);
					try { dbg.enterDecision(444, decisionCanBacktrack[444]);

					int LA444_0 = input.LA(1);
					if ( (LA444_0==LESS_AND) ) {
						alt444=1;
					}
					else if ( (LA444_0==DOT||LA444_0==HASH) ) {
						alt444=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 444, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(444);}

					switch (alt444) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:28: LESS_AND
							{
							dbg.location(1353,28);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_declaration9814); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							{
							dbg.location(1353,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:40: ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1353,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:40: ( ( DOT cp_mixin_name ) | HASH )
							int alt440=2;
							try { dbg.enterSubRule(440);
							try { dbg.enterDecision(440, decisionCanBacktrack[440]);

							int LA440_0 = input.LA(1);
							if ( (LA440_0==DOT) ) {
								alt440=1;
							}
							else if ( (LA440_0==HASH) ) {
								alt440=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 440, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(440);}

							switch (alt440) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:41: ( DOT cp_mixin_name )
									{
									dbg.location(1353,41);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:41: ( DOT cp_mixin_name )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:42: DOT cp_mixin_name
									{
									dbg.location(1353,42);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration9821); if (state.failed) return;dbg.location(1353,46);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration9823);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:63: HASH
									{
									dbg.location(1353,63);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_declaration9828); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(440);}
							dbg.location(1353,69);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:69: ( ws )?
							int alt441=2;
							try { dbg.enterSubRule(441);
							try { dbg.enterDecision(441, decisionCanBacktrack[441]);

							int LA441_0 = input.LA(1);
							if ( (LA441_0==COMMENT||LA441_0==NL||LA441_0==WS) ) {
								alt441=1;
							}
							} finally {dbg.exitDecision(441);}

							switch (alt441) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:69: ws
									{
									dbg.location(1353,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9831);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(441);}
							dbg.location(1353,73);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration9834); if (state.failed) return;dbg.location(1353,80);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:80: ( ws )?
							int alt442=2;
							try { dbg.enterSubRule(442);
							try { dbg.enterDecision(442, decisionCanBacktrack[442]);

							int LA442_0 = input.LA(1);
							if ( (LA442_0==COMMENT||LA442_0==NL||LA442_0==WS) ) {
								alt442=1;
							}
							} finally {dbg.exitDecision(442);}

							switch (alt442) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:80: ws
									{
									dbg.location(1353,80);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9836);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(442);}
							dbg.location(1353,84);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:84: ( cp_args_list )?
							int alt443=2;
							try { dbg.enterSubRule(443);
							try { dbg.enterDecision(443, decisionCanBacktrack[443]);

							int LA443_0 = input.LA(1);
							if ( (LA443_0==AT_IDENT||(LA443_0 >= BOTTOMCENTER_SYM && LA443_0 <= BOTTOMRIGHT_SYM)||LA443_0==CHARSET_SYM||(LA443_0 >= COUNTER_STYLE_SYM && LA443_0 <= CP_DOTS)||LA443_0==FONT_FACE_SYM||LA443_0==IDENT||LA443_0==IMPORT_SYM||LA443_0==KEYFRAMES_SYM||(LA443_0 >= LEFTBOTTOM_SYM && LA443_0 <= LEFTTOP_SYM)||LA443_0==LESS_REST||LA443_0==MEDIA_SYM||LA443_0==MOZ_DOCUMENT_SYM||LA443_0==NAMESPACE_SYM||LA443_0==PAGE_SYM||(LA443_0 >= RIGHTBOTTOM_SYM && LA443_0 <= RIGHTTOP_SYM)||(LA443_0 >= SASS_AT_ROOT && LA443_0 <= SASS_DEBUG)||(LA443_0 >= SASS_EACH && LA443_0 <= SASS_ELSE)||LA443_0==SASS_EXTEND||(LA443_0 >= SASS_FOR && LA443_0 <= SASS_FUNCTION)||(LA443_0 >= SASS_IF && LA443_0 <= SASS_MIXIN)||(LA443_0 >= SASS_RETURN && LA443_0 <= SASS_WHILE)||(LA443_0 >= TOPCENTER_SYM && LA443_0 <= TOPRIGHT_SYM)||LA443_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt443=1;
							}
							} finally {dbg.exitDecision(443);}

							switch (alt443) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:84: cp_args_list
									{
									dbg.location(1353,84);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration9839);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(443);}
							dbg.location(1353,98);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration9842); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(444);}
					dbg.location(1353,107);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:107: ( ( ws )? less_mixin_guarded )?
					int alt446=2;
					try { dbg.enterSubRule(446);
					try { dbg.enterDecision(446, decisionCanBacktrack[446]);

					try {
						isCyclicDecision = true;
						alt446 = dfa446.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(446);}

					switch (alt446) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:108: ( ws )? less_mixin_guarded
							{
							dbg.location(1353,108);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:108: ( ws )?
							int alt445=2;
							try { dbg.enterSubRule(445);
							try { dbg.enterDecision(445, decisionCanBacktrack[445]);

							int LA445_0 = input.LA(1);
							if ( (LA445_0==COMMENT||LA445_0==NL||LA445_0==WS) ) {
								alt445=1;
							}
							} finally {dbg.exitDecision(445);}

							switch (alt445) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:108: ws
									{
									dbg.location(1353,108);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9847);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(445);}
							dbg.location(1353,112);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration9850);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(446);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1355,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1355,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration9874); if (state.failed) return;dbg.location(1355,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration9876);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1355,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration9878);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1355,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt450=2;
					try { dbg.enterSubRule(450);
					try { dbg.enterDecision(450, decisionCanBacktrack[450]);

					try {
						isCyclicDecision = true;
						alt450 = dfa450.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(450);}

					switch (alt450) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1355,56);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:56: ( ws )?
							int alt447=2;
							try { dbg.enterSubRule(447);
							try { dbg.enterDecision(447, decisionCanBacktrack[447]);

							int LA447_0 = input.LA(1);
							if ( (LA447_0==COMMENT||LA447_0==NL||LA447_0==WS) ) {
								alt447=1;
							}
							} finally {dbg.exitDecision(447);}

							switch (alt447) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:56: ws
									{
									dbg.location(1355,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9881);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(447);}
							dbg.location(1355,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration9884); if (state.failed) return;dbg.location(1355,67);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:67: ( ws )?
							int alt448=2;
							try { dbg.enterSubRule(448);
							try { dbg.enterDecision(448, decisionCanBacktrack[448]);

							int LA448_0 = input.LA(1);
							if ( (LA448_0==COMMENT||LA448_0==NL||LA448_0==WS) ) {
								alt448=1;
							}
							} finally {dbg.exitDecision(448);}

							switch (alt448) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:67: ws
									{
									dbg.location(1355,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration9886);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(448);}
							dbg.location(1355,71);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:71: ( cp_args_list )?
							int alt449=2;
							try { dbg.enterSubRule(449);
							try { dbg.enterDecision(449, decisionCanBacktrack[449]);

							int LA449_0 = input.LA(1);
							if ( (LA449_0==AT_IDENT||(LA449_0 >= BOTTOMCENTER_SYM && LA449_0 <= BOTTOMRIGHT_SYM)||LA449_0==CHARSET_SYM||(LA449_0 >= COUNTER_STYLE_SYM && LA449_0 <= CP_DOTS)||LA449_0==FONT_FACE_SYM||LA449_0==IDENT||LA449_0==IMPORT_SYM||LA449_0==KEYFRAMES_SYM||(LA449_0 >= LEFTBOTTOM_SYM && LA449_0 <= LEFTTOP_SYM)||LA449_0==LESS_REST||LA449_0==MEDIA_SYM||LA449_0==MOZ_DOCUMENT_SYM||LA449_0==NAMESPACE_SYM||LA449_0==PAGE_SYM||(LA449_0 >= RIGHTBOTTOM_SYM && LA449_0 <= RIGHTTOP_SYM)||(LA449_0 >= SASS_AT_ROOT && LA449_0 <= SASS_DEBUG)||(LA449_0 >= SASS_EACH && LA449_0 <= SASS_ELSE)||LA449_0==SASS_EXTEND||(LA449_0 >= SASS_FOR && LA449_0 <= SASS_FUNCTION)||(LA449_0 >= SASS_IF && LA449_0 <= SASS_MIXIN)||(LA449_0 >= SASS_RETURN && LA449_0 <= SASS_WHILE)||(LA449_0 >= TOPCENTER_SYM && LA449_0 <= TOPRIGHT_SYM)||LA449_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt449=1;
							}
							} finally {dbg.exitDecision(449);}

							switch (alt449) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1355:71: cp_args_list
									{
									dbg.location(1355,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration9889);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(449);}
							dbg.location(1355,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration9892); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(450);}

					}
					break;

			}
			} finally {dbg.exitSubRule(451);}
			dbg.location(1357,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1357:5: ( ws )?
			int alt452=2;
			try { dbg.enterSubRule(452);
			try { dbg.enterDecision(452, decisionCanBacktrack[452]);

			int LA452_0 = input.LA(1);
			if ( (LA452_0==COMMENT||LA452_0==NL||LA452_0==WS) ) {
				alt452=1;
			}
			} finally {dbg.exitDecision(452);}

			switch (alt452) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1357:5: ws
					{
					dbg.location(1357,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration9906);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(452);}
			dbg.location(1357,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration9909);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1358, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:1: cp_mixin_call : ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1362, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1363:5: ( ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1364:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1364,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1364:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt468=2;
			try { dbg.enterSubRule(468);
			try { dbg.enterDecision(468, decisionCanBacktrack[468]);

			int LA468_0 = input.LA(1);
			if ( (LA468_0==AT_IDENT||LA468_0==DOT||LA468_0==HASH||LA468_0==LESS_AND) ) {
				alt468=1;
			}
			else if ( (LA468_0==SASS_INCLUDE) ) {
				alt468=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 468, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(468);}

			switch (alt468) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:9: {...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					{
					dbg.location(1365,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1365,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:27: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
					int alt453=4;
					try { dbg.enterSubRule(453);
					try { dbg.enterDecision(453, decisionCanBacktrack[453]);

					switch ( input.LA(1) ) {
					case DOT:
						{
						alt453=1;
						}
						break;
					case HASH:
						{
						alt453=2;
						}
						break;
					case AT_IDENT:
						{
						alt453=3;
						}
						break;
					case LESS_AND:
						{
						alt453=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 453, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(453);}

					switch (alt453) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:28: DOT cp_mixin_name
							{
							dbg.location(1365,28);
							match(input,DOT,FOLLOW_DOT_in_cp_mixin_call9945); if (state.failed) return;dbg.location(1365,32);
							pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call9947);
							cp_mixin_name();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:48: HASH
							{
							dbg.location(1365,48);
							match(input,HASH,FOLLOW_HASH_in_cp_mixin_call9951); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:55: AT_IDENT
							{
							dbg.location(1365,55);
							match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call9955); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:66: LESS_AND
							{
							dbg.location(1365,66);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call9959); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(453);}
					dbg.location(1365,76);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:76: ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )*
					try { dbg.enterSubRule(457);

					loop457:
					while (true) {
						int alt457=2;
						try { dbg.enterDecision(457, decisionCanBacktrack[457]);

						int LA457_0 = input.LA(1);
						if ( (LA457_0==COMMENT||LA457_0==NL||LA457_0==WS) ) {
							int LA457_2 = input.LA(2);
							if ( (synpred67_Css3()) ) {
								alt457=1;
							}

						}
						else if ( (LA457_0==GREATER||LA457_0==PLUS||LA457_0==TILDE) ) {
							int LA457_14 = input.LA(2);
							if ( (synpred67_Css3()) ) {
								alt457=1;
							}

						}

						} finally {dbg.exitDecision(457);}

						switch (alt457) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:77: ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							{
							dbg.location(1365,101);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:101: ( ws )?
							int alt454=2;
							try { dbg.enterSubRule(454);
							try { dbg.enterDecision(454, decisionCanBacktrack[454]);

							int LA454_0 = input.LA(1);
							if ( (LA454_0==COMMENT||LA454_0==NL||LA454_0==WS) ) {
								alt454=1;
							}
							} finally {dbg.exitDecision(454);}

							switch (alt454) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:101: ws
									{
									dbg.location(1365,101);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9975);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(454);}
							dbg.location(1365,105);
							pushFollow(FOLLOW_combinator_in_cp_mixin_call9978);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(1365,116);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:116: ( ws )?
							int alt455=2;
							try { dbg.enterSubRule(455);
							try { dbg.enterDecision(455, decisionCanBacktrack[455]);

							int LA455_0 = input.LA(1);
							if ( (LA455_0==COMMENT||LA455_0==NL||LA455_0==WS) ) {
								alt455=1;
							}
							} finally {dbg.exitDecision(455);}

							switch (alt455) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:116: ws
									{
									dbg.location(1365,116);
									pushFollow(FOLLOW_ws_in_cp_mixin_call9980);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(455);}
							dbg.location(1365,120);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:120: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							int alt456=4;
							try { dbg.enterSubRule(456);
							try { dbg.enterDecision(456, decisionCanBacktrack[456]);

							switch ( input.LA(1) ) {
							case DOT:
								{
								alt456=1;
								}
								break;
							case HASH:
								{
								alt456=2;
								}
								break;
							case AT_IDENT:
								{
								alt456=3;
								}
								break;
							case LESS_AND:
								{
								alt456=4;
								}
								break;
							default:
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 456, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(456);}

							switch (alt456) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:121: DOT cp_mixin_name
									{
									dbg.location(1365,121);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_call9984); if (state.failed) return;dbg.location(1365,125);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call9986);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:141: HASH
									{
									dbg.location(1365,141);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_call9990); if (state.failed) return;
									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:148: AT_IDENT
									{
									dbg.location(1365,148);
									match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call9994); if (state.failed) return;
									}
									break;
								case 4 :
									dbg.enterAlt(4);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:159: LESS_AND
									{
									dbg.location(1365,159);
									match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call9998); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(456);}

							}
							break;

						default :
							break loop457;
						}
					}
					} finally {dbg.exitSubRule(457);}
					dbg.location(1365,171);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:171: ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					int alt461=3;
					try { dbg.enterSubRule(461);
					try { dbg.enterDecision(461, decisionCanBacktrack[461]);

					int LA461_0 = input.LA(1);
					if ( (LA461_0==COLON||LA461_0==DCOLON) ) {
						int LA461_1 = input.LA(2);
						if ( (synpred68_Css3()) ) {
							alt461=1;
						}
					}
					else if ( (LA461_0==COMMENT||LA461_0==NL||LA461_0==WS) ) {
						int LA461_2 = input.LA(2);
						if ( (synpred69_Css3()) ) {
							alt461=2;
						}
					}
					else if ( (LA461_0==LPAREN) && (synpred69_Css3())) {
						alt461=2;
					}
					} finally {dbg.exitDecision(461);}

					switch (alt461) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:172: ( pseudo )=> pseudo
							{
							dbg.location(1365,182);
							pushFollow(FOLLOW_pseudo_in_cp_mixin_call10008);
							pseudo();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:191: ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							{
							dbg.location(1365,205);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:205: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:206: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1365,206);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:206: ( ws )?
							int alt458=2;
							try { dbg.enterSubRule(458);
							try { dbg.enterDecision(458, decisionCanBacktrack[458]);

							int LA458_0 = input.LA(1);
							if ( (LA458_0==COMMENT||LA458_0==NL||LA458_0==WS) ) {
								alt458=1;
							}
							} finally {dbg.exitDecision(458);}

							switch (alt458) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:206: ws
									{
									dbg.location(1365,206);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10020);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(458);}
							dbg.location(1365,210);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call10023); if (state.failed) return;dbg.location(1365,217);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:217: ( ws )?
							int alt459=2;
							try { dbg.enterSubRule(459);
							try { dbg.enterDecision(459, decisionCanBacktrack[459]);

							int LA459_0 = input.LA(1);
							if ( (LA459_0==COMMENT||LA459_0==NL||LA459_0==WS) ) {
								alt459=1;
							}
							} finally {dbg.exitDecision(459);}

							switch (alt459) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:217: ws
									{
									dbg.location(1365,217);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10025);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(459);}
							dbg.location(1365,221);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:221: ( cp_mixin_call_args )?
							int alt460=2;
							try { dbg.enterSubRule(460);
							try { dbg.enterDecision(460, decisionCanBacktrack[460]);

							int LA460_0 = input.LA(1);
							if ( ((LA460_0 >= ANGLE && LA460_0 <= AT_SIGN)||(LA460_0 >= BOTTOMCENTER_SYM && LA460_0 <= BOTTOMRIGHT_SYM)||LA460_0==CHARSET_SYM||LA460_0==COUNTER_STYLE_SYM||LA460_0==DIMENSION||LA460_0==EMS||LA460_0==EXS||(LA460_0 >= FONT_FACE_SYM && LA460_0 <= FREQ)||LA460_0==GEN||(LA460_0 >= HASH && LA460_0 <= HASH_SYMBOL)||(LA460_0 >= IDENT && LA460_0 <= IMPORT_SYM)||LA460_0==KEYFRAMES_SYM||(LA460_0 >= LBRACE && LA460_0 <= LENGTH)||(LA460_0 >= LESS_AND && LA460_0 <= LESS_JS_STRING)||LA460_0==LPAREN||(LA460_0 >= MEDIA_SYM && LA460_0 <= MOZ_DOCUMENT_SYM)||LA460_0==NAMESPACE_SYM||(LA460_0 >= NOT && LA460_0 <= NUMBER)||(LA460_0 >= PAGE_SYM && LA460_0 <= PERCENTAGE_SYMBOL)||LA460_0==PLUS||(LA460_0 >= REM && LA460_0 <= RIGHTTOP_SYM)||(LA460_0 >= SASS_AT_ROOT && LA460_0 <= SASS_DEBUG)||(LA460_0 >= SASS_EACH && LA460_0 <= SASS_ELSE)||LA460_0==SASS_EXTEND||(LA460_0 >= SASS_FOR && LA460_0 <= SASS_FUNCTION)||(LA460_0 >= SASS_IF && LA460_0 <= SASS_MIXIN)||(LA460_0 >= SASS_RETURN && LA460_0 <= SASS_WHILE)||LA460_0==STRING||(LA460_0 >= TILDE && LA460_0 <= TOPRIGHT_SYM)||(LA460_0 >= URANGE && LA460_0 <= URI)||LA460_0==VARIABLE||LA460_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt460=1;
							}
							} finally {dbg.exitDecision(460);}

							switch (alt460) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:221: cp_mixin_call_args
									{
									dbg.location(1365,221);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call10028);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(460);}
							dbg.location(1365,241);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call10031); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(461);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1367,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1367,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call10056); if (state.failed) return;dbg.location(1367,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call10058);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1367,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call10060);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1367,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt465=2;
					try { dbg.enterSubRule(465);
					try { dbg.enterDecision(465, decisionCanBacktrack[465]);

					try {
						isCyclicDecision = true;
						alt465 = dfa465.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(465);}

					switch (alt465) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1367,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:58: ( ws )?
							int alt462=2;
							try { dbg.enterSubRule(462);
							try { dbg.enterDecision(462, decisionCanBacktrack[462]);

							int LA462_0 = input.LA(1);
							if ( (LA462_0==COMMENT||LA462_0==NL||LA462_0==WS) ) {
								alt462=1;
							}
							} finally {dbg.exitDecision(462);}

							switch (alt462) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:58: ws
									{
									dbg.location(1367,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10063);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(462);}
							dbg.location(1367,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call10066); if (state.failed) return;dbg.location(1367,69);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:69: ( ws )?
							int alt463=2;
							try { dbg.enterSubRule(463);
							try { dbg.enterDecision(463, decisionCanBacktrack[463]);

							int LA463_0 = input.LA(1);
							if ( (LA463_0==COMMENT||LA463_0==NL||LA463_0==WS) ) {
								alt463=1;
							}
							} finally {dbg.exitDecision(463);}

							switch (alt463) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:69: ws
									{
									dbg.location(1367,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10068);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(463);}
							dbg.location(1367,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:73: ( cp_mixin_call_args )?
							int alt464=2;
							try { dbg.enterSubRule(464);
							try { dbg.enterDecision(464, decisionCanBacktrack[464]);

							int LA464_0 = input.LA(1);
							if ( ((LA464_0 >= ANGLE && LA464_0 <= AT_SIGN)||(LA464_0 >= BOTTOMCENTER_SYM && LA464_0 <= BOTTOMRIGHT_SYM)||LA464_0==CHARSET_SYM||LA464_0==COUNTER_STYLE_SYM||LA464_0==DIMENSION||LA464_0==EMS||LA464_0==EXS||(LA464_0 >= FONT_FACE_SYM && LA464_0 <= FREQ)||LA464_0==GEN||(LA464_0 >= HASH && LA464_0 <= HASH_SYMBOL)||(LA464_0 >= IDENT && LA464_0 <= IMPORT_SYM)||LA464_0==KEYFRAMES_SYM||(LA464_0 >= LBRACE && LA464_0 <= LENGTH)||(LA464_0 >= LESS_AND && LA464_0 <= LESS_JS_STRING)||LA464_0==LPAREN||(LA464_0 >= MEDIA_SYM && LA464_0 <= MOZ_DOCUMENT_SYM)||LA464_0==NAMESPACE_SYM||(LA464_0 >= NOT && LA464_0 <= NUMBER)||(LA464_0 >= PAGE_SYM && LA464_0 <= PERCENTAGE_SYMBOL)||LA464_0==PLUS||(LA464_0 >= REM && LA464_0 <= RIGHTTOP_SYM)||(LA464_0 >= SASS_AT_ROOT && LA464_0 <= SASS_DEBUG)||(LA464_0 >= SASS_EACH && LA464_0 <= SASS_ELSE)||LA464_0==SASS_EXTEND||(LA464_0 >= SASS_FOR && LA464_0 <= SASS_FUNCTION)||(LA464_0 >= SASS_IF && LA464_0 <= SASS_MIXIN)||(LA464_0 >= SASS_RETURN && LA464_0 <= SASS_WHILE)||LA464_0==STRING||(LA464_0 >= TILDE && LA464_0 <= TOPRIGHT_SYM)||(LA464_0 >= URANGE && LA464_0 <= URI)||LA464_0==VARIABLE||LA464_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt464=1;
							}
							} finally {dbg.exitDecision(464);}

							switch (alt464) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:73: cp_mixin_call_args
									{
									dbg.location(1367,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call10071);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(464);}
							dbg.location(1367,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call10074); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(465);}
					dbg.location(1367,102);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:102: ( ( ws )? cp_mixin_block )?
					int alt467=2;
					try { dbg.enterSubRule(467);
					try { dbg.enterDecision(467, decisionCanBacktrack[467]);

					try {
						isCyclicDecision = true;
						alt467 = dfa467.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(467);}

					switch (alt467) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:103: ( ws )? cp_mixin_block
							{
							dbg.location(1367,103);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:103: ( ws )?
							int alt466=2;
							try { dbg.enterSubRule(466);
							try { dbg.enterDecision(466, decisionCanBacktrack[466]);

							int LA466_0 = input.LA(1);
							if ( (LA466_0==COMMENT||LA466_0==NL||LA466_0==WS) ) {
								alt466=1;
							}
							} finally {dbg.exitDecision(466);}

							switch (alt466) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:103: ws
									{
									dbg.location(1367,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call10079);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(466);}
							dbg.location(1367,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call10082);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(467);}

					}
					break;

			}
			} finally {dbg.exitSubRule(468);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1369, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1371:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1371, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1372:5: ( LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:5: LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE
			{
			dbg.location(1373,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block10111); if (state.failed) return;dbg.location(1373,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:12: ( ws )?
			int alt469=2;
			try { dbg.enterSubRule(469);
			try { dbg.enterDecision(469, decisionCanBacktrack[469]);

			int LA469_0 = input.LA(1);
			if ( (LA469_0==COMMENT||LA469_0==NL||LA469_0==WS) ) {
				alt469=1;
			}
			} finally {dbg.exitDecision(469);}

			switch (alt469) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:12: ws
					{
					dbg.location(1373,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block10113);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(469);}
			dbg.location(1373,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block10116);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1374,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:9: ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )?
			int alt472=3;
			try { dbg.enterSubRule(472);
			try { dbg.enterDecision(472, decisionCanBacktrack[472]);

			int LA472_0 = input.LA(1);
			if ( ((LA472_0 >= AT_IDENT && LA472_0 <= AT_SIGN)||(LA472_0 >= BOTTOMCENTER_SYM && LA472_0 <= BOTTOMRIGHT_SYM)||(LA472_0 >= CHARSET_SYM && LA472_0 <= COLON)||LA472_0==CONTAINER_SYM||LA472_0==COUNTER_STYLE_SYM||(LA472_0 >= DCOLON && LA472_0 <= DOT)||LA472_0==FONT_FACE_SYM||(LA472_0 >= GEN && LA472_0 <= GREATER)||(LA472_0 >= HASH && LA472_0 <= HASH_SYMBOL)||LA472_0==IMPORT_SYM||LA472_0==KEYFRAMES_SYM||LA472_0==LAYER_SYM||(LA472_0 >= LBRACKET && LA472_0 <= LEFTTOP_SYM)||LA472_0==LESS_AND||(LA472_0 >= MEDIA_SYM && LA472_0 <= MOZ_DOCUMENT_SYM)||LA472_0==NAMESPACE_SYM||LA472_0==PAGE_SYM||(LA472_0 >= PIPE && LA472_0 <= PLUS)||(LA472_0 >= RIGHTBOTTOM_SYM && LA472_0 <= RIGHTTOP_SYM)||LA472_0==SASS_AT_ROOT||LA472_0==SASS_DEBUG||(LA472_0 >= SASS_EACH && LA472_0 <= SASS_ELSE)||(LA472_0 >= SASS_ERROR && LA472_0 <= SASS_FUNCTION)||(LA472_0 >= SASS_IF && LA472_0 <= SASS_MIXIN)||(LA472_0 >= SASS_RETURN && LA472_0 <= SEMI)||LA472_0==STAR||LA472_0==SUPPORTS_SYM||LA472_0==TILDE||(LA472_0 >= TOPCENTER_SYM && LA472_0 <= TOPRIGHT_SYM)||LA472_0==VARIABLE||LA472_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt472=1;
			}
			else if ( (LA472_0==IDENT) ) {
				int LA472_4 = input.LA(2);
				if ( (true) ) {
					alt472=1;
				}
				else if ( (((evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")||evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")"))&&synpred70_Css3())) ) {
					alt472=2;
				}
			}
			else if ( (LA472_0==SASS_CONTENT) ) {
				int LA472_39 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||((evalPredicate(isCssPreprocessorSource() && !tokenNameStartsWith("--"),"isCssPreprocessorSource() && !tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||((evalPredicate(tokenNameStartsWith("--"),"tokenNameStartsWith(\"--\")")&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt472=1;
				}
				else if ( ((synpred70_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt472=2;
				}
			}
			else if ( (LA472_0==PERCENTAGE) && (synpred70_Css3())) {
				alt472=2;
			}
			else if ( (LA472_0==RBRACE) ) {
				int LA472_45 = input.LA(2);
				if ( (synpred70_Css3()) ) {
					alt472=2;
				}
			}
			} finally {dbg.exitDecision(472);}

			switch (alt472) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:10: declarations
					{
					dbg.location(1374,10);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block10127);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:25: ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )*
					{
					dbg.location(1375,3);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1375:3: ( webkitKeyframesBlock ( ws )? )*
					try { dbg.enterSubRule(471);

					loop471:
					while (true) {
						int alt471=2;
						try { dbg.enterDecision(471, decisionCanBacktrack[471]);

						int LA471_0 = input.LA(1);
						if ( (LA471_0==IDENT||LA471_0==PERCENTAGE||LA471_0==SASS_CONTENT) ) {
							alt471=1;
						}

						} finally {dbg.exitDecision(471);}

						switch (alt471) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1375:5: webkitKeyframesBlock ( ws )?
							{
							dbg.location(1375,5);
							pushFollow(FOLLOW_webkitKeyframesBlock_in_cp_mixin_block10142);
							webkitKeyframesBlock();
							state._fsp--;
							if (state.failed) return;dbg.location(1375,26);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1375:26: ( ws )?
							int alt470=2;
							try { dbg.enterSubRule(470);
							try { dbg.enterDecision(470, decisionCanBacktrack[470]);

							int LA470_0 = input.LA(1);
							if ( (LA470_0==COMMENT||LA470_0==NL||LA470_0==WS) ) {
								alt470=1;
							}
							} finally {dbg.exitDecision(470);}

							switch (alt470) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1375:26: ws
									{
									dbg.location(1375,26);
									pushFollow(FOLLOW_ws_in_cp_mixin_block10144);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(470);}

							}
							break;

						default :
							break loop471;
						}
					}
					} finally {dbg.exitSubRule(471);}

					}
					break;

			}
			} finally {dbg.exitSubRule(472);}
			dbg.location(1376,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block10156); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1377, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1379:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1379, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1380:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1381:5: IDENT
			{
			dbg.location(1381,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name10177); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1382, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1384:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1384, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1385:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )?
			{
			dbg.location(1388,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10208);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1388,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(474);

			loop474:
			while (true) {
				int alt474=2;
				try { dbg.enterDecision(474, decisionCanBacktrack[474]);

				int LA474_0 = input.LA(1);
				if ( (LA474_0==SEMI) ) {
					int LA474_2 = input.LA(2);
					if ( ((LA474_2 >= ANGLE && LA474_2 <= AT_SIGN)||(LA474_2 >= BOTTOMCENTER_SYM && LA474_2 <= BOTTOMRIGHT_SYM)||LA474_2==CHARSET_SYM||LA474_2==COMMENT||LA474_2==COUNTER_STYLE_SYM||LA474_2==DIMENSION||LA474_2==EMS||LA474_2==EXS||(LA474_2 >= FONT_FACE_SYM && LA474_2 <= FREQ)||LA474_2==GEN||(LA474_2 >= HASH && LA474_2 <= HASH_SYMBOL)||(LA474_2 >= IDENT && LA474_2 <= IMPORT_SYM)||LA474_2==KEYFRAMES_SYM||(LA474_2 >= LBRACE && LA474_2 <= LENGTH)||(LA474_2 >= LESS_AND && LA474_2 <= LESS_JS_STRING)||LA474_2==LPAREN||(LA474_2 >= MEDIA_SYM && LA474_2 <= MOZ_DOCUMENT_SYM)||(LA474_2 >= NAMESPACE_SYM && LA474_2 <= NL)||(LA474_2 >= NOT && LA474_2 <= NUMBER)||(LA474_2 >= PAGE_SYM && LA474_2 <= PERCENTAGE_SYMBOL)||LA474_2==PLUS||(LA474_2 >= REM && LA474_2 <= RIGHTTOP_SYM)||(LA474_2 >= SASS_AT_ROOT && LA474_2 <= SASS_DEBUG)||(LA474_2 >= SASS_EACH && LA474_2 <= SASS_ELSE)||LA474_2==SASS_EXTEND||(LA474_2 >= SASS_FOR && LA474_2 <= SASS_FUNCTION)||(LA474_2 >= SASS_IF && LA474_2 <= SASS_MIXIN)||(LA474_2 >= SASS_RETURN && LA474_2 <= SASS_WHILE)||LA474_2==STRING||(LA474_2 >= TILDE && LA474_2 <= TOPRIGHT_SYM)||(LA474_2 >= URANGE && LA474_2 <= URI)||LA474_2==VARIABLE||(LA474_2 >= WEBKIT_KEYFRAMES_SYM && LA474_2 <= WS)) ) {
						alt474=1;
					}

				}
				else if ( (LA474_0==COMMA) ) {
					alt474=1;
				}

				} finally {dbg.exitDecision(474);}

				switch (alt474) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1388,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1388,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:40: ( ws )?
					int alt473=2;
					try { dbg.enterSubRule(473);
					try { dbg.enterDecision(473, decisionCanBacktrack[473]);

					int LA473_0 = input.LA(1);
					if ( (LA473_0==COMMENT||LA473_0==NL||LA473_0==WS) ) {
						alt473=1;
					}
					} finally {dbg.exitDecision(473);}

					switch (alt473) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:40: ws
							{
							dbg.location(1388,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args10220);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(473);}
					dbg.location(1388,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10223);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop474;
				}
			}
			} finally {dbg.exitSubRule(474);}
			dbg.location(1388,65);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:65: ( CP_DOTS ( ws )? )?
			int alt476=2;
			try { dbg.enterSubRule(476);
			try { dbg.enterDecision(476, decisionCanBacktrack[476]);

			int LA476_0 = input.LA(1);
			if ( (LA476_0==CP_DOTS) ) {
				alt476=1;
			}
			} finally {dbg.exitDecision(476);}

			switch (alt476) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:66: CP_DOTS ( ws )?
					{
					dbg.location(1388,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args10229); if (state.failed) return;dbg.location(1388,74);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:74: ( ws )?
					int alt475=2;
					try { dbg.enterSubRule(475);
					try { dbg.enterDecision(475, decisionCanBacktrack[475]);

					int LA475_0 = input.LA(1);
					if ( (LA475_0==COMMENT||LA475_0==NL||LA475_0==WS) ) {
						alt475=1;
					}
					} finally {dbg.exitDecision(475);}

					switch (alt475) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:74: ws
							{
							dbg.location(1388,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args10231);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(475);}

					}
					break;

			}
			} finally {dbg.exitSubRule(476);}
			dbg.location(1388,80);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:80: ( SEMI )?
			int alt477=2;
			try { dbg.enterSubRule(477);
			try { dbg.enterDecision(477, decisionCanBacktrack[477]);

			int LA477_0 = input.LA(1);
			if ( (LA477_0==SEMI) ) {
				alt477=1;
			}
			} finally {dbg.exitDecision(477);}

			switch (alt477) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1388:80: SEMI
					{
					dbg.location(1388,80);
					match(input,SEMI,FOLLOW_SEMI_in_cp_mixin_call_args10236); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(477);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1389, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1391:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1391, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1393:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1393,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1393:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt480=2;
			try { dbg.enterSubRule(480);
			try { dbg.enterDecision(480, decisionCanBacktrack[480]);

			try {
				isCyclicDecision = true;
				alt480 = dfa480.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(480);}

			switch (alt480) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1394:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1394,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg10268);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1394,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1394:21: ( ws )?
					int alt478=2;
					try { dbg.enterSubRule(478);
					try { dbg.enterDecision(478, decisionCanBacktrack[478]);

					int LA478_0 = input.LA(1);
					if ( (LA478_0==COMMENT||LA478_0==NL||LA478_0==WS) ) {
						alt478=1;
					}
					} finally {dbg.exitDecision(478);}

					switch (alt478) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1394:21: ws
							{
							dbg.location(1394,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10270);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(478);}
					dbg.location(1394,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg10273); if (state.failed) return;dbg.location(1394,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1394:31: ( ws )?
					int alt479=2;
					try { dbg.enterSubRule(479);
					try { dbg.enterDecision(479, decisionCanBacktrack[479]);

					int LA479_0 = input.LA(1);
					if ( (LA479_0==COMMENT||LA479_0==NL||LA479_0==WS) ) {
						alt479=1;
					}
					} finally {dbg.exitDecision(479);}

					switch (alt479) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1394:31: ws
							{
							dbg.location(1394,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10275);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(479);}
					dbg.location(1394,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg10278);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1395:11: cp_expression
					{
					dbg.location(1395,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg10290);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(480);}
			dbg.location(1396,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1396:7: ( ws )?
			int alt481=2;
			try { dbg.enterSubRule(481);
			try { dbg.enterDecision(481, decisionCanBacktrack[481]);

			int LA481_0 = input.LA(1);
			if ( (LA481_0==COMMENT||LA481_0==NL||LA481_0==WS) ) {
				alt481=1;
			}
			} finally {dbg.exitDecision(481);}

			switch (alt481) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1396:7: ws
					{
					dbg.location(1396,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg10298);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(481);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1397, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1400:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1400, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1401:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt489=2;
			try { dbg.enterDecision(489, decisionCanBacktrack[489]);

			int LA489_0 = input.LA(1);
			if ( (LA489_0==AT_IDENT||(LA489_0 >= BOTTOMCENTER_SYM && LA489_0 <= BOTTOMRIGHT_SYM)||LA489_0==CHARSET_SYM||LA489_0==COUNTER_STYLE_SYM||LA489_0==FONT_FACE_SYM||LA489_0==IDENT||LA489_0==IMPORT_SYM||LA489_0==KEYFRAMES_SYM||(LA489_0 >= LEFTBOTTOM_SYM && LA489_0 <= LEFTTOP_SYM)||LA489_0==MEDIA_SYM||LA489_0==MOZ_DOCUMENT_SYM||LA489_0==NAMESPACE_SYM||LA489_0==PAGE_SYM||(LA489_0 >= RIGHTBOTTOM_SYM && LA489_0 <= RIGHTTOP_SYM)||(LA489_0 >= SASS_AT_ROOT && LA489_0 <= SASS_DEBUG)||(LA489_0 >= SASS_EACH && LA489_0 <= SASS_ELSE)||LA489_0==SASS_EXTEND||(LA489_0 >= SASS_FOR && LA489_0 <= SASS_FUNCTION)||(LA489_0 >= SASS_IF && LA489_0 <= SASS_MIXIN)||(LA489_0 >= SASS_RETURN && LA489_0 <= SASS_WHILE)||(LA489_0 >= TOPCENTER_SYM && LA489_0 <= TOPRIGHT_SYM)||LA489_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt489=1;
			}
			else if ( (LA489_0==CP_DOTS||LA489_0==LESS_REST) ) {
				alt489=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 489, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(489);}

			switch (alt489) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1408,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1408,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list10345);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1408,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(483);

					loop483:
					while (true) {
						int alt483=2;
						try { dbg.enterDecision(483, decisionCanBacktrack[483]);

						try {
							isCyclicDecision = true;
							alt483 = dfa483.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(483);}

						switch (alt483) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1408,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1408,33);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:33: ( ws )?
							int alt482=2;
							try { dbg.enterSubRule(482);
							try { dbg.enterDecision(482, decisionCanBacktrack[482]);

							int LA482_0 = input.LA(1);
							if ( (LA482_0==COMMENT||LA482_0==NL||LA482_0==WS) ) {
								alt482=1;
							}
							} finally {dbg.exitDecision(482);}

							switch (alt482) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:33: ws
									{
									dbg.location(1408,33);
									pushFollow(FOLLOW_ws_in_cp_args_list10359);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(482);}
							dbg.location(1408,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list10362);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop483;
						}
					}
					} finally {dbg.exitSubRule(483);}
					dbg.location(1408,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt485=2;
					try { dbg.enterSubRule(485);
					try { dbg.enterDecision(485, decisionCanBacktrack[485]);

					int LA485_0 = input.LA(1);
					if ( (LA485_0==COMMA||LA485_0==SEMI) ) {
						alt485=1;
					}
					} finally {dbg.exitDecision(485);}

					switch (alt485) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1408,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1408,64);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:64: ( ws )?
							int alt484=2;
							try { dbg.enterSubRule(484);
							try { dbg.enterDecision(484, decisionCanBacktrack[484]);

							int LA484_0 = input.LA(1);
							if ( (LA484_0==COMMENT||LA484_0==NL||LA484_0==WS) ) {
								alt484=1;
							}
							} finally {dbg.exitDecision(484);}

							switch (alt484) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:64: ws
									{
									dbg.location(1408,64);
									pushFollow(FOLLOW_ws_in_cp_args_list10377);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(484);}

							}
							break;

					}
					} finally {dbg.exitSubRule(485);}
					dbg.location(1408,71);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt487=2;
					try { dbg.enterSubRule(487);
					try { dbg.enterDecision(487, decisionCanBacktrack[487]);

					int LA487_0 = input.LA(1);
					if ( (LA487_0==CP_DOTS||LA487_0==LESS_REST) ) {
						alt487=1;
					}
					} finally {dbg.exitDecision(487);}

					switch (alt487) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1408,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1408,95);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:95: ( ws )?
							int alt486=2;
							try { dbg.enterSubRule(486);
							try { dbg.enterDecision(486, decisionCanBacktrack[486]);

							int LA486_0 = input.LA(1);
							if ( (LA486_0==COMMENT||LA486_0==NL||LA486_0==WS) ) {
								alt486=1;
							}
							} finally {dbg.exitDecision(486);}

							switch (alt486) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1408:95: ws
									{
									dbg.location(1408,95);
									pushFollow(FOLLOW_ws_in_cp_args_list10393);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(486);}

							}
							break;

					}
					} finally {dbg.exitSubRule(487);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1410:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1410,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1410,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1410:27: ( ws )?
					int alt488=2;
					try { dbg.enterSubRule(488);
					try { dbg.enterDecision(488, decisionCanBacktrack[488]);

					int LA488_0 = input.LA(1);
					if ( (LA488_0==COMMENT||LA488_0==NL||LA488_0==WS) ) {
						alt488=1;
					}
					} finally {dbg.exitDecision(488);}

					switch (alt488) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1410:27: ws
							{
							dbg.location(1410,27);
							pushFollow(FOLLOW_ws_in_cp_args_list10418);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(488);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1411, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1414:1: cp_arg : ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT );
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1414, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1415:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT )
			int alt494=2;
			try { dbg.enterDecision(494, decisionCanBacktrack[494]);

			int LA494_0 = input.LA(1);
			if ( (LA494_0==AT_IDENT||(LA494_0 >= BOTTOMCENTER_SYM && LA494_0 <= BOTTOMRIGHT_SYM)||LA494_0==CHARSET_SYM||LA494_0==COUNTER_STYLE_SYM||LA494_0==FONT_FACE_SYM||LA494_0==IMPORT_SYM||LA494_0==KEYFRAMES_SYM||(LA494_0 >= LEFTBOTTOM_SYM && LA494_0 <= LEFTTOP_SYM)||LA494_0==MEDIA_SYM||LA494_0==MOZ_DOCUMENT_SYM||LA494_0==NAMESPACE_SYM||LA494_0==PAGE_SYM||(LA494_0 >= RIGHTBOTTOM_SYM && LA494_0 <= RIGHTTOP_SYM)||(LA494_0 >= SASS_AT_ROOT && LA494_0 <= SASS_DEBUG)||(LA494_0 >= SASS_EACH && LA494_0 <= SASS_ELSE)||LA494_0==SASS_EXTEND||(LA494_0 >= SASS_FOR && LA494_0 <= SASS_FUNCTION)||(LA494_0 >= SASS_IF && LA494_0 <= SASS_MIXIN)||(LA494_0 >= SASS_RETURN && LA494_0 <= SASS_WHILE)||(LA494_0 >= TOPCENTER_SYM && LA494_0 <= TOPRIGHT_SYM)||LA494_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt494=1;
			}
			else if ( (LA494_0==IDENT) ) {
				int LA494_2 = input.LA(2);
				if ( (LA494_2==DOT) ) {
					alt494=1;
				}
				else if ( (LA494_2==COMMA||LA494_2==CP_DOTS||LA494_2==LESS_REST||LA494_2==RPAREN||LA494_2==SEMI) ) {
					alt494=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 494, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 494, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(494);}

			switch (alt494) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
					{
					dbg.location(1416,5);
					pushFollow(FOLLOW_cp_variable_in_cp_arg10441);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1416,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:17: ( ws )?
					int alt490=2;
					try { dbg.enterSubRule(490);
					try { dbg.enterDecision(490, decisionCanBacktrack[490]);

					int LA490_0 = input.LA(1);
					if ( (LA490_0==COMMENT||LA490_0==NL||LA490_0==WS) ) {
						alt490=1;
					}
					} finally {dbg.exitDecision(490);}

					switch (alt490) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:17: ws
							{
							dbg.location(1416,17);
							pushFollow(FOLLOW_ws_in_cp_arg10443);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(490);}
					dbg.location(1416,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:21: ( COLON ( ws )? cp_expression ( ws )? )?
					int alt493=2;
					try { dbg.enterSubRule(493);
					try { dbg.enterDecision(493, decisionCanBacktrack[493]);

					int LA493_0 = input.LA(1);
					if ( (LA493_0==COLON) ) {
						alt493=1;
					}
					} finally {dbg.exitDecision(493);}

					switch (alt493) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:23: COLON ( ws )? cp_expression ( ws )?
							{
							dbg.location(1416,23);
							match(input,COLON,FOLLOW_COLON_in_cp_arg10448); if (state.failed) return;dbg.location(1416,29);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:29: ( ws )?
							int alt491=2;
							try { dbg.enterSubRule(491);
							try { dbg.enterDecision(491, decisionCanBacktrack[491]);

							int LA491_0 = input.LA(1);
							if ( (LA491_0==COMMENT||LA491_0==NL||LA491_0==WS) ) {
								alt491=1;
							}
							} finally {dbg.exitDecision(491);}

							switch (alt491) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:29: ws
									{
									dbg.location(1416,29);
									pushFollow(FOLLOW_ws_in_cp_arg10450);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(491);}
							dbg.location(1416,33);
							pushFollow(FOLLOW_cp_expression_in_cp_arg10453);
							cp_expression();
							state._fsp--;
							if (state.failed) return;dbg.location(1416,47);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:47: ( ws )?
							int alt492=2;
							try { dbg.enterSubRule(492);
							try { dbg.enterDecision(492, decisionCanBacktrack[492]);

							int LA492_0 = input.LA(1);
							if ( (LA492_0==COMMENT||LA492_0==NL||LA492_0==WS) ) {
								alt492=1;
							}
							} finally {dbg.exitDecision(492);}

							switch (alt492) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1416:47: ws
									{
									dbg.location(1416,47);
									pushFollow(FOLLOW_ws_in_cp_arg10455);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(492);}

							}
							break;

					}
					} finally {dbg.exitSubRule(493);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1417:7: {...}? IDENT
					{
					dbg.location(1417,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_arg", "isLessSource()");
					}dbg.location(1417,25);
					match(input,IDENT,FOLLOW_IDENT_in_cp_arg10468); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1418, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1422:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1422, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1423:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1424,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded10491);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1424,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:15: ( ws )?
			int alt495=2;
			try { dbg.enterSubRule(495);
			try { dbg.enterDecision(495, decisionCanBacktrack[495]);

			int LA495_0 = input.LA(1);
			if ( (LA495_0==COMMENT||LA495_0==NL||LA495_0==WS) ) {
				alt495=1;
			}
			} finally {dbg.exitDecision(495);}

			switch (alt495) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:15: ws
					{
					dbg.location(1424,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded10493);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(495);}
			dbg.location(1424,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded10496);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1424,34);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(499);

			loop499:
			while (true) {
				int alt499=2;
				try { dbg.enterDecision(499, decisionCanBacktrack[499]);

				try {
					isCyclicDecision = true;
					alt499 = dfa499.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(499);}

				switch (alt499) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1424,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:35: ( ws )?
					int alt496=2;
					try { dbg.enterSubRule(496);
					try { dbg.enterDecision(496, decisionCanBacktrack[496]);

					int LA496_0 = input.LA(1);
					if ( (LA496_0==COMMENT||LA496_0==NL||LA496_0==WS) ) {
						alt496=1;
					}
					} finally {dbg.exitDecision(496);}

					switch (alt496) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:35: ws
							{
							dbg.location(1424,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded10499);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(496);}
					dbg.location(1424,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:39: ( COMMA | key_and )
					int alt497=2;
					try { dbg.enterSubRule(497);
					try { dbg.enterDecision(497, decisionCanBacktrack[497]);

					int LA497_0 = input.LA(1);
					if ( (LA497_0==COMMA) ) {
						alt497=1;
					}
					else if ( (LA497_0==IDENT) ) {
						alt497=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 497, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(497);}

					switch (alt497) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:40: COMMA
							{
							dbg.location(1424,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded10503); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:48: key_and
							{
							dbg.location(1424,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded10507);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(497);}
					dbg.location(1424,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:57: ( ws )?
					int alt498=2;
					try { dbg.enterSubRule(498);
					try { dbg.enterDecision(498, decisionCanBacktrack[498]);

					int LA498_0 = input.LA(1);
					if ( (LA498_0==COMMENT||LA498_0==NL||LA498_0==WS) ) {
						alt498=1;
					}
					} finally {dbg.exitDecision(498);}

					switch (alt498) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1424:57: ws
							{
							dbg.location(1424,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded10510);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(498);}
					dbg.location(1424,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded10513);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop499;
				}
			}
			} finally {dbg.exitSubRule(499);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1425, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1429, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1430:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1431:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1431,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1431:5: ( NOT ( ws )? )?
			int alt501=2;
			try { dbg.enterSubRule(501);
			try { dbg.enterDecision(501, decisionCanBacktrack[501]);

			int LA501_0 = input.LA(1);
			if ( (LA501_0==NOT) ) {
				alt501=1;
			}
			} finally {dbg.exitDecision(501);}

			switch (alt501) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1431:6: NOT ( ws )?
					{
					dbg.location(1431,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition10539); if (state.failed) return;dbg.location(1431,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1431:10: ( ws )?
					int alt500=2;
					try { dbg.enterSubRule(500);
					try { dbg.enterDecision(500, decisionCanBacktrack[500]);

					int LA500_0 = input.LA(1);
					if ( (LA500_0==COMMENT||LA500_0==NL||LA500_0==WS) ) {
						alt500=1;
					}
					} finally {dbg.exitDecision(500);}

					switch (alt500) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1431:10: ws
							{
							dbg.location(1431,10);
							pushFollow(FOLLOW_ws_in_less_condition10541);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(500);}

					}
					break;

			}
			} finally {dbg.exitSubRule(501);}
			dbg.location(1432,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition10550); if (state.failed) return;dbg.location(1432,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1432:12: ( ws )?
			int alt502=2;
			try { dbg.enterSubRule(502);
			try { dbg.enterDecision(502, decisionCanBacktrack[502]);

			int LA502_0 = input.LA(1);
			if ( (LA502_0==COMMENT||LA502_0==NL||LA502_0==WS) ) {
				alt502=1;
			}
			} finally {dbg.exitDecision(502);}

			switch (alt502) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1432:12: ws
					{
					dbg.location(1432,12);
					pushFollow(FOLLOW_ws_in_less_condition10552);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(502);}
			dbg.location(1433,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1433:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1434,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:14: ( cp_variable | less_function_in_condition )
			int alt503=2;
			try { dbg.enterSubRule(503);
			try { dbg.enterDecision(503, decisionCanBacktrack[503]);

			int LA503_0 = input.LA(1);
			if ( (LA503_0==AT_IDENT||(LA503_0 >= BOTTOMCENTER_SYM && LA503_0 <= BOTTOMRIGHT_SYM)||LA503_0==CHARSET_SYM||LA503_0==COUNTER_STYLE_SYM||LA503_0==FONT_FACE_SYM||LA503_0==IMPORT_SYM||LA503_0==KEYFRAMES_SYM||(LA503_0 >= LEFTBOTTOM_SYM && LA503_0 <= LEFTTOP_SYM)||LA503_0==MEDIA_SYM||LA503_0==MOZ_DOCUMENT_SYM||LA503_0==NAMESPACE_SYM||LA503_0==PAGE_SYM||(LA503_0 >= RIGHTBOTTOM_SYM && LA503_0 <= RIGHTTOP_SYM)||(LA503_0 >= SASS_AT_ROOT && LA503_0 <= SASS_DEBUG)||(LA503_0 >= SASS_EACH && LA503_0 <= SASS_ELSE)||LA503_0==SASS_EXTEND||(LA503_0 >= SASS_FOR && LA503_0 <= SASS_FUNCTION)||(LA503_0 >= SASS_IF && LA503_0 <= SASS_MIXIN)||(LA503_0 >= SASS_RETURN && LA503_0 <= SASS_WHILE)||(LA503_0 >= TOPCENTER_SYM && LA503_0 <= TOPRIGHT_SYM)||LA503_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt503=1;
			}
			else if ( (LA503_0==IDENT) ) {
				int LA503_2 = input.LA(2);
				if ( (LA503_2==DOT) ) {
					alt503=1;
				}
				else if ( (LA503_2==COMMENT||LA503_2==LPAREN||LA503_2==NL||LA503_2==WS) ) {
					alt503=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 503, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 503, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(503);}

			switch (alt503) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:15: cp_variable
					{
					dbg.location(1434,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition10579);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:29: less_function_in_condition
					{
					dbg.location(1434,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition10583);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(503);}
			dbg.location(1434,57);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:57: ( ws )?
			int alt504=2;
			try { dbg.enterSubRule(504);
			try { dbg.enterDecision(504, decisionCanBacktrack[504]);

			int LA504_0 = input.LA(1);
			if ( (LA504_0==COMMENT||LA504_0==NL||LA504_0==WS) ) {
				alt504=1;
			}
			} finally {dbg.exitDecision(504);}

			switch (alt504) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:57: ws
					{
					dbg.location(1434,57);
					pushFollow(FOLLOW_ws_in_less_condition10586);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(504);}
			dbg.location(1434,61);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt506=2;
			try { dbg.enterSubRule(506);
			try { dbg.enterDecision(506, decisionCanBacktrack[506]);

			int LA506_0 = input.LA(1);
			if ( ((LA506_0 >= GREATER && LA506_0 <= GREATER_OR_EQ)||LA506_0==LESS||LA506_0==LESS_OR_EQ||LA506_0==OPEQ) ) {
				alt506=1;
			}
			} finally {dbg.exitDecision(506);}

			switch (alt506) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1434,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition10590);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1434,86);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:86: ( ws )?
					int alt505=2;
					try { dbg.enterSubRule(505);
					try { dbg.enterDecision(505, decisionCanBacktrack[505]);

					int LA505_0 = input.LA(1);
					if ( (LA505_0==COMMENT||LA505_0==NL||LA505_0==WS) ) {
						alt505=1;
					}
					} finally {dbg.exitDecision(505);}

					switch (alt505) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1434:86: ws
							{
							dbg.location(1434,86);
							pushFollow(FOLLOW_ws_in_less_condition10592);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(505);}
					dbg.location(1434,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition10595);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(506);}

			}
			dbg.location(1436,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition10613); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1437, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1440:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1440, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1441:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1442,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition10635);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1442,18);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:18: ( ws )?
			int alt507=2;
			try { dbg.enterSubRule(507);
			try { dbg.enterDecision(507, decisionCanBacktrack[507]);

			int LA507_0 = input.LA(1);
			if ( (LA507_0==COMMENT||LA507_0==NL||LA507_0==WS) ) {
				alt507=1;
			}
			} finally {dbg.exitDecision(507);}

			switch (alt507) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:18: ws
					{
					dbg.location(1442,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10637);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(507);}
			dbg.location(1442,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition10640); if (state.failed) return;dbg.location(1442,29);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:29: ( ws )?
			int alt508=2;
			try { dbg.enterSubRule(508);
			try { dbg.enterDecision(508, decisionCanBacktrack[508]);

			int LA508_0 = input.LA(1);
			if ( (LA508_0==COMMENT||LA508_0==NL||LA508_0==WS) ) {
				alt508=1;
			}
			} finally {dbg.exitDecision(508);}

			switch (alt508) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:29: ws
					{
					dbg.location(1442,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10642);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(508);}
			dbg.location(1442,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition10645);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1442,45);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:45: ( ws )?
			int alt509=2;
			try { dbg.enterSubRule(509);
			try { dbg.enterDecision(509, decisionCanBacktrack[509]);

			int LA509_0 = input.LA(1);
			if ( (LA509_0==COMMENT||LA509_0==NL||LA509_0==WS) ) {
				alt509=1;
			}
			} finally {dbg.exitDecision(509);}

			switch (alt509) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1442:45: ws
					{
					dbg.location(1442,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition10647);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(509);}
			dbg.location(1442,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition10650); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1443, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1446:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1446, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1447:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1448:5: IDENT
			{
			dbg.location(1448,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name10672); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1449, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1451:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1451, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1452:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1452,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1454, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation_exp"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1456:1: less_selector_interpolation_exp : ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void less_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1456, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1456:33: ( ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:5: ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1457,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:5: ( IDENT | MINUS )?
			int alt510=2;
			try { dbg.enterSubRule(510);
			try { dbg.enterDecision(510, decisionCanBacktrack[510]);

			int LA510_0 = input.LA(1);
			if ( (LA510_0==IDENT||LA510_0==MINUS) ) {
				alt510=1;
			}
			} finally {dbg.exitDecision(510);}

			switch (alt510) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1457,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(510);}
			dbg.location(1457,22);
			pushFollow(FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp10735);
			less_selector_interpolation();
			state._fsp--;
			if (state.failed) return;dbg.location(1457,50);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:50: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt512=3;
			try { dbg.enterSubRule(512);
			try { dbg.enterDecision(512, decisionCanBacktrack[512]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA512_1 = input.LA(2);
					if ( (LA512_1==AT_SIGN) ) {
						alt512=1;
					}
					else if ( ((LA512_1 >= COLON && LA512_1 <= COMMENT)||(LA512_1 >= DCOLON && LA512_1 <= DOT)||LA512_1==GREATER||(LA512_1 >= HASH && LA512_1 <= HASH_SYMBOL)||LA512_1==IDENT||(LA512_1 >= LBRACE && LA512_1 <= LBRACKET)||LA512_1==LENGTH||LA512_1==LESS_AND||LA512_1==MINUS||LA512_1==NL||LA512_1==PLUS||LA512_1==RBRACE||LA512_1==RPAREN||LA512_1==SASS_EXTEND_ONLY_SELECTOR||LA512_1==SEMI||LA512_1==TILDE||LA512_1==WS) ) {
						alt512=2;
					}
					}
					break;
				case AT_SIGN:
					{
					alt512=1;
					}
					break;
				case DIMENSION:
					{
					int LA512_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt512=2;
					}
					}
					break;
				case LENGTH:
					{
					alt512=2;
					}
					break;
			}
			} finally {dbg.exitDecision(512);}

			switch (alt512) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:51: less_selector_interpolation_exp
					{
					dbg.location(1457,51);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp10738);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1457,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1457:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt511=0;
					try { dbg.enterSubRule(511);

					loop511:
					while (true) {
						int alt511=2;
						try { dbg.enterDecision(511, decisionCanBacktrack[511]);

						int LA511_0 = input.LA(1);
						if ( (LA511_0==DIMENSION) ) {
							int LA511_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt511=1;
							}

						}
						else if ( (LA511_0==IDENT||LA511_0==LENGTH||LA511_0==MINUS) ) {
							alt511=1;
						}

						} finally {dbg.exitDecision(511);}

						switch (alt511) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1457,85);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt511 >= 1 ) break loop511;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(511, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt511++;
					}
					} finally {dbg.exitSubRule(511);}

					}
					break;

			}
			} finally {dbg.exitSubRule(512);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1458, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation_exp"



	// $ANTLR start "less_selector_interpolation"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1460:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1460, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1461:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1462,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation10781); if (state.failed) return;dbg.location(1462,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation10783); if (state.failed) return;dbg.location(1462,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:20: ( ws )?
			int alt513=2;
			try { dbg.enterSubRule(513);
			try { dbg.enterDecision(513, decisionCanBacktrack[513]);

			int LA513_0 = input.LA(1);
			if ( (LA513_0==COMMENT||LA513_0==NL||LA513_0==WS) ) {
				alt513=1;
			}
			} finally {dbg.exitDecision(513);}

			switch (alt513) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:20: ws
					{
					dbg.location(1462,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation10785);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(513);}
			dbg.location(1462,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation10788); if (state.failed) return;dbg.location(1462,30);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:30: ( ws )?
			int alt514=2;
			try { dbg.enterSubRule(514);
			try { dbg.enterDecision(514, decisionCanBacktrack[514]);

			int LA514_0 = input.LA(1);
			if ( (LA514_0==COMMENT||LA514_0==NL||LA514_0==WS) ) {
				alt514=1;
			}
			} finally {dbg.exitDecision(514);}

			switch (alt514) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1462:30: ws
					{
					dbg.location(1462,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation10790);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(514);}
			dbg.location(1462,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation10793); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1463, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1466:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1466, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1466:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1467,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:5: ( IDENT | MINUS )?
			int alt515=2;
			try { dbg.enterSubRule(515);
			try { dbg.enterDecision(515, decisionCanBacktrack[515]);

			int LA515_0 = input.LA(1);
			if ( (LA515_0==IDENT||LA515_0==MINUS) ) {
				alt515=1;
			}
			} finally {dbg.exitDecision(515);}

			switch (alt515) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1467,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(515);}
			dbg.location(1467,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp10820);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1467,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:56: ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt517=3;
			try { dbg.enterSubRule(517);
			try { dbg.enterDecision(517, decisionCanBacktrack[517]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA517_1 = input.LA(2);
					if ( (LA517_1==HASH_SYMBOL) ) {
						int LA517_6 = input.LA(3);
						if ( (LA517_6==LBRACE) ) {
							alt517=1;
						}
						else if ( (LA517_6==AT_SIGN||LA517_6==IDENT||LA517_6==MINUS||LA517_6==NAME) ) {
							alt517=2;
						}
					}
					else if ( ((LA517_1 >= COLON && LA517_1 <= COMMENT)||(LA517_1 >= DCOLON && LA517_1 <= DOT)||LA517_1==GREATER||LA517_1==HASH||LA517_1==IDENT||(LA517_1 >= LBRACE && LA517_1 <= LBRACKET)||LA517_1==LENGTH||LA517_1==LESS_AND||LA517_1==MINUS||LA517_1==NL||LA517_1==PLUS||LA517_1==RBRACE||LA517_1==RPAREN||LA517_1==SASS_EXTEND_ONLY_SELECTOR||LA517_1==SEMI||LA517_1==TILDE||LA517_1==WS) ) {
						alt517=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA517_2 = input.LA(2);
					if ( (LA517_2==LBRACE) ) {
						alt517=1;
					}
					}
					break;
				case DIMENSION:
					{
					int LA517_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt517=2;
					}
					}
					break;
				case LENGTH:
					{
					alt517=2;
					}
					break;
			}
			} finally {dbg.exitDecision(517);}

			switch (alt517) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:57: sass_selector_interpolation_exp
					{
					dbg.location(1467,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp10823);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1467,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1467:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt516=0;
					try { dbg.enterSubRule(516);

					loop516:
					while (true) {
						int alt516=2;
						try { dbg.enterDecision(516, decisionCanBacktrack[516]);

						int LA516_0 = input.LA(1);
						if ( (LA516_0==DIMENSION) ) {
							int LA516_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt516=1;
							}

						}
						else if ( (LA516_0==IDENT||LA516_0==LENGTH||LA516_0==MINUS) ) {
							alt516=1;
						}

						} finally {dbg.exitDecision(516);}

						switch (alt516) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1467,91);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt516 >= 1 ) break loop516;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(516, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt516++;
					}
					} finally {dbg.exitSubRule(516);}

					}
					break;

			}
			} finally {dbg.exitSubRule(517);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1468, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1470:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1470, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1471:5: ( HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1472:9: HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE
			{
			dbg.location(1472,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var10870); if (state.failed) return;dbg.location(1472,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var10872); if (state.failed) return;dbg.location(1472,28);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1472:28: ( WS )?
			int alt518=2;
			try { dbg.enterSubRule(518);
			try { dbg.enterDecision(518, decisionCanBacktrack[518]);

			int LA518_0 = input.LA(1);
			if ( (LA518_0==WS) ) {
				alt518=1;
			}
			} finally {dbg.exitDecision(518);}

			switch (alt518) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1472:28: WS
					{
					dbg.location(1472,28);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var10874); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(518);}
			dbg.location(1472,32);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var10877);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1472,46);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1472:46: ( WS )?
			int alt519=2;
			try { dbg.enterSubRule(519);
			try { dbg.enterDecision(519, decisionCanBacktrack[519]);

			int LA519_0 = input.LA(1);
			if ( (LA519_0==WS) ) {
				alt519=1;
			}
			} finally {dbg.exitDecision(519);}

			switch (alt519) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1472:46: WS
					{
					dbg.location(1472,46);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var10879); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(519);}
			dbg.location(1472,50);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var10882); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1473, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1493:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1493, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1494:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1495,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties10922);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1495,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:14: ( ws )?
			int alt520=2;
			try { dbg.enterSubRule(520);
			try { dbg.enterDecision(520, decisionCanBacktrack[520]);

			int LA520_0 = input.LA(1);
			if ( (LA520_0==COMMENT||LA520_0==NL||LA520_0==WS) ) {
				alt520=1;
			}
			} finally {dbg.exitDecision(520);}

			switch (alt520) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:14: ws
					{
					dbg.location(1495,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties10924);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(520);}
			dbg.location(1495,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties10927); if (state.failed) return;dbg.location(1495,24);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:24: ( ws )?
			int alt521=2;
			try { dbg.enterSubRule(521);
			try { dbg.enterDecision(521, decisionCanBacktrack[521]);

			int LA521_0 = input.LA(1);
			if ( (LA521_0==COMMENT||LA521_0==NL||LA521_0==WS) ) {
				alt521=1;
			}
			} finally {dbg.exitDecision(521);}

			switch (alt521) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:24: ws
					{
					dbg.location(1495,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties10929);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(521);}
			dbg.location(1495,28);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:28: ( propertyValue ( ws )? )?
			int alt523=2;
			try { dbg.enterSubRule(523);
			try { dbg.enterDecision(523, decisionCanBacktrack[523]);

			int LA523_0 = input.LA(1);
			if ( ((LA523_0 >= ANGLE && LA523_0 <= AT_SIGN)||(LA523_0 >= BOTTOMCENTER_SYM && LA523_0 <= BOTTOMRIGHT_SYM)||LA523_0==CHARSET_SYM||LA523_0==COUNTER_STYLE_SYM||LA523_0==DIMENSION||LA523_0==EMS||LA523_0==EXS||(LA523_0 >= FONT_FACE_SYM && LA523_0 <= FREQ)||LA523_0==GEN||(LA523_0 >= HASH && LA523_0 <= HASH_SYMBOL)||LA523_0==IDENT||LA523_0==IMPORT_SYM||LA523_0==KEYFRAMES_SYM||(LA523_0 >= LBRACKET && LA523_0 <= LENGTH)||(LA523_0 >= LESS_AND && LA523_0 <= LESS_JS_STRING)||(LA523_0 >= MEDIA_SYM && LA523_0 <= MOZ_DOCUMENT_SYM)||LA523_0==NAMESPACE_SYM||LA523_0==NUMBER||(LA523_0 >= PAGE_SYM && LA523_0 <= PERCENTAGE_SYMBOL)||LA523_0==PLUS||(LA523_0 >= REM && LA523_0 <= RIGHTTOP_SYM)||(LA523_0 >= SASS_AT_ROOT && LA523_0 <= SASS_DEBUG)||(LA523_0 >= SASS_EACH && LA523_0 <= SASS_ELSE)||LA523_0==SASS_EXTEND||(LA523_0 >= SASS_FOR && LA523_0 <= SASS_FUNCTION)||(LA523_0 >= SASS_IF && LA523_0 <= SASS_MIXIN)||(LA523_0 >= SASS_RETURN && LA523_0 <= SASS_WHILE)||LA523_0==STRING||(LA523_0 >= TILDE && LA523_0 <= TOPRIGHT_SYM)||(LA523_0 >= URANGE && LA523_0 <= URI)||LA523_0==VARIABLE||LA523_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt523=1;
			}
			} finally {dbg.exitDecision(523);}

			switch (alt523) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:29: propertyValue ( ws )?
					{
					dbg.location(1495,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties10933);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1495,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:43: ( ws )?
					int alt522=2;
					try { dbg.enterSubRule(522);
					try { dbg.enterDecision(522, decisionCanBacktrack[522]);

					int LA522_0 = input.LA(1);
					if ( (LA522_0==COMMENT||LA522_0==NL||LA522_0==WS) ) {
						alt522=1;
					}
					} finally {dbg.exitDecision(522);}

					switch (alt522) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:43: ws
							{
							dbg.location(1495,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties10935);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(522);}

					}
					break;

			}
			} finally {dbg.exitSubRule(523);}
			dbg.location(1495,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties10940); if (state.failed) return;dbg.location(1495,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:56: ( ws )?
			int alt524=2;
			try { dbg.enterSubRule(524);
			try { dbg.enterDecision(524, decisionCanBacktrack[524]);

			int LA524_0 = input.LA(1);
			if ( (LA524_0==COMMENT||LA524_0==NL||LA524_0==WS) ) {
				alt524=1;
			}
			} finally {dbg.exitDecision(524);}

			switch (alt524) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:56: ws
					{
					dbg.location(1495,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties10942);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(524);}
			dbg.location(1495,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties10945);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1495,73);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:73: ( declarations )?
			int alt525=2;
			try { dbg.enterSubRule(525);
			try { dbg.enterDecision(525, decisionCanBacktrack[525]);

			int LA525_0 = input.LA(1);
			if ( ((LA525_0 >= AT_IDENT && LA525_0 <= AT_SIGN)||(LA525_0 >= BOTTOMCENTER_SYM && LA525_0 <= BOTTOMRIGHT_SYM)||(LA525_0 >= CHARSET_SYM && LA525_0 <= COLON)||LA525_0==CONTAINER_SYM||LA525_0==COUNTER_STYLE_SYM||(LA525_0 >= DCOLON && LA525_0 <= DOT)||LA525_0==FONT_FACE_SYM||(LA525_0 >= GEN && LA525_0 <= GREATER)||(LA525_0 >= HASH && LA525_0 <= HASH_SYMBOL)||LA525_0==IDENT||LA525_0==IMPORT_SYM||LA525_0==KEYFRAMES_SYM||LA525_0==LAYER_SYM||(LA525_0 >= LBRACKET && LA525_0 <= LEFTTOP_SYM)||LA525_0==LESS_AND||(LA525_0 >= MEDIA_SYM && LA525_0 <= MOZ_DOCUMENT_SYM)||LA525_0==NAMESPACE_SYM||LA525_0==PAGE_SYM||(LA525_0 >= PIPE && LA525_0 <= PLUS)||(LA525_0 >= RIGHTBOTTOM_SYM && LA525_0 <= RIGHTTOP_SYM)||(LA525_0 >= SASS_AT_ROOT && LA525_0 <= SASS_DEBUG)||(LA525_0 >= SASS_EACH && LA525_0 <= SASS_ELSE)||(LA525_0 >= SASS_ERROR && LA525_0 <= SASS_FUNCTION)||(LA525_0 >= SASS_IF && LA525_0 <= SASS_MIXIN)||(LA525_0 >= SASS_RETURN && LA525_0 <= SEMI)||LA525_0==STAR||LA525_0==SUPPORTS_SYM||LA525_0==TILDE||(LA525_0 >= TOPCENTER_SYM && LA525_0 <= TOPRIGHT_SYM)||LA525_0==VARIABLE||LA525_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt525=1;
			}
			} finally {dbg.exitDecision(525);}

			switch (alt525) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1495:73: declarations
					{
					dbg.location(1495,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties10947);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(525);}
			dbg.location(1495,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties10950); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1496, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1498:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1498, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1499:5: ( SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:5: SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )?
			{
			dbg.location(1500,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend10971); if (state.failed) return;dbg.location(1500,17);
			pushFollow(FOLLOW_ws_in_sass_extend10973);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1500,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend10975);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1500,43);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*
			try { dbg.enterSubRule(528);

			loop528:
			while (true) {
				int alt528=2;
				try { dbg.enterDecision(528, decisionCanBacktrack[528]);

				try {
					isCyclicDecision = true;
					alt528 = dfa528.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(528);}

				switch (alt528) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:44: ( ws )? COMMA ( ws )? simpleSelectorSequence
					{
					dbg.location(1500,44);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:44: ( ws )?
					int alt526=2;
					try { dbg.enterSubRule(526);
					try { dbg.enterDecision(526, decisionCanBacktrack[526]);

					int LA526_0 = input.LA(1);
					if ( (LA526_0==COMMENT||LA526_0==NL||LA526_0==WS) ) {
						alt526=1;
					}
					} finally {dbg.exitDecision(526);}

					switch (alt526) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:44: ws
							{
							dbg.location(1500,44);
							pushFollow(FOLLOW_ws_in_sass_extend10978);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(526);}
					dbg.location(1500,48);
					match(input,COMMA,FOLLOW_COMMA_in_sass_extend10981); if (state.failed) return;dbg.location(1500,54);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:54: ( ws )?
					int alt527=2;
					try { dbg.enterSubRule(527);
					try { dbg.enterDecision(527, decisionCanBacktrack[527]);

					int LA527_0 = input.LA(1);
					if ( (LA527_0==COMMENT||LA527_0==NL||LA527_0==WS) ) {
						alt527=1;
					}
					} finally {dbg.exitDecision(527);}

					switch (alt527) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:54: ws
							{
							dbg.location(1500,54);
							pushFollow(FOLLOW_ws_in_sass_extend10983);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(527);}
					dbg.location(1500,58);
					pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend10986);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop528;
				}
			}
			} finally {dbg.exitSubRule(528);}
			dbg.location(1500,83);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:83: ( ws SASS_OPTIONAL )?
			int alt529=2;
			try { dbg.enterSubRule(529);
			try { dbg.enterDecision(529, decisionCanBacktrack[529]);

			try {
				isCyclicDecision = true;
				alt529 = dfa529.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(529);}

			switch (alt529) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1500:84: ws SASS_OPTIONAL
					{
					dbg.location(1500,84);
					pushFollow(FOLLOW_ws_in_sass_extend10991);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1500,87);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend10993); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(529);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1501, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1503:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1503, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1504:5: ( SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1505:5: SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )?
			{
			dbg.location(1505,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector11016); if (state.failed) return;dbg.location(1505,31);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1505:31: ( sass_selector_interpolation_exp )?
			int alt530=2;
			try { dbg.enterSubRule(530);
			try { dbg.enterDecision(530, decisionCanBacktrack[530]);

			int LA530_0 = input.LA(1);
			if ( (LA530_0==IDENT||LA530_0==MINUS) ) {
				alt530=1;
			}
			else if ( (LA530_0==HASH_SYMBOL) ) {
				int LA530_2 = input.LA(2);
				if ( (LA530_2==LBRACE) ) {
					alt530=1;
				}
			}
			} finally {dbg.exitDecision(530);}

			switch (alt530) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1505:31: sass_selector_interpolation_exp
					{
					dbg.location(1505,31);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector11018);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(530);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1506, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1508:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1508, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1509:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1510:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1510,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1510,32);
			pushFollow(FOLLOW_ws_in_sass_debug11050);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1510,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug11052);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1511, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_error"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1513:1: sass_error : SASS_ERROR ws STRING ;
	public final void sass_error() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_error");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1513, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1514:5: ( SASS_ERROR ws STRING )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1515:5: SASS_ERROR ws STRING
			{
			dbg.location(1515,5);
			match(input,SASS_ERROR,FOLLOW_SASS_ERROR_in_sass_error11073); if (state.failed) return;dbg.location(1515,16);
			pushFollow(FOLLOW_ws_in_sass_error11075);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1515,19);
			match(input,STRING,FOLLOW_STRING_in_sass_error11077); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1516, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_error");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_error"



	// $ANTLR start "sass_control"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1518:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1518, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1519:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt531=4;
			try { dbg.enterDecision(531, decisionCanBacktrack[531]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt531=1;
				}
				break;
			case SASS_FOR:
				{
				alt531=2;
				}
				break;
			case SASS_EACH:
				{
				alt531=3;
				}
				break;
			case SASS_WHILE:
				{
				alt531=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 531, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(531);}

			switch (alt531) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:5: sass_if
					{
					dbg.location(1520,5);
					pushFollow(FOLLOW_sass_if_in_sass_control11098);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:15: sass_for
					{
					dbg.location(1520,15);
					pushFollow(FOLLOW_sass_for_in_sass_control11102);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:26: sass_each
					{
					dbg.location(1520,26);
					pushFollow(FOLLOW_sass_each_in_sass_control11106);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1520:38: sass_while
					{
					dbg.location(1520,38);
					pushFollow(FOLLOW_sass_while_in_sass_control11110);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1521, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1523:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1523, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1524:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1525,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if11131); if (state.failed) return;dbg.location(1525,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:13: ( ws )?
			int alt532=2;
			try { dbg.enterSubRule(532);
			try { dbg.enterDecision(532, decisionCanBacktrack[532]);

			int LA532_0 = input.LA(1);
			if ( (LA532_0==COMMENT||LA532_0==NL||LA532_0==WS) ) {
				alt532=1;
			}
			} finally {dbg.exitDecision(532);}

			switch (alt532) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:13: ws
					{
					dbg.location(1525,13);
					pushFollow(FOLLOW_ws_in_sass_if11133);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(532);}
			dbg.location(1525,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if11136);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1525,41);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:41: ( ws )?
			int alt533=2;
			try { dbg.enterSubRule(533);
			try { dbg.enterDecision(533, decisionCanBacktrack[533]);

			int LA533_0 = input.LA(1);
			if ( (LA533_0==COMMENT||LA533_0==NL||LA533_0==WS) ) {
				alt533=1;
			}
			} finally {dbg.exitDecision(533);}

			switch (alt533) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:41: ws
					{
					dbg.location(1525,41);
					pushFollow(FOLLOW_ws_in_sass_if11138);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(533);}
			dbg.location(1525,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if11141);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1525,64);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:64: ( ( ws )? sass_else )?
			int alt535=2;
			try { dbg.enterSubRule(535);
			try { dbg.enterDecision(535, decisionCanBacktrack[535]);

			try {
				isCyclicDecision = true;
				alt535 = dfa535.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(535);}

			switch (alt535) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:65: ( ws )? sass_else
					{
					dbg.location(1525,65);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:65: ( ws )?
					int alt534=2;
					try { dbg.enterSubRule(534);
					try { dbg.enterDecision(534, decisionCanBacktrack[534]);

					int LA534_0 = input.LA(1);
					if ( (LA534_0==COMMENT||LA534_0==NL||LA534_0==WS) ) {
						alt534=1;
					}
					} finally {dbg.exitDecision(534);}

					switch (alt534) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1525:65: ws
							{
							dbg.location(1525,65);
							pushFollow(FOLLOW_ws_in_sass_if11144);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(534);}
					dbg.location(1525,69);
					pushFollow(FOLLOW_sass_else_in_sass_if11147);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(535);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1526, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1528:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1528, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1529:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt543=2;
			try { dbg.enterDecision(543, decisionCanBacktrack[543]);

			try {
				isCyclicDecision = true;
				alt543 = dfa543.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(543);}

			switch (alt543) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1530:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1530,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else11170); if (state.failed) return;dbg.location(1530,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1530:15: ( ws )?
					int alt536=2;
					try { dbg.enterSubRule(536);
					try { dbg.enterDecision(536, decisionCanBacktrack[536]);

					int LA536_0 = input.LA(1);
					if ( (LA536_0==COMMENT||LA536_0==NL||LA536_0==WS) ) {
						alt536=1;
					}
					} finally {dbg.exitDecision(536);}

					switch (alt536) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1530:15: ws
							{
							dbg.location(1530,15);
							pushFollow(FOLLOW_ws_in_sass_else11172);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(536);}
					dbg.location(1530,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else11175);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1532,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt538=2;
					try { dbg.enterSubRule(538);
					try { dbg.enterDecision(538, decisionCanBacktrack[538]);

					int LA538_0 = input.LA(1);
					if ( (LA538_0==SASS_ELSE) ) {
						alt538=1;
					}
					else if ( (LA538_0==SASS_ELSEIF) ) {
						alt538=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 538, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(538);}

					switch (alt538) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1532,6);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1532,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else11189); if (state.failed) return;dbg.location(1532,17);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:17: ( ws )?
							int alt537=2;
							try { dbg.enterSubRule(537);
							try { dbg.enterDecision(537, decisionCanBacktrack[537]);

							int LA537_0 = input.LA(1);
							if ( (LA537_0==COMMENT||LA537_0==NL||LA537_0==WS) ) {
								alt537=1;
							}
							} finally {dbg.exitDecision(537);}

							switch (alt537) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:17: ws
									{
									dbg.location(1532,17);
									pushFollow(FOLLOW_ws_in_sass_else11191);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(537);}
							dbg.location(1532,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1532,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else11196); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:64: SASS_ELSEIF
							{
							dbg.location(1532,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else11203); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(538);}
					dbg.location(1532,77);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:77: ( ws )?
					int alt539=2;
					try { dbg.enterSubRule(539);
					try { dbg.enterDecision(539, decisionCanBacktrack[539]);

					int LA539_0 = input.LA(1);
					if ( (LA539_0==COMMENT||LA539_0==NL||LA539_0==WS) ) {
						alt539=1;
					}
					} finally {dbg.exitDecision(539);}

					switch (alt539) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:77: ws
							{
							dbg.location(1532,77);
							pushFollow(FOLLOW_ws_in_sass_else11206);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(539);}
					dbg.location(1532,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else11209);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1532,105);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:105: ( ws )?
					int alt540=2;
					try { dbg.enterSubRule(540);
					try { dbg.enterDecision(540, decisionCanBacktrack[540]);

					int LA540_0 = input.LA(1);
					if ( (LA540_0==COMMENT||LA540_0==NL||LA540_0==WS) ) {
						alt540=1;
					}
					} finally {dbg.exitDecision(540);}

					switch (alt540) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:105: ws
							{
							dbg.location(1532,105);
							pushFollow(FOLLOW_ws_in_sass_else11211);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(540);}
					dbg.location(1532,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else11214);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1532,128);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:128: ( ( ws )? sass_else )?
					int alt542=2;
					try { dbg.enterSubRule(542);
					try { dbg.enterDecision(542, decisionCanBacktrack[542]);

					try {
						isCyclicDecision = true;
						alt542 = dfa542.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(542);}

					switch (alt542) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:129: ( ws )? sass_else
							{
							dbg.location(1532,129);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:129: ( ws )?
							int alt541=2;
							try { dbg.enterSubRule(541);
							try { dbg.enterDecision(541, decisionCanBacktrack[541]);

							int LA541_0 = input.LA(1);
							if ( (LA541_0==COMMENT||LA541_0==NL||LA541_0==WS) ) {
								alt541=1;
							}
							} finally {dbg.exitDecision(541);}

							switch (alt541) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1532:129: ws
									{
									dbg.location(1532,129);
									pushFollow(FOLLOW_ws_in_sass_else11217);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(541);}
							dbg.location(1532,133);
							pushFollow(FOLLOW_sass_else_in_sass_else11220);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(542);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1533, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1535:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1535, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1536:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1537:5: cp_expression
			{
			dbg.location(1537,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression11243);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1538, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1540:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1540, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1541:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1542,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for11264); if (state.failed) return;dbg.location(1542,14);
			pushFollow(FOLLOW_ws_in_sass_for11266);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for11268);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,29);
			pushFollow(FOLLOW_ws_in_sass_for11270);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1542,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for11274); if (state.failed) return;dbg.location(1542,74);
			pushFollow(FOLLOW_ws_in_sass_for11278);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for11280);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,96);
			pushFollow(FOLLOW_ws_in_sass_for11282);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1542,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for11286); if (state.failed) return;dbg.location(1542,173);
			pushFollow(FOLLOW_ws_in_sass_for11290);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for11292);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1542,195);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:195: ( ws )?
			int alt544=2;
			try { dbg.enterSubRule(544);
			try { dbg.enterDecision(544, decisionCanBacktrack[544]);

			int LA544_0 = input.LA(1);
			if ( (LA544_0==COMMENT||LA544_0==NL||LA544_0==WS) ) {
				alt544=1;
			}
			} finally {dbg.exitDecision(544);}

			switch (alt544) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1542:195: ws
					{
					dbg.location(1542,195);
					pushFollow(FOLLOW_ws_in_sass_for11294);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(544);}
			dbg.location(1542,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for11297);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1543, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1545:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1545, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1546:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block
			{
			dbg.location(1547,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each11318); if (state.failed) return;dbg.location(1547,15);
			pushFollow(FOLLOW_ws_in_sass_each11320);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1547,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each11322);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1547,38);
			pushFollow(FOLLOW_ws_in_sass_each11324);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1547,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1547,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each11328); if (state.failed) return;dbg.location(1547,79);
			pushFollow(FOLLOW_ws_in_sass_each11332);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1547,82);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:82: ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+
			int cnt548=0;
			try { dbg.enterSubRule(548);

			loop548:
			while (true) {
				int alt548=2;
				try { dbg.enterDecision(548, decisionCanBacktrack[548]);

				int LA548_0 = input.LA(1);
				if ( (LA548_0==LBRACE) ) {
					int LA548_1 = input.LA(2);
					if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
						alt548=1;
					}

				}
				else if ( ((LA548_0 >= ANGLE && LA548_0 <= AT_SIGN)||(LA548_0 >= BOTTOMCENTER_SYM && LA548_0 <= BOTTOMRIGHT_SYM)||LA548_0==CHARSET_SYM||LA548_0==COUNTER_STYLE_SYM||LA548_0==DIMENSION||LA548_0==EMS||LA548_0==EXS||(LA548_0 >= FONT_FACE_SYM && LA548_0 <= FREQ)||LA548_0==GEN||(LA548_0 >= HASH && LA548_0 <= HASH_SYMBOL)||(LA548_0 >= IDENT && LA548_0 <= IMPORT_SYM)||LA548_0==KEYFRAMES_SYM||(LA548_0 >= LBRACKET && LA548_0 <= LENGTH)||(LA548_0 >= LESS_AND && LA548_0 <= LESS_JS_STRING)||LA548_0==LPAREN||(LA548_0 >= MEDIA_SYM && LA548_0 <= MOZ_DOCUMENT_SYM)||LA548_0==NAMESPACE_SYM||(LA548_0 >= NOT && LA548_0 <= NUMBER)||(LA548_0 >= PAGE_SYM && LA548_0 <= PERCENTAGE_SYMBOL)||LA548_0==PLUS||(LA548_0 >= REM && LA548_0 <= RIGHTTOP_SYM)||(LA548_0 >= SASS_AT_ROOT && LA548_0 <= SASS_DEBUG)||(LA548_0 >= SASS_EACH && LA548_0 <= SASS_ELSE)||LA548_0==SASS_EXTEND||(LA548_0 >= SASS_FOR && LA548_0 <= SASS_FUNCTION)||(LA548_0 >= SASS_IF && LA548_0 <= SASS_MIXIN)||(LA548_0 >= SASS_RETURN && LA548_0 <= SASS_WHILE)||LA548_0==STRING||(LA548_0 >= TILDE && LA548_0 <= TOPRIGHT_SYM)||(LA548_0 >= URANGE && LA548_0 <= URI)||LA548_0==VARIABLE||LA548_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt548=1;
				}

				} finally {dbg.exitDecision(548);}

				switch (alt548) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:83: cp_expression_list ( ( ws )? COMMA )? ( ws )?
					{
					dbg.location(1547,83);
					pushFollow(FOLLOW_cp_expression_list_in_sass_each11335);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1547,102);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:102: ( ( ws )? COMMA )?
					int alt546=2;
					try { dbg.enterSubRule(546);
					try { dbg.enterDecision(546, decisionCanBacktrack[546]);

					try {
						isCyclicDecision = true;
						alt546 = dfa546.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(546);}

					switch (alt546) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:103: ( ws )? COMMA
							{
							dbg.location(1547,103);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:103: ( ws )?
							int alt545=2;
							try { dbg.enterSubRule(545);
							try { dbg.enterDecision(545, decisionCanBacktrack[545]);

							int LA545_0 = input.LA(1);
							if ( (LA545_0==COMMENT||LA545_0==NL||LA545_0==WS) ) {
								alt545=1;
							}
							} finally {dbg.exitDecision(545);}

							switch (alt545) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:103: ws
									{
									dbg.location(1547,103);
									pushFollow(FOLLOW_ws_in_sass_each11338);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(545);}
							dbg.location(1547,107);
							match(input,COMMA,FOLLOW_COMMA_in_sass_each11341); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(546);}
					dbg.location(1547,115);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:115: ( ws )?
					int alt547=2;
					try { dbg.enterSubRule(547);
					try { dbg.enterDecision(547, decisionCanBacktrack[547]);

					int LA547_0 = input.LA(1);
					if ( (LA547_0==COMMENT||LA547_0==NL||LA547_0==WS) ) {
						alt547=1;
					}
					} finally {dbg.exitDecision(547);}

					switch (alt547) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1547:115: ws
							{
							dbg.location(1547,115);
							pushFollow(FOLLOW_ws_in_sass_each11345);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(547);}

					}
					break;

				default :
					if ( cnt548 >= 1 ) break loop548;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(548, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt548++;
			}
			} finally {dbg.exitSubRule(548);}
			dbg.location(1547,122);
			pushFollow(FOLLOW_sass_control_block_in_sass_each11351);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1548, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1550:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1550, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1551:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1552,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables11372);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1552,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(551);

			loop551:
			while (true) {
				int alt551=2;
				try { dbg.enterDecision(551, decisionCanBacktrack[551]);

				try {
					isCyclicDecision = true;
					alt551 = dfa551.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(551);}

				switch (alt551) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1552,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:33: ( ws )?
					int alt549=2;
					try { dbg.enterSubRule(549);
					try { dbg.enterDecision(549, decisionCanBacktrack[549]);

					int LA549_0 = input.LA(1);
					if ( (LA549_0==COMMENT||LA549_0==NL||LA549_0==WS) ) {
						alt549=1;
					}
					} finally {dbg.exitDecision(549);}

					switch (alt549) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:33: ws
							{
							dbg.location(1552,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables11384);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(549);}
					dbg.location(1552,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables11387); if (state.failed) return;dbg.location(1552,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:43: ( ws )?
					int alt550=2;
					try { dbg.enterSubRule(550);
					try { dbg.enterDecision(550, decisionCanBacktrack[550]);

					int LA550_0 = input.LA(1);
					if ( (LA550_0==COMMENT||LA550_0==NL||LA550_0==WS) ) {
						alt550=1;
					}
					} finally {dbg.exitDecision(550);}

					switch (alt550) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:43: ws
							{
							dbg.location(1552,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables11389);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(550);}
					dbg.location(1552,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables11392);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop551;
				}
			}
			} finally {dbg.exitSubRule(551);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1553, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1555:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1555, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1556:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1557,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while11417); if (state.failed) return;dbg.location(1557,16);
			pushFollow(FOLLOW_ws_in_sass_while11419);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1557,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while11421);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1557,43);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:43: ( ws )?
			int alt552=2;
			try { dbg.enterSubRule(552);
			try { dbg.enterDecision(552, decisionCanBacktrack[552]);

			int LA552_0 = input.LA(1);
			if ( (LA552_0==COMMENT||LA552_0==NL||LA552_0==WS) ) {
				alt552=1;
			}
			} finally {dbg.exitDecision(552);}

			switch (alt552) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1557:43: ws
					{
					dbg.location(1557,43);
					pushFollow(FOLLOW_ws_in_sass_while11423);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(552);}
			dbg.location(1557,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while11426);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1558, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1560:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1560, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1561:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1562:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1562,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block11447); if (state.failed) return;dbg.location(1562,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1562:12: ( ws )?
			int alt553=2;
			try { dbg.enterSubRule(553);
			try { dbg.enterDecision(553, decisionCanBacktrack[553]);

			int LA553_0 = input.LA(1);
			if ( (LA553_0==COMMENT||LA553_0==NL||LA553_0==WS) ) {
				alt553=1;
			}
			} finally {dbg.exitDecision(553);}

			switch (alt553) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1562:12: ws
					{
					dbg.location(1562,12);
					pushFollow(FOLLOW_ws_in_sass_control_block11449);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(553);}
			dbg.location(1562,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1562:16: ( declarations )?
			int alt554=2;
			try { dbg.enterSubRule(554);
			try { dbg.enterDecision(554, decisionCanBacktrack[554]);

			int LA554_0 = input.LA(1);
			if ( ((LA554_0 >= AT_IDENT && LA554_0 <= AT_SIGN)||(LA554_0 >= BOTTOMCENTER_SYM && LA554_0 <= BOTTOMRIGHT_SYM)||(LA554_0 >= CHARSET_SYM && LA554_0 <= COLON)||LA554_0==CONTAINER_SYM||LA554_0==COUNTER_STYLE_SYM||(LA554_0 >= DCOLON && LA554_0 <= DOT)||LA554_0==FONT_FACE_SYM||(LA554_0 >= GEN && LA554_0 <= GREATER)||(LA554_0 >= HASH && LA554_0 <= HASH_SYMBOL)||LA554_0==IDENT||LA554_0==IMPORT_SYM||LA554_0==KEYFRAMES_SYM||LA554_0==LAYER_SYM||(LA554_0 >= LBRACKET && LA554_0 <= LEFTTOP_SYM)||LA554_0==LESS_AND||(LA554_0 >= MEDIA_SYM && LA554_0 <= MOZ_DOCUMENT_SYM)||LA554_0==NAMESPACE_SYM||LA554_0==PAGE_SYM||(LA554_0 >= PIPE && LA554_0 <= PLUS)||(LA554_0 >= RIGHTBOTTOM_SYM && LA554_0 <= RIGHTTOP_SYM)||(LA554_0 >= SASS_AT_ROOT && LA554_0 <= SASS_DEBUG)||(LA554_0 >= SASS_EACH && LA554_0 <= SASS_ELSE)||(LA554_0 >= SASS_ERROR && LA554_0 <= SASS_FUNCTION)||(LA554_0 >= SASS_IF && LA554_0 <= SASS_MIXIN)||(LA554_0 >= SASS_RETURN && LA554_0 <= SEMI)||LA554_0==STAR||LA554_0==SUPPORTS_SYM||LA554_0==TILDE||(LA554_0 >= TOPCENTER_SYM && LA554_0 <= TOPRIGHT_SYM)||LA554_0==VARIABLE||LA554_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt554=1;
			}
			} finally {dbg.exitDecision(554);}

			switch (alt554) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1562:16: declarations
					{
					dbg.location(1562,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block11452);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(554);}
			dbg.location(1562,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block11455); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1563, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1565:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1565, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1566:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1571,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration11497); if (state.failed) return;dbg.location(1571,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration11499);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1571,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration11501);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1571,41);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:41: ( ws )?
			int alt555=2;
			try { dbg.enterSubRule(555);
			try { dbg.enterDecision(555, decisionCanBacktrack[555]);

			int LA555_0 = input.LA(1);
			if ( (LA555_0==COMMENT||LA555_0==NL||LA555_0==WS) ) {
				alt555=1;
			}
			} finally {dbg.exitDecision(555);}

			switch (alt555) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:41: ws
					{
					dbg.location(1571,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11503);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(555);}
			dbg.location(1571,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration11506); if (state.failed) return;dbg.location(1571,52);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:52: ( ws )?
			int alt556=2;
			try { dbg.enterSubRule(556);
			try { dbg.enterDecision(556, decisionCanBacktrack[556]);

			int LA556_0 = input.LA(1);
			if ( (LA556_0==COMMENT||LA556_0==NL||LA556_0==WS) ) {
				alt556=1;
			}
			} finally {dbg.exitDecision(556);}

			switch (alt556) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:52: ws
					{
					dbg.location(1571,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11508);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(556);}
			dbg.location(1571,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:56: ( cp_args_list )?
			int alt557=2;
			try { dbg.enterSubRule(557);
			try { dbg.enterDecision(557, decisionCanBacktrack[557]);

			int LA557_0 = input.LA(1);
			if ( (LA557_0==AT_IDENT||(LA557_0 >= BOTTOMCENTER_SYM && LA557_0 <= BOTTOMRIGHT_SYM)||LA557_0==CHARSET_SYM||(LA557_0 >= COUNTER_STYLE_SYM && LA557_0 <= CP_DOTS)||LA557_0==FONT_FACE_SYM||LA557_0==IDENT||LA557_0==IMPORT_SYM||LA557_0==KEYFRAMES_SYM||(LA557_0 >= LEFTBOTTOM_SYM && LA557_0 <= LEFTTOP_SYM)||LA557_0==LESS_REST||LA557_0==MEDIA_SYM||LA557_0==MOZ_DOCUMENT_SYM||LA557_0==NAMESPACE_SYM||LA557_0==PAGE_SYM||(LA557_0 >= RIGHTBOTTOM_SYM && LA557_0 <= RIGHTTOP_SYM)||(LA557_0 >= SASS_AT_ROOT && LA557_0 <= SASS_DEBUG)||(LA557_0 >= SASS_EACH && LA557_0 <= SASS_ELSE)||LA557_0==SASS_EXTEND||(LA557_0 >= SASS_FOR && LA557_0 <= SASS_FUNCTION)||(LA557_0 >= SASS_IF && LA557_0 <= SASS_MIXIN)||(LA557_0 >= SASS_RETURN && LA557_0 <= SASS_WHILE)||(LA557_0 >= TOPCENTER_SYM && LA557_0 <= TOPRIGHT_SYM)||LA557_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt557=1;
			}
			} finally {dbg.exitDecision(557);}

			switch (alt557) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:56: cp_args_list
					{
					dbg.location(1571,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration11511);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(557);}
			dbg.location(1571,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration11514); if (state.failed) return;dbg.location(1571,77);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:77: ( ws )?
			int alt558=2;
			try { dbg.enterSubRule(558);
			try { dbg.enterDecision(558, decisionCanBacktrack[558]);

			int LA558_0 = input.LA(1);
			if ( (LA558_0==COMMENT||LA558_0==NL||LA558_0==WS) ) {
				alt558=1;
			}
			} finally {dbg.exitDecision(558);}

			switch (alt558) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:77: ws
					{
					dbg.location(1571,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11516);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(558);}
			dbg.location(1571,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration11519); if (state.failed) return;dbg.location(1571,88);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:88: ( ws )?
			int alt559=2;
			try { dbg.enterSubRule(559);
			try { dbg.enterDecision(559, decisionCanBacktrack[559]);

			int LA559_0 = input.LA(1);
			if ( (LA559_0==COMMENT||LA559_0==NL||LA559_0==WS) ) {
				alt559=1;
			}
			} finally {dbg.exitDecision(559);}

			switch (alt559) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:88: ws
					{
					dbg.location(1571,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration11521);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(559);}
			dbg.location(1571,92);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:92: ( declarations )?
			int alt560=2;
			try { dbg.enterSubRule(560);
			try { dbg.enterDecision(560, decisionCanBacktrack[560]);

			int LA560_0 = input.LA(1);
			if ( ((LA560_0 >= AT_IDENT && LA560_0 <= AT_SIGN)||(LA560_0 >= BOTTOMCENTER_SYM && LA560_0 <= BOTTOMRIGHT_SYM)||(LA560_0 >= CHARSET_SYM && LA560_0 <= COLON)||LA560_0==CONTAINER_SYM||LA560_0==COUNTER_STYLE_SYM||(LA560_0 >= DCOLON && LA560_0 <= DOT)||LA560_0==FONT_FACE_SYM||(LA560_0 >= GEN && LA560_0 <= GREATER)||(LA560_0 >= HASH && LA560_0 <= HASH_SYMBOL)||LA560_0==IDENT||LA560_0==IMPORT_SYM||LA560_0==KEYFRAMES_SYM||LA560_0==LAYER_SYM||(LA560_0 >= LBRACKET && LA560_0 <= LEFTTOP_SYM)||LA560_0==LESS_AND||(LA560_0 >= MEDIA_SYM && LA560_0 <= MOZ_DOCUMENT_SYM)||LA560_0==NAMESPACE_SYM||LA560_0==PAGE_SYM||(LA560_0 >= PIPE && LA560_0 <= PLUS)||(LA560_0 >= RIGHTBOTTOM_SYM && LA560_0 <= RIGHTTOP_SYM)||(LA560_0 >= SASS_AT_ROOT && LA560_0 <= SASS_DEBUG)||(LA560_0 >= SASS_EACH && LA560_0 <= SASS_ELSE)||(LA560_0 >= SASS_ERROR && LA560_0 <= SASS_FUNCTION)||(LA560_0 >= SASS_IF && LA560_0 <= SASS_MIXIN)||(LA560_0 >= SASS_RETURN && LA560_0 <= SEMI)||LA560_0==STAR||LA560_0==SUPPORTS_SYM||LA560_0==TILDE||(LA560_0 >= TOPCENTER_SYM && LA560_0 <= TOPRIGHT_SYM)||LA560_0==VARIABLE||LA560_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt560=1;
			}
			} finally {dbg.exitDecision(560);}

			switch (alt560) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1571:92: declarations
					{
					dbg.location(1571,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration11524);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(560);}
			dbg.location(1571,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration11527); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1572, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1574:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1574, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1575:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1576:5: IDENT
			{
			dbg.location(1576,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name11548); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1577, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1579:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1579, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1580:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1581:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1581,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return11569); if (state.failed) return;dbg.location(1581,17);
			pushFollow(FOLLOW_ws_in_sass_function_return11571);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1581,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return11573);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1582, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1584:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1584, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1585:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1586:5: SASS_CONTENT
			{
			dbg.location(1586,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content11594); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1587, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1589:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1589, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1589:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1590:5: {...}? IDENT
			{
			dbg.location(1590,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE", "OPTIONAL"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\", \"OPTIONAL\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\", \"OPTIONAL\"})");
			}dbg.location(1590,104);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types11613); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1591, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1596:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1596, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1596:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1597:5: {...}? IDENT
			{
			dbg.location(1597,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1597,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when11636); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1598, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1600:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1600, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1600:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1601:5: {...}? IDENT
			{
			dbg.location(1601,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1601,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and11655); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1602, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1604:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1604, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1604:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1605:5: {...}? IDENT
			{
			dbg.location(1605,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1605,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or11673); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1606, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1608:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1608, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1608:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1609:5: {...}? IDENT
			{
			dbg.location(1609,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1609,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only11691); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1610, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:61: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:62: ( ws )? mediaQueryList
		{
		dbg.location(333,62);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:62: ( ws )?
		int alt561=2;
		try { dbg.enterSubRule(561);
		try { dbg.enterDecision(561, decisionCanBacktrack[561]);

		int LA561_0 = input.LA(1);
		if ( (LA561_0==COMMENT||LA561_0==NL||LA561_0==WS) ) {
			alt561=1;
		}
		} finally {dbg.exitDecision(561);}

		switch (alt561) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:333:62: ws
				{
				dbg.location(333,62);
				pushFollow(FOLLOW_ws_in_synpred1_Css3470);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(561);}
		dbg.location(333,66);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3473);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:115: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:116: ( ws )? mediaQueryList
		{
		dbg.location(336,116);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:116: ( ws )?
		int alt562=2;
		try { dbg.enterSubRule(562);
		try { dbg.enterDecision(562, decisionCanBacktrack[562]);

		int LA562_0 = input.LA(1);
		if ( (LA562_0==COMMENT||LA562_0==NL||LA562_0==WS) ) {
			alt562=1;
		}
		} finally {dbg.exitDecision(562);}

		switch (alt562) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:336:116: ws
				{
				dbg.location(336,116);
				pushFollow(FOLLOW_ws_in_synpred2_Css3540);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(562);}
		dbg.location(336,120);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3543);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:118: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:119: ( ws )? mediaQueryList
		{
		dbg.location(338,119);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:119: ( ws )?
		int alt563=2;
		try { dbg.enterSubRule(563);
		try { dbg.enterDecision(563, decisionCanBacktrack[563]);

		int LA563_0 = input.LA(1);
		if ( (LA563_0==COMMENT||LA563_0==NL||LA563_0==WS) ) {
			alt563=1;
		}
		} finally {dbg.exitDecision(563);}

		switch (alt563) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:119: ws
				{
				dbg.location(338,119);
				pushFollow(FOLLOW_ws_in_synpred3_Css3600);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(563);}
		dbg.location(338,123);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3603);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:28: ( ws )? SEMI
		{
		dbg.location(410,28);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:28: ( ws )?
		int alt564=2;
		try { dbg.enterSubRule(564);
		try { dbg.enterDecision(564, decisionCanBacktrack[564]);

		int LA564_0 = input.LA(1);
		if ( (LA564_0==COMMENT||LA564_0==NL||LA564_0==WS) ) {
			alt564=1;
		}
		} finally {dbg.exitDecision(564);}

		switch (alt564) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:28: ws
				{
				dbg.location(410,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css31170);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(564);}
		dbg.location(410,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css31173); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt569=2;
		try { dbg.enterDecision(569, decisionCanBacktrack[569]);

		int LA569_0 = input.LA(1);
		if ( (LA569_0==SASS_MIXIN) ) {
			alt569=1;
		}
		else if ( (LA569_0==DOT||LA569_0==HASH) ) {
			alt569=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 569, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(569);}

		switch (alt569) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:6: SASS_MIXIN
				{
				dbg.location(419,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css31271); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(419,19);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:20: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(419,20);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:20: ( ( DOT IDENT ) | HASH )
				int alt565=2;
				try { dbg.enterSubRule(565);
				try { dbg.enterDecision(565, decisionCanBacktrack[565]);

				int LA565_0 = input.LA(1);
				if ( (LA565_0==DOT) ) {
					alt565=1;
				}
				else if ( (LA565_0==HASH) ) {
					alt565=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 565, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(565);}

				switch (alt565) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:21: ( DOT IDENT )
						{
						dbg.location(419,21);
						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:21: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:22: DOT IDENT
						{
						dbg.location(419,22);
						match(input,DOT,FOLLOW_DOT_in_synpred5_Css31278); if (state.failed) return;dbg.location(419,26);
						match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css31280); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:35: HASH
						{
						dbg.location(419,35);
						match(input,HASH,FOLLOW_HASH_in_synpred5_Css31285); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(565);}
				dbg.location(419,41);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:41: ( ws )?
				int alt566=2;
				try { dbg.enterSubRule(566);
				try { dbg.enterDecision(566, decisionCanBacktrack[566]);

				int LA566_0 = input.LA(1);
				if ( (LA566_0==COMMENT||LA566_0==NL||LA566_0==WS) ) {
					alt566=1;
				}
				} finally {dbg.exitDecision(566);}

				switch (alt566) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:41: ws
						{
						dbg.location(419,41);
						pushFollow(FOLLOW_ws_in_synpred5_Css31288);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(566);}
				dbg.location(419,45);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css31291); if (state.failed) return;dbg.location(419,52);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:52: (~ RPAREN )*
				try { dbg.enterSubRule(567);

				loop567:
				while (true) {
					int alt567=2;
					try { dbg.enterDecision(567, decisionCanBacktrack[567]);

					int LA567_0 = input.LA(1);
					if ( ((LA567_0 >= A && LA567_0 <= RIGHTTOP_SYM)||(LA567_0 >= S && LA567_0 <= Z)) ) {
						alt567=1;
					}

					} finally {dbg.exitDecision(567);}

					switch (alt567) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(419,52);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop567;
					}
				}
				} finally {dbg.exitSubRule(567);}
				dbg.location(419,63);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css31299); if (state.failed) return;dbg.location(419,70);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:70: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(568);

				loop568:
				while (true) {
					int alt568=2;
					try { dbg.enterDecision(568, decisionCanBacktrack[568]);

					int LA568_0 = input.LA(1);
					if ( ((LA568_0 >= A && LA568_0 <= LAYER_SYM)||(LA568_0 >= LBRACKET && LA568_0 <= SASS_WHILE)||(LA568_0 >= SOLIDUS && LA568_0 <= Z)) ) {
						alt568=1;
					}

					} finally {dbg.exitDecision(568);}

					switch (alt568) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(419,70);
						if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop568;
					}
				}
				} finally {dbg.exitSubRule(568);}
				dbg.location(419,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css31309); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(421,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css31327);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(421,22);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:22: ( ( ws )? IMPORTANT_SYM )?
		int alt571=2;
		try { dbg.enterSubRule(571);
		try { dbg.enterDecision(571, decisionCanBacktrack[571]);

		try {
			isCyclicDecision = true;
			alt571 = dfa571.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(571);}

		switch (alt571) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(421,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:23: ( ws )?
				int alt570=2;
				try { dbg.enterSubRule(570);
				try { dbg.enterDecision(570, decisionCanBacktrack[570]);

				int LA570_0 = input.LA(1);
				if ( (LA570_0==COMMENT||LA570_0==NL||LA570_0==WS) ) {
					alt570=1;
				}
				} finally {dbg.exitDecision(570);}

				switch (alt570) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:23: ws
						{
						dbg.location(421,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css31330);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(570);}
				dbg.location(421,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css31333); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(571);}
		dbg.location(421,43);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:43: ( ws )?
		int alt572=2;
		try { dbg.enterSubRule(572);
		try { dbg.enterDecision(572, decisionCanBacktrack[572]);

		int LA572_0 = input.LA(1);
		if ( (LA572_0==COMMENT||LA572_0==NL||LA572_0==WS) ) {
			alt572=1;
		}
		} finally {dbg.exitDecision(572);}

		switch (alt572) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:43: ws
				{
				dbg.location(421,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css31337);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(572);}
		dbg.location(421,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css31340); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:8: cp_mixin_call
		{
		dbg.location(422,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css31363);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(423,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt578=3;
		try { dbg.enterSubRule(578);
		try { dbg.enterDecision(578, decisionCanBacktrack[578]);

		try {
			isCyclicDecision = true;
			alt578 = dfa578.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(578);}

		switch (alt578) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(423,9);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(423,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31388); if (state.failed) return;dbg.location(423,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:23: ( ws selectorsGroup )?
				int alt573=2;
				try { dbg.enterSubRule(573);
				try { dbg.enterDecision(573, decisionCanBacktrack[573]);

				try {
					isCyclicDecision = true;
					alt573 = dfa573.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(573);}

				switch (alt573) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:24: ws selectorsGroup
						{
						dbg.location(423,24);
						pushFollow(FOLLOW_ws_in_synpred8_Css31391);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(423,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31393);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(573);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(423,48);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(423,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31402); if (state.failed) return;dbg.location(423,62);
				pushFollow(FOLLOW_ws_in_synpred8_Css31404);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(423,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred8_Css31406); if (state.failed) return;dbg.location(423,72);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:72: ( ws )?
				int alt574=2;
				try { dbg.enterSubRule(574);
				try { dbg.enterDecision(574, decisionCanBacktrack[574]);

				int LA574_0 = input.LA(1);
				if ( (LA574_0==COMMENT||LA574_0==NL||LA574_0==WS) ) {
					alt574=1;
				}
				} finally {dbg.exitDecision(574);}

				switch (alt574) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:72: ws
						{
						dbg.location(423,72);
						pushFollow(FOLLOW_ws_in_synpred8_Css31408);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(574);}
				dbg.location(423,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31411); if (state.failed) return;dbg.location(423,82);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:82: ( ws )?
				int alt575=2;
				try { dbg.enterSubRule(575);
				try { dbg.enterDecision(575, decisionCanBacktrack[575]);

				int LA575_0 = input.LA(1);
				if ( (LA575_0==COMMENT||LA575_0==NL||LA575_0==WS) ) {
					alt575=1;
				}
				} finally {dbg.exitDecision(575);}

				switch (alt575) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:82: ws
						{
						dbg.location(423,82);
						pushFollow(FOLLOW_ws_in_synpred8_Css31413);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(575);}
				dbg.location(423,86);
				match(input,COLON,FOLLOW_COLON_in_synpred8_Css31416); if (state.failed) return;dbg.location(423,92);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:92: ( ws )?
				int alt576=2;
				try { dbg.enterSubRule(576);
				try { dbg.enterDecision(576, decisionCanBacktrack[576]);

				int LA576_0 = input.LA(1);
				if ( (LA576_0==COMMENT||LA576_0==NL||LA576_0==WS) ) {
					alt576=1;
				}
				} finally {dbg.exitDecision(576);}

				switch (alt576) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:92: ws
						{
						dbg.location(423,92);
						pushFollow(FOLLOW_ws_in_synpred8_Css31418);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(576);}
				dbg.location(423,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31421); if (state.failed) return;dbg.location(423,102);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:102: ( ws )?
				int alt577=2;
				try { dbg.enterSubRule(577);
				try { dbg.enterDecision(577, decisionCanBacktrack[577]);

				int LA577_0 = input.LA(1);
				if ( (LA577_0==COMMENT||LA577_0==NL||LA577_0==WS) ) {
					alt577=1;
				}
				} finally {dbg.exitDecision(577);}

				switch (alt577) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:102: ws
						{
						dbg.location(423,102);
						pushFollow(FOLLOW_ws_in_synpred8_Css31423);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(577);}
				dbg.location(423,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred8_Css31426); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:116: selectorsGroup
				{
				dbg.location(423,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31431);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(578);}
		dbg.location(423,132);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:132: ( ws )?
		int alt579=2;
		try { dbg.enterSubRule(579);
		try { dbg.enterDecision(579, decisionCanBacktrack[579]);

		int LA579_0 = input.LA(1);
		if ( (LA579_0==COMMENT||LA579_0==NL||LA579_0==WS) ) {
			alt579=1;
		}
		} finally {dbg.exitDecision(579);}

		switch (alt579) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:132: ws
				{
				dbg.location(423,132);
				pushFollow(FOLLOW_ws_in_synpred8_Css31434);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(579);}
		dbg.location(423,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred8_Css31437); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:424:8: propertyDeclaration
		{
		dbg.location(424,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred9_Css31449);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ( ws )? COMMA
		{
		dbg.location(439,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ( ws )?
		int alt580=2;
		try { dbg.enterSubRule(580);
		try { dbg.enterDecision(580, decisionCanBacktrack[580]);

		int LA580_0 = input.LA(1);
		if ( (LA580_0==COMMENT||LA580_0==NL||LA580_0==WS) ) {
			alt580=1;
		}
		} finally {dbg.exitDecision(580);}

		switch (alt580) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:439:18: ws
				{
				dbg.location(439,18);
				pushFollow(FOLLOW_ws_in_synpred10_Css31564);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(580);}
		dbg.location(439,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred10_Css31567); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:44: ( ( ws )? key_and )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ( ws )? key_and
		{
		dbg.location(444,45);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ( ws )?
		int alt581=2;
		try { dbg.enterSubRule(581);
		try { dbg.enterDecision(581, decisionCanBacktrack[581]);

		int LA581_0 = input.LA(1);
		if ( (LA581_0==COMMENT||LA581_0==NL||LA581_0==WS) ) {
			alt581=1;
		}
		} finally {dbg.exitDecision(581);}

		switch (alt581) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:45: ws
				{
				dbg.location(444,45);
				pushFollow(FOLLOW_ws_in_synpred11_Css31611);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(581);}
		dbg.location(444,49);
		pushFollow(FOLLOW_key_and_in_synpred11_Css31614);
		key_and();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:24: ( ( ws )? key_and )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ( ws )? key_and
		{
		dbg.location(445,25);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ( ws )?
		int alt582=2;
		try { dbg.enterSubRule(582);
		try { dbg.enterDecision(582, decisionCanBacktrack[582]);

		int LA582_0 = input.LA(1);
		if ( (LA582_0==COMMENT||LA582_0==NL||LA582_0==WS) ) {
			alt582=1;
		}
		} finally {dbg.exitDecision(582);}

		switch (alt582) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:25: ws
				{
				dbg.location(445,25);
				pushFollow(FOLLOW_ws_in_synpred12_Css31641);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(582);}
		dbg.location(445,29);
		pushFollow(FOLLOW_key_and_in_synpred12_Css31644);
		key_and();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:5: ( LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:459:6: LPAREN
		{
		dbg.location(459,6);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred13_Css31726); if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:7: ( HASH )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:8: HASH
		{
		dbg.location(460,8);
		match(input,HASH,FOLLOW_HASH_in_synpred14_Css31755); if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:23: ( ws )? SEMI
		{
		dbg.location(480,23);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:23: ( ws )?
		int alt583=2;
		try { dbg.enterSubRule(583);
		try { dbg.enterDecision(583, decisionCanBacktrack[583]);

		int LA583_0 = input.LA(1);
		if ( (LA583_0==COMMENT||LA583_0==NL||LA583_0==WS) ) {
			alt583=1;
		}
		} finally {dbg.exitDecision(583);}

		switch (alt583) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:480:23: ws
				{
				dbg.location(480,23);
				pushFollow(FOLLOW_ws_in_synpred15_Css31901);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(583);}
		dbg.location(480,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred15_Css31904); if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt588=2;
		try { dbg.enterDecision(588, decisionCanBacktrack[588]);

		int LA588_0 = input.LA(1);
		if ( (LA588_0==SASS_MIXIN) ) {
			alt588=1;
		}
		else if ( (LA588_0==DOT||LA588_0==HASH) ) {
			alt588=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 588, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(588);}

		switch (alt588) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:10: SASS_MIXIN
				{
				dbg.location(488,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred16_Css31979); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(488,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:24: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(488,24);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:24: ( ( DOT IDENT ) | HASH )
				int alt584=2;
				try { dbg.enterSubRule(584);
				try { dbg.enterDecision(584, decisionCanBacktrack[584]);

				int LA584_0 = input.LA(1);
				if ( (LA584_0==DOT) ) {
					alt584=1;
				}
				else if ( (LA584_0==HASH) ) {
					alt584=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 584, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(584);}

				switch (alt584) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:25: ( DOT IDENT )
						{
						dbg.location(488,25);
						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:25: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:26: DOT IDENT
						{
						dbg.location(488,26);
						match(input,DOT,FOLLOW_DOT_in_synpred16_Css31986); if (state.failed) return;dbg.location(488,30);
						match(input,IDENT,FOLLOW_IDENT_in_synpred16_Css31988); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:39: HASH
						{
						dbg.location(488,39);
						match(input,HASH,FOLLOW_HASH_in_synpred16_Css31993); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(584);}
				dbg.location(488,45);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:45: ( ws )?
				int alt585=2;
				try { dbg.enterSubRule(585);
				try { dbg.enterDecision(585, decisionCanBacktrack[585]);

				int LA585_0 = input.LA(1);
				if ( (LA585_0==COMMENT||LA585_0==NL||LA585_0==WS) ) {
					alt585=1;
				}
				} finally {dbg.exitDecision(585);}

				switch (alt585) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:45: ws
						{
						dbg.location(488,45);
						pushFollow(FOLLOW_ws_in_synpred16_Css31996);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(585);}
				dbg.location(488,49);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred16_Css31999); if (state.failed) return;dbg.location(488,56);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:56: (~ RPAREN )*
				try { dbg.enterSubRule(586);

				loop586:
				while (true) {
					int alt586=2;
					try { dbg.enterDecision(586, decisionCanBacktrack[586]);

					int LA586_0 = input.LA(1);
					if ( ((LA586_0 >= A && LA586_0 <= RIGHTTOP_SYM)||(LA586_0 >= S && LA586_0 <= Z)) ) {
						alt586=1;
					}

					} finally {dbg.exitDecision(586);}

					switch (alt586) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(488,56);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop586;
					}
				}
				} finally {dbg.exitSubRule(586);}
				dbg.location(488,67);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred16_Css32007); if (state.failed) return;dbg.location(488,74);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:74: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(587);

				loop587:
				while (true) {
					int alt587=2;
					try { dbg.enterDecision(587, decisionCanBacktrack[587]);

					int LA587_0 = input.LA(1);
					if ( ((LA587_0 >= A && LA587_0 <= LAYER_SYM)||(LA587_0 >= LBRACKET && LA587_0 <= R)||(LA587_0 >= RBRACKET && LA587_0 <= SASS_WHILE)||(LA587_0 >= SOLIDUS && LA587_0 <= Z)) ) {
						alt587=1;
					}

					} finally {dbg.exitDecision(587);}

					switch (alt587) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(488,74);
						if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop587;
					}
				}
				} finally {dbg.exitSubRule(587);}
				dbg.location(488,97);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred16_Css32019); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(490,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred17_Css32045);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(490,26);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:26: ( ws )?
		int alt589=2;
		try { dbg.enterSubRule(589);
		try { dbg.enterDecision(589, decisionCanBacktrack[589]);

		int LA589_0 = input.LA(1);
		if ( (LA589_0==COMMENT||LA589_0==NL||LA589_0==WS) ) {
			alt589=1;
		}
		} finally {dbg.exitDecision(589);}

		switch (alt589) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:26: ws
				{
				dbg.location(490,26);
				pushFollow(FOLLOW_ws_in_synpred17_Css32047);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(589);}
		dbg.location(490,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred17_Css32050); if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:12: cp_mixin_call
		{
		dbg.location(491,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred18_Css32069);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:12: cp_variable ( ws )? COLON
		{
		dbg.location(493,12);
		pushFollow(FOLLOW_cp_variable_in_synpred19_Css32097);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(493,24);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:24: ( ws )?
		int alt590=2;
		try { dbg.enterSubRule(590);
		try { dbg.enterDecision(590, decisionCanBacktrack[590]);

		int LA590_0 = input.LA(1);
		if ( (LA590_0==COMMENT||LA590_0==NL||LA590_0==WS) ) {
			alt590=1;
		}
		} finally {dbg.exitDecision(590);}

		switch (alt590) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:493:24: ws
				{
				dbg.location(493,24);
				pushFollow(FOLLOW_ws_in_synpred19_Css32099);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(590);}
		dbg.location(493,28);
		match(input,COLON,FOLLOW_COLON_in_synpred19_Css32102); if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:494:12: sass_map
		{
		dbg.location(494,12);
		pushFollow(FOLLOW_sass_map_in_synpred20_Css32119);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:2: ( LPAREN ( ws )? supportsCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:2: LPAREN ( ws )? supportsCondition ( ws )? RPAREN
		{
		dbg.location(534,2);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred21_Css32409); if (state.failed) return;dbg.location(534,9);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ( ws )?
		int alt591=2;
		try { dbg.enterSubRule(591);
		try { dbg.enterDecision(591, decisionCanBacktrack[591]);

		int LA591_0 = input.LA(1);
		if ( (LA591_0==COMMENT||LA591_0==NL||LA591_0==WS) ) {
			alt591=1;
		}
		} finally {dbg.exitDecision(591);}

		switch (alt591) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:9: ws
				{
				dbg.location(534,9);
				pushFollow(FOLLOW_ws_in_synpred21_Css32411);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(591);}
		dbg.location(534,13);
		pushFollow(FOLLOW_supportsCondition_in_synpred21_Css32414);
		supportsCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(534,31);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ( ws )?
		int alt592=2;
		try { dbg.enterSubRule(592);
		try { dbg.enterDecision(592, decisionCanBacktrack[592]);

		int LA592_0 = input.LA(1);
		if ( (LA592_0==COMMENT||LA592_0==NL||LA592_0==WS) ) {
			alt592=1;
		}
		} finally {dbg.exitDecision(592);}

		switch (alt592) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:31: ws
				{
				dbg.location(534,31);
				pushFollow(FOLLOW_ws_in_synpred21_Css32416);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(592);}
		dbg.location(534,35);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred21_Css32419); if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:4: ( supportsFeature )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:4: supportsFeature
		{
		dbg.location(535,4);
		pushFollow(FOLLOW_supportsFeature_in_synpred22_Css32424);
		supportsFeature();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:2: ( CONTAINER_SYM ws containerCondition ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:3: CONTAINER_SYM ws containerCondition ( ws )? LBRACE
		{
		dbg.location(553,3);
		match(input,CONTAINER_SYM,FOLLOW_CONTAINER_SYM_in_synpred23_Css32508); if (state.failed) return;dbg.location(553,17);
		pushFollow(FOLLOW_ws_in_synpred23_Css32510);
		ws();
		state._fsp--;
		if (state.failed) return;dbg.location(553,20);
		pushFollow(FOLLOW_containerCondition_in_synpred23_Css32512);
		containerCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(553,39);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:39: ( ws )?
		int alt593=2;
		try { dbg.enterSubRule(593);
		try { dbg.enterDecision(593, decisionCanBacktrack[593]);

		int LA593_0 = input.LA(1);
		if ( (LA593_0==COMMENT||LA593_0==NL||LA593_0==WS) ) {
			alt593=1;
		}
		} finally {dbg.exitDecision(593);}

		switch (alt593) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:39: ws
				{
				dbg.location(553,39);
				pushFollow(FOLLOW_ws_in_synpred23_Css32514);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(593);}
		dbg.location(553,43);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred23_Css32517); if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:2: ( LPAREN ( ws )? containerCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:2: LPAREN ( ws )? containerCondition ( ws )? RPAREN
		{
		dbg.location(579,2);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred24_Css32765); if (state.failed) return;dbg.location(579,9);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ( ws )?
		int alt594=2;
		try { dbg.enterSubRule(594);
		try { dbg.enterDecision(594, decisionCanBacktrack[594]);

		int LA594_0 = input.LA(1);
		if ( (LA594_0==COMMENT||LA594_0==NL||LA594_0==WS) ) {
			alt594=1;
		}
		} finally {dbg.exitDecision(594);}

		switch (alt594) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ws
				{
				dbg.location(579,9);
				pushFollow(FOLLOW_ws_in_synpred24_Css32767);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(594);}
		dbg.location(579,13);
		pushFollow(FOLLOW_containerCondition_in_synpred24_Css32770);
		containerCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(579,32);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ( ws )?
		int alt595=2;
		try { dbg.enterSubRule(595);
		try { dbg.enterDecision(595, decisionCanBacktrack[595]);

		int LA595_0 = input.LA(1);
		if ( (LA595_0==COMMENT||LA595_0==NL||LA595_0==WS) ) {
			alt595=1;
		}
		} finally {dbg.exitDecision(595);}

		switch (alt595) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:32: ws
				{
				dbg.location(579,32);
				pushFollow(FOLLOW_ws_in_synpred24_Css32772);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(595);}
		dbg.location(579,36);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred24_Css32775); if (state.failed) return;
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:4: ( sizeFeature )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:4: sizeFeature
		{
		dbg.location(580,4);
		pushFollow(FOLLOW_sizeFeature_in_synpred25_Css32780);
		sizeFeature();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:4: ({...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:4: {...}? IDENT ( ws )? LPAREN ( ws )? styleQuery ( ws )? RPAREN
		{
		dbg.location(581,4);
		if ( !(evalPredicate(tokenNameEquals("style"),"tokenNameEquals(\"style\")")) ) {
			if (state.backtracking>0) {state.failed=true; return;}
			throw new FailedPredicateException(input, "synpred26_Css3", "tokenNameEquals(\"style\")");
		}dbg.location(581,32);
		match(input,IDENT,FOLLOW_IDENT_in_synpred26_Css32787); if (state.failed) return;dbg.location(581,38);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ( ws )?
		int alt596=2;
		try { dbg.enterSubRule(596);
		try { dbg.enterDecision(596, decisionCanBacktrack[596]);

		int LA596_0 = input.LA(1);
		if ( (LA596_0==COMMENT||LA596_0==NL||LA596_0==WS) ) {
			alt596=1;
		}
		} finally {dbg.exitDecision(596);}

		switch (alt596) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:38: ws
				{
				dbg.location(581,38);
				pushFollow(FOLLOW_ws_in_synpred26_Css32789);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(596);}
		dbg.location(581,42);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred26_Css32792); if (state.failed) return;dbg.location(581,49);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ( ws )?
		int alt597=2;
		try { dbg.enterSubRule(597);
		try { dbg.enterDecision(597, decisionCanBacktrack[597]);

		int LA597_0 = input.LA(1);
		if ( (LA597_0==COMMENT||LA597_0==NL||LA597_0==WS) ) {
			alt597=1;
		}
		} finally {dbg.exitDecision(597);}

		switch (alt597) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:49: ws
				{
				dbg.location(581,49);
				pushFollow(FOLLOW_ws_in_synpred26_Css32794);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(597);}
		dbg.location(581,53);
		pushFollow(FOLLOW_styleQuery_in_synpred26_Css32797);
		styleQuery();
		state._fsp--;
		if (state.failed) return;dbg.location(581,64);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ( ws )?
		int alt598=2;
		try { dbg.enterSubRule(598);
		try { dbg.enterDecision(598, decisionCanBacktrack[598]);

		int LA598_0 = input.LA(1);
		if ( (LA598_0==COMMENT||LA598_0==NL||LA598_0==WS) ) {
			alt598=1;
		}
		} finally {dbg.exitDecision(598);}

		switch (alt598) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:581:64: ws
				{
				dbg.location(581,64);
				pushFollow(FOLLOW_ws_in_synpred26_Css32799);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(598);}
		dbg.location(581,68);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred26_Css32802); if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:9: ( LPAREN ( ws )? styleCondition ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:9: LPAREN ( ws )? styleCondition ( ws )? RPAREN
		{
		dbg.location(617,9);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred27_Css33093); if (state.failed) return;dbg.location(617,16);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ( ws )?
		int alt599=2;
		try { dbg.enterSubRule(599);
		try { dbg.enterDecision(599, decisionCanBacktrack[599]);

		int LA599_0 = input.LA(1);
		if ( (LA599_0==COMMENT||LA599_0==NL||LA599_0==WS) ) {
			alt599=1;
		}
		} finally {dbg.exitDecision(599);}

		switch (alt599) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:16: ws
				{
				dbg.location(617,16);
				pushFollow(FOLLOW_ws_in_synpred27_Css33095);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(599);}
		dbg.location(617,20);
		pushFollow(FOLLOW_styleCondition_in_synpred27_Css33098);
		styleCondition();
		state._fsp--;
		if (state.failed) return;dbg.location(617,35);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ( ws )?
		int alt600=2;
		try { dbg.enterSubRule(600);
		try { dbg.enterDecision(600, decisionCanBacktrack[600]);

		int LA600_0 = input.LA(1);
		if ( (LA600_0==COMMENT||LA600_0==NL||LA600_0==WS) ) {
			alt600=1;
		}
		} finally {dbg.exitDecision(600);}

		switch (alt600) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:617:35: ws
				{
				dbg.location(617,35);
				pushFollow(FOLLOW_ws_in_synpred27_Css33100);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(600);}
		dbg.location(617,39);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred27_Css33103); if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:11: ( LPAREN ( ws )? styleFeature ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:11: LPAREN ( ws )? styleFeature ( ws )? RPAREN
		{
		dbg.location(618,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred28_Css33115); if (state.failed) return;dbg.location(618,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ( ws )?
		int alt601=2;
		try { dbg.enterSubRule(601);
		try { dbg.enterDecision(601, decisionCanBacktrack[601]);

		int LA601_0 = input.LA(1);
		if ( (LA601_0==COMMENT||LA601_0==NL||LA601_0==WS) ) {
			alt601=1;
		}
		} finally {dbg.exitDecision(601);}

		switch (alt601) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:18: ws
				{
				dbg.location(618,18);
				pushFollow(FOLLOW_ws_in_synpred28_Css33117);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(601);}
		dbg.location(618,22);
		pushFollow(FOLLOW_styleFeature_in_synpred28_Css33120);
		styleFeature();
		state._fsp--;
		if (state.failed) return;dbg.location(618,35);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ( ws )?
		int alt602=2;
		try { dbg.enterSubRule(602);
		try { dbg.enterDecision(602, decisionCanBacktrack[602]);

		int LA602_0 = input.LA(1);
		if ( (LA602_0==COMMENT||LA602_0==NL||LA602_0==WS) ) {
			alt602=1;
		}
		} finally {dbg.exitDecision(602);}

		switch (alt602) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:618:35: ws
				{
				dbg.location(618,35);
				pushFollow(FOLLOW_ws_in_synpred28_Css33122);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(602);}
		dbg.location(618,39);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred28_Css33125); if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:9: ( LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:9: LPAREN ( ws )? sizeFeatureFixedValue ( ws )? RPAREN
		{
		dbg.location(626,9);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred29_Css33195); if (state.failed) return;dbg.location(626,16);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ( ws )?
		int alt603=2;
		try { dbg.enterSubRule(603);
		try { dbg.enterDecision(603, decisionCanBacktrack[603]);

		int LA603_0 = input.LA(1);
		if ( (LA603_0==COMMENT||LA603_0==NL||LA603_0==WS) ) {
			alt603=1;
		}
		} finally {dbg.exitDecision(603);}

		switch (alt603) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:16: ws
				{
				dbg.location(626,16);
				pushFollow(FOLLOW_ws_in_synpred29_Css33197);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(603);}
		dbg.location(626,20);
		pushFollow(FOLLOW_sizeFeatureFixedValue_in_synpred29_Css33200);
		sizeFeatureFixedValue();
		state._fsp--;
		if (state.failed) return;dbg.location(626,42);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ( ws )?
		int alt604=2;
		try { dbg.enterSubRule(604);
		try { dbg.enterDecision(604, decisionCanBacktrack[604]);

		int LA604_0 = input.LA(1);
		if ( (LA604_0==COMMENT||LA604_0==NL||LA604_0==WS) ) {
			alt604=1;
		}
		} finally {dbg.exitDecision(604);}

		switch (alt604) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:42: ws
				{
				dbg.location(626,42);
				pushFollow(FOLLOW_ws_in_synpred29_Css33202);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(604);}
		dbg.location(626,46);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred29_Css33205); if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:11: ( LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:11: LPAREN ( ws )? sizeFeatureRangeSingle ( ws )? RPAREN
		{
		dbg.location(627,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred30_Css33217); if (state.failed) return;dbg.location(627,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ( ws )?
		int alt605=2;
		try { dbg.enterSubRule(605);
		try { dbg.enterDecision(605, decisionCanBacktrack[605]);

		int LA605_0 = input.LA(1);
		if ( (LA605_0==COMMENT||LA605_0==NL||LA605_0==WS) ) {
			alt605=1;
		}
		} finally {dbg.exitDecision(605);}

		switch (alt605) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:18: ws
				{
				dbg.location(627,18);
				pushFollow(FOLLOW_ws_in_synpred30_Css33219);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(605);}
		dbg.location(627,22);
		pushFollow(FOLLOW_sizeFeatureRangeSingle_in_synpred30_Css33222);
		sizeFeatureRangeSingle();
		state._fsp--;
		if (state.failed) return;dbg.location(627,45);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ( ws )?
		int alt606=2;
		try { dbg.enterSubRule(606);
		try { dbg.enterDecision(606, decisionCanBacktrack[606]);

		int LA606_0 = input.LA(1);
		if ( (LA606_0==COMMENT||LA606_0==NL||LA606_0==WS) ) {
			alt606=1;
		}
		} finally {dbg.exitDecision(606);}

		switch (alt606) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:45: ws
				{
				dbg.location(627,45);
				pushFollow(FOLLOW_ws_in_synpred30_Css33224);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(606);}
		dbg.location(627,49);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred30_Css33227); if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:11: ( LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:11: LPAREN ( ws )? sizeFeatureRangeBetweenLt ( ws )? RPAREN
		{
		dbg.location(628,11);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred31_Css33239); if (state.failed) return;dbg.location(628,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ( ws )?
		int alt607=2;
		try { dbg.enterSubRule(607);
		try { dbg.enterDecision(607, decisionCanBacktrack[607]);

		int LA607_0 = input.LA(1);
		if ( (LA607_0==COMMENT||LA607_0==NL||LA607_0==WS) ) {
			alt607=1;
		}
		} finally {dbg.exitDecision(607);}

		switch (alt607) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:18: ws
				{
				dbg.location(628,18);
				pushFollow(FOLLOW_ws_in_synpred31_Css33241);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(607);}
		dbg.location(628,22);
		pushFollow(FOLLOW_sizeFeatureRangeBetweenLt_in_synpred31_Css33244);
		sizeFeatureRangeBetweenLt();
		state._fsp--;
		if (state.failed) return;dbg.location(628,48);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ( ws )?
		int alt608=2;
		try { dbg.enterSubRule(608);
		try { dbg.enterDecision(608, decisionCanBacktrack[608]);

		int LA608_0 = input.LA(1);
		if ( (LA608_0==COMMENT||LA608_0==NL||LA608_0==WS) ) {
			alt608=1;
		}
		} finally {dbg.exitDecision(608);}

		switch (alt608) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:628:48: ws
				{
				dbg.location(628,48);
				pushFollow(FOLLOW_ws_in_synpred31_Css33246);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(608);}
		dbg.location(628,52);
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred31_Css33249); if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:20: ( LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:21: LBRACE
		{
		dbg.location(716,21);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred32_Css34019); if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:46: ( componentValue )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:47: componentValue
		{
		dbg.location(716,47);
		pushFollow(FOLLOW_componentValue_in_synpred33_Css34029);
		componentValue();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:97: ( componentValue )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:98: componentValue
		{
		dbg.location(716,98);
		pushFollow(FOLLOW_componentValue_in_synpred34_Css34047);
		componentValue();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:83: ( ws ( LBRACE | ( componentValue )=> componentValue ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:84: ws ( LBRACE | ( componentValue )=> componentValue )
		{
		dbg.location(716,84);
		pushFollow(FOLLOW_ws_in_synpred35_Css34039);
		ws();
		state._fsp--;
		if (state.failed) return;dbg.location(716,87);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:87: ( LBRACE | ( componentValue )=> componentValue )
		int alt609=2;
		try { dbg.enterSubRule(609);
		try { dbg.enterDecision(609, decisionCanBacktrack[609]);

		int LA609_0 = input.LA(1);
		if ( (LA609_0==LBRACE) ) {
			int LA609_1 = input.LA(2);
			if ( (LA609_1==EOF) ) {
				alt609=1;
			}
			else if ( (LA609_1==LPAREN) && (synpred34_Css3())) {
				alt609=2;
			}
			else if ( (LA609_1==LBRACE) && (synpred34_Css3())) {
				alt609=2;
			}
			else if ( (LA609_1==LBRACKET) && (synpred34_Css3())) {
				alt609=2;
			}
			else if ( (LA609_1==IDENT) && (synpred34_Css3())) {
				alt609=2;
			}
			else if ( ((LA609_1 >= A && LA609_1 <= I)||(LA609_1 >= IMPORTANT_SYM && LA609_1 <= LAYER_SYM)||(LA609_1 >= LEFTBOTTOM_SYM && LA609_1 <= LINE_COMMENT)||(LA609_1 >= M && LA609_1 <= R)||(LA609_1 >= REM && LA609_1 <= RIGHTTOP_SYM)||(LA609_1 >= S && LA609_1 <= Z)) && (synpred34_Css3())) {
				alt609=2;
			}
			else if ( (LA609_1==RBRACE) && (synpred34_Css3())) {
				alt609=2;
			}

		}
		else if ( (LA609_0==LPAREN) && (synpred34_Css3())) {
			alt609=2;
		}
		else if ( (LA609_0==LBRACKET) && (synpred34_Css3())) {
			alt609=2;
		}
		else if ( (LA609_0==IDENT) && (synpred34_Css3())) {
			alt609=2;
		}
		else if ( ((LA609_0 >= A && LA609_0 <= I)||(LA609_0 >= IMPORTANT_SYM && LA609_0 <= LAYER_SYM)||(LA609_0 >= LEFTBOTTOM_SYM && LA609_0 <= LINE_COMMENT)||(LA609_0 >= M && LA609_0 <= R)||(LA609_0 >= REM && LA609_0 <= RIGHTTOP_SYM)||(LA609_0 >= S && LA609_0 <= Z)) && (synpred34_Css3())) {
			alt609=2;
		}

		} finally {dbg.exitDecision(609);}

		switch (alt609) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:88: LBRACE
				{
				dbg.location(716,88);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred35_Css34042); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:97: ( componentValue )=> componentValue
				{
				dbg.location(716,117);
				pushFollow(FOLLOW_componentValue_in_synpred35_Css34052);
				componentValue();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(609);}

		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:142: ( LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:143: LBRACE
		{
		dbg.location(716,143);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred36_Css34063); if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred37_Css3
	public final void synpred37_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:168: ( componentValue )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:169: componentValue
		{
		dbg.location(716,169);
		pushFollow(FOLLOW_componentValue_in_synpred37_Css34073);
		componentValue();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:28: ( ws )? COMMA
		{
		dbg.location(853,28);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:28: ( ws )?
		int alt610=2;
		try { dbg.enterSubRule(610);
		try { dbg.enterDecision(610, decisionCanBacktrack[610]);

		int LA610_0 = input.LA(1);
		if ( (LA610_0==COMMENT||LA610_0==NL||LA610_0==WS) ) {
			alt610=1;
		}
		} finally {dbg.exitDecision(610);}

		switch (alt610) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:28: ws
				{
				dbg.location(853,28);
				pushFollow(FOLLOW_ws_in_synpred38_Css35110);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(610);}
		dbg.location(853,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred38_Css35113); if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:41: ( function )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:861:42: function
		{
		dbg.location(861,42);
		pushFollow(FOLLOW_function_in_synpred39_Css35204);
		function();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:889:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:889:6: cp_variable_declaration
		{
		dbg.location(889,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred40_Css35504);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred41_Css3
	public final void synpred41_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:8: sass_map
		{
		dbg.location(890,8);
		pushFollow(FOLLOW_sass_map_in_synpred41_Css35516);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred41_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:891:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:891:8: sass_nested_properties
		{
		dbg.location(891,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred42_Css35529);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(892,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt616=3;
		try { dbg.enterSubRule(616);
		try { dbg.enterDecision(616, decisionCanBacktrack[616]);

		try {
			isCyclicDecision = true;
			alt616 = dfa616.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(616);}

		switch (alt616) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(892,9);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(892,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred43_Css35543); if (state.failed) return;dbg.location(892,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:23: ( ws selectorsGroup )?
				int alt611=2;
				try { dbg.enterSubRule(611);
				try { dbg.enterDecision(611, decisionCanBacktrack[611]);

				try {
					isCyclicDecision = true;
					alt611 = dfa611.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(611);}

				switch (alt611) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:24: ws selectorsGroup
						{
						dbg.location(892,24);
						pushFollow(FOLLOW_ws_in_synpred43_Css35546);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(892,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred43_Css35548);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(611);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(892,48);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(892,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred43_Css35557); if (state.failed) return;dbg.location(892,62);
				pushFollow(FOLLOW_ws_in_synpred43_Css35559);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(892,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred43_Css35561); if (state.failed) return;dbg.location(892,72);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:72: ( ws )?
				int alt612=2;
				try { dbg.enterSubRule(612);
				try { dbg.enterDecision(612, decisionCanBacktrack[612]);

				int LA612_0 = input.LA(1);
				if ( (LA612_0==COMMENT||LA612_0==NL||LA612_0==WS) ) {
					alt612=1;
				}
				} finally {dbg.exitDecision(612);}

				switch (alt612) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:72: ws
						{
						dbg.location(892,72);
						pushFollow(FOLLOW_ws_in_synpred43_Css35563);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(612);}
				dbg.location(892,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred43_Css35566); if (state.failed) return;dbg.location(892,82);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:82: ( ws )?
				int alt613=2;
				try { dbg.enterSubRule(613);
				try { dbg.enterDecision(613, decisionCanBacktrack[613]);

				int LA613_0 = input.LA(1);
				if ( (LA613_0==COMMENT||LA613_0==NL||LA613_0==WS) ) {
					alt613=1;
				}
				} finally {dbg.exitDecision(613);}

				switch (alt613) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:82: ws
						{
						dbg.location(892,82);
						pushFollow(FOLLOW_ws_in_synpred43_Css35568);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(613);}
				dbg.location(892,86);
				match(input,COLON,FOLLOW_COLON_in_synpred43_Css35571); if (state.failed) return;dbg.location(892,92);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:92: ( ws )?
				int alt614=2;
				try { dbg.enterSubRule(614);
				try { dbg.enterDecision(614, decisionCanBacktrack[614]);

				int LA614_0 = input.LA(1);
				if ( (LA614_0==COMMENT||LA614_0==NL||LA614_0==WS) ) {
					alt614=1;
				}
				} finally {dbg.exitDecision(614);}

				switch (alt614) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:92: ws
						{
						dbg.location(892,92);
						pushFollow(FOLLOW_ws_in_synpred43_Css35573);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(614);}
				dbg.location(892,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred43_Css35576); if (state.failed) return;dbg.location(892,102);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:102: ( ws )?
				int alt615=2;
				try { dbg.enterSubRule(615);
				try { dbg.enterDecision(615, decisionCanBacktrack[615]);

				int LA615_0 = input.LA(1);
				if ( (LA615_0==COMMENT||LA615_0==NL||LA615_0==WS) ) {
					alt615=1;
				}
				} finally {dbg.exitDecision(615);}

				switch (alt615) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:102: ws
						{
						dbg.location(892,102);
						pushFollow(FOLLOW_ws_in_synpred43_Css35578);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(615);}
				dbg.location(892,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred43_Css35581); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:116: selectorsGroup
				{
				dbg.location(892,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred43_Css35586);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(616);}
		dbg.location(892,132);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:132: ( ws )?
		int alt617=2;
		try { dbg.enterSubRule(617);
		try { dbg.enterDecision(617, decisionCanBacktrack[617]);

		int LA617_0 = input.LA(1);
		if ( (LA617_0==COMMENT||LA617_0==NL||LA617_0==WS) ) {
			alt617=1;
		}
		} finally {dbg.exitDecision(617);}

		switch (alt617) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:132: ws
				{
				dbg.location(892,132);
				pushFollow(FOLLOW_ws_in_synpred43_Css35589);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(617);}
		dbg.location(892,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred43_Css35592); if (state.failed) return;
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:8: propertyDeclaration
		{
		dbg.location(893,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred44_Css35604);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(895,8);
		pushFollow(FOLLOW_property_in_synpred45_Css35621);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(895,17);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:17: ( ws )?
		int alt618=2;
		try { dbg.enterSubRule(618);
		try { dbg.enterDecision(618, decisionCanBacktrack[618]);

		int LA618_0 = input.LA(1);
		if ( (LA618_0==COMMENT||LA618_0==NL||LA618_0==WS) ) {
			alt618=1;
		}
		} finally {dbg.exitDecision(618);}

		switch (alt618) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:17: ws
				{
				dbg.location(895,17);
				pushFollow(FOLLOW_ws_in_synpred45_Css35623);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(618);}
		dbg.location(895,21);
		match(input,COLON,FOLLOW_COLON_in_synpred45_Css35626); if (state.failed) return;dbg.location(895,27);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:895:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(619);

		loop619:
		while (true) {
			int alt619=2;
			try { dbg.enterDecision(619, decisionCanBacktrack[619]);

			int LA619_0 = input.LA(1);
			if ( ((LA619_0 >= A && LA619_0 <= LAYER_SYM)||(LA619_0 >= LBRACKET && LA619_0 <= R)||(LA619_0 >= RBRACKET && LA619_0 <= SASS_WHILE)||(LA619_0 >= SOLIDUS && LA619_0 <= Z)) ) {
				alt619=1;
			}

			} finally {dbg.exitDecision(619);}

			switch (alt619) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(895,27);
				if ( (input.LA(1) >= A && input.LA(1) <= LAYER_SYM)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop619;
			}
		}
		} finally {dbg.exitSubRule(619);}
		dbg.location(895,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred45_Css3

	// $ANTLR start synpred46_Css3
	public final void synpred46_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:7: ( cp_mixin_declaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:8: cp_mixin_declaration
		{
		dbg.location(896,8);
		pushFollow(FOLLOW_cp_mixin_declaration_in_synpred46_Css35655);
		cp_mixin_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred46_Css3

	// $ANTLR start synpred47_Css3
	public final void synpred47_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:8: cp_mixin_call
		{
		dbg.location(897,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred47_Css35667);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred47_Css3

	// $ANTLR start synpred48_Css3
	public final void synpred48_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:8: cp_mixin_call
		{
		dbg.location(898,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred48_Css35688);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred48_Css3

	// $ANTLR start synpred49_Css3
	public final void synpred49_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:65: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:66: ( ws )? esPred
		{
		dbg.location(932,66);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:66: ( ws )?
		int alt620=2;
		try { dbg.enterSubRule(620);
		try { dbg.enterDecision(620, decisionCanBacktrack[620]);

		int LA620_0 = input.LA(1);
		if ( (LA620_0==COMMENT||LA620_0==NL||LA620_0==WS) ) {
			alt620=1;
		}
		} finally {dbg.exitDecision(620);}

		switch (alt620) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:66: ws
				{
				dbg.location(932,66);
				pushFollow(FOLLOW_ws_in_synpred49_Css35984);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(620);}
		dbg.location(932,70);
		pushFollow(FOLLOW_esPred_in_synpred49_Css35987);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred49_Css3

	// $ANTLR start synpred50_Css3
	public final void synpred50_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:4: ( typeSelector )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:5: typeSelector
		{
		dbg.location(933,5);
		pushFollow(FOLLOW_typeSelector_in_synpred50_Css36022);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred50_Css3

	// $ANTLR start synpred51_Css3
	public final void synpred51_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:35: ( ws )? esPred
		{
		dbg.location(933,35);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:35: ( ws )?
		int alt621=2;
		try { dbg.enterSubRule(621);
		try { dbg.enterDecision(621, decisionCanBacktrack[621]);

		int LA621_0 = input.LA(1);
		if ( (LA621_0==COMMENT||LA621_0==NL||LA621_0==WS) ) {
			alt621=1;
		}
		} finally {dbg.exitDecision(621);}

		switch (alt621) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:933:35: ws
				{
				dbg.location(933,35);
				pushFollow(FOLLOW_ws_in_synpred51_Css36029);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(621);}
		dbg.location(933,39);
		pushFollow(FOLLOW_esPred_in_synpred51_Css36032);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred51_Css3

	// $ANTLR start synpred52_Css3
	public final void synpred52_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(947,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:947:8: ( IDENT | STAR )?
		int alt622=2;
		try { dbg.enterSubRule(622);
		try { dbg.enterDecision(622, decisionCanBacktrack[622]);

		int LA622_0 = input.LA(1);
		if ( (LA622_0==IDENT||LA622_0==STAR) ) {
			alt622=1;
		}
		} finally {dbg.exitDecision(622);}

		switch (alt622) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(947,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(622);}
		dbg.location(947,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred52_Css36143); if (state.failed) return;
		}

	}
	// $ANTLR end synpred52_Css3

	// $ANTLR start synpred53_Css3
	public final void synpred53_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:58: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:59: functionName ( ws )? LPAREN
		{
		dbg.location(1110,59);
		pushFollow(FOLLOW_functionName_in_synpred53_Css37742);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1110,72);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:72: ( ws )?
		int alt623=2;
		try { dbg.enterSubRule(623);
		try { dbg.enterDecision(623, decisionCanBacktrack[623]);

		int LA623_0 = input.LA(1);
		if ( (LA623_0==COMMENT||LA623_0==NL||LA623_0==WS) ) {
			alt623=1;
		}
		} finally {dbg.exitDecision(623);}

		switch (alt623) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:72: ws
				{
				dbg.location(1110,72);
				pushFollow(FOLLOW_ws_in_synpred53_Css37744);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(623);}
		dbg.location(1110,76);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred53_Css37747); if (state.failed) return;
		}

	}
	// $ANTLR end synpred53_Css3

	// $ANTLR start synpred54_Css3
	public final void synpred54_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:64: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:65: functionName ( ws )? LPAREN
		{
		dbg.location(1112,65);
		pushFollow(FOLLOW_functionName_in_synpred54_Css37777);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1112,78);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:78: ( ws )?
		int alt624=2;
		try { dbg.enterSubRule(624);
		try { dbg.enterDecision(624, decisionCanBacktrack[624]);

		int LA624_0 = input.LA(1);
		if ( (LA624_0==COMMENT||LA624_0==NL||LA624_0==WS) ) {
			alt624=1;
		}
		} finally {dbg.exitDecision(624);}

		switch (alt624) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:78: ws
				{
				dbg.location(1112,78);
				pushFollow(FOLLOW_ws_in_synpred54_Css37779);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(624);}
		dbg.location(1112,82);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred54_Css37782); if (state.failed) return;
		}

	}
	// $ANTLR end synpred54_Css3

	// $ANTLR start synpred55_Css3
	public final void synpred55_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(1152,15);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt627=3;
		try { dbg.enterSubRule(627);
		try { dbg.enterDecision(627, decisionCanBacktrack[627]);

		try {
			isCyclicDecision = true;
			alt627 = dfa627.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(627);}

		switch (alt627) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:17: ws
				{
				dbg.location(1152,17);
				pushFollow(FOLLOW_ws_in_synpred55_Css37952);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(1152,22);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:23: ( ws )? operator ( ws )?
				{
				dbg.location(1152,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:23: ( ws )?
				int alt625=2;
				try { dbg.enterSubRule(625);
				try { dbg.enterDecision(625, decisionCanBacktrack[625]);

				int LA625_0 = input.LA(1);
				if ( (LA625_0==COMMENT||LA625_0==NL||LA625_0==WS) ) {
					alt625=1;
				}
				} finally {dbg.exitDecision(625);}

				switch (alt625) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:23: ws
						{
						dbg.location(1152,23);
						pushFollow(FOLLOW_ws_in_synpred55_Css37957);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(625);}
				dbg.location(1152,27);
				pushFollow(FOLLOW_operator_in_synpred55_Css37960);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(1152,36);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:36: ( ws )?
				int alt626=2;
				try { dbg.enterSubRule(626);
				try { dbg.enterDecision(626, decisionCanBacktrack[626]);

				int LA626_0 = input.LA(1);
				if ( (LA626_0==COMMENT||LA626_0==NL||LA626_0==WS) ) {
					alt626=1;
				}
				} finally {dbg.exitDecision(626);}

				switch (alt626) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:36: ws
						{
						dbg.location(1152,36);
						pushFollow(FOLLOW_ws_in_synpred55_Css37962);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(626);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(627);}
		dbg.location(1152,58);
		pushFollow(FOLLOW_term_in_synpred55_Css37971);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred55_Css3

	// $ANTLR start synpred56_Css3
	public final void synpred56_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:10: functionName ( ws )? LPAREN
		{
		dbg.location(1159,10);
		pushFollow(FOLLOW_functionName_in_synpred56_Css38044);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(1159,23);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:23: ( ws )?
		int alt628=2;
		try { dbg.enterSubRule(628);
		try { dbg.enterDecision(628, decisionCanBacktrack[628]);

		int LA628_0 = input.LA(1);
		if ( (LA628_0==COMMENT||LA628_0==NL||LA628_0==WS) ) {
			alt628=1;
		}
		} finally {dbg.exitDecision(628);}

		switch (alt628) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:23: ws
				{
				dbg.location(1159,23);
				pushFollow(FOLLOW_ws_in_synpred56_Css38046);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(628);}
		dbg.location(1159,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred56_Css38049); if (state.failed) return;
		}

	}
	// $ANTLR end synpred56_Css3

	// $ANTLR start synpred57_Css3
	public final void synpred57_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(1225,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred57_Css38656);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(1225,26);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:26: ( ws )?
		int alt629=2;
		try { dbg.enterSubRule(629);
		try { dbg.enterDecision(629, decisionCanBacktrack[629]);

		int LA629_0 = input.LA(1);
		if ( (LA629_0==COMMENT||LA629_0==NL||LA629_0==WS) ) {
			alt629=1;
		}
		} finally {dbg.exitDecision(629);}

		switch (alt629) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1225:26: ws
				{
				dbg.location(1225,26);
				pushFollow(FOLLOW_ws_in_synpred57_Css38658);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(629);}
		dbg.location(1225,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred57_Css3

	// $ANTLR start synpred58_Css3
	public final void synpred58_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1226:12: cp_expression
		{
		dbg.location(1226,12);
		pushFollow(FOLLOW_cp_expression_in_synpred58_Css38696);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred58_Css3

	// $ANTLR start synpred59_Css3
	public final void synpred59_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(1238,21);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt632=3;
		try { dbg.enterSubRule(632);
		try { dbg.enterDecision(632, decisionCanBacktrack[632]);

		try {
			isCyclicDecision = true;
			alt632 = dfa632.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(632);}

		switch (alt632) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:23: ws
				{
				dbg.location(1238,23);
				pushFollow(FOLLOW_ws_in_synpred59_Css38790);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(1238,28);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(1238,29);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:29: ( ws )?
				int alt630=2;
				try { dbg.enterSubRule(630);
				try { dbg.enterDecision(630, decisionCanBacktrack[630]);

				int LA630_0 = input.LA(1);
				if ( (LA630_0==COMMENT||LA630_0==NL||LA630_0==WS) ) {
					alt630=1;
				}
				} finally {dbg.exitDecision(630);}

				switch (alt630) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:29: ws
						{
						dbg.location(1238,29);
						pushFollow(FOLLOW_ws_in_synpred59_Css38795);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(630);}
				dbg.location(1238,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred59_Css38798); if (state.failed) return;dbg.location(1238,41);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:41: ( ws )?
				int alt631=2;
				try { dbg.enterSubRule(631);
				try { dbg.enterDecision(631, decisionCanBacktrack[631]);

				int LA631_0 = input.LA(1);
				if ( (LA631_0==COMMENT||LA631_0==NL||LA631_0==WS) ) {
					alt631=1;
				}
				} finally {dbg.exitDecision(631);}

				switch (alt631) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:41: ws
						{
						dbg.location(1238,41);
						pushFollow(FOLLOW_ws_in_synpred59_Css38800);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(631);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(632);}
		dbg.location(1238,63);
		pushFollow(FOLLOW_term_in_synpred59_Css38809);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred59_Css3

	// $ANTLR start synpred61_Css3
	public final void synpred61_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1273,7);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:7: ( ws )?
		int alt633=2;
		try { dbg.enterSubRule(633);
		try { dbg.enterDecision(633, decisionCanBacktrack[633]);

		int LA633_0 = input.LA(1);
		if ( (LA633_0==COMMENT||LA633_0==NL||LA633_0==WS) ) {
			alt633=1;
		}
		} finally {dbg.exitDecision(633);}

		switch (alt633) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:7: ws
				{
				dbg.location(1273,7);
				pushFollow(FOLLOW_ws_in_synpred61_Css39269);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(633);}
		dbg.location(1273,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred61_Css39272); if (state.failed) return;dbg.location(1273,17);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:17: ( ws )?
		int alt634=2;
		try { dbg.enterSubRule(634);
		try { dbg.enterDecision(634, decisionCanBacktrack[634]);

		int LA634_0 = input.LA(1);
		if ( (LA634_0==COMMENT||LA634_0==NL||LA634_0==WS) ) {
			alt634=1;
		}
		} finally {dbg.exitDecision(634);}

		switch (alt634) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:17: ws
				{
				dbg.location(1273,17);
				pushFollow(FOLLOW_ws_in_synpred61_Css39274);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(634);}
		dbg.location(1273,21);
		pushFollow(FOLLOW_cp_expression_in_synpred61_Css39277);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred61_Css3

	// $ANTLR start synpred62_Css3
	public final void synpred62_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:7: ( cp_expression_atom )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1289:8: cp_expression_atom
		{
		dbg.location(1289,8);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred62_Css39344);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred62_Css3

	// $ANTLR start synpred63_Css3
	public final void synpred63_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:10: ( ws )? cp_expression_operator
		{
		dbg.location(1291,10);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:10: ( ws )?
		int alt635=2;
		try { dbg.enterSubRule(635);
		try { dbg.enterDecision(635, decisionCanBacktrack[635]);

		int LA635_0 = input.LA(1);
		if ( (LA635_0==COMMENT||LA635_0==NL||LA635_0==WS) ) {
			alt635=1;
		}
		} finally {dbg.exitDecision(635);}

		switch (alt635) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:10: ws
				{
				dbg.location(1291,10);
				pushFollow(FOLLOW_ws_in_synpred63_Css39367);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(635);}
		dbg.location(1291,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred63_Css39370);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred63_Css3

	// $ANTLR start synpred64_Css3
	public final void synpred64_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:12: ( ws )? cp_expression_atom
		{
		dbg.location(1292,12);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:12: ( ws )?
		int alt636=2;
		try { dbg.enterSubRule(636);
		try { dbg.enterDecision(636, decisionCanBacktrack[636]);

		int LA636_0 = input.LA(1);
		if ( (LA636_0==COMMENT||LA636_0==NL||LA636_0==WS) ) {
			alt636=1;
		}
		} finally {dbg.exitDecision(636);}

		switch (alt636) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:12: ws
				{
				dbg.location(1292,12);
				pushFollow(FOLLOW_ws_in_synpred64_Css39396);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(636);}
		dbg.location(1292,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred64_Css39399);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred64_Css3

	// $ANTLR start synpred65_Css3
	public final void synpred65_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1306:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1306:14: cp_math_expression
		{
		dbg.location(1306,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred65_Css39539);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred65_Css3

	// $ANTLR start synpred66_Css3
	public final void synpred66_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1333,14);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:14: ( ws )?
		int alt637=2;
		try { dbg.enterSubRule(637);
		try { dbg.enterDecision(637, decisionCanBacktrack[637]);

		int LA637_0 = input.LA(1);
		if ( (LA637_0==COMMENT||LA637_0==NL||LA637_0==WS) ) {
			alt637=1;
		}
		} finally {dbg.exitDecision(637);}

		switch (alt637) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1333:14: ws
				{
				dbg.location(1333,14);
				pushFollow(FOLLOW_ws_in_synpred66_Css39672);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(637);}
		dbg.location(1333,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred66_Css3

	// $ANTLR start synpred67_Css3
	public final void synpred67_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:77: ( ( ws )? combinator ( ws )? )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:78: ( ws )? combinator ( ws )?
		{
		dbg.location(1365,78);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:78: ( ws )?
		int alt638=2;
		try { dbg.enterSubRule(638);
		try { dbg.enterDecision(638, decisionCanBacktrack[638]);

		int LA638_0 = input.LA(1);
		if ( (LA638_0==COMMENT||LA638_0==NL||LA638_0==WS) ) {
			alt638=1;
		}
		} finally {dbg.exitDecision(638);}

		switch (alt638) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:78: ws
				{
				dbg.location(1365,78);
				pushFollow(FOLLOW_ws_in_synpred67_Css39964);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(638);}
		dbg.location(1365,82);
		pushFollow(FOLLOW_combinator_in_synpred67_Css39967);
		combinator();
		state._fsp--;
		if (state.failed) return;dbg.location(1365,93);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:93: ( ws )?
		int alt639=2;
		try { dbg.enterSubRule(639);
		try { dbg.enterDecision(639, decisionCanBacktrack[639]);

		int LA639_0 = input.LA(1);
		if ( (LA639_0==COMMENT||LA639_0==NL||LA639_0==WS) ) {
			alt639=1;
		}
		} finally {dbg.exitDecision(639);}

		switch (alt639) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:93: ws
				{
				dbg.location(1365,93);
				pushFollow(FOLLOW_ws_in_synpred67_Css39969);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(639);}

		}

	}
	// $ANTLR end synpred67_Css3

	// $ANTLR start synpred68_Css3
	public final void synpred68_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:172: ( pseudo )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:173: pseudo
		{
		dbg.location(1365,173);
		pushFollow(FOLLOW_pseudo_in_synpred68_Css310005);
		pseudo();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred68_Css3

	// $ANTLR start synpred69_Css3
	public final void synpred69_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:191: ( ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:192: ( ws )? LPAREN
		{
		dbg.location(1365,192);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:192: ( ws )?
		int alt640=2;
		try { dbg.enterSubRule(640);
		try { dbg.enterDecision(640, decisionCanBacktrack[640]);

		int LA640_0 = input.LA(1);
		if ( (LA640_0==COMMENT||LA640_0==NL||LA640_0==WS) ) {
			alt640=1;
		}
		} finally {dbg.exitDecision(640);}

		switch (alt640) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1365:192: ws
				{
				dbg.location(1365,192);
				pushFollow(FOLLOW_ws_in_synpred69_Css310013);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(640);}
		dbg.location(1365,196);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred69_Css310016); if (state.failed) return;
		}

	}
	// $ANTLR end synpred69_Css3

	// $ANTLR start synpred70_Css3
	public final void synpred70_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:25: ( webkitKeyframeSelectors )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1374:26: webkitKeyframeSelectors
		{
		dbg.location(1374,26);
		pushFollow(FOLLOW_webkitKeyframeSelectors_in_synpred70_Css310132);
		webkitKeyframeSelectors();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred70_Css3

	// $ANTLR start synpred71_Css3
	public final void synpred71_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:20: ( ws )? COMMA
		{
		dbg.location(1552,20);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:20: ( ws )?
		int alt641=2;
		try { dbg.enterSubRule(641);
		try { dbg.enterDecision(641, decisionCanBacktrack[641]);

		int LA641_0 = input.LA(1);
		if ( (LA641_0==COMMENT||LA641_0==NL||LA641_0==WS) ) {
			alt641=1;
		}
		} finally {dbg.exitDecision(641);}

		switch (alt641) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1552:20: ws
				{
				dbg.location(1552,20);
				pushFollow(FOLLOW_ws_in_synpred71_Css311377);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(641);}
		dbg.location(1552,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred71_Css311380); if (state.failed) return;
		}

	}
	// $ANTLR end synpred71_Css3

	// Delegated rules

	public final boolean synpred53_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred53_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred59_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred59_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred67_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred67_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred61_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred61_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred62_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred62_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred68_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred68_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred54_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred54_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred70_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred70_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred46_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred46_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred50_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred50_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred56_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred56_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred48_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred48_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred64_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred64_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred51_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred51_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred57_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred57_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred49_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred49_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred65_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred65_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred63_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred63_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred71_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred71_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred66_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred66_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred69_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred69_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred41_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred41_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred58_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred58_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred55_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred55_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred47_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred47_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred52_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred52_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA7 dfa7 = new DFA7(this);
	protected DFA10 dfa10 = new DFA10(this);
	protected DFA44 dfa44 = new DFA44(this);
	protected DFA32 dfa32 = new DFA32(this);
	protected DFA47 dfa47 = new DFA47(this);
	protected DFA48 dfa48 = new DFA48(this);
	protected DFA49 dfa49 = new DFA49(this);
	protected DFA54 dfa54 = new DFA54(this);
	protected DFA59 dfa59 = new DFA59(this);
	protected DFA58 dfa58 = new DFA58(this);
	protected DFA60 dfa60 = new DFA60(this);
	protected DFA61 dfa61 = new DFA61(this);
	protected DFA66 dfa66 = new DFA66(this);
	protected DFA72 dfa72 = new DFA72(this);
	protected DFA75 dfa75 = new DFA75(this);
	protected DFA81 dfa81 = new DFA81(this);
	protected DFA87 dfa87 = new DFA87(this);
	protected DFA89 dfa89 = new DFA89(this);
	protected DFA93 dfa93 = new DFA93(this);
	protected DFA106 dfa106 = new DFA106(this);
	protected DFA115 dfa115 = new DFA115(this);
	protected DFA124 dfa124 = new DFA124(this);
	protected DFA126 dfa126 = new DFA126(this);
	protected DFA127 dfa127 = new DFA127(this);
	protected DFA141 dfa141 = new DFA141(this);
	protected DFA143 dfa143 = new DFA143(this);
	protected DFA144 dfa144 = new DFA144(this);
	protected DFA154 dfa154 = new DFA154(this);
	protected DFA155 dfa155 = new DFA155(this);
	protected DFA173 dfa173 = new DFA173(this);
	protected DFA186 dfa186 = new DFA186(this);
	protected DFA225 dfa225 = new DFA225(this);
	protected DFA237 dfa237 = new DFA237(this);
	protected DFA236 dfa236 = new DFA236(this);
	protected DFA256 dfa256 = new DFA256(this);
	protected DFA258 dfa258 = new DFA258(this);
	protected DFA263 dfa263 = new DFA263(this);
	protected DFA268 dfa268 = new DFA268(this);
	protected DFA274 dfa274 = new DFA274(this);
	protected DFA269 dfa269 = new DFA269(this);
	protected DFA291 dfa291 = new DFA291(this);
	protected DFA284 dfa284 = new DFA284(this);
	protected DFA283 dfa283 = new DFA283(this);
	protected DFA288 dfa288 = new DFA288(this);
	protected DFA293 dfa293 = new DFA293(this);
	protected DFA295 dfa295 = new DFA295(this);
	protected DFA299 dfa299 = new DFA299(this);
	protected DFA307 dfa307 = new DFA307(this);
	protected DFA306 dfa306 = new DFA306(this);
	protected DFA305 dfa305 = new DFA305(this);
	protected DFA311 dfa311 = new DFA311(this);
	protected DFA314 dfa314 = new DFA314(this);
	protected DFA337 dfa337 = new DFA337(this);
	protected DFA360 dfa360 = new DFA360(this);
	protected DFA375 dfa375 = new DFA375(this);
	protected DFA374 dfa374 = new DFA374(this);
	protected DFA389 dfa389 = new DFA389(this);
	protected DFA399 dfa399 = new DFA399(this);
	protected DFA398 dfa398 = new DFA398(this);
	protected DFA408 dfa408 = new DFA408(this);
	protected DFA414 dfa414 = new DFA414(this);
	protected DFA420 dfa420 = new DFA420(this);
	protected DFA434 dfa434 = new DFA434(this);
	protected DFA439 dfa439 = new DFA439(this);
	protected DFA446 dfa446 = new DFA446(this);
	protected DFA450 dfa450 = new DFA450(this);
	protected DFA465 dfa465 = new DFA465(this);
	protected DFA467 dfa467 = new DFA467(this);
	protected DFA480 dfa480 = new DFA480(this);
	protected DFA483 dfa483 = new DFA483(this);
	protected DFA499 dfa499 = new DFA499(this);
	protected DFA528 dfa528 = new DFA528(this);
	protected DFA529 dfa529 = new DFA529(this);
	protected DFA535 dfa535 = new DFA535(this);
	protected DFA543 dfa543 = new DFA543(this);
	protected DFA542 dfa542 = new DFA542(this);
	protected DFA546 dfa546 = new DFA546(this);
	protected DFA551 dfa551 = new DFA551(this);
	protected DFA571 dfa571 = new DFA571(this);
	protected DFA578 dfa578 = new DFA578(this);
	protected DFA573 dfa573 = new DFA573(this);
	protected DFA616 dfa616 = new DFA616(this);
	protected DFA611 dfa611 = new DFA611(this);
	protected DFA627 dfa627 = new DFA627(this);
	protected DFA632 dfa632 = new DFA632(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u009a\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff"+
			"\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff"+
			"\1\2",
			"\1\2\1\uffff\1\3\77\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\77\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "287:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\20\uffff";
	static final String DFA5_eofS =
		"\1\2\17\uffff";
	static final String DFA5_minS =
		"\1\6\1\25\1\uffff\1\25\1\24\1\25\1\64\1\24\1\25\1\uffff\1\24\1\25\1\24"+
		"\1\64\2\24";
	static final String DFA5_maxS =
		"\1\u009a\1\u009b\1\uffff\3\u009b\1\64\2\u009b\1\uffff\3\u009b\1\64\2\u009b";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\6\uffff\1\1\6\uffff";
	static final String DFA5_specialS =
		"\20\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\1\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff"+
			"\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\3\77\uffff\1\3\105\uffff\1\3",
			"",
			"\1\5\36\uffff\1\4\11\uffff\1\2\26\uffff\1\5\105\uffff\1\5",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\2\26\uffff\1\7\57\uffff\1\11\25\uffff"+
			"\1\7",
			"\1\5\36\uffff\1\4\11\uffff\1\2\26\uffff\1\5\105\uffff\1\5",
			"\1\12",
			"\1\10\1\7\50\uffff\1\2\26\uffff\1\7\105\uffff\1\7",
			"\1\13\36\uffff\1\14\40\uffff\1\13\105\uffff\1\13",
			"",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\2\26\uffff\1\7\57\uffff\1\11\25\uffff"+
			"\1\7",
			"\1\13\36\uffff\1\14\40\uffff\1\13\105\uffff\1\13",
			"\1\10\1\16\12\uffff\1\15\64\uffff\1\16\57\uffff\1\11\25\uffff\1\16",
			"\1\17",
			"\1\10\1\16\77\uffff\1\16\105\uffff\1\16",
			"\1\10\1\16\12\uffff\1\15\64\uffff\1\16\57\uffff\1\11\25\uffff\1\16"
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "288:9: ( layerStatement ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA7_eotS =
		"\5\uffff";
	static final String DFA7_eofS =
		"\1\2\4\uffff";
	static final String DFA7_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA7_maxS =
		"\1\u009a\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA7_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA7_specialS =
		"\5\uffff}>";
	static final String[] DFA7_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff"+
			"\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff"+
			"\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\2\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA7_eot = DFA.unpackEncodedString(DFA7_eotS);
	static final short[] DFA7_eof = DFA.unpackEncodedString(DFA7_eofS);
	static final char[] DFA7_min = DFA.unpackEncodedStringToUnsignedChars(DFA7_minS);
	static final char[] DFA7_max = DFA.unpackEncodedStringToUnsignedChars(DFA7_maxS);
	static final short[] DFA7_accept = DFA.unpackEncodedString(DFA7_acceptS);
	static final short[] DFA7_special = DFA.unpackEncodedString(DFA7_specialS);
	static final short[][] DFA7_transition;

	static {
		int numStates = DFA7_transitionS.length;
		DFA7_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA7_transition[i] = DFA.unpackEncodedString(DFA7_transitionS[i]);
		}
	}

	protected class DFA7 extends DFA {

		public DFA7(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 7;
			this.eot = DFA7_eot;
			this.eof = DFA7_eof;
			this.min = DFA7_min;
			this.max = DFA7_max;
			this.accept = DFA7_accept;
			this.special = DFA7_special;
			this.transition = DFA7_transition;
		}
		@Override
		public String getDescription() {
			return "290:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA10_eotS =
		"\5\uffff";
	static final String DFA10_eofS =
		"\1\1\4\uffff";
	static final String DFA10_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA10_maxS =
		"\1\u009a\1\uffff\2\u009b\1\uffff";
	static final String DFA10_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA10_specialS =
		"\5\uffff}>";
	static final String[] DFA10_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\2\uffff\1\1\1\uffff\1\1\5\uffff\3\1\7\uffff"+
			"\1\1\2\uffff\2\1\2\uffff\2\1\3\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\uffff"+
			"\1\1\1\uffff\4\1\2\uffff\1\1\6\uffff\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff"+
			"\2\1\6\uffff\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\5\1\1\uffff\3\1\1\uffff"+
			"\6\1\1\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\5\1\10\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"\1\1\1\uffff\1\3\36\uffff\1\4\40\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
	static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
	static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
	static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
	static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
	static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
	static final short[][] DFA10_transition;

	static {
		int numStates = DFA10_transitionS.length;
		DFA10_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
		}
	}

	protected class DFA10 extends DFA {

		public DFA10(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 10;
			this.eot = DFA10_eot;
			this.eof = DFA10_eof;
			this.min = DFA10_min;
			this.max = DFA10_max;
			this.accept = DFA10_accept;
			this.special = DFA10_special;
			this.transition = DFA10_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 297:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA44_eotS =
		"\10\uffff";
	static final String DFA44_eofS =
		"\10\uffff";
	static final String DFA44_minS =
		"\1\66\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA44_maxS =
		"\1\66\2\u009b\1\0\1\uffff\1\0\2\uffff";
	static final String DFA44_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA44_specialS =
		"\3\uffff\1\0\1\uffff\1\1\2\uffff}>";
	static final String[] DFA44_transitionS = {
			"\1\1",
			"\1\2\64\uffff\1\4\12\uffff\1\2\62\uffff\1\3\14\uffff\1\3\5\uffff\1\2",
			"\1\2\64\uffff\1\4\12\uffff\1\2\62\uffff\1\5\14\uffff\1\5\5\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
	static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
	static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
	static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
	static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
	static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
	static final short[][] DFA44_transition;

	static {
		int numStates = DFA44_transitionS.length;
		DFA44_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
		}
	}

	protected class DFA44 extends DFA {

		public DFA44(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 44;
			this.eot = DFA44_eot;
			this.eof = DFA44_eof;
			this.min = DFA44_min;
			this.max = DFA44_max;
			this.accept = DFA44_accept;
			this.special = DFA44_special;
			this.transition = DFA44_transition;
		}
		@Override
		public String getDescription() {
			return "331:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ws )? ( importLayer )? ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA44_3 = input.LA(1);
						 
						int index44_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index44_3);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA44_5 = input.LA(1);
						 
						int index44_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index44_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 44, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA32_eotS =
		"\4\uffff";
	static final String DFA32_eofS =
		"\2\2\2\uffff";
	static final String DFA32_minS =
		"\2\6\2\uffff";
	static final String DFA32_maxS =
		"\2\u009b\2\uffff";
	static final String DFA32_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA32_specialS =
		"\4\uffff}>";
	static final String[] DFA32_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1"+
			"\3\uffff\1\2\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1"+
			"\3\uffff\1\2\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff"+
			"\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
	static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
	static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
	static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
	static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
	static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
	static final short[][] DFA32_transition;

	static {
		int numStates = DFA32_transitionS.length;
		DFA32_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
		}
	}

	protected class DFA32 extends DFA {

		public DFA32(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 32;
			this.eot = DFA32_eot;
			this.eof = DFA32_eof;
			this.min = DFA32_min;
			this.max = DFA32_max;
			this.accept = DFA32_accept;
			this.special = DFA32_special;
			this.transition = DFA32_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 336:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA47_eotS =
		"\10\uffff";
	static final String DFA47_eofS =
		"\1\2\7\uffff";
	static final String DFA47_minS =
		"\2\6\1\uffff\1\6\1\23\1\64\1\23\1\uffff";
	static final String DFA47_maxS =
		"\2\u009b\1\uffff\2\u009b\1\u0082\1\u009b\1\uffff";
	static final String DFA47_acceptS =
		"\2\uffff\1\2\4\uffff\1\1";
	static final String DFA47_specialS =
		"\10\uffff}>";
	static final String[] DFA47_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\2\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\4\uffff\1\1\1\uffff\3\2\5\uffff\2\2\3\uffff"+
			"\1\2\4\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\2\2",
			"\1\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\3\2\uffff\1\2\17\uffff\1\2\2"+
			"\uffff\1\2\4\uffff\1\2\3\uffff\1\4\1\uffff\1\2\4\uffff\1\2\4\uffff\3"+
			"\2\11\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\3\10\uffff\1\2\12\uffff\3\2"+
			"\2\uffff\3\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff"+
			"\5\2\10\uffff\5\2\10\uffff\1\2\1\3",
			"",
			"\1\2\3\uffff\5\2\3\uffff\1\2\2\uffff\1\3\2\uffff\1\2\17\uffff\1\2\2"+
			"\uffff\1\2\4\uffff\1\2\3\uffff\1\4\1\uffff\1\2\4\uffff\1\2\4\uffff\3"+
			"\2\11\uffff\1\2\1\uffff\1\2\5\uffff\1\2\1\3\10\uffff\1\2\12\uffff\3\2"+
			"\2\uffff\3\2\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff"+
			"\5\2\10\uffff\5\2\10\uffff\1\2\1\3",
			"\1\2\1\uffff\1\6\12\uffff\1\5\64\uffff\1\6\26\uffff\1\7\56\uffff\1\6",
			"\1\7\115\uffff\1\2",
			"\1\2\1\uffff\1\6\77\uffff\1\6\26\uffff\1\7\56\uffff\1\6",
			""
	};

	static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
	static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
	static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
	static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
	static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
	static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
	static final short[][] DFA47_transition;

	static {
		int numStates = DFA47_transitionS.length;
		DFA47_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
		}
	}

	protected class DFA47 extends DFA {

		public DFA47(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 47;
			this.eot = DFA47_eot;
			this.eof = DFA47_eof;
			this.min = DFA47_min;
			this.max = DFA47_max;
			this.accept = DFA47_accept;
			this.special = DFA47_special;
			this.transition = DFA47_transition;
		}
		@Override
		public String getDescription() {
			return "343:39: ( LPAREN ( ws )? layerName ( ws )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA48_eotS =
		"\6\uffff";
	static final String DFA48_eofS =
		"\6\uffff";
	static final String DFA48_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA48_maxS =
		"\2\u009b\1\uffff\2\u009b\1\uffff";
	static final String DFA48_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA48_specialS =
		"\6\uffff}>";
	static final String[] DFA48_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\64\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\25\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA48_eot = DFA.unpackEncodedString(DFA48_eotS);
	static final short[] DFA48_eof = DFA.unpackEncodedString(DFA48_eofS);
	static final char[] DFA48_min = DFA.unpackEncodedStringToUnsignedChars(DFA48_minS);
	static final char[] DFA48_max = DFA.unpackEncodedStringToUnsignedChars(DFA48_maxS);
	static final short[] DFA48_accept = DFA.unpackEncodedString(DFA48_acceptS);
	static final short[] DFA48_special = DFA.unpackEncodedString(DFA48_specialS);
	static final short[][] DFA48_transition;

	static {
		int numStates = DFA48_transitionS.length;
		DFA48_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA48_transition[i] = DFA.unpackEncodedString(DFA48_transitionS[i]);
		}
	}

	protected class DFA48 extends DFA {

		public DFA48(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 48;
			this.eot = DFA48_eot;
			this.eof = DFA48_eof;
			this.min = DFA48_min;
			this.max = DFA48_max;
			this.accept = DFA48_accept;
			this.special = DFA48_special;
			this.transition = DFA48_transition;
		}
		@Override
		public String getDescription() {
			return "348:40: ( ws sass_use_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA49_eotS =
		"\4\uffff";
	static final String DFA49_eofS =
		"\4\uffff";
	static final String DFA49_minS =
		"\2\25\2\uffff";
	static final String DFA49_maxS =
		"\2\u009b\2\uffff";
	static final String DFA49_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA49_specialS =
		"\4\uffff}>";
	static final String[] DFA49_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA49_eot = DFA.unpackEncodedString(DFA49_eotS);
	static final short[] DFA49_eof = DFA.unpackEncodedString(DFA49_eofS);
	static final char[] DFA49_min = DFA.unpackEncodedStringToUnsignedChars(DFA49_minS);
	static final char[] DFA49_max = DFA.unpackEncodedStringToUnsignedChars(DFA49_maxS);
	static final short[] DFA49_accept = DFA.unpackEncodedString(DFA49_acceptS);
	static final short[] DFA49_special = DFA.unpackEncodedString(DFA49_specialS);
	static final short[][] DFA49_transition;

	static {
		int numStates = DFA49_transitionS.length;
		DFA49_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA49_transition[i] = DFA.unpackEncodedString(DFA49_transitionS[i]);
		}
	}

	protected class DFA49 extends DFA {

		public DFA49(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 49;
			this.eot = DFA49_eot;
			this.eof = DFA49_eof;
			this.min = DFA49_min;
			this.max = DFA49_max;
			this.accept = DFA49_accept;
			this.special = DFA49_special;
			this.transition = DFA49_transition;
		}
		@Override
		public String getDescription() {
			return "348:58: ( ws sass_use_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA54_eotS =
		"\4\uffff";
	static final String DFA54_eofS =
		"\4\uffff";
	static final String DFA54_minS =
		"\2\24\2\uffff";
	static final String DFA54_maxS =
		"\2\u009b\2\uffff";
	static final String DFA54_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA54_specialS =
		"\4\uffff}>";
	static final String[] DFA54_transitionS = {
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA54_eot = DFA.unpackEncodedString(DFA54_eotS);
	static final short[] DFA54_eof = DFA.unpackEncodedString(DFA54_eofS);
	static final char[] DFA54_min = DFA.unpackEncodedStringToUnsignedChars(DFA54_minS);
	static final char[] DFA54_max = DFA.unpackEncodedStringToUnsignedChars(DFA54_maxS);
	static final short[] DFA54_accept = DFA.unpackEncodedString(DFA54_acceptS);
	static final short[] DFA54_special = DFA.unpackEncodedString(DFA54_specialS);
	static final short[][] DFA54_transition;

	static {
		int numStates = DFA54_transitionS.length;
		DFA54_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA54_transition[i] = DFA.unpackEncodedString(DFA54_transitionS[i]);
		}
	}

	protected class DFA54 extends DFA {

		public DFA54(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 54;
			this.eot = DFA54_eot;
			this.eof = DFA54_eof;
			this.min = DFA54_min;
			this.max = DFA54_max;
			this.accept = DFA54_accept;
			this.special = DFA54_special;
			this.transition = DFA54_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 358:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA59_eotS =
		"\7\uffff";
	static final String DFA59_eofS =
		"\7\uffff";
	static final String DFA59_minS =
		"\2\25\1\uffff\2\25\1\0\1\uffff";
	static final String DFA59_maxS =
		"\2\u009b\1\uffff\2\u009b\1\0\1\uffff";
	static final String DFA59_acceptS =
		"\2\uffff\1\2\3\uffff\1\1";
	static final String DFA59_specialS =
		"\5\uffff\1\0\1\uffff}>";
	static final String[] DFA59_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\64\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\25\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\uffff",
			""
	};

	static final short[] DFA59_eot = DFA.unpackEncodedString(DFA59_eotS);
	static final short[] DFA59_eof = DFA.unpackEncodedString(DFA59_eofS);
	static final char[] DFA59_min = DFA.unpackEncodedStringToUnsignedChars(DFA59_minS);
	static final char[] DFA59_max = DFA.unpackEncodedStringToUnsignedChars(DFA59_maxS);
	static final short[] DFA59_accept = DFA.unpackEncodedString(DFA59_acceptS);
	static final short[] DFA59_special = DFA.unpackEncodedString(DFA59_specialS);
	static final short[][] DFA59_transition;

	static {
		int numStates = DFA59_transitionS.length;
		DFA59_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA59_transition[i] = DFA.unpackEncodedString(DFA59_transitionS[i]);
		}
	}

	protected class DFA59 extends DFA {

		public DFA59(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 59;
			this.eot = DFA59_eot;
			this.eof = DFA59_eof;
			this.min = DFA59_min;
			this.max = DFA59_max;
			this.accept = DFA59_accept;
			this.special = DFA59_special;
			this.transition = DFA59_transition;
		}
		@Override
		public String getDescription() {
			return "369:44: ( ws ( sass_forward_hide | sass_forward_show ) )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA59_5 = input.LA(1);
						 
						int index59_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")"),""))) ) {s = 6;}
						else if ( (evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {s = 2;}
						 
						input.seek(index59_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 59, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA58_eotS =
		"\6\uffff";
	static final String DFA58_eofS =
		"\6\uffff";
	static final String DFA58_minS =
		"\1\64\2\25\1\0\2\uffff";
	static final String DFA58_maxS =
		"\1\64\2\u009b\1\0\2\uffff";
	static final String DFA58_acceptS =
		"\4\uffff\1\1\1\2";
	static final String DFA58_specialS =
		"\3\uffff\1\0\2\uffff}>";
	static final String[] DFA58_transitionS = {
			"\1\1",
			"\1\2\77\uffff\1\2\105\uffff\1\2",
			"\1\2\36\uffff\1\3\40\uffff\1\2\105\uffff\1\2",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
	static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
	static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
	static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
	static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
	static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
	static final short[][] DFA58_transition;

	static {
		int numStates = DFA58_transitionS.length;
		DFA58_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
		}
	}

	protected class DFA58 extends DFA {

		public DFA58(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 58;
			this.eot = DFA58_eot;
			this.eof = DFA58_eof;
			this.min = DFA58_min;
			this.max = DFA58_max;
			this.accept = DFA58_accept;
			this.special = DFA58_special;
			this.transition = DFA58_transition;
		}
		@Override
		public String getDescription() {
			return "369:49: ( sass_forward_hide | sass_forward_show )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA58_3 = input.LA(1);
						 
						int index58_3 = input.index();
						input.rewind();
						s = -1;
						if ( (evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {s = 4;}
						else if ( (evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {s = 5;}
						 
						input.seek(index58_3);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 58, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA60_eotS =
		"\6\uffff";
	static final String DFA60_eofS =
		"\6\uffff";
	static final String DFA60_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA60_maxS =
		"\2\u009b\1\uffff\2\u009b\1\uffff";
	static final String DFA60_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA60_specialS =
		"\6\uffff}>";
	static final String[] DFA60_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\64\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\36\uffff\1\5\25\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA60_eot = DFA.unpackEncodedString(DFA60_eotS);
	static final short[] DFA60_eof = DFA.unpackEncodedString(DFA60_eofS);
	static final char[] DFA60_min = DFA.unpackEncodedStringToUnsignedChars(DFA60_minS);
	static final char[] DFA60_max = DFA.unpackEncodedStringToUnsignedChars(DFA60_maxS);
	static final short[] DFA60_accept = DFA.unpackEncodedString(DFA60_acceptS);
	static final short[] DFA60_special = DFA.unpackEncodedString(DFA60_specialS);
	static final short[][] DFA60_transition;

	static {
		int numStates = DFA60_transitionS.length;
		DFA60_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA60_transition[i] = DFA.unpackEncodedString(DFA60_transitionS[i]);
		}
	}

	protected class DFA60 extends DFA {

		public DFA60(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 60;
			this.eot = DFA60_eot;
			this.eof = DFA60_eof;
			this.min = DFA60_min;
			this.max = DFA60_max;
			this.accept = DFA60_accept;
			this.special = DFA60_special;
			this.transition = DFA60_transition;
		}
		@Override
		public String getDescription() {
			return "369:93: ({...}? ws sass_forward_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA61_eotS =
		"\4\uffff";
	static final String DFA61_eofS =
		"\4\uffff";
	static final String DFA61_minS =
		"\2\25\2\uffff";
	static final String DFA61_maxS =
		"\2\u009b\2\uffff";
	static final String DFA61_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA61_specialS =
		"\4\uffff}>";
	static final String[] DFA61_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
	static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
	static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
	static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
	static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
	static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
	static final short[][] DFA61_transition;

	static {
		int numStates = DFA61_transitionS.length;
		DFA61_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
		}
	}

	protected class DFA61 extends DFA {

		public DFA61(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 61;
			this.eot = DFA61_eot;
			this.eof = DFA61_eof;
			this.min = DFA61_min;
			this.max = DFA61_max;
			this.accept = DFA61_accept;
			this.special = DFA61_special;
			this.transition = DFA61_transition;
		}
		@Override
		public String getDescription() {
			return "369:141: ({...}? ws sass_forward_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA66_eotS =
		"\4\uffff";
	static final String DFA66_eofS =
		"\4\uffff";
	static final String DFA66_minS =
		"\2\24\2\uffff";
	static final String DFA66_maxS =
		"\2\u009b\2\uffff";
	static final String DFA66_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA66_specialS =
		"\4\uffff}>";
	static final String[] DFA66_transitionS = {
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA66_eot = DFA.unpackEncodedString(DFA66_eotS);
	static final short[] DFA66_eof = DFA.unpackEncodedString(DFA66_eofS);
	static final char[] DFA66_min = DFA.unpackEncodedStringToUnsignedChars(DFA66_minS);
	static final char[] DFA66_max = DFA.unpackEncodedStringToUnsignedChars(DFA66_maxS);
	static final short[] DFA66_accept = DFA.unpackEncodedString(DFA66_acceptS);
	static final short[] DFA66_special = DFA.unpackEncodedString(DFA66_specialS);
	static final short[][] DFA66_transition;

	static {
		int numStates = DFA66_transitionS.length;
		DFA66_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA66_transition[i] = DFA.unpackEncodedString(DFA66_transitionS[i]);
		}
	}

	protected class DFA66 extends DFA {

		public DFA66(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 66;
			this.eot = DFA66_eot;
			this.eof = DFA66_eof;
			this.min = DFA66_min;
			this.max = DFA66_max;
			this.accept = DFA66_accept;
			this.special = DFA66_special;
			this.transition = DFA66_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 379:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA72_eotS =
		"\4\uffff";
	static final String DFA72_eofS =
		"\4\uffff";
	static final String DFA72_minS =
		"\2\24\2\uffff";
	static final String DFA72_maxS =
		"\2\u009b\2\uffff";
	static final String DFA72_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA72_specialS =
		"\4\uffff}>";
	static final String[] DFA72_transitionS = {
			"\1\3\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\36\uffff\1\2\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
	static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
	static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
	static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
	static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
	static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
	static final short[][] DFA72_transition;

	static {
		int numStates = DFA72_transitionS.length;
		DFA72_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
		}
	}

	protected class DFA72 extends DFA {

		public DFA72(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 72;
			this.eot = DFA72_eot;
			this.eof = DFA72_eof;
			this.min = DFA72_min;
			this.max = DFA72_max;
			this.accept = DFA72_accept;
			this.special = DFA72_special;
			this.transition = DFA72_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 389:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA75_eotS =
		"\4\uffff";
	static final String DFA75_eofS =
		"\4\uffff";
	static final String DFA75_minS =
		"\2\24\2\uffff";
	static final String DFA75_maxS =
		"\2\u009b\2\uffff";
	static final String DFA75_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA75_specialS =
		"\4\uffff}>";
	static final String[] DFA75_transitionS = {
			"\1\3\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\36\uffff\1\2\40\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA75_eot = DFA.unpackEncodedString(DFA75_eotS);
	static final short[] DFA75_eof = DFA.unpackEncodedString(DFA75_eofS);
	static final char[] DFA75_min = DFA.unpackEncodedStringToUnsignedChars(DFA75_minS);
	static final char[] DFA75_max = DFA.unpackEncodedStringToUnsignedChars(DFA75_maxS);
	static final short[] DFA75_accept = DFA.unpackEncodedString(DFA75_acceptS);
	static final short[] DFA75_special = DFA.unpackEncodedString(DFA75_specialS);
	static final short[][] DFA75_transition;

	static {
		int numStates = DFA75_transitionS.length;
		DFA75_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA75_transition[i] = DFA.unpackEncodedString(DFA75_transitionS[i]);
		}
	}

	protected class DFA75 extends DFA {

		public DFA75(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 75;
			this.eot = DFA75_eot;
			this.eof = DFA75_eof;
			this.min = DFA75_min;
			this.max = DFA75_max;
			this.accept = DFA75_accept;
			this.special = DFA75_special;
			this.transition = DFA75_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 394:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA81_eotS =
		"\6\uffff";
	static final String DFA81_eofS =
		"\6\uffff";
	static final String DFA81_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA81_maxS =
		"\2\u009b\1\0\1\uffff\1\0\1\uffff";
	static final String DFA81_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA81_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA81_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3"+
			"\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\5\3\1\4\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3"+
			"\6\uffff\1\3\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
	static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
	static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
	static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
	static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
	static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
	static final short[][] DFA81_transition;

	static {
		int numStates = DFA81_transitionS.length;
		DFA81_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
		}
	}

	protected class DFA81 extends DFA {

		public DFA81(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 81;
			this.eot = DFA81_eot;
			this.eof = DFA81_eof;
			this.min = DFA81_min;
			this.max = DFA81_max;
			this.accept = DFA81_accept;
			this.special = DFA81_special;
			this.transition = DFA81_transition;
		}
		@Override
		public String getDescription() {
			return "410:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA81_2 = input.LA(1);
						 
						int index81_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index81_2);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA81_4 = input.LA(1);
						 
						int index81_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index81_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 81, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA87_eotS =
		"\4\uffff";
	static final String DFA87_eofS =
		"\4\uffff";
	static final String DFA87_minS =
		"\2\6\2\uffff";
	static final String DFA87_maxS =
		"\2\u009b\2\uffff";
	static final String DFA87_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA87_specialS =
		"\4\uffff}>";
	static final String[] DFA87_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA87_eot = DFA.unpackEncodedString(DFA87_eotS);
	static final short[] DFA87_eof = DFA.unpackEncodedString(DFA87_eofS);
	static final char[] DFA87_min = DFA.unpackEncodedStringToUnsignedChars(DFA87_minS);
	static final char[] DFA87_max = DFA.unpackEncodedStringToUnsignedChars(DFA87_maxS);
	static final short[] DFA87_accept = DFA.unpackEncodedString(DFA87_acceptS);
	static final short[] DFA87_special = DFA.unpackEncodedString(DFA87_specialS);
	static final short[][] DFA87_transition;

	static {
		int numStates = DFA87_transitionS.length;
		DFA87_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA87_transition[i] = DFA.unpackEncodedString(DFA87_transitionS[i]);
		}
	}

	protected class DFA87 extends DFA {

		public DFA87(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 87;
			this.eot = DFA87_eot;
			this.eof = DFA87_eof;
			this.min = DFA87_min;
			this.max = DFA87_max;
			this.accept = DFA87_accept;
			this.special = DFA87_special;
			this.transition = DFA87_transition;
		}
		@Override
		public String getDescription() {
			return "421:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA89_eotS =
		"\4\uffff";
	static final String DFA89_eofS =
		"\4\uffff";
	static final String DFA89_minS =
		"\2\6\2\uffff";
	static final String DFA89_maxS =
		"\2\u009b\2\uffff";
	static final String DFA89_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA89_specialS =
		"\4\uffff}>";
	static final String[] DFA89_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA89_eot = DFA.unpackEncodedString(DFA89_eotS);
	static final short[] DFA89_eof = DFA.unpackEncodedString(DFA89_eofS);
	static final char[] DFA89_min = DFA.unpackEncodedStringToUnsignedChars(DFA89_minS);
	static final char[] DFA89_max = DFA.unpackEncodedStringToUnsignedChars(DFA89_maxS);
	static final short[] DFA89_accept = DFA.unpackEncodedString(DFA89_acceptS);
	static final short[] DFA89_special = DFA.unpackEncodedString(DFA89_specialS);
	static final short[][] DFA89_transition;

	static {
		int numStates = DFA89_transitionS.length;
		DFA89_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA89_transition[i] = DFA.unpackEncodedString(DFA89_transitionS[i]);
		}
	}

	protected class DFA89 extends DFA {

		public DFA89(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 89;
			this.eot = DFA89_eot;
			this.eof = DFA89_eof;
			this.min = DFA89_min;
			this.max = DFA89_max;
			this.accept = DFA89_accept;
			this.special = DFA89_special;
			this.transition = DFA89_transition;
		}
		@Override
		public String getDescription() {
			return "422:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA93_eotS =
		"\4\uffff";
	static final String DFA93_eofS =
		"\2\2\2\uffff";
	static final String DFA93_minS =
		"\2\6\2\uffff";
	static final String DFA93_maxS =
		"\2\u009b\2\uffff";
	static final String DFA93_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA93_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA93_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\6\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2"+
			"\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff"+
			"\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA93_eot = DFA.unpackEncodedString(DFA93_eotS);
	static final short[] DFA93_eof = DFA.unpackEncodedString(DFA93_eofS);
	static final char[] DFA93_min = DFA.unpackEncodedStringToUnsignedChars(DFA93_minS);
	static final char[] DFA93_max = DFA.unpackEncodedStringToUnsignedChars(DFA93_maxS);
	static final short[] DFA93_accept = DFA.unpackEncodedString(DFA93_acceptS);
	static final short[] DFA93_special = DFA.unpackEncodedString(DFA93_specialS);
	static final short[][] DFA93_transition;

	static {
		int numStates = DFA93_transitionS.length;
		DFA93_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA93_transition[i] = DFA.unpackEncodedString(DFA93_transitionS[i]);
		}
	}

	protected class DFA93 extends DFA {

		public DFA93(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 93;
			this.eot = DFA93_eot;
			this.eof = DFA93_eof;
			this.min = DFA93_min;
			this.max = DFA93_max;
			this.accept = DFA93_accept;
			this.special = DFA93_special;
			this.transition = DFA93_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 439:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA93_0 = input.LA(1);
						 
						int index93_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA93_0==COMMENT||LA93_0==NL||LA93_0==WS) ) {s = 1;}
						else if ( (LA93_0==EOF||(LA93_0 >= AT_IDENT && LA93_0 <= AT_SIGN)||(LA93_0 >= BOTTOMCENTER_SYM && LA93_0 <= BOTTOMRIGHT_SYM)||(LA93_0 >= CHARSET_SYM && LA93_0 <= COLON)||LA93_0==CONTAINER_SYM||LA93_0==COUNTER_STYLE_SYM||(LA93_0 >= DCOLON && LA93_0 <= DOT)||LA93_0==FONT_FACE_SYM||(LA93_0 >= GEN && LA93_0 <= GREATER)||(LA93_0 >= HASH && LA93_0 <= HASH_SYMBOL)||LA93_0==IDENT||LA93_0==IMPORT_SYM||LA93_0==KEYFRAMES_SYM||(LA93_0 >= LAYER_SYM && LA93_0 <= LEFTTOP_SYM)||LA93_0==LESS_AND||(LA93_0 >= MEDIA_SYM && LA93_0 <= MOZ_DOCUMENT_SYM)||LA93_0==NAMESPACE_SYM||LA93_0==PAGE_SYM||(LA93_0 >= PIPE && LA93_0 <= PLUS)||LA93_0==RBRACE||(LA93_0 >= RIGHTBOTTOM_SYM && LA93_0 <= RPAREN)||(LA93_0 >= SASS_AT_ROOT && LA93_0 <= SASS_DEBUG)||(LA93_0 >= SASS_EACH && LA93_0 <= SASS_ELSE)||(LA93_0 >= SASS_EXTEND && LA93_0 <= SASS_FUNCTION)||(LA93_0 >= SASS_IF && LA93_0 <= SASS_MIXIN)||(LA93_0 >= SASS_RETURN && LA93_0 <= SEMI)||LA93_0==STAR||LA93_0==SUPPORTS_SYM||LA93_0==TILDE||(LA93_0 >= TOPCENTER_SYM && LA93_0 <= TOPRIGHT_SYM)||LA93_0==VARIABLE||LA93_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA93_0==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index93_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA93_1 = input.LA(1);
						 
						int index93_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA93_1==EOF||(LA93_1 >= AT_IDENT && LA93_1 <= AT_SIGN)||(LA93_1 >= BOTTOMCENTER_SYM && LA93_1 <= BOTTOMRIGHT_SYM)||(LA93_1 >= CHARSET_SYM && LA93_1 <= COLON)||LA93_1==CONTAINER_SYM||LA93_1==COUNTER_STYLE_SYM||(LA93_1 >= DCOLON && LA93_1 <= DOT)||LA93_1==FONT_FACE_SYM||(LA93_1 >= GEN && LA93_1 <= GREATER)||(LA93_1 >= HASH && LA93_1 <= HASH_SYMBOL)||LA93_1==IDENT||LA93_1==IMPORT_SYM||LA93_1==KEYFRAMES_SYM||(LA93_1 >= LAYER_SYM && LA93_1 <= LEFTTOP_SYM)||LA93_1==LESS_AND||(LA93_1 >= MEDIA_SYM && LA93_1 <= MOZ_DOCUMENT_SYM)||LA93_1==NAMESPACE_SYM||LA93_1==PAGE_SYM||(LA93_1 >= PIPE && LA93_1 <= PLUS)||LA93_1==RBRACE||(LA93_1 >= RIGHTBOTTOM_SYM && LA93_1 <= RPAREN)||(LA93_1 >= SASS_AT_ROOT && LA93_1 <= SASS_DEBUG)||(LA93_1 >= SASS_EACH && LA93_1 <= SASS_ELSE)||(LA93_1 >= SASS_ERROR && LA93_1 <= SASS_FUNCTION)||(LA93_1 >= SASS_IF && LA93_1 <= SASS_MIXIN)||(LA93_1 >= SASS_RETURN && LA93_1 <= SEMI)||LA93_1==STAR||LA93_1==SUPPORTS_SYM||LA93_1==TILDE||(LA93_1 >= TOPCENTER_SYM && LA93_1 <= TOPRIGHT_SYM)||LA93_1==VARIABLE||LA93_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA93_1==COMMENT||LA93_1==NL||LA93_1==WS) ) {s = 1;}
						else if ( (LA93_1==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index93_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 93, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA106_eotS =
		"\4\uffff";
	static final String DFA106_eofS =
		"\4\uffff";
	static final String DFA106_minS =
		"\2\23\2\uffff";
	static final String DFA106_maxS =
		"\2\u009b\2\uffff";
	static final String DFA106_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA106_specialS =
		"\4\uffff}>";
	static final String[] DFA106_transitionS = {
			"\1\2\1\uffff\1\1\77\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\2\1\uffff\1\1\77\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA106_eot = DFA.unpackEncodedString(DFA106_eotS);
	static final short[] DFA106_eof = DFA.unpackEncodedString(DFA106_eofS);
	static final char[] DFA106_min = DFA.unpackEncodedStringToUnsignedChars(DFA106_minS);
	static final char[] DFA106_max = DFA.unpackEncodedStringToUnsignedChars(DFA106_maxS);
	static final short[] DFA106_accept = DFA.unpackEncodedString(DFA106_acceptS);
	static final short[] DFA106_special = DFA.unpackEncodedString(DFA106_specialS);
	static final short[][] DFA106_transition;

	static {
		int numStates = DFA106_transitionS.length;
		DFA106_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA106_transition[i] = DFA.unpackEncodedString(DFA106_transitionS[i]);
		}
	}

	protected class DFA106 extends DFA {

		public DFA106(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 106;
			this.eot = DFA106_eot;
			this.eof = DFA106_eof;
			this.min = DFA106_min;
			this.max = DFA106_max;
			this.accept = DFA106_accept;
			this.special = DFA106_special;
			this.transition = DFA106_transition;
		}
		@Override
		public String getDescription() {
			return "459:42: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA115_eotS =
		"\6\uffff";
	static final String DFA115_eofS =
		"\2\3\4\uffff";
	static final String DFA115_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA115_maxS =
		"\2\u009b\1\0\1\uffff\1\0\1\uffff";
	static final String DFA115_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA115_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA115_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1"+
			"\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\5\3\10\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1"+
			"\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\3\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\5\3\1\uffff\3\3\1\uffff\5\3\1\4\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\5\3\10\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
	static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
	static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
	static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
	static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
	static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
	static final short[][] DFA115_transition;

	static {
		int numStates = DFA115_transitionS.length;
		DFA115_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
		}
	}

	protected class DFA115 extends DFA {

		public DFA115(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 115;
			this.eot = DFA115_eot;
			this.eof = DFA115_eof;
			this.min = DFA115_min;
			this.max = DFA115_max;
			this.accept = DFA115_accept;
			this.special = DFA115_special;
			this.transition = DFA115_transition;
		}
		@Override
		public String getDescription() {
			return "480:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA115_2 = input.LA(1);
						 
						int index115_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred15_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index115_2);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA115_4 = input.LA(1);
						 
						int index115_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred15_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index115_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 115, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA124_eotS =
		"\4\uffff";
	static final String DFA124_eofS =
		"\4\uffff";
	static final String DFA124_minS =
		"\2\25\2\uffff";
	static final String DFA124_maxS =
		"\2\u009b\2\uffff";
	static final String DFA124_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA124_specialS =
		"\4\uffff}>";
	static final String[] DFA124_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA124_eot = DFA.unpackEncodedString(DFA124_eotS);
	static final short[] DFA124_eof = DFA.unpackEncodedString(DFA124_eofS);
	static final char[] DFA124_min = DFA.unpackEncodedStringToUnsignedChars(DFA124_minS);
	static final char[] DFA124_max = DFA.unpackEncodedStringToUnsignedChars(DFA124_maxS);
	static final short[] DFA124_accept = DFA.unpackEncodedString(DFA124_acceptS);
	static final short[] DFA124_special = DFA.unpackEncodedString(DFA124_specialS);
	static final short[][] DFA124_transition;

	static {
		int numStates = DFA124_transitionS.length;
		DFA124_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA124_transition[i] = DFA.unpackEncodedString(DFA124_transitionS[i]);
		}
	}

	protected class DFA124 extends DFA {

		public DFA124(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 124;
			this.eot = DFA124_eot;
			this.eof = DFA124_eof;
			this.min = DFA124_min;
			this.max = DFA124_max;
			this.accept = DFA124_accept;
			this.special = DFA124_special;
			this.transition = DFA124_transition;
		}
		@Override
		public String getDescription() {
			return "515:21: ( ws supportsWithOperator )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA126_eotS =
		"\4\uffff";
	static final String DFA126_eofS =
		"\4\uffff";
	static final String DFA126_minS =
		"\2\25\2\uffff";
	static final String DFA126_maxS =
		"\2\u009b\2\uffff";
	static final String DFA126_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA126_specialS =
		"\4\uffff}>";
	static final String[] DFA126_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA126_eot = DFA.unpackEncodedString(DFA126_eotS);
	static final short[] DFA126_eof = DFA.unpackEncodedString(DFA126_eofS);
	static final char[] DFA126_min = DFA.unpackEncodedStringToUnsignedChars(DFA126_minS);
	static final char[] DFA126_max = DFA.unpackEncodedStringToUnsignedChars(DFA126_maxS);
	static final short[] DFA126_accept = DFA.unpackEncodedString(DFA126_acceptS);
	static final short[] DFA126_special = DFA.unpackEncodedString(DFA126_specialS);
	static final short[][] DFA126_transition;

	static {
		int numStates = DFA126_transitionS.length;
		DFA126_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA126_transition[i] = DFA.unpackEncodedString(DFA126_transitionS[i]);
		}
	}

	protected class DFA126 extends DFA {

		public DFA126(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 126;
			this.eot = DFA126_eot;
			this.eof = DFA126_eof;
			this.min = DFA126_min;
			this.max = DFA126_max;
			this.accept = DFA126_accept;
			this.special = DFA126_special;
			this.transition = DFA126_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 520:29: ( ws supportsConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA127_eotS =
		"\4\uffff";
	static final String DFA127_eofS =
		"\4\uffff";
	static final String DFA127_minS =
		"\2\25\2\uffff";
	static final String DFA127_maxS =
		"\2\u009b\2\uffff";
	static final String DFA127_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA127_specialS =
		"\4\uffff}>";
	static final String[] DFA127_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA127_eot = DFA.unpackEncodedString(DFA127_eotS);
	static final short[] DFA127_eof = DFA.unpackEncodedString(DFA127_eofS);
	static final char[] DFA127_min = DFA.unpackEncodedStringToUnsignedChars(DFA127_minS);
	static final char[] DFA127_max = DFA.unpackEncodedStringToUnsignedChars(DFA127_maxS);
	static final short[] DFA127_accept = DFA.unpackEncodedString(DFA127_acceptS);
	static final short[] DFA127_special = DFA.unpackEncodedString(DFA127_specialS);
	static final short[][] DFA127_transition;

	static {
		int numStates = DFA127_transitionS.length;
		DFA127_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA127_transition[i] = DFA.unpackEncodedString(DFA127_transitionS[i]);
		}
	}

	protected class DFA127 extends DFA {

		public DFA127(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 127;
			this.eot = DFA127_eot;
			this.eof = DFA127_eof;
			this.min = DFA127_min;
			this.max = DFA127_max;
			this.accept = DFA127_accept;
			this.special = DFA127_special;
			this.transition = DFA127_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 521:31: ( ws supportsDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA141_eotS =
		"\4\uffff";
	static final String DFA141_eofS =
		"\4\uffff";
	static final String DFA141_minS =
		"\2\25\2\uffff";
	static final String DFA141_maxS =
		"\2\u009b\2\uffff";
	static final String DFA141_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA141_specialS =
		"\4\uffff}>";
	static final String[] DFA141_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA141_eot = DFA.unpackEncodedString(DFA141_eotS);
	static final short[] DFA141_eof = DFA.unpackEncodedString(DFA141_eofS);
	static final char[] DFA141_min = DFA.unpackEncodedStringToUnsignedChars(DFA141_minS);
	static final char[] DFA141_max = DFA.unpackEncodedStringToUnsignedChars(DFA141_maxS);
	static final short[] DFA141_accept = DFA.unpackEncodedString(DFA141_acceptS);
	static final short[] DFA141_special = DFA.unpackEncodedString(DFA141_specialS);
	static final short[][] DFA141_transition;

	static {
		int numStates = DFA141_transitionS.length;
		DFA141_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA141_transition[i] = DFA.unpackEncodedString(DFA141_transitionS[i]);
		}
	}

	protected class DFA141 extends DFA {

		public DFA141(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 141;
			this.eot = DFA141_eot;
			this.eof = DFA141_eof;
			this.min = DFA141_min;
			this.max = DFA141_max;
			this.accept = DFA141_accept;
			this.special = DFA141_special;
			this.transition = DFA141_transition;
		}
		@Override
		public String getDescription() {
			return "560:34: ( ws containerQueryWithOperator )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA143_eotS =
		"\4\uffff";
	static final String DFA143_eofS =
		"\4\uffff";
	static final String DFA143_minS =
		"\2\25\2\uffff";
	static final String DFA143_maxS =
		"\2\u009b\2\uffff";
	static final String DFA143_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA143_specialS =
		"\4\uffff}>";
	static final String[] DFA143_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA143_eot = DFA.unpackEncodedString(DFA143_eotS);
	static final short[] DFA143_eof = DFA.unpackEncodedString(DFA143_eofS);
	static final char[] DFA143_min = DFA.unpackEncodedStringToUnsignedChars(DFA143_minS);
	static final char[] DFA143_max = DFA.unpackEncodedStringToUnsignedChars(DFA143_maxS);
	static final short[] DFA143_accept = DFA.unpackEncodedString(DFA143_acceptS);
	static final short[] DFA143_special = DFA.unpackEncodedString(DFA143_specialS);
	static final short[][] DFA143_transition;

	static {
		int numStates = DFA143_transitionS.length;
		DFA143_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA143_transition[i] = DFA.unpackEncodedString(DFA143_transitionS[i]);
		}
	}

	protected class DFA143 extends DFA {

		public DFA143(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 143;
			this.eot = DFA143_eot;
			this.eof = DFA143_eof;
			this.min = DFA143_min;
			this.max = DFA143_max;
			this.accept = DFA143_accept;
			this.special = DFA143_special;
			this.transition = DFA143_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 565:35: ( ws containerQueryConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA144_eotS =
		"\4\uffff";
	static final String DFA144_eofS =
		"\4\uffff";
	static final String DFA144_minS =
		"\2\25\2\uffff";
	static final String DFA144_maxS =
		"\2\u009b\2\uffff";
	static final String DFA144_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA144_specialS =
		"\4\uffff}>";
	static final String[] DFA144_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1"+
			"\1",
			"",
			""
	};

	static final short[] DFA144_eot = DFA.unpackEncodedString(DFA144_eotS);
	static final short[] DFA144_eof = DFA.unpackEncodedString(DFA144_eofS);
	static final char[] DFA144_min = DFA.unpackEncodedStringToUnsignedChars(DFA144_minS);
	static final char[] DFA144_max = DFA.unpackEncodedStringToUnsignedChars(DFA144_maxS);
	static final short[] DFA144_accept = DFA.unpackEncodedString(DFA144_acceptS);
	static final short[] DFA144_special = DFA.unpackEncodedString(DFA144_specialS);
	static final short[][] DFA144_transition;

	static {
		int numStates = DFA144_transitionS.length;
		DFA144_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA144_transition[i] = DFA.unpackEncodedString(DFA144_transitionS[i]);
		}
	}

	protected class DFA144 extends DFA {

		public DFA144(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 144;
			this.eot = DFA144_eot;
			this.eof = DFA144_eof;
			this.min = DFA144_min;
			this.max = DFA144_max;
			this.accept = DFA144_accept;
			this.special = DFA144_special;
			this.transition = DFA144_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 566:37: ( ws containerQueryDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA154_eotS =
		"\4\uffff";
	static final String DFA154_eofS =
		"\4\uffff";
	static final String DFA154_minS =
		"\2\25\2\uffff";
	static final String DFA154_maxS =
		"\2\u009b\2\uffff";
	static final String DFA154_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA154_specialS =
		"\4\uffff}>";
	static final String[] DFA154_transitionS = {
			"\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA154_eot = DFA.unpackEncodedString(DFA154_eotS);
	static final short[] DFA154_eof = DFA.unpackEncodedString(DFA154_eofS);
	static final char[] DFA154_min = DFA.unpackEncodedStringToUnsignedChars(DFA154_minS);
	static final char[] DFA154_max = DFA.unpackEncodedStringToUnsignedChars(DFA154_maxS);
	static final short[] DFA154_accept = DFA.unpackEncodedString(DFA154_acceptS);
	static final short[] DFA154_special = DFA.unpackEncodedString(DFA154_specialS);
	static final short[][] DFA154_transition;

	static {
		int numStates = DFA154_transitionS.length;
		DFA154_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA154_transition[i] = DFA.unpackEncodedString(DFA154_transitionS[i]);
		}
	}

	protected class DFA154 extends DFA {

		public DFA154(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 154;
			this.eot = DFA154_eot;
			this.eof = DFA154_eof;
			this.min = DFA154_min;
			this.max = DFA154_max;
			this.accept = DFA154_accept;
			this.special = DFA154_special;
			this.transition = DFA154_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 603:31: ( ws styleQueryConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA155_eotS =
		"\4\uffff";
	static final String DFA155_eofS =
		"\4\uffff";
	static final String DFA155_minS =
		"\2\25\2\uffff";
	static final String DFA155_maxS =
		"\2\u009b\2\uffff";
	static final String DFA155_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA155_specialS =
		"\4\uffff}>";
	static final String[] DFA155_transitionS = {
			"\1\1\77\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\36\uffff\1\3\40\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA155_eot = DFA.unpackEncodedString(DFA155_eotS);
	static final short[] DFA155_eof = DFA.unpackEncodedString(DFA155_eofS);
	static final char[] DFA155_min = DFA.unpackEncodedStringToUnsignedChars(DFA155_minS);
	static final char[] DFA155_max = DFA.unpackEncodedStringToUnsignedChars(DFA155_maxS);
	static final short[] DFA155_accept = DFA.unpackEncodedString(DFA155_acceptS);
	static final short[] DFA155_special = DFA.unpackEncodedString(DFA155_specialS);
	static final short[][] DFA155_transition;

	static {
		int numStates = DFA155_transitionS.length;
		DFA155_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA155_transition[i] = DFA.unpackEncodedString(DFA155_transitionS[i]);
		}
	}

	protected class DFA155 extends DFA {

		public DFA155(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 155;
			this.eot = DFA155_eot;
			this.eof = DFA155_eof;
			this.min = DFA155_min;
			this.max = DFA155_max;
			this.accept = DFA155_accept;
			this.special = DFA155_special;
			this.transition = DFA155_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 604:33: ( ws styleQueryDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA173_eotS =
		"\4\uffff";
	static final String DFA173_eofS =
		"\4\uffff";
	static final String DFA173_minS =
		"\2\23\2\uffff";
	static final String DFA173_maxS =
		"\2\u009b\2\uffff";
	static final String DFA173_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA173_specialS =
		"\4\uffff}>";
	static final String[] DFA173_transitionS = {
			"\1\2\1\uffff\1\1\77\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\2\1\uffff\1\1\77\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA173_eot = DFA.unpackEncodedString(DFA173_eotS);
	static final short[] DFA173_eof = DFA.unpackEncodedString(DFA173_eofS);
	static final char[] DFA173_min = DFA.unpackEncodedStringToUnsignedChars(DFA173_minS);
	static final char[] DFA173_max = DFA.unpackEncodedStringToUnsignedChars(DFA173_maxS);
	static final short[] DFA173_accept = DFA.unpackEncodedString(DFA173_acceptS);
	static final short[] DFA173_special = DFA.unpackEncodedString(DFA173_specialS);
	static final short[][] DFA173_transition;

	static {
		int numStates = DFA173_transitionS.length;
		DFA173_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA173_transition[i] = DFA.unpackEncodedString(DFA173_transitionS[i]);
		}
	}

	protected class DFA173 extends DFA {

		public DFA173(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 173;
			this.eot = DFA173_eot;
			this.eof = DFA173_eof;
			this.min = DFA173_min;
			this.max = DFA173_max;
			this.accept = DFA173_accept;
			this.special = DFA173_special;
			this.transition = DFA173_transition;
		}
		@Override
		public String getDescription() {
			return "634:25: ( ( ws )? COLON ( ws )? sizeFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA186_eotS =
		"\12\uffff";
	static final String DFA186_eofS =
		"\12\uffff";
	static final String DFA186_minS =
		"\1\75\2\25\1\24\1\25\1\uffff\1\64\1\24\1\uffff\1\24";
	static final String DFA186_maxS =
		"\1\75\4\u009b\1\uffff\1\64\1\u009b\1\uffff\1\u009b";
	static final String DFA186_acceptS =
		"\5\uffff\1\1\2\uffff\1\2\1\uffff";
	static final String DFA186_specialS =
		"\12\uffff}>";
	static final String[] DFA186_transitionS = {
			"\1\1",
			"\1\2\77\uffff\1\2\105\uffff\1\2",
			"\1\4\36\uffff\1\3\11\uffff\1\5\26\uffff\1\4\105\uffff\1\4",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\5\26\uffff\1\7\57\uffff\1\10\25\uffff"+
			"\1\7",
			"\1\4\36\uffff\1\3\11\uffff\1\5\26\uffff\1\4\105\uffff\1\4",
			"",
			"\1\11",
			"\1\10\1\7\50\uffff\1\5\26\uffff\1\7\105\uffff\1\7",
			"",
			"\1\10\1\7\12\uffff\1\6\35\uffff\1\5\26\uffff\1\7\57\uffff\1\10\25\uffff"+
			"\1\7"
	};

	static final short[] DFA186_eot = DFA.unpackEncodedString(DFA186_eotS);
	static final short[] DFA186_eof = DFA.unpackEncodedString(DFA186_eofS);
	static final char[] DFA186_min = DFA.unpackEncodedStringToUnsignedChars(DFA186_minS);
	static final char[] DFA186_max = DFA.unpackEncodedStringToUnsignedChars(DFA186_maxS);
	static final short[] DFA186_accept = DFA.unpackEncodedString(DFA186_acceptS);
	static final short[] DFA186_special = DFA.unpackEncodedString(DFA186_specialS);
	static final short[][] DFA186_transition;

	static {
		int numStates = DFA186_transitionS.length;
		DFA186_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA186_transition[i] = DFA.unpackEncodedString(DFA186_transitionS[i]);
		}
	}

	protected class DFA186 extends DFA {

		public DFA186(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 186;
			this.eot = DFA186_eot;
			this.eof = DFA186_eof;
			this.min = DFA186_min;
			this.max = DFA186_max;
			this.accept = DFA186_accept;
			this.special = DFA186_special;
			this.transition = DFA186_transition;
		}
		@Override
		public String getDescription() {
			return "668:1: layerAtRule : ( layerBlock | layerStatement );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA225_eotS =
		"\4\uffff";
	static final String DFA225_eofS =
		"\1\2\3\uffff";
	static final String DFA225_minS =
		"\2\24\2\uffff";
	static final String DFA225_maxS =
		"\2\u009b\2\uffff";
	static final String DFA225_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA225_specialS =
		"\4\uffff}>";
	static final String[] DFA225_transitionS = {
			"\1\3\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA225_eot = DFA.unpackEncodedString(DFA225_eotS);
	static final short[] DFA225_eof = DFA.unpackEncodedString(DFA225_eofS);
	static final char[] DFA225_min = DFA.unpackEncodedStringToUnsignedChars(DFA225_minS);
	static final char[] DFA225_max = DFA.unpackEncodedStringToUnsignedChars(DFA225_maxS);
	static final short[] DFA225_accept = DFA.unpackEncodedString(DFA225_acceptS);
	static final short[] DFA225_special = DFA.unpackEncodedString(DFA225_specialS);
	static final short[][] DFA225_transition;

	static {
		int numStates = DFA225_transitionS.length;
		DFA225_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA225_transition[i] = DFA.unpackEncodedString(DFA225_transitionS[i]);
		}
	}

	protected class DFA225 extends DFA {

		public DFA225(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 225;
			this.eot = DFA225_eot;
			this.eof = DFA225_eof;
			this.min = DFA225_min;
			this.max = DFA225_max;
			this.accept = DFA225_accept;
			this.special = DFA225_special;
			this.transition = DFA225_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 751:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA237_eotS =
		"\6\uffff";
	static final String DFA237_eofS =
		"\6\uffff";
	static final String DFA237_minS =
		"\3\6\2\uffff\1\6";
	static final String DFA237_maxS =
		"\3\u009b\2\uffff\1\u009b";
	static final String DFA237_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA237_specialS =
		"\6\uffff}>";
	static final String[] DFA237_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\2\uffff\1\4\17\uffff\1\4\2\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3\4\11\uffff"+
			"\3\4\5\uffff\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\1\1\uffff"+
			"\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3"+
			"\4\11\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4"+
			"\2\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\5\4\2\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3"+
			"\4\11\uffff\3\4\5\uffff\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4"+
			"\2\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\6\4\1\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\2\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3"+
			"\4\11\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4"+
			"\2\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff"+
			"\5\4\2\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA237_eot = DFA.unpackEncodedString(DFA237_eotS);
	static final short[] DFA237_eof = DFA.unpackEncodedString(DFA237_eofS);
	static final char[] DFA237_min = DFA.unpackEncodedStringToUnsignedChars(DFA237_minS);
	static final char[] DFA237_max = DFA.unpackEncodedStringToUnsignedChars(DFA237_maxS);
	static final short[] DFA237_accept = DFA.unpackEncodedString(DFA237_acceptS);
	static final short[] DFA237_special = DFA.unpackEncodedString(DFA237_specialS);
	static final short[][] DFA237_transition;

	static {
		int numStates = DFA237_transitionS.length;
		DFA237_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA237_transition[i] = DFA.unpackEncodedString(DFA237_transitionS[i]);
		}
	}

	protected class DFA237 extends DFA {

		public DFA237(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 237;
			this.eot = DFA237_eot;
			this.eof = DFA237_eof;
			this.min = DFA237_min;
			this.max = DFA237_max;
			this.accept = DFA237_accept;
			this.special = DFA237_special;
			this.transition = DFA237_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 762:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA236_eotS =
		"\5\uffff";
	static final String DFA236_eofS =
		"\5\uffff";
	static final String DFA236_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA236_maxS =
		"\1\u009a\1\uffff\2\u009b\1\uffff";
	static final String DFA236_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA236_specialS =
		"\5\uffff}>";
	static final String[] DFA236_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\5\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\3\uffff\1\1\1\uffff\1\1\4\uffff\1\1\4\uffff\3\2\11\uffff\3\1\5\uffff"+
			"\1\1\11\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1"+
			"\uffff\3\1\1\uffff\3\1\1\uffff\5\1\2\uffff\1\1\5\uffff\5\2\6\uffff\1"+
			"\1\1\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"\1\1\1\uffff\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA236_eot = DFA.unpackEncodedString(DFA236_eotS);
	static final short[] DFA236_eof = DFA.unpackEncodedString(DFA236_eofS);
	static final char[] DFA236_min = DFA.unpackEncodedStringToUnsignedChars(DFA236_minS);
	static final char[] DFA236_max = DFA.unpackEncodedStringToUnsignedChars(DFA236_maxS);
	static final short[] DFA236_accept = DFA.unpackEncodedString(DFA236_acceptS);
	static final short[] DFA236_special = DFA.unpackEncodedString(DFA236_specialS);
	static final short[][] DFA236_transition;

	static {
		int numStates = DFA236_transitionS.length;
		DFA236_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA236_transition[i] = DFA.unpackEncodedString(DFA236_transitionS[i]);
		}
	}

	protected class DFA236 extends DFA {

		public DFA236(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 236;
			this.eot = DFA236_eot;
			this.eof = DFA236_eof;
			this.min = DFA236_min;
			this.max = DFA236_max;
			this.accept = DFA236_accept;
			this.special = DFA236_special;
			this.transition = DFA236_transition;
		}
		@Override
		public String getDescription() {
			return "762:62: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA256_eotS =
		"\5\uffff";
	static final String DFA256_eofS =
		"\2\2\3\uffff";
	static final String DFA256_minS =
		"\2\6\3\uffff";
	static final String DFA256_maxS =
		"\2\u009b\3\uffff";
	static final String DFA256_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA256_specialS =
		"\5\uffff}>";
	static final String[] DFA256_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\2\uffff\5\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\10\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\1\uffff\6\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA256_eot = DFA.unpackEncodedString(DFA256_eotS);
	static final short[] DFA256_eof = DFA.unpackEncodedString(DFA256_eofS);
	static final char[] DFA256_min = DFA.unpackEncodedStringToUnsignedChars(DFA256_minS);
	static final char[] DFA256_max = DFA.unpackEncodedStringToUnsignedChars(DFA256_maxS);
	static final short[] DFA256_accept = DFA.unpackEncodedString(DFA256_acceptS);
	static final short[] DFA256_special = DFA.unpackEncodedString(DFA256_specialS);
	static final short[][] DFA256_transition;

	static {
		int numStates = DFA256_transitionS.length;
		DFA256_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA256_transition[i] = DFA.unpackEncodedString(DFA256_transitionS[i]);
		}
	}

	protected class DFA256 extends DFA {

		public DFA256(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 256;
			this.eot = DFA256_eot;
			this.eof = DFA256_eof;
			this.min = DFA256_min;
			this.max = DFA256_max;
			this.accept = DFA256_accept;
			this.special = DFA256_special;
			this.transition = DFA256_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 842:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA258_eotS =
		"\6\uffff";
	static final String DFA258_eofS =
		"\6\uffff";
	static final String DFA258_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA258_maxS =
		"\2\u009b\1\0\1\uffff\1\0\1\uffff";
	static final String DFA258_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA258_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA258_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\4\uffff"+
			"\3\3\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4"+
			"\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\5\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\2\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\4\uffff\1\3\4\uffff"+
			"\3\3\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4"+
			"\3\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\5\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA258_eot = DFA.unpackEncodedString(DFA258_eotS);
	static final short[] DFA258_eof = DFA.unpackEncodedString(DFA258_eofS);
	static final char[] DFA258_min = DFA.unpackEncodedStringToUnsignedChars(DFA258_minS);
	static final char[] DFA258_max = DFA.unpackEncodedStringToUnsignedChars(DFA258_maxS);
	static final short[] DFA258_accept = DFA.unpackEncodedString(DFA258_acceptS);
	static final short[] DFA258_special = DFA.unpackEncodedString(DFA258_specialS);
	static final short[][] DFA258_transition;

	static {
		int numStates = DFA258_transitionS.length;
		DFA258_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA258_transition[i] = DFA.unpackEncodedString(DFA258_transitionS[i]);
		}
	}

	protected class DFA258 extends DFA {

		public DFA258(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 258;
			this.eot = DFA258_eot;
			this.eof = DFA258_eof;
			this.min = DFA258_min;
			this.max = DFA258_max;
			this.accept = DFA258_accept;
			this.special = DFA258_special;
			this.transition = DFA258_transition;
		}
		@Override
		public String getDescription() {
			return "853:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA258_2 = input.LA(1);
						 
						int index258_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred38_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index258_2);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA258_4 = input.LA(1);
						 
						int index258_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred38_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index258_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 258, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA263_eotS =
		"\4\uffff";
	static final String DFA263_eofS =
		"\4\uffff";
	static final String DFA263_minS =
		"\2\23\2\uffff";
	static final String DFA263_maxS =
		"\2\u009b\2\uffff";
	static final String DFA263_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA263_specialS =
		"\4\uffff}>";
	static final String[] DFA263_transitionS = {
			"\1\2\1\uffff\1\1\77\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"\1\2\1\uffff\1\1\77\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA263_eot = DFA.unpackEncodedString(DFA263_eotS);
	static final short[] DFA263_eof = DFA.unpackEncodedString(DFA263_eofS);
	static final char[] DFA263_min = DFA.unpackEncodedStringToUnsignedChars(DFA263_minS);
	static final char[] DFA263_max = DFA.unpackEncodedStringToUnsignedChars(DFA263_maxS);
	static final short[] DFA263_accept = DFA.unpackEncodedString(DFA263_acceptS);
	static final short[] DFA263_special = DFA.unpackEncodedString(DFA263_specialS);
	static final short[][] DFA263_transition;

	static {
		int numStates = DFA263_transitionS.length;
		DFA263_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA263_transition[i] = DFA.unpackEncodedString(DFA263_transitionS[i]);
		}
	}

	protected class DFA263 extends DFA {

		public DFA263(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 263;
			this.eot = DFA263_eot;
			this.eof = DFA263_eof;
			this.min = DFA263_min;
			this.max = DFA263_max;
			this.accept = DFA263_accept;
			this.special = DFA263_special;
			this.transition = DFA263_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 861:25: ( ( ws )? STRING )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA268_eotS =
		"\4\uffff";
	static final String DFA268_eofS =
		"\4\uffff";
	static final String DFA268_minS =
		"\2\6\2\uffff";
	static final String DFA268_maxS =
		"\2\u009b\2\uffff";
	static final String DFA268_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA268_specialS =
		"\4\uffff}>";
	static final String[] DFA268_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\2\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\4\uffff\3\3"+
			"\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1"+
			"\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5"+
			"\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\2\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\4\uffff\3"+
			"\3\11\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3"+
			"\1\uffff\3\3\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff"+
			"\5\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA268_eot = DFA.unpackEncodedString(DFA268_eotS);
	static final short[] DFA268_eof = DFA.unpackEncodedString(DFA268_eofS);
	static final char[] DFA268_min = DFA.unpackEncodedStringToUnsignedChars(DFA268_minS);
	static final char[] DFA268_max = DFA.unpackEncodedStringToUnsignedChars(DFA268_maxS);
	static final short[] DFA268_accept = DFA.unpackEncodedString(DFA268_acceptS);
	static final short[] DFA268_special = DFA.unpackEncodedString(DFA268_specialS);
	static final short[][] DFA268_transition;

	static {
		int numStates = DFA268_transitionS.length;
		DFA268_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA268_transition[i] = DFA.unpackEncodedString(DFA268_transitionS[i]);
		}
	}

	protected class DFA268 extends DFA {

		public DFA268(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 268;
			this.eot = DFA268_eot;
			this.eof = DFA268_eof;
			this.min = DFA268_min;
			this.max = DFA268_max;
			this.accept = DFA268_accept;
			this.special = DFA268_special;
			this.transition = DFA268_transition;
		}
		@Override
		public String getDescription() {
			return "861:110: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA274_eotS =
		"\6\uffff";
	static final String DFA274_eofS =
		"\6\uffff";
	static final String DFA274_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA274_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\2\uffff";
	static final String DFA274_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA274_specialS =
		"\6\uffff}>";
	static final String[] DFA274_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\12"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\11\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA274_eot = DFA.unpackEncodedString(DFA274_eotS);
	static final short[] DFA274_eof = DFA.unpackEncodedString(DFA274_eofS);
	static final char[] DFA274_min = DFA.unpackEncodedStringToUnsignedChars(DFA274_minS);
	static final char[] DFA274_max = DFA.unpackEncodedStringToUnsignedChars(DFA274_maxS);
	static final short[] DFA274_accept = DFA.unpackEncodedString(DFA274_acceptS);
	static final short[] DFA274_special = DFA.unpackEncodedString(DFA274_specialS);
	static final short[][] DFA274_transition;

	static {
		int numStates = DFA274_transitionS.length;
		DFA274_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA274_transition[i] = DFA.unpackEncodedString(DFA274_transitionS[i]);
		}
	}

	protected class DFA274 extends DFA {

		public DFA274(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 274;
			this.eot = DFA274_eot;
			this.eof = DFA274_eof;
			this.min = DFA274_min;
			this.max = DFA274_max;
			this.accept = DFA274_accept;
			this.special = DFA274_special;
			this.transition = DFA274_transition;
		}
		@Override
		public String getDescription() {
			return "866:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA269_eotS =
		"\4\uffff";
	static final String DFA269_eofS =
		"\4\uffff";
	static final String DFA269_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA269_maxS =
		"\2\u009b\2\uffff";
	static final String DFA269_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA269_specialS =
		"\4\uffff}>";
	static final String[] DFA269_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA269_eot = DFA.unpackEncodedString(DFA269_eotS);
	static final short[] DFA269_eof = DFA.unpackEncodedString(DFA269_eofS);
	static final char[] DFA269_min = DFA.unpackEncodedStringToUnsignedChars(DFA269_minS);
	static final char[] DFA269_max = DFA.unpackEncodedStringToUnsignedChars(DFA269_maxS);
	static final short[] DFA269_accept = DFA.unpackEncodedString(DFA269_acceptS);
	static final short[] DFA269_special = DFA.unpackEncodedString(DFA269_specialS);
	static final short[][] DFA269_transition;

	static {
		int numStates = DFA269_transitionS.length;
		DFA269_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA269_transition[i] = DFA.unpackEncodedString(DFA269_transitionS[i]);
		}
	}

	protected class DFA269 extends DFA {

		public DFA269(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 269;
			this.eot = DFA269_eot;
			this.eof = DFA269_eof;
			this.min = DFA269_min;
			this.max = DFA269_max;
			this.accept = DFA269_accept;
			this.special = DFA269_special;
			this.transition = DFA269_transition;
		}
		@Override
		public String getDescription() {
			return "867:27: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA291_eotS =
		"\5\uffff";
	static final String DFA291_eofS =
		"\5\uffff";
	static final String DFA291_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA291_maxS =
		"\1\u009a\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA291_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA291_specialS =
		"\5\uffff}>";
	static final String[] DFA291_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\2\uffff\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff"+
			"\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff"+
			"\5\2\1\1\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2"+
			"\1\uffff\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\5\2\1\1\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\3"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4\3\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\6\2\1\uffff\3\2\1\uffff\5\2\1\1\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			""
	};

	static final short[] DFA291_eot = DFA.unpackEncodedString(DFA291_eotS);
	static final short[] DFA291_eof = DFA.unpackEncodedString(DFA291_eofS);
	static final char[] DFA291_min = DFA.unpackEncodedStringToUnsignedChars(DFA291_minS);
	static final char[] DFA291_max = DFA.unpackEncodedStringToUnsignedChars(DFA291_maxS);
	static final short[] DFA291_accept = DFA.unpackEncodedString(DFA291_acceptS);
	static final short[] DFA291_special = DFA.unpackEncodedString(DFA291_specialS);
	static final short[][] DFA291_transition;

	static {
		int numStates = DFA291_transitionS.length;
		DFA291_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA291_transition[i] = DFA.unpackEncodedString(DFA291_transitionS[i]);
		}
	}

	protected class DFA291 extends DFA {

		public DFA291(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 291;
			this.eot = DFA291_eot;
			this.eof = DFA291_eof;
			this.min = DFA291_min;
			this.max = DFA291_max;
			this.accept = DFA291_accept;
			this.special = DFA291_special;
			this.transition = DFA291_transition;
		}
		@Override
		public String getDescription() {
			return "881:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA284_eotS =
		"\6\uffff";
	static final String DFA284_eofS =
		"\6\uffff";
	static final String DFA284_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA284_maxS =
		"\3\u009b\2\uffff\1\u009b";
	static final String DFA284_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA284_specialS =
		"\6\uffff}>";
	static final String[] DFA284_transitionS = {
			"\1\1\77\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\5"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff"+
			"\2\4\1\uffff\6\4\1\uffff\3\4\1\uffff\5\4\1\2\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA284_eot = DFA.unpackEncodedString(DFA284_eotS);
	static final short[] DFA284_eof = DFA.unpackEncodedString(DFA284_eofS);
	static final char[] DFA284_min = DFA.unpackEncodedStringToUnsignedChars(DFA284_minS);
	static final char[] DFA284_max = DFA.unpackEncodedStringToUnsignedChars(DFA284_maxS);
	static final short[] DFA284_accept = DFA.unpackEncodedString(DFA284_acceptS);
	static final short[] DFA284_special = DFA.unpackEncodedString(DFA284_specialS);
	static final short[][] DFA284_transition;

	static {
		int numStates = DFA284_transitionS.length;
		DFA284_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA284_transition[i] = DFA.unpackEncodedString(DFA284_transitionS[i]);
		}
	}

	protected class DFA284 extends DFA {

		public DFA284(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 284;
			this.eot = DFA284_eot;
			this.eof = DFA284_eof;
			this.min = DFA284_min;
			this.max = DFA284_max;
			this.accept = DFA284_accept;
			this.special = DFA284_special;
			this.transition = DFA284_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 883:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA283_eotS =
		"\4\uffff";
	static final String DFA283_eofS =
		"\4\uffff";
	static final String DFA283_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA283_maxS =
		"\2\u009b\2\uffff";
	static final String DFA283_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA283_specialS =
		"\4\uffff}>";
	static final String[] DFA283_transitionS = {
			"\1\1\77\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\4\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1"+
			"\10\uffff\1\3\2\uffff\2\3\6\uffff\3\3\2\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\5\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA283_eot = DFA.unpackEncodedString(DFA283_eotS);
	static final short[] DFA283_eof = DFA.unpackEncodedString(DFA283_eofS);
	static final char[] DFA283_min = DFA.unpackEncodedStringToUnsignedChars(DFA283_minS);
	static final char[] DFA283_max = DFA.unpackEncodedStringToUnsignedChars(DFA283_maxS);
	static final short[] DFA283_accept = DFA.unpackEncodedString(DFA283_acceptS);
	static final short[] DFA283_special = DFA.unpackEncodedString(DFA283_specialS);
	static final short[][] DFA283_transition;

	static {
		int numStates = DFA283_transitionS.length;
		DFA283_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA283_transition[i] = DFA.unpackEncodedString(DFA283_transitionS[i]);
		}
	}

	protected class DFA283 extends DFA {

		public DFA283(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 283;
			this.eot = DFA283_eot;
			this.eof = DFA283_eof;
			this.min = DFA283_min;
			this.max = DFA283_max;
			this.accept = DFA283_accept;
			this.special = DFA283_special;
			this.transition = DFA283_transition;
		}
		@Override
		public String getDescription() {
			return "883:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA288_eotS =
		"\5\uffff";
	static final String DFA288_eofS =
		"\5\uffff";
	static final String DFA288_minS =
		"\2\25\3\uffff";
	static final String DFA288_maxS =
		"\2\u009b\3\uffff";
	static final String DFA288_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA288_specialS =
		"\5\uffff}>";
	static final String[] DFA288_transitionS = {
			"\1\1\77\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\1\1\77\uffff\1\1\17\uffff\1\4\37\uffff\1\2\25\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA288_eot = DFA.unpackEncodedString(DFA288_eotS);
	static final short[] DFA288_eof = DFA.unpackEncodedString(DFA288_eofS);
	static final char[] DFA288_min = DFA.unpackEncodedStringToUnsignedChars(DFA288_minS);
	static final char[] DFA288_max = DFA.unpackEncodedStringToUnsignedChars(DFA288_maxS);
	static final short[] DFA288_accept = DFA.unpackEncodedString(DFA288_acceptS);
	static final short[] DFA288_special = DFA.unpackEncodedString(DFA288_specialS);
	static final short[][] DFA288_transition;

	static {
		int numStates = DFA288_transitionS.length;
		DFA288_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA288_transition[i] = DFA.unpackEncodedString(DFA288_transitionS[i]);
		}
	}

	protected class DFA288 extends DFA {

		public DFA288(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 288;
			this.eot = DFA288_eot;
			this.eof = DFA288_eof;
			this.min = DFA288_min;
			this.max = DFA288_max;
			this.accept = DFA288_accept;
			this.special = DFA288_special;
			this.transition = DFA288_transition;
		}
		@Override
		public String getDescription() {
			return "883:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA293_eotS =
		"\4\uffff";
	static final String DFA293_eofS =
		"\4\uffff";
	static final String DFA293_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA293_maxS =
		"\2\u009b\2\uffff";
	static final String DFA293_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA293_specialS =
		"\4\uffff}>";
	static final String[] DFA293_transitionS = {
			"\1\1\37\uffff\1\2\37\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA293_eot = DFA.unpackEncodedString(DFA293_eotS);
	static final short[] DFA293_eof = DFA.unpackEncodedString(DFA293_eofS);
	static final char[] DFA293_min = DFA.unpackEncodedStringToUnsignedChars(DFA293_minS);
	static final char[] DFA293_max = DFA.unpackEncodedStringToUnsignedChars(DFA293_maxS);
	static final short[] DFA293_accept = DFA.unpackEncodedString(DFA293_acceptS);
	static final short[] DFA293_special = DFA.unpackEncodedString(DFA293_specialS);
	static final short[][] DFA293_transition;

	static {
		int numStates = DFA293_transitionS.length;
		DFA293_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA293_transition[i] = DFA.unpackEncodedString(DFA293_transitionS[i]);
		}
	}

	protected class DFA293 extends DFA {

		public DFA293(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 293;
			this.eot = DFA293_eot;
			this.eof = DFA293_eof;
			this.min = DFA293_min;
			this.max = DFA293_max;
			this.accept = DFA293_accept;
			this.special = DFA293_special;
			this.transition = DFA293_transition;
		}
		@Override
		public String getDescription() {
			return "897:39: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA295_eotS =
		"\4\uffff";
	static final String DFA295_eofS =
		"\4\uffff";
	static final String DFA295_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA295_maxS =
		"\2\u009b\2\uffff";
	static final String DFA295_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA295_specialS =
		"\4\uffff}>";
	static final String[] DFA295_transitionS = {
			"\1\1\37\uffff\1\2\37\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA295_eot = DFA.unpackEncodedString(DFA295_eotS);
	static final short[] DFA295_eof = DFA.unpackEncodedString(DFA295_eofS);
	static final char[] DFA295_min = DFA.unpackEncodedStringToUnsignedChars(DFA295_minS);
	static final char[] DFA295_max = DFA.unpackEncodedStringToUnsignedChars(DFA295_maxS);
	static final short[] DFA295_accept = DFA.unpackEncodedString(DFA295_acceptS);
	static final short[] DFA295_special = DFA.unpackEncodedString(DFA295_specialS);
	static final short[][] DFA295_transition;

	static {
		int numStates = DFA295_transitionS.length;
		DFA295_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA295_transition[i] = DFA.unpackEncodedString(DFA295_transitionS[i]);
		}
	}

	protected class DFA295 extends DFA {

		public DFA295(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 295;
			this.eot = DFA295_eot;
			this.eof = DFA295_eof;
			this.min = DFA295_min;
			this.max = DFA295_max;
			this.accept = DFA295_accept;
			this.special = DFA295_special;
			this.transition = DFA295_transition;
		}
		@Override
		public String getDescription() {
			return "898:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA299_eotS =
		"\6\uffff";
	static final String DFA299_eofS =
		"\6\uffff";
	static final String DFA299_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA299_maxS =
		"\3\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA299_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA299_specialS =
		"\6\uffff}>";
	static final String[] DFA299_transitionS = {
			"\1\1\1\2\50\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\10\uffff\3\5\12\uffff\2\5\2\uffff\2\5"+
			"\3\uffff\1\5\11\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13"+
			"\uffff\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff"+
			"\1\4",
			"\1\5\1\2\50\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\10\uffff\3\5\12\uffff\2\5\2\uffff\2\5"+
			"\3\uffff\1\5\11\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13"+
			"\uffff\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff"+
			"\1\4",
			""
	};

	static final short[] DFA299_eot = DFA.unpackEncodedString(DFA299_eotS);
	static final short[] DFA299_eof = DFA.unpackEncodedString(DFA299_eofS);
	static final char[] DFA299_min = DFA.unpackEncodedStringToUnsignedChars(DFA299_minS);
	static final char[] DFA299_max = DFA.unpackEncodedStringToUnsignedChars(DFA299_maxS);
	static final short[] DFA299_accept = DFA.unpackEncodedString(DFA299_acceptS);
	static final short[] DFA299_special = DFA.unpackEncodedString(DFA299_specialS);
	static final short[][] DFA299_transition;

	static {
		int numStates = DFA299_transitionS.length;
		DFA299_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA299_transition[i] = DFA.unpackEncodedString(DFA299_transitionS[i]);
		}
	}

	protected class DFA299 extends DFA {

		public DFA299(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 299;
			this.eot = DFA299_eot;
			this.eof = DFA299_eof;
			this.min = DFA299_min;
			this.max = DFA299_max;
			this.accept = DFA299_accept;
			this.special = DFA299_special;
			this.transition = DFA299_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 916:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA307_eotS =
		"\5\uffff";
	static final String DFA307_eofS =
		"\5\uffff";
	static final String DFA307_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA307_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA307_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA307_specialS =
		"\5\uffff}>";
	static final String[] DFA307_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\1\2\1\1\2\uffff\2\2\3\uffff\1"+
			"\2\12\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\1\2\1\1\24\uffff\1\2"+
			"\17\uffff\1\2\3\uffff\1\1",
			"\1\2\13\uffff\1\2\1\4\1\3\10\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1"+
			"\2\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			"",
			"\1\2\13\uffff\1\2\1\4\1\3\10\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\11\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1"+
			"\2\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			""
	};

	static final short[] DFA307_eot = DFA.unpackEncodedString(DFA307_eotS);
	static final short[] DFA307_eof = DFA.unpackEncodedString(DFA307_eofS);
	static final char[] DFA307_min = DFA.unpackEncodedStringToUnsignedChars(DFA307_minS);
	static final char[] DFA307_max = DFA.unpackEncodedStringToUnsignedChars(DFA307_maxS);
	static final short[] DFA307_accept = DFA.unpackEncodedString(DFA307_acceptS);
	static final short[] DFA307_special = DFA.unpackEncodedString(DFA307_specialS);
	static final short[][] DFA307_transition;

	static {
		int numStates = DFA307_transitionS.length;
		DFA307_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA307_transition[i] = DFA.unpackEncodedString(DFA307_transitionS[i]);
		}
	}

	protected class DFA307 extends DFA {

		public DFA307(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 307;
			this.eot = DFA307_eot;
			this.eof = DFA307_eof;
			this.min = DFA307_min;
			this.max = DFA307_max;
			this.accept = DFA307_accept;
			this.special = DFA307_special;
			this.transition = DFA307_transition;
		}
		@Override
		public String getDescription() {
			return "919:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA306_eotS =
		"\4\uffff";
	static final String DFA306_eofS =
		"\4\uffff";
	static final String DFA306_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA306_maxS =
		"\2\u009b\2\uffff";
	static final String DFA306_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA306_specialS =
		"\4\uffff}>";
	static final String[] DFA306_transitionS = {
			"\1\2\1\1\26\uffff\1\3\21\uffff\1\2\26\uffff\1\1\14\uffff\1\3\11\uffff"+
			"\1\2\36\uffff\1\3\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3\3\uffff"+
			"\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff\2"+
			"\3\11\uffff\1\2\12\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA306_eot = DFA.unpackEncodedString(DFA306_eotS);
	static final short[] DFA306_eof = DFA.unpackEncodedString(DFA306_eofS);
	static final char[] DFA306_min = DFA.unpackEncodedStringToUnsignedChars(DFA306_minS);
	static final char[] DFA306_max = DFA.unpackEncodedStringToUnsignedChars(DFA306_maxS);
	static final short[] DFA306_accept = DFA.unpackEncodedString(DFA306_acceptS);
	static final short[] DFA306_special = DFA.unpackEncodedString(DFA306_specialS);
	static final short[][] DFA306_transition;

	static {
		int numStates = DFA306_transitionS.length;
		DFA306_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA306_transition[i] = DFA.unpackEncodedString(DFA306_transitionS[i]);
		}
	}

	protected class DFA306 extends DFA {

		public DFA306(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 306;
			this.eot = DFA306_eot;
			this.eof = DFA306_eof;
			this.min = DFA306_min;
			this.max = DFA306_max;
			this.accept = DFA306_accept;
			this.special = DFA306_special;
			this.transition = DFA306_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 920:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA305_eotS =
		"\4\uffff";
	static final String DFA305_eofS =
		"\4\uffff";
	static final String DFA305_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA305_maxS =
		"\2\u009b\2\uffff";
	static final String DFA305_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA305_specialS =
		"\4\uffff}>";
	static final String[] DFA305_transitionS = {
			"\1\1\26\uffff\1\2\50\uffff\1\1\14\uffff\1\2\50\uffff\1\2\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\1\3\1\2\2\uffff"+
			"\2\3\3\uffff\1\3\12\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\1\3\1\2\24\uffff\1\3\17\uffff\1\3\3\uffff\1\2\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA305_eot = DFA.unpackEncodedString(DFA305_eotS);
	static final short[] DFA305_eof = DFA.unpackEncodedString(DFA305_eofS);
	static final char[] DFA305_min = DFA.unpackEncodedStringToUnsignedChars(DFA305_minS);
	static final char[] DFA305_max = DFA.unpackEncodedStringToUnsignedChars(DFA305_maxS);
	static final short[] DFA305_accept = DFA.unpackEncodedString(DFA305_acceptS);
	static final short[] DFA305_special = DFA.unpackEncodedString(DFA305_specialS);
	static final short[][] DFA305_transition;

	static {
		int numStates = DFA305_transitionS.length;
		DFA305_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA305_transition[i] = DFA.unpackEncodedString(DFA305_transitionS[i]);
		}
	}

	protected class DFA305 extends DFA {

		public DFA305(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 305;
			this.eot = DFA305_eot;
			this.eof = DFA305_eof;
			this.min = DFA305_min;
			this.max = DFA305_max;
			this.accept = DFA305_accept;
			this.special = DFA305_special;
			this.transition = DFA305_transition;
		}
		@Override
		public String getDescription() {
			return "920:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA311_eotS =
		"\5\uffff";
	static final String DFA311_eofS =
		"\5\uffff";
	static final String DFA311_minS =
		"\1\23\1\7\1\uffff\1\7\1\uffff";
	static final String DFA311_maxS =
		"\2\u009b\1\uffff\1\123\1\uffff";
	static final String DFA311_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA311_specialS =
		"\5\uffff}>";
	static final String[] DFA311_transitionS = {
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\2\2\16\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\4\13\uffff\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\1\2\1\3\3\uffff"+
			"\1\4\12\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43"+
			"\uffff\1\1",
			"",
			"\1\2\54\uffff\1\2\11\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA311_eot = DFA.unpackEncodedString(DFA311_eotS);
	static final short[] DFA311_eof = DFA.unpackEncodedString(DFA311_eofS);
	static final char[] DFA311_min = DFA.unpackEncodedStringToUnsignedChars(DFA311_minS);
	static final char[] DFA311_max = DFA.unpackEncodedStringToUnsignedChars(DFA311_maxS);
	static final short[] DFA311_accept = DFA.unpackEncodedString(DFA311_acceptS);
	static final short[] DFA311_special = DFA.unpackEncodedString(DFA311_specialS);
	static final short[][] DFA311_transition;

	static {
		int numStates = DFA311_transitionS.length;
		DFA311_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA311_transition[i] = DFA.unpackEncodedString(DFA311_transitionS[i]);
		}
	}

	protected class DFA311 extends DFA {

		public DFA311(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 311;
			this.eot = DFA311_eot;
			this.eof = DFA311_eof;
			this.min = DFA311_min;
			this.max = DFA311_max;
			this.accept = DFA311_accept;
			this.special = DFA311_special;
			this.transition = DFA311_transition;
		}
		@Override
		public String getDescription() {
			return "932:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA314_eotS =
		"\5\uffff";
	static final String DFA314_eofS =
		"\5\uffff";
	static final String DFA314_minS =
		"\2\23\1\uffff\1\7\1\uffff";
	static final String DFA314_maxS =
		"\2\u009b\1\uffff\1\123\1\uffff";
	static final String DFA314_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA314_specialS =
		"\5\uffff}>";
	static final String[] DFA314_transitionS = {
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\2\2\16\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\2\1\uffff\1\1\10\uffff\3\2\16\uffff\1\2\1\3\3\uffff\1\4\12\uffff"+
			"\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"",
			"\1\2\54\uffff\1\2\11\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA314_eot = DFA.unpackEncodedString(DFA314_eotS);
	static final short[] DFA314_eof = DFA.unpackEncodedString(DFA314_eofS);
	static final char[] DFA314_min = DFA.unpackEncodedStringToUnsignedChars(DFA314_minS);
	static final char[] DFA314_max = DFA.unpackEncodedStringToUnsignedChars(DFA314_maxS);
	static final short[] DFA314_accept = DFA.unpackEncodedString(DFA314_acceptS);
	static final short[] DFA314_special = DFA.unpackEncodedString(DFA314_specialS);
	static final short[][] DFA314_transition;

	static {
		int numStates = DFA314_transitionS.length;
		DFA314_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA314_transition[i] = DFA.unpackEncodedString(DFA314_transitionS[i]);
		}
	}

	protected class DFA314 extends DFA {

		public DFA314(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 314;
			this.eot = DFA314_eot;
			this.eof = DFA314_eof;
			this.min = DFA314_min;
			this.max = DFA314_max;
			this.accept = DFA314_accept;
			this.special = DFA314_special;
			this.transition = DFA314_transition;
		}
		@Override
		public String getDescription() {
			return "933:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA337_eotS =
		"\4\uffff";
	static final String DFA337_eofS =
		"\2\3\2\uffff";
	static final String DFA337_minS =
		"\2\6\2\uffff";
	static final String DFA337_maxS =
		"\2\u009b\2\uffff";
	static final String DFA337_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA337_specialS =
		"\4\uffff}>";
	static final String[] DFA337_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\3\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff\6\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\3\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff\6\3\2\uffff"+
			"\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\12\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"",
			""
	};

	static final short[] DFA337_eot = DFA.unpackEncodedString(DFA337_eotS);
	static final short[] DFA337_eof = DFA.unpackEncodedString(DFA337_eofS);
	static final char[] DFA337_min = DFA.unpackEncodedStringToUnsignedChars(DFA337_minS);
	static final char[] DFA337_max = DFA.unpackEncodedStringToUnsignedChars(DFA337_maxS);
	static final short[] DFA337_accept = DFA.unpackEncodedString(DFA337_acceptS);
	static final short[] DFA337_special = DFA.unpackEncodedString(DFA337_specialS);
	static final short[][] DFA337_transition;

	static {
		int numStates = DFA337_transitionS.length;
		DFA337_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA337_transition[i] = DFA.unpackEncodedString(DFA337_transitionS[i]);
		}
	}

	protected class DFA337 extends DFA {

		public DFA337(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 337;
			this.eot = DFA337_eot;
			this.eof = DFA337_eof;
			this.min = DFA337_min;
			this.max = DFA337_max;
			this.accept = DFA337_accept;
			this.special = DFA337_special;
			this.transition = DFA337_transition;
		}
		@Override
		public String getDescription() {
			return "1048:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA360_eotS =
		"\4\uffff";
	static final String DFA360_eofS =
		"\1\3\3\uffff";
	static final String DFA360_minS =
		"\2\6\2\uffff";
	static final String DFA360_maxS =
		"\2\u009b\2\uffff";
	static final String DFA360_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA360_specialS =
		"\4\uffff}>";
	static final String[] DFA360_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\2\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3\3\uffff"+
			"\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3"+
			"\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\4\uffff\1\3"+
			"\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA360_eot = DFA.unpackEncodedString(DFA360_eotS);
	static final short[] DFA360_eof = DFA.unpackEncodedString(DFA360_eofS);
	static final char[] DFA360_min = DFA.unpackEncodedStringToUnsignedChars(DFA360_minS);
	static final char[] DFA360_max = DFA.unpackEncodedStringToUnsignedChars(DFA360_maxS);
	static final short[] DFA360_accept = DFA.unpackEncodedString(DFA360_acceptS);
	static final short[] DFA360_special = DFA.unpackEncodedString(DFA360_specialS);
	static final short[][] DFA360_transition;

	static {
		int numStates = DFA360_transitionS.length;
		DFA360_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA360_transition[i] = DFA.unpackEncodedString(DFA360_transitionS[i]);
		}
	}

	protected class DFA360 extends DFA {

		public DFA360(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 360;
			this.eot = DFA360_eot;
			this.eof = DFA360_eof;
			this.min = DFA360_min;
			this.max = DFA360_max;
			this.accept = DFA360_accept;
			this.special = DFA360_special;
			this.transition = DFA360_transition;
		}
		@Override
		public String getDescription() {
			return "1063:50: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA375_eotS =
		"\101\uffff";
	static final String DFA375_eofS =
		"\1\2\100\uffff";
	static final String DFA375_minS =
		"\1\5\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\3\0\1\uffff\3\0\2\uffff\21\0"+
		"\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA375_maxS =
		"\1\u009b\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\3\0\1\uffff\3\0\2\uffff\21"+
		"\0\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA375_acceptS =
		"\2\uffff\1\2\54\uffff\1\1\1\uffff\14\1\1\uffff\3\1";
	static final String DFA375_specialS =
		"\1\0\1\1\4\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12"+
		"\1\13\1\uffff\1\14\1\15\1\16\2\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
		"\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\uffff\1\40\1\41\2"+
		"\uffff\1\42\1\uffff\1\43\20\uffff}>";
	static final String[] DFA375_transitionS = {
			"\1\70\1\12\1\24\2\uffff\5\52\3\uffff\1\53\1\2\1\56\1\1\2\uffff\1\53\5"+
			"\uffff\1\2\1\20\1\2\1\uffff\1\65\3\uffff\1\67\1\uffff\1\43\1\72\1\uffff"+
			"\1\30\1\2\2\uffff\1\10\1\17\3\uffff\1\23\1\2\1\41\4\uffff\1\46\2\uffff"+
			"\1\2\1\21\3\52\1\64\1\uffff\1\6\1\76\5\uffff\1\47\1\25\1\44\5\uffff\1"+
			"\53\1\1\4\uffff\1\61\3\uffff\1\42\1\63\1\100\1\2\1\15\2\uffff\1\2\1\uffff"+
			"\1\66\1\73\3\52\1\2\1\uffff\1\14\1\40\1\32\1\uffff\1\36\1\53\2\uffff"+
			"\1\50\1\2\1\35\2\53\1\uffff\1\34\1\13\1\11\1\uffff\2\53\1\33\1\32\1\37"+
			"\1\2\1\57\1\2\1\74\1\2\1\uffff\1\60\1\71\5\52\2\uffff\1\62\1\77\2\uffff"+
			"\1\31\1\uffff\1\45\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA375_eot = DFA.unpackEncodedString(DFA375_eotS);
	static final short[] DFA375_eof = DFA.unpackEncodedString(DFA375_eofS);
	static final char[] DFA375_min = DFA.unpackEncodedStringToUnsignedChars(DFA375_minS);
	static final char[] DFA375_max = DFA.unpackEncodedStringToUnsignedChars(DFA375_maxS);
	static final short[] DFA375_accept = DFA.unpackEncodedString(DFA375_acceptS);
	static final short[] DFA375_special = DFA.unpackEncodedString(DFA375_specialS);
	static final short[][] DFA375_transition;

	static {
		int numStates = DFA375_transitionS.length;
		DFA375_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA375_transition[i] = DFA.unpackEncodedString(DFA375_transitionS[i]);
		}
	}

	protected class DFA375 extends DFA {

		public DFA375(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 375;
			this.eot = DFA375_eot;
			this.eof = DFA375_eof;
			this.min = DFA375_min;
			this.max = DFA375_max;
			this.accept = DFA375_accept;
			this.special = DFA375_special;
			this.transition = DFA375_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1152:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA375_0 = input.LA(1);
						 
						int index375_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA375_0==COMMENT||LA375_0==NL||LA375_0==WS) ) {s = 1;}
						else if ( (LA375_0==EOF||LA375_0==COLON||LA375_0==DCOLON||LA375_0==DOT||LA375_0==GREATER||LA375_0==IMPORTANT_SYM||LA375_0==LBRACE||LA375_0==PIPE||LA375_0==RBRACE||LA375_0==RPAREN||LA375_0==SASS_EXTEND_ONLY_SELECTOR||LA375_0==SEMI||LA375_0==STAR||LA375_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA375_0==LESS_AND) ) {s = 6;}
						else if ( (LA375_0==HASH) ) {s = 8;}
						else if ( (LA375_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA375_0==AT_IDENT) ) {s = 10;}
						else if ( (LA375_0==SASS_INCLUDE) ) {s = 11;}
						else if ( (LA375_0==SASS_AT_ROOT) ) {s = 12;}
						else if ( (LA375_0==PLUS) ) {s = 13;}
						else if ( (LA375_0==HASH_SYMBOL) ) {s = 15;}
						else if ( (LA375_0==DIMENSION) ) {s = 16;}
						else if ( (LA375_0==LBRACKET) ) {s = 17;}
						else if ( (LA375_0==IDENT) ) {s = 19;}
						else if ( (LA375_0==AT_SIGN) ) {s = 20;}
						else if ( (LA375_0==MINUS) ) {s = 21;}
						else if ( (LA375_0==GEN) ) {s = 24;}
						else if ( (LA375_0==VARIABLE) ) {s = 25;}
						else if ( (LA375_0==SASS_DEBUG||LA375_0==SASS_WARN) ) {s = 26;}
						else if ( (LA375_0==SASS_VAR) ) {s = 27;}
						else if ( (LA375_0==SASS_IF) ) {s = 28;}
						else if ( (LA375_0==SASS_FOR) ) {s = 29;}
						else if ( (LA375_0==SASS_EACH) ) {s = 30;}
						else if ( (LA375_0==SASS_WHILE) ) {s = 31;}
						else if ( (LA375_0==SASS_CONTENT) ) {s = 32;}
						else if ( (LA375_0==IMPORT_SYM) ) {s = 33;}
						else if ( (LA375_0==PAGE_SYM) ) {s = 34;}
						else if ( (LA375_0==FONT_FACE_SYM) ) {s = 35;}
						else if ( (LA375_0==MOZ_DOCUMENT_SYM) ) {s = 36;}
						else if ( (LA375_0==WEBKIT_KEYFRAMES_SYM) ) {s = 37;}
						else if ( (LA375_0==KEYFRAMES_SYM) ) {s = 38;}
						else if ( (LA375_0==MEDIA_SYM) ) {s = 39;}
						else if ( (LA375_0==SASS_EXTEND) ) {s = 40;}
						else if ( ((LA375_0 >= BOTTOMCENTER_SYM && LA375_0 <= BOTTOMRIGHT_SYM)||(LA375_0 >= LEFTBOTTOM_SYM && LA375_0 <= LEFTTOP_SYM)||(LA375_0 >= RIGHTBOTTOM_SYM && LA375_0 <= RIGHTTOP_SYM)||(LA375_0 >= TOPCENTER_SYM && LA375_0 <= TOPRIGHT_SYM)) ) {s = 42;}
						else if ( (LA375_0==CHARSET_SYM||LA375_0==COUNTER_STYLE_SYM||LA375_0==NAMESPACE_SYM||LA375_0==SASS_ELSE||(LA375_0 >= SASS_FORWARD && LA375_0 <= SASS_FUNCTION)||(LA375_0 >= SASS_RETURN && LA375_0 <= SASS_USE)) ) {s = 43;}
						else if ( (LA375_0==COMMA) ) {s = 46;}
						else if ( (LA375_0==SOLIDUS) && (synpred55_Css3())) {s = 47;}
						else if ( (LA375_0==TILDE) ) {s = 48;}
						else if ( (LA375_0==NUMBER) && (synpred55_Css3())) {s = 49;}
						else if ( (LA375_0==URANGE) && (synpred55_Css3())) {s = 50;}
						else if ( (LA375_0==PERCENTAGE) && (synpred55_Css3())) {s = 51;}
						else if ( (LA375_0==LENGTH) && (synpred55_Css3())) {s = 52;}
						else if ( (LA375_0==EMS) && (synpred55_Css3())) {s = 53;}
						else if ( (LA375_0==REM) && (synpred55_Css3())) {s = 54;}
						else if ( (LA375_0==EXS) && (synpred55_Css3())) {s = 55;}
						else if ( (LA375_0==ANGLE) && (synpred55_Css3())) {s = 56;}
						else if ( (LA375_0==TIME) && (synpred55_Css3())) {s = 57;}
						else if ( (LA375_0==FREQ) && (synpred55_Css3())) {s = 58;}
						else if ( (LA375_0==RESOLUTION) && (synpred55_Css3())) {s = 59;}
						else if ( (LA375_0==STRING) && (synpred55_Css3())) {s = 60;}
						else if ( (LA375_0==LESS_JS_STRING) && (synpred55_Css3())) {s = 62;}
						else if ( (LA375_0==URI) && (synpred55_Css3())) {s = 63;}
						else if ( (LA375_0==PERCENTAGE_SYMBOL) && (synpred55_Css3())) {s = 64;}
						 
						input.seek(index375_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA375_1 = input.LA(1);
						 
						int index375_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_1);
						if ( s>=0 ) return s;
						break;
					case 2 : 
						int LA375_6 = input.LA(1);
						 
						int index375_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred55_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_6);
						if ( s>=0 ) return s;
						break;
					case 3 : 
						int LA375_8 = input.LA(1);
						 
						int index375_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_8);
						if ( s>=0 ) return s;
						break;
					case 4 : 
						int LA375_9 = input.LA(1);
						 
						int index375_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_9);
						if ( s>=0 ) return s;
						break;
					case 5 : 
						int LA375_10 = input.LA(1);
						 
						int index375_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_10);
						if ( s>=0 ) return s;
						break;
					case 6 : 
						int LA375_11 = input.LA(1);
						 
						int index375_11 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_11);
						if ( s>=0 ) return s;
						break;
					case 7 : 
						int LA375_12 = input.LA(1);
						 
						int index375_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_12);
						if ( s>=0 ) return s;
						break;
					case 8 : 
						int LA375_13 = input.LA(1);
						 
						int index375_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_13);
						if ( s>=0 ) return s;
						break;
					case 9 : 
						int LA375_15 = input.LA(1);
						 
						int index375_15 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred55_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_15);
						if ( s>=0 ) return s;
						break;
					case 10 : 
						int LA375_16 = input.LA(1);
						 
						int index375_16 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {s = 2;}
						 
						input.seek(index375_16);
						if ( s>=0 ) return s;
						break;
					case 11 : 
						int LA375_17 = input.LA(1);
						 
						int index375_17 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_17);
						if ( s>=0 ) return s;
						break;
					case 12 : 
						int LA375_19 = input.LA(1);
						 
						int index375_19 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_19);
						if ( s>=0 ) return s;
						break;
					case 13 : 
						int LA375_20 = input.LA(1);
						 
						int index375_20 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred55_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_20);
						if ( s>=0 ) return s;
						break;
					case 14 : 
						int LA375_21 = input.LA(1);
						 
						int index375_21 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_21);
						if ( s>=0 ) return s;
						break;
					case 15 : 
						int LA375_24 = input.LA(1);
						 
						int index375_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_24);
						if ( s>=0 ) return s;
						break;
					case 16 : 
						int LA375_25 = input.LA(1);
						 
						int index375_25 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_25);
						if ( s>=0 ) return s;
						break;
					case 17 : 
						int LA375_26 = input.LA(1);
						 
						int index375_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_26);
						if ( s>=0 ) return s;
						break;
					case 18 : 
						int LA375_27 = input.LA(1);
						 
						int index375_27 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_27);
						if ( s>=0 ) return s;
						break;
					case 19 : 
						int LA375_28 = input.LA(1);
						 
						int index375_28 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_28);
						if ( s>=0 ) return s;
						break;
					case 20 : 
						int LA375_29 = input.LA(1);
						 
						int index375_29 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_29);
						if ( s>=0 ) return s;
						break;
					case 21 : 
						int LA375_30 = input.LA(1);
						 
						int index375_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_30);
						if ( s>=0 ) return s;
						break;
					case 22 : 
						int LA375_31 = input.LA(1);
						 
						int index375_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_31);
						if ( s>=0 ) return s;
						break;
					case 23 : 
						int LA375_32 = input.LA(1);
						 
						int index375_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_32);
						if ( s>=0 ) return s;
						break;
					case 24 : 
						int LA375_33 = input.LA(1);
						 
						int index375_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_33);
						if ( s>=0 ) return s;
						break;
					case 25 : 
						int LA375_34 = input.LA(1);
						 
						int index375_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_34);
						if ( s>=0 ) return s;
						break;
					case 26 : 
						int LA375_35 = input.LA(1);
						 
						int index375_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_35);
						if ( s>=0 ) return s;
						break;
					case 27 : 
						int LA375_36 = input.LA(1);
						 
						int index375_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_36);
						if ( s>=0 ) return s;
						break;
					case 28 : 
						int LA375_37 = input.LA(1);
						 
						int index375_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_37);
						if ( s>=0 ) return s;
						break;
					case 29 : 
						int LA375_38 = input.LA(1);
						 
						int index375_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_38);
						if ( s>=0 ) return s;
						break;
					case 30 : 
						int LA375_39 = input.LA(1);
						 
						int index375_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_39);
						if ( s>=0 ) return s;
						break;
					case 31 : 
						int LA375_40 = input.LA(1);
						 
						int index375_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_40);
						if ( s>=0 ) return s;
						break;
					case 32 : 
						int LA375_42 = input.LA(1);
						 
						int index375_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_42);
						if ( s>=0 ) return s;
						break;
					case 33 : 
						int LA375_43 = input.LA(1);
						 
						int index375_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((synpred55_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_43);
						if ( s>=0 ) return s;
						break;
					case 34 : 
						int LA375_46 = input.LA(1);
						 
						int index375_46 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_46);
						if ( s>=0 ) return s;
						break;
					case 35 : 
						int LA375_48 = input.LA(1);
						 
						int index375_48 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred55_Css3()) ) {s = 64;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index375_48);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 375, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA374_eotS =
		"\5\uffff";
	static final String DFA374_eofS =
		"\5\uffff";
	static final String DFA374_minS =
		"\2\5\3\uffff";
	static final String DFA374_maxS =
		"\2\u009b\3\uffff";
	static final String DFA374_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA374_specialS =
		"\5\uffff}>";
	static final String[] DFA374_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff"+
			"\1\3\1\1\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\2\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff"+
			"\1\4\1\1\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff"+
			"\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA374_eot = DFA.unpackEncodedString(DFA374_eotS);
	static final short[] DFA374_eof = DFA.unpackEncodedString(DFA374_eofS);
	static final char[] DFA374_min = DFA.unpackEncodedStringToUnsignedChars(DFA374_minS);
	static final char[] DFA374_max = DFA.unpackEncodedStringToUnsignedChars(DFA374_maxS);
	static final short[] DFA374_accept = DFA.unpackEncodedString(DFA374_acceptS);
	static final short[] DFA374_special = DFA.unpackEncodedString(DFA374_specialS);
	static final short[][] DFA374_transition;

	static {
		int numStates = DFA374_transitionS.length;
		DFA374_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA374_transition[i] = DFA.unpackEncodedString(DFA374_transitionS[i]);
		}
	}

	protected class DFA374 extends DFA {

		public DFA374(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 374;
			this.eot = DFA374_eot;
			this.eof = DFA374_eof;
			this.min = DFA374_min;
			this.max = DFA374_max;
			this.accept = DFA374_accept;
			this.special = DFA374_special;
			this.transition = DFA374_transition;
		}
		@Override
		public String getDescription() {
			return "1152:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA389_eotS =
		"\4\uffff";
	static final String DFA389_eofS =
		"\4\uffff";
	static final String DFA389_minS =
		"\2\24\2\uffff";
	static final String DFA389_maxS =
		"\2\u009b\2\uffff";
	static final String DFA389_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA389_specialS =
		"\4\uffff}>";
	static final String[] DFA389_transitionS = {
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"\1\3\1\1\77\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA389_eot = DFA.unpackEncodedString(DFA389_eotS);
	static final short[] DFA389_eof = DFA.unpackEncodedString(DFA389_eofS);
	static final char[] DFA389_min = DFA.unpackEncodedStringToUnsignedChars(DFA389_minS);
	static final char[] DFA389_max = DFA.unpackEncodedStringToUnsignedChars(DFA389_maxS);
	static final short[] DFA389_accept = DFA.unpackEncodedString(DFA389_acceptS);
	static final short[] DFA389_special = DFA.unpackEncodedString(DFA389_specialS);
	static final short[][] DFA389_transition;

	static {
		int numStates = DFA389_transitionS.length;
		DFA389_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA389_transition[i] = DFA.unpackEncodedString(DFA389_transitionS[i]);
		}
	}

	protected class DFA389 extends DFA {

		public DFA389(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 389;
			this.eot = DFA389_eot;
			this.eof = DFA389_eof;
			this.min = DFA389_min;
			this.max = DFA389_max;
			this.accept = DFA389_accept;
			this.special = DFA389_special;
			this.transition = DFA389_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1220:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA399_eotS =
		"\47\uffff";
	static final String DFA399_eofS =
		"\47\uffff";
	static final String DFA399_minS =
		"\2\5\45\uffff";
	static final String DFA399_maxS =
		"\2\u009b\45\uffff";
	static final String DFA399_acceptS =
		"\2\uffff\1\2\44\1";
	static final String DFA399_specialS =
		"\1\1\1\0\45\uffff}>";
	static final String[] DFA399_transitionS = {
			"\1\17\1\32\1\36\2\uffff\5\32\3\uffff\1\32\1\uffff\1\2\1\1\2\uffff\1\32"+
			"\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\32\1\21\1\uffff\1\27"+
			"\3\uffff\1\31\1\35\3\uffff\1\5\1\uffff\1\32\4\uffff\1\32\3\uffff\1\7"+
			"\3\32\1\13\1\uffff\1\34\1\26\5\uffff\1\32\1\4\1\32\5\uffff\1\32\1\1\4"+
			"\uffff\1\10\3\uffff\1\32\1\12\1\37\1\uffff\1\4\4\uffff\1\15\1\22\3\32"+
			"\1\2\1\uffff\3\32\1\uffff\2\32\2\uffff\1\32\1\uffff\3\32\1\uffff\3\32"+
			"\1\uffff\2\32\1\33\2\32\1\2\1\3\1\uffff\1\24\2\uffff\1\25\1\20\5\32\2"+
			"\uffff\1\11\1\30\2\uffff\1\6\1\uffff\1\32\1\1",
			"\1\17\1\41\1\45\2\uffff\5\41\3\uffff\1\41\1\uffff\1\2\1\1\2\uffff\1"+
			"\41\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\41\1\21\1\uffff"+
			"\1\27\3\uffff\1\31\1\44\3\uffff\1\40\1\uffff\1\41\4\uffff\1\41\3\uffff"+
			"\1\7\3\41\1\13\1\uffff\1\43\1\26\5\uffff\1\41\1\4\1\41\5\uffff\1\41\1"+
			"\1\4\uffff\1\10\3\uffff\1\41\1\12\1\46\1\uffff\1\4\4\uffff\1\15\1\22"+
			"\3\41\1\2\1\uffff\3\41\1\uffff\2\41\2\uffff\1\41\1\uffff\3\41\1\uffff"+
			"\3\41\1\uffff\2\41\1\42\2\41\1\2\1\3\1\uffff\1\24\2\uffff\1\25\1\20\5"+
			"\41\2\uffff\1\11\1\30\2\uffff\1\6\1\uffff\1\41\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA399_eot = DFA.unpackEncodedString(DFA399_eotS);
	static final short[] DFA399_eof = DFA.unpackEncodedString(DFA399_eofS);
	static final char[] DFA399_min = DFA.unpackEncodedStringToUnsignedChars(DFA399_minS);
	static final char[] DFA399_max = DFA.unpackEncodedStringToUnsignedChars(DFA399_maxS);
	static final short[] DFA399_accept = DFA.unpackEncodedString(DFA399_acceptS);
	static final short[] DFA399_special = DFA.unpackEncodedString(DFA399_specialS);
	static final short[][] DFA399_transition;

	static {
		int numStates = DFA399_transitionS.length;
		DFA399_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA399_transition[i] = DFA.unpackEncodedString(DFA399_transitionS[i]);
		}
	}

	protected class DFA399 extends DFA {

		public DFA399(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 399;
			this.eot = DFA399_eot;
			this.eof = DFA399_eof;
			this.min = DFA399_min;
			this.max = DFA399_max;
			this.accept = DFA399_accept;
			this.special = DFA399_special;
			this.transition = DFA399_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1238:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA399_1 = input.LA(1);
						 
						int index399_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA399_1==COMMA||LA399_1==RPAREN||LA399_1==SEMI) ) {s = 2;}
						else if ( (LA399_1==COMMENT||LA399_1==NL||LA399_1==WS) ) {s = 1;}
						else if ( (LA399_1==MINUS||LA399_1==PLUS) && (synpred59_Css3())) {s = 4;}
						else if ( (LA399_1==IDENT) && (synpred59_Css3())) {s = 32;}
						else if ( (LA399_1==VARIABLE) && (synpred59_Css3())) {s = 6;}
						else if ( (LA399_1==LBRACKET) && (synpred59_Css3())) {s = 7;}
						else if ( (LA399_1==NUMBER) && (synpred59_Css3())) {s = 8;}
						else if ( (LA399_1==URANGE) && (synpred59_Css3())) {s = 9;}
						else if ( (LA399_1==PERCENTAGE) && (synpred59_Css3())) {s = 10;}
						else if ( (LA399_1==LENGTH) && (synpred59_Css3())) {s = 11;}
						else if ( (LA399_1==EMS) && (synpred59_Css3())) {s = 12;}
						else if ( (LA399_1==REM) && (synpred59_Css3())) {s = 13;}
						else if ( (LA399_1==EXS) && (synpred59_Css3())) {s = 14;}
						else if ( (LA399_1==ANGLE) && (synpred59_Css3())) {s = 15;}
						else if ( (LA399_1==TIME) && (synpred59_Css3())) {s = 16;}
						else if ( (LA399_1==FREQ) && (synpred59_Css3())) {s = 17;}
						else if ( (LA399_1==RESOLUTION) && (synpred59_Css3())) {s = 18;}
						else if ( (LA399_1==DIMENSION) && (synpred59_Css3())) {s = 19;}
						else if ( (LA399_1==STRING) && (synpred59_Css3())) {s = 20;}
						else if ( (LA399_1==TILDE) && (synpred59_Css3())) {s = 21;}
						else if ( (LA399_1==LESS_JS_STRING) && (synpred59_Css3())) {s = 22;}
						else if ( (LA399_1==GEN) && (synpred59_Css3())) {s = 23;}
						else if ( (LA399_1==URI) && (synpred59_Css3())) {s = 24;}
						else if ( (LA399_1==HASH) && (synpred59_Css3())) {s = 25;}
						else if ( (LA399_1==AT_IDENT||(LA399_1 >= BOTTOMCENTER_SYM && LA399_1 <= BOTTOMRIGHT_SYM)||LA399_1==CHARSET_SYM||LA399_1==COUNTER_STYLE_SYM||LA399_1==FONT_FACE_SYM||LA399_1==IMPORT_SYM||LA399_1==KEYFRAMES_SYM||(LA399_1 >= LEFTBOTTOM_SYM && LA399_1 <= LEFTTOP_SYM)||LA399_1==MEDIA_SYM||LA399_1==MOZ_DOCUMENT_SYM||LA399_1==NAMESPACE_SYM||LA399_1==PAGE_SYM||(LA399_1 >= RIGHTBOTTOM_SYM && LA399_1 <= RIGHTTOP_SYM)||(LA399_1 >= SASS_AT_ROOT && LA399_1 <= SASS_DEBUG)||(LA399_1 >= SASS_EACH && LA399_1 <= SASS_ELSE)||LA399_1==SASS_EXTEND||(LA399_1 >= SASS_FOR && LA399_1 <= SASS_FUNCTION)||(LA399_1 >= SASS_IF && LA399_1 <= SASS_MIXIN)||(LA399_1 >= SASS_RETURN && LA399_1 <= SASS_USE)||(LA399_1 >= SASS_WARN && LA399_1 <= SASS_WHILE)||(LA399_1 >= TOPCENTER_SYM && LA399_1 <= TOPRIGHT_SYM)||LA399_1==WEBKIT_KEYFRAMES_SYM) && (synpred59_Css3())) {s = 33;}
						else if ( (LA399_1==SASS_VAR) && (synpred59_Css3())) {s = 34;}
						else if ( (LA399_1==LESS_AND) && (synpred59_Css3())) {s = 35;}
						else if ( (LA399_1==HASH_SYMBOL) && (synpred59_Css3())) {s = 36;}
						else if ( (LA399_1==AT_SIGN) && (synpred59_Css3())) {s = 37;}
						else if ( (LA399_1==PERCENTAGE_SYMBOL) && (synpred59_Css3())) {s = 38;}
						else if ( (LA399_1==SOLIDUS) && (synpred59_Css3())) {s = 3;}
						 
						input.seek(index399_1);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA399_0 = input.LA(1);
						 
						int index399_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA399_0==COMMENT||LA399_0==NL||LA399_0==WS) ) {s = 1;}
						else if ( (LA399_0==COMMA||LA399_0==RPAREN||LA399_0==SEMI) ) {s = 2;}
						else if ( (LA399_0==SOLIDUS) && (synpred59_Css3())) {s = 3;}
						else if ( (LA399_0==MINUS||LA399_0==PLUS) && (synpred59_Css3())) {s = 4;}
						else if ( (LA399_0==IDENT) && (synpred59_Css3())) {s = 5;}
						else if ( (LA399_0==VARIABLE) && (synpred59_Css3())) {s = 6;}
						else if ( (LA399_0==LBRACKET) && (synpred59_Css3())) {s = 7;}
						else if ( (LA399_0==NUMBER) && (synpred59_Css3())) {s = 8;}
						else if ( (LA399_0==URANGE) && (synpred59_Css3())) {s = 9;}
						else if ( (LA399_0==PERCENTAGE) && (synpred59_Css3())) {s = 10;}
						else if ( (LA399_0==LENGTH) && (synpred59_Css3())) {s = 11;}
						else if ( (LA399_0==EMS) && (synpred59_Css3())) {s = 12;}
						else if ( (LA399_0==REM) && (synpred59_Css3())) {s = 13;}
						else if ( (LA399_0==EXS) && (synpred59_Css3())) {s = 14;}
						else if ( (LA399_0==ANGLE) && (synpred59_Css3())) {s = 15;}
						else if ( (LA399_0==TIME) && (synpred59_Css3())) {s = 16;}
						else if ( (LA399_0==FREQ) && (synpred59_Css3())) {s = 17;}
						else if ( (LA399_0==RESOLUTION) && (synpred59_Css3())) {s = 18;}
						else if ( (LA399_0==DIMENSION) && (synpred59_Css3())) {s = 19;}
						else if ( (LA399_0==STRING) && (synpred59_Css3())) {s = 20;}
						else if ( (LA399_0==TILDE) && (synpred59_Css3())) {s = 21;}
						else if ( (LA399_0==LESS_JS_STRING) && (synpred59_Css3())) {s = 22;}
						else if ( (LA399_0==GEN) && (synpred59_Css3())) {s = 23;}
						else if ( (LA399_0==URI) && (synpred59_Css3())) {s = 24;}
						else if ( (LA399_0==HASH) && (synpred59_Css3())) {s = 25;}
						else if ( (LA399_0==AT_IDENT||(LA399_0 >= BOTTOMCENTER_SYM && LA399_0 <= BOTTOMRIGHT_SYM)||LA399_0==CHARSET_SYM||LA399_0==COUNTER_STYLE_SYM||LA399_0==FONT_FACE_SYM||LA399_0==IMPORT_SYM||LA399_0==KEYFRAMES_SYM||(LA399_0 >= LEFTBOTTOM_SYM && LA399_0 <= LEFTTOP_SYM)||LA399_0==MEDIA_SYM||LA399_0==MOZ_DOCUMENT_SYM||LA399_0==NAMESPACE_SYM||LA399_0==PAGE_SYM||(LA399_0 >= RIGHTBOTTOM_SYM && LA399_0 <= RIGHTTOP_SYM)||(LA399_0 >= SASS_AT_ROOT && LA399_0 <= SASS_DEBUG)||(LA399_0 >= SASS_EACH && LA399_0 <= SASS_ELSE)||LA399_0==SASS_EXTEND||(LA399_0 >= SASS_FOR && LA399_0 <= SASS_FUNCTION)||(LA399_0 >= SASS_IF && LA399_0 <= SASS_MIXIN)||(LA399_0 >= SASS_RETURN && LA399_0 <= SASS_USE)||(LA399_0 >= SASS_WARN && LA399_0 <= SASS_WHILE)||(LA399_0 >= TOPCENTER_SYM && LA399_0 <= TOPRIGHT_SYM)||LA399_0==WEBKIT_KEYFRAMES_SYM) && (synpred59_Css3())) {s = 26;}
						else if ( (LA399_0==SASS_VAR) && (synpred59_Css3())) {s = 27;}
						else if ( (LA399_0==LESS_AND) && (synpred59_Css3())) {s = 28;}
						else if ( (LA399_0==HASH_SYMBOL) && (synpred59_Css3())) {s = 29;}
						else if ( (LA399_0==AT_SIGN) && (synpred59_Css3())) {s = 30;}
						else if ( (LA399_0==PERCENTAGE_SYMBOL) && (synpred59_Css3())) {s = 31;}
						 
						input.seek(index399_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 399, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA398_eotS =
		"\5\uffff";
	static final String DFA398_eofS =
		"\5\uffff";
	static final String DFA398_minS =
		"\2\5\3\uffff";
	static final String DFA398_maxS =
		"\2\u009b\3\uffff";
	static final String DFA398_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA398_specialS =
		"\5\uffff}>";
	static final String[] DFA398_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\2\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff"+
			"\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA398_eot = DFA.unpackEncodedString(DFA398_eotS);
	static final short[] DFA398_eof = DFA.unpackEncodedString(DFA398_eofS);
	static final char[] DFA398_min = DFA.unpackEncodedStringToUnsignedChars(DFA398_minS);
	static final char[] DFA398_max = DFA.unpackEncodedStringToUnsignedChars(DFA398_maxS);
	static final short[] DFA398_accept = DFA.unpackEncodedString(DFA398_acceptS);
	static final short[] DFA398_special = DFA.unpackEncodedString(DFA398_specialS);
	static final short[][] DFA398_transition;

	static {
		int numStates = DFA398_transitionS.length;
		DFA398_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA398_transition[i] = DFA.unpackEncodedString(DFA398_transitionS[i]);
		}
	}

	protected class DFA398 extends DFA {

		public DFA398(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 398;
			this.eot = DFA398_eot;
			this.eof = DFA398_eof;
			this.min = DFA398_min;
			this.max = DFA398_max;
			this.accept = DFA398_accept;
			this.special = DFA398_special;
			this.transition = DFA398_transition;
		}
		@Override
		public String getDescription() {
			return "1238:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA408_eotS =
		"\5\uffff";
	static final String DFA408_eofS =
		"\2\2\3\uffff";
	static final String DFA408_minS =
		"\2\6\3\uffff";
	static final String DFA408_maxS =
		"\2\u009b\3\uffff";
	static final String DFA408_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA408_specialS =
		"\5\uffff}>";
	static final String[] DFA408_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\2\uffff\5\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\10\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\3\2\2"+
			"\1\uffff\6\2\1\4\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA408_eot = DFA.unpackEncodedString(DFA408_eotS);
	static final short[] DFA408_eof = DFA.unpackEncodedString(DFA408_eofS);
	static final char[] DFA408_min = DFA.unpackEncodedStringToUnsignedChars(DFA408_minS);
	static final char[] DFA408_max = DFA.unpackEncodedStringToUnsignedChars(DFA408_maxS);
	static final short[] DFA408_accept = DFA.unpackEncodedString(DFA408_acceptS);
	static final short[] DFA408_special = DFA.unpackEncodedString(DFA408_specialS);
	static final short[][] DFA408_transition;

	static {
		int numStates = DFA408_transitionS.length;
		DFA408_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA408_transition[i] = DFA.unpackEncodedString(DFA408_transitionS[i]);
		}
	}

	protected class DFA408 extends DFA {

		public DFA408(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 408;
			this.eot = DFA408_eot;
			this.eof = DFA408_eof;
			this.min = DFA408_min;
			this.max = DFA408_max;
			this.accept = DFA408_accept;
			this.special = DFA408_special;
			this.transition = DFA408_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1257:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA414_eotS =
		"\111\uffff";
	static final String DFA414_eofS =
		"\1\2\110\uffff";
	static final String DFA414_minS =
		"\1\5\1\0\60\uffff\1\0\26\uffff";
	static final String DFA414_maxS =
		"\1\u009b\1\0\60\uffff\1\0\26\uffff";
	static final String DFA414_acceptS =
		"\2\uffff\1\2\105\uffff\1\1";
	static final String DFA414_specialS =
		"\1\uffff\1\0\60\uffff\1\1\26\uffff}>";
	static final String[] DFA414_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\2\2\1\62\1\1\1\2\1\uffff\1\2\5\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\2\2\2\uffff\2\2\3\uffff\3\2\4\uffff"+
			"\1\2\1\uffff\7\2\1\uffff\2\2\3\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1"+
			"\3\uffff\2\2\3\uffff\5\2\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff"+
			"\11\2\1\uffff\6\2\1\uffff\3\2\1\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff"+
			"\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA414_eot = DFA.unpackEncodedString(DFA414_eotS);
	static final short[] DFA414_eof = DFA.unpackEncodedString(DFA414_eofS);
	static final char[] DFA414_min = DFA.unpackEncodedStringToUnsignedChars(DFA414_minS);
	static final char[] DFA414_max = DFA.unpackEncodedStringToUnsignedChars(DFA414_maxS);
	static final short[] DFA414_accept = DFA.unpackEncodedString(DFA414_acceptS);
	static final short[] DFA414_special = DFA.unpackEncodedString(DFA414_specialS);
	static final short[][] DFA414_transition;

	static {
		int numStates = DFA414_transitionS.length;
		DFA414_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA414_transition[i] = DFA.unpackEncodedString(DFA414_transitionS[i]);
		}
	}

	protected class DFA414 extends DFA {

		public DFA414(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 414;
			this.eot = DFA414_eot;
			this.eof = DFA414_eof;
			this.min = DFA414_min;
			this.max = DFA414_max;
			this.accept = DFA414_accept;
			this.special = DFA414_special;
			this.transition = DFA414_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1273:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA414_1 = input.LA(1);
						 
						int index414_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index414_1);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA414_50 = input.LA(1);
						 
						int index414_50 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred61_Css3()) ) {s = 72;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index414_50);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 414, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA420_eotS =
		"\121\uffff";
	static final String DFA420_eofS =
		"\1\2\120\uffff";
	static final String DFA420_minS =
		"\1\5\1\0\2\uffff\13\0\2\uffff\1\0\1\uffff\6\0\1\uffff\2\0\3\uffff\15\0"+
		"\1\uffff\2\0\1\uffff\1\0\2\uffff\1\0\3\uffff\21\0\2\uffff\1\0\6\uffff";
	static final String DFA420_maxS =
		"\1\u009b\1\0\2\uffff\13\0\2\uffff\1\0\1\uffff\6\0\1\uffff\2\0\3\uffff"+
		"\15\0\1\uffff\2\0\1\uffff\1\0\2\uffff\1\0\3\uffff\21\0\2\uffff\1\0\6\uffff";
	static final String DFA420_acceptS =
		"\2\uffff\1\3\110\uffff\5\1\1\2";
	static final String DFA420_specialS =
		"\1\0\1\1\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\uffff"+
		"\1\15\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\3\uffff"+
		"\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\uffff"+
		"\1\43\1\44\1\uffff\1\45\2\uffff\1\46\3\uffff\1\47\1\50\1\51\1\52\1\53"+
		"\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\2\uffff\1"+
		"\70\6\uffff}>";
	static final String[] DFA420_transitionS = {
			"\1\77\1\24\1\12\2\uffff\5\55\3\uffff\1\63\2\2\1\112\1\2\1\uffff\1\56"+
			"\1\2\1\113\1\114\2\uffff\1\2\1\32\1\2\1\uffff\1\74\3\uffff\1\76\1\uffff"+
			"\1\46\1\101\1\uffff\1\14\1\103\1\117\1\uffff\1\23\1\11\3\uffff\1\7\1"+
			"\4\1\44\4\uffff\1\51\1\uffff\2\2\1\33\3\55\1\73\1\115\1\21\1\104\1\116"+
			"\1\2\1\uffff\1\107\1\uffff\1\52\1\10\1\47\5\uffff\1\63\1\112\3\uffff"+
			"\1\67\1\5\3\uffff\1\45\1\72\1\106\1\2\1\30\2\uffff\1\2\1\uffff\1\75\1"+
			"\102\3\55\1\2\1\uffff\1\26\1\43\1\27\1\2\1\41\1\63\2\uffff\1\53\1\2\1"+
			"\40\1\63\1\60\1\2\1\37\1\25\1\15\1\uffff\2\63\1\16\1\27\1\42\1\2\1\uffff"+
			"\1\2\1\6\1\2\1\uffff\1\70\1\100\5\55\2\uffff\1\71\1\105\2\uffff\1\13"+
			"\1\uffff\1\50\1\1",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA420_eot = DFA.unpackEncodedString(DFA420_eotS);
	static final short[] DFA420_eof = DFA.unpackEncodedString(DFA420_eofS);
	static final char[] DFA420_min = DFA.unpackEncodedStringToUnsignedChars(DFA420_minS);
	static final char[] DFA420_max = DFA.unpackEncodedStringToUnsignedChars(DFA420_maxS);
	static final short[] DFA420_accept = DFA.unpackEncodedString(DFA420_acceptS);
	static final short[] DFA420_special = DFA.unpackEncodedString(DFA420_specialS);
	static final short[][] DFA420_transition;

	static {
		int numStates = DFA420_transitionS.length;
		DFA420_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA420_transition[i] = DFA.unpackEncodedString(DFA420_transitionS[i]);
		}
	}

	protected class DFA420 extends DFA {

		public DFA420(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 420;
			this.eot = DFA420_eot;
			this.eof = DFA420_eof;
			this.min = DFA420_min;
			this.max = DFA420_max;
			this.accept = DFA420_accept;
			this.special = DFA420_special;
			this.transition = DFA420_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1290:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA420_0 = input.LA(1);
						 
						int index420_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA420_0==WS) ) {s = 1;}
						else if ( (LA420_0==EOF||(LA420_0 >= COLON && LA420_0 <= COMMA)||LA420_0==CONTAINER_SYM||LA420_0==CP_DOTS||LA420_0==DCOLON||LA420_0==DOT||(LA420_0 >= LAYER_SYM && LA420_0 <= LBRACE)||LA420_0==LESS_REST||LA420_0==PIPE||LA420_0==RBRACE||LA420_0==RPAREN||LA420_0==SASS_DEFAULT||LA420_0==SASS_EXTEND_ONLY_SELECTOR||LA420_0==SASS_GLOBAL||LA420_0==SEMI||LA420_0==STAR||LA420_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA420_0==IMPORTANT_SYM) ) {s = 4;}
						else if ( (LA420_0==NUMBER) ) {s = 5;}
						else if ( (LA420_0==STRING) ) {s = 6;}
						else if ( (LA420_0==IDENT) ) {s = 7;}
						else if ( (LA420_0==MINUS) ) {s = 8;}
						else if ( (LA420_0==HASH_SYMBOL) ) {s = 9;}
						else if ( (LA420_0==AT_SIGN) ) {s = 10;}
						else if ( (LA420_0==VARIABLE) ) {s = 11;}
						else if ( (LA420_0==GEN) ) {s = 12;}
						else if ( (LA420_0==SASS_MIXIN) ) {s = 13;}
						else if ( (LA420_0==SASS_VAR) ) {s = 14;}
						else if ( (LA420_0==LESS_AND) ) {s = 17;}
						else if ( (LA420_0==HASH) ) {s = 19;}
						else if ( (LA420_0==AT_IDENT) ) {s = 20;}
						else if ( (LA420_0==SASS_INCLUDE) ) {s = 21;}
						else if ( (LA420_0==SASS_AT_ROOT) ) {s = 22;}
						else if ( (LA420_0==SASS_DEBUG||LA420_0==SASS_WARN) ) {s = 23;}
						else if ( (LA420_0==PLUS) ) {s = 24;}
						else if ( (LA420_0==DIMENSION) ) {s = 26;}
						else if ( (LA420_0==LBRACKET) ) {s = 27;}
						else if ( (LA420_0==SASS_IF) ) {s = 31;}
						else if ( (LA420_0==SASS_FOR) ) {s = 32;}
						else if ( (LA420_0==SASS_EACH) ) {s = 33;}
						else if ( (LA420_0==SASS_WHILE) ) {s = 34;}
						else if ( (LA420_0==SASS_CONTENT) ) {s = 35;}
						else if ( (LA420_0==IMPORT_SYM) ) {s = 36;}
						else if ( (LA420_0==PAGE_SYM) ) {s = 37;}
						else if ( (LA420_0==FONT_FACE_SYM) ) {s = 38;}
						else if ( (LA420_0==MOZ_DOCUMENT_SYM) ) {s = 39;}
						else if ( (LA420_0==WEBKIT_KEYFRAMES_SYM) ) {s = 40;}
						else if ( (LA420_0==KEYFRAMES_SYM) ) {s = 41;}
						else if ( (LA420_0==MEDIA_SYM) ) {s = 42;}
						else if ( (LA420_0==SASS_EXTEND) ) {s = 43;}
						else if ( ((LA420_0 >= BOTTOMCENTER_SYM && LA420_0 <= BOTTOMRIGHT_SYM)||(LA420_0 >= LEFTBOTTOM_SYM && LA420_0 <= LEFTTOP_SYM)||(LA420_0 >= RIGHTBOTTOM_SYM && LA420_0 <= RIGHTTOP_SYM)||(LA420_0 >= TOPCENTER_SYM && LA420_0 <= TOPRIGHT_SYM)) ) {s = 45;}
						else if ( (LA420_0==COUNTER_STYLE_SYM) ) {s = 46;}
						else if ( (LA420_0==SASS_FUNCTION) ) {s = 48;}
						else if ( (LA420_0==CHARSET_SYM||LA420_0==NAMESPACE_SYM||LA420_0==SASS_ELSE||LA420_0==SASS_FORWARD||(LA420_0 >= SASS_RETURN && LA420_0 <= SASS_USE)) ) {s = 51;}
						else if ( (LA420_0==NOT) ) {s = 55;}
						else if ( (LA420_0==TILDE) ) {s = 56;}
						else if ( (LA420_0==URANGE) ) {s = 57;}
						else if ( (LA420_0==PERCENTAGE) ) {s = 58;}
						else if ( (LA420_0==LENGTH) ) {s = 59;}
						else if ( (LA420_0==EMS) ) {s = 60;}
						else if ( (LA420_0==REM) ) {s = 61;}
						else if ( (LA420_0==EXS) ) {s = 62;}
						else if ( (LA420_0==ANGLE) ) {s = 63;}
						else if ( (LA420_0==TIME) ) {s = 64;}
						else if ( (LA420_0==FREQ) ) {s = 65;}
						else if ( (LA420_0==RESOLUTION) ) {s = 66;}
						else if ( (LA420_0==GREATER) ) {s = 67;}
						else if ( (LA420_0==LESS_JS_STRING) ) {s = 68;}
						else if ( (LA420_0==URI) ) {s = 69;}
						else if ( (LA420_0==PERCENTAGE_SYMBOL) ) {s = 70;}
						else if ( (LA420_0==LPAREN) ) {s = 71;}
						else if ( (LA420_0==COMMENT||LA420_0==NL) ) {s = 74;}
						else if ( (LA420_0==CP_EQ) && (synpred63_Css3())) {s = 75;}
						else if ( (LA420_0==CP_NOT_EQ) && (synpred63_Css3())) {s = 76;}
						else if ( (LA420_0==LESS) && (synpred63_Css3())) {s = 77;}
						else if ( (LA420_0==LESS_OR_EQ) && (synpred63_Css3())) {s = 78;}
						else if ( (LA420_0==GREATER_OR_EQ) && (synpred63_Css3())) {s = 79;}
						 
						input.seek(index420_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA420_1 = input.LA(1);
						 
						int index420_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 79;}
						else if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_1);
						if ( s>=0 ) return s;
						break;
					case 2 : 
						int LA420_4 = input.LA(1);
						 
						int index420_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_4);
						if ( s>=0 ) return s;
						break;
					case 3 : 
						int LA420_5 = input.LA(1);
						 
						int index420_5 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_5);
						if ( s>=0 ) return s;
						break;
					case 4 : 
						int LA420_6 = input.LA(1);
						 
						int index420_6 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_6);
						if ( s>=0 ) return s;
						break;
					case 5 : 
						int LA420_7 = input.LA(1);
						 
						int index420_7 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred63_Css3()&&(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")||evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")))) ) {s = 79;}
						else if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_7);
						if ( s>=0 ) return s;
						break;
					case 6 : 
						int LA420_8 = input.LA(1);
						 
						int index420_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_8);
						if ( s>=0 ) return s;
						break;
					case 7 : 
						int LA420_9 = input.LA(1);
						 
						int index420_9 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred64_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_9);
						if ( s>=0 ) return s;
						break;
					case 8 : 
						int LA420_10 = input.LA(1);
						 
						int index420_10 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_10);
						if ( s>=0 ) return s;
						break;
					case 9 : 
						int LA420_11 = input.LA(1);
						 
						int index420_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_11);
						if ( s>=0 ) return s;
						break;
					case 10 : 
						int LA420_12 = input.LA(1);
						 
						int index420_12 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_12);
						if ( s>=0 ) return s;
						break;
					case 11 : 
						int LA420_13 = input.LA(1);
						 
						int index420_13 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_13);
						if ( s>=0 ) return s;
						break;
					case 12 : 
						int LA420_14 = input.LA(1);
						 
						int index420_14 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred64_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_14);
						if ( s>=0 ) return s;
						break;
					case 13 : 
						int LA420_17 = input.LA(1);
						 
						int index420_17 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred64_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_17);
						if ( s>=0 ) return s;
						break;
					case 14 : 
						int LA420_19 = input.LA(1);
						 
						int index420_19 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_19);
						if ( s>=0 ) return s;
						break;
					case 15 : 
						int LA420_20 = input.LA(1);
						 
						int index420_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_20);
						if ( s>=0 ) return s;
						break;
					case 16 : 
						int LA420_21 = input.LA(1);
						 
						int index420_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_21);
						if ( s>=0 ) return s;
						break;
					case 17 : 
						int LA420_22 = input.LA(1);
						 
						int index420_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_22);
						if ( s>=0 ) return s;
						break;
					case 18 : 
						int LA420_23 = input.LA(1);
						 
						int index420_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_23);
						if ( s>=0 ) return s;
						break;
					case 19 : 
						int LA420_24 = input.LA(1);
						 
						int index420_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_24);
						if ( s>=0 ) return s;
						break;
					case 20 : 
						int LA420_26 = input.LA(1);
						 
						int index420_26 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_26);
						if ( s>=0 ) return s;
						break;
					case 21 : 
						int LA420_27 = input.LA(1);
						 
						int index420_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_27);
						if ( s>=0 ) return s;
						break;
					case 22 : 
						int LA420_31 = input.LA(1);
						 
						int index420_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_31);
						if ( s>=0 ) return s;
						break;
					case 23 : 
						int LA420_32 = input.LA(1);
						 
						int index420_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_32);
						if ( s>=0 ) return s;
						break;
					case 24 : 
						int LA420_33 = input.LA(1);
						 
						int index420_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_33);
						if ( s>=0 ) return s;
						break;
					case 25 : 
						int LA420_34 = input.LA(1);
						 
						int index420_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_34);
						if ( s>=0 ) return s;
						break;
					case 26 : 
						int LA420_35 = input.LA(1);
						 
						int index420_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_35);
						if ( s>=0 ) return s;
						break;
					case 27 : 
						int LA420_36 = input.LA(1);
						 
						int index420_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_36);
						if ( s>=0 ) return s;
						break;
					case 28 : 
						int LA420_37 = input.LA(1);
						 
						int index420_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_37);
						if ( s>=0 ) return s;
						break;
					case 29 : 
						int LA420_38 = input.LA(1);
						 
						int index420_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_38);
						if ( s>=0 ) return s;
						break;
					case 30 : 
						int LA420_39 = input.LA(1);
						 
						int index420_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_39);
						if ( s>=0 ) return s;
						break;
					case 31 : 
						int LA420_40 = input.LA(1);
						 
						int index420_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_40);
						if ( s>=0 ) return s;
						break;
					case 32 : 
						int LA420_41 = input.LA(1);
						 
						int index420_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_41);
						if ( s>=0 ) return s;
						break;
					case 33 : 
						int LA420_42 = input.LA(1);
						 
						int index420_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_42);
						if ( s>=0 ) return s;
						break;
					case 34 : 
						int LA420_43 = input.LA(1);
						 
						int index420_43 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_43);
						if ( s>=0 ) return s;
						break;
					case 35 : 
						int LA420_45 = input.LA(1);
						 
						int index420_45 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_45);
						if ( s>=0 ) return s;
						break;
					case 36 : 
						int LA420_46 = input.LA(1);
						 
						int index420_46 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_46);
						if ( s>=0 ) return s;
						break;
					case 37 : 
						int LA420_48 = input.LA(1);
						 
						int index420_48 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_48);
						if ( s>=0 ) return s;
						break;
					case 38 : 
						int LA420_51 = input.LA(1);
						 
						int index420_51 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred64_Css3())) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_51);
						if ( s>=0 ) return s;
						break;
					case 39 : 
						int LA420_55 = input.LA(1);
						 
						int index420_55 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_55);
						if ( s>=0 ) return s;
						break;
					case 40 : 
						int LA420_56 = input.LA(1);
						 
						int index420_56 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_56);
						if ( s>=0 ) return s;
						break;
					case 41 : 
						int LA420_57 = input.LA(1);
						 
						int index420_57 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_57);
						if ( s>=0 ) return s;
						break;
					case 42 : 
						int LA420_58 = input.LA(1);
						 
						int index420_58 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_58);
						if ( s>=0 ) return s;
						break;
					case 43 : 
						int LA420_59 = input.LA(1);
						 
						int index420_59 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_59);
						if ( s>=0 ) return s;
						break;
					case 44 : 
						int LA420_60 = input.LA(1);
						 
						int index420_60 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_60);
						if ( s>=0 ) return s;
						break;
					case 45 : 
						int LA420_61 = input.LA(1);
						 
						int index420_61 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_61);
						if ( s>=0 ) return s;
						break;
					case 46 : 
						int LA420_62 = input.LA(1);
						 
						int index420_62 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_62);
						if ( s>=0 ) return s;
						break;
					case 47 : 
						int LA420_63 = input.LA(1);
						 
						int index420_63 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_63);
						if ( s>=0 ) return s;
						break;
					case 48 : 
						int LA420_64 = input.LA(1);
						 
						int index420_64 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_64);
						if ( s>=0 ) return s;
						break;
					case 49 : 
						int LA420_65 = input.LA(1);
						 
						int index420_65 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_65);
						if ( s>=0 ) return s;
						break;
					case 50 : 
						int LA420_66 = input.LA(1);
						 
						int index420_66 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_66);
						if ( s>=0 ) return s;
						break;
					case 51 : 
						int LA420_67 = input.LA(1);
						 
						int index420_67 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 79;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_67);
						if ( s>=0 ) return s;
						break;
					case 52 : 
						int LA420_68 = input.LA(1);
						 
						int index420_68 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_68);
						if ( s>=0 ) return s;
						break;
					case 53 : 
						int LA420_69 = input.LA(1);
						 
						int index420_69 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_69);
						if ( s>=0 ) return s;
						break;
					case 54 : 
						int LA420_70 = input.LA(1);
						 
						int index420_70 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred64_Css3())) ) {s = 80;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index420_70);
						if ( s>=0 ) return s;
						break;
					case 55 : 
						int LA420_71 = input.LA(1);
						 
						int index420_71 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_71);
						if ( s>=0 ) return s;
						break;
					case 56 : 
						int LA420_74 = input.LA(1);
						 
						int index420_74 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred63_Css3()) ) {s = 79;}
						else if ( (synpred64_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index420_74);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 420, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA434_eotS =
		"\121\uffff";
	static final String DFA434_eofS =
		"\1\2\120\uffff";
	static final String DFA434_minS =
		"\1\5\1\0\13\uffff\1\0\34\uffff\1\0\10\uffff\1\0\33\uffff\1\0\1\uffff";
	static final String DFA434_maxS =
		"\1\u009b\1\0\13\uffff\1\0\34\uffff\1\0\10\uffff\1\0\33\uffff\1\0\1\uffff";
	static final String DFA434_acceptS =
		"\2\uffff\1\2\115\uffff\1\1";
	static final String DFA434_specialS =
		"\1\0\1\1\13\uffff\1\2\34\uffff\1\3\10\uffff\1\4\33\uffff\1\5\1\uffff}>";
	static final String[] DFA434_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\117\1\2\1\uffff\4\2\2\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\3\uffff\3\2\4\uffff"+
			"\1\2\1\uffff\14\2\1\uffff\1\2\1\uffff\1\2\1\15\1\2\5\uffff\1\2\1\117"+
			"\3\uffff\2\2\3\uffff\4\2\1\52\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff"+
			"\11\2\1\uffff\6\2\1\120\1\63\2\2\1\uffff\7\2\2\uffff\2\2\2\uffff\1\2"+
			"\1\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA434_eot = DFA.unpackEncodedString(DFA434_eotS);
	static final short[] DFA434_eof = DFA.unpackEncodedString(DFA434_eofS);
	static final char[] DFA434_min = DFA.unpackEncodedStringToUnsignedChars(DFA434_minS);
	static final char[] DFA434_max = DFA.unpackEncodedStringToUnsignedChars(DFA434_maxS);
	static final short[] DFA434_accept = DFA.unpackEncodedString(DFA434_acceptS);
	static final short[] DFA434_special = DFA.unpackEncodedString(DFA434_specialS);
	static final short[][] DFA434_transition;

	static {
		int numStates = DFA434_transitionS.length;
		DFA434_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA434_transition[i] = DFA.unpackEncodedString(DFA434_transitionS[i]);
		}
	}

	protected class DFA434 extends DFA {

		public DFA434(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 434;
			this.eot = DFA434_eot;
			this.eof = DFA434_eof;
			this.min = DFA434_min;
			this.max = DFA434_max;
			this.accept = DFA434_accept;
			this.special = DFA434_special;
			this.transition = DFA434_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1332:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA434_0 = input.LA(1);
						 
						int index434_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA434_0==WS) ) {s = 1;}
						else if ( (LA434_0==EOF||(LA434_0 >= ANGLE && LA434_0 <= AT_SIGN)||(LA434_0 >= BOTTOMCENTER_SYM && LA434_0 <= BOTTOMRIGHT_SYM)||(LA434_0 >= CHARSET_SYM && LA434_0 <= COMMA)||LA434_0==CONTAINER_SYM||(LA434_0 >= COUNTER_STYLE_SYM && LA434_0 <= CP_NOT_EQ)||(LA434_0 >= DCOLON && LA434_0 <= DOT)||LA434_0==EMS||LA434_0==EXS||(LA434_0 >= FONT_FACE_SYM && LA434_0 <= FREQ)||(LA434_0 >= GEN && LA434_0 <= GREATER_OR_EQ)||(LA434_0 >= HASH && LA434_0 <= HASH_SYMBOL)||(LA434_0 >= IDENT && LA434_0 <= IMPORT_SYM)||LA434_0==KEYFRAMES_SYM||(LA434_0 >= LAYER_SYM && LA434_0 <= LESS_REST)||LA434_0==LPAREN||LA434_0==MEDIA_SYM||LA434_0==MOZ_DOCUMENT_SYM||LA434_0==NAMESPACE_SYM||(LA434_0 >= NOT && LA434_0 <= NUMBER)||(LA434_0 >= PAGE_SYM && LA434_0 <= PIPE)||LA434_0==RBRACE||(LA434_0 >= REM && LA434_0 <= RPAREN)||(LA434_0 >= SASS_AT_ROOT && LA434_0 <= SASS_ELSE)||(LA434_0 >= SASS_EXTEND && LA434_0 <= SASS_MIXIN)||(LA434_0 >= SASS_RETURN && LA434_0 <= SEMI)||(LA434_0 >= STRING && LA434_0 <= SUPPORTS_SYM)||(LA434_0 >= TILDE && LA434_0 <= TOPRIGHT_SYM)||(LA434_0 >= URANGE && LA434_0 <= URI)||LA434_0==VARIABLE||LA434_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA434_0==MINUS) ) {s = 13;}
						else if ( (LA434_0==PLUS) ) {s = 42;}
						else if ( (LA434_0==STAR) ) {s = 51;}
						else if ( (LA434_0==COMMENT||LA434_0==NL) ) {s = 79;}
						else if ( (LA434_0==SOLIDUS) && (synpred66_Css3())) {s = 80;}
						 
						input.seek(index434_0);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA434_1 = input.LA(1);
						 
						int index434_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred66_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index434_1);
						if ( s>=0 ) return s;
						break;
					case 2 : 
						int LA434_13 = input.LA(1);
						 
						int index434_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred66_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index434_13);
						if ( s>=0 ) return s;
						break;
					case 3 : 
						int LA434_42 = input.LA(1);
						 
						int index434_42 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred66_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index434_42);
						if ( s>=0 ) return s;
						break;
					case 4 : 
						int LA434_51 = input.LA(1);
						 
						int index434_51 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred66_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index434_51);
						if ( s>=0 ) return s;
						break;
					case 5 : 
						int LA434_79 = input.LA(1);
						 
						int index434_79 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred66_Css3()) ) {s = 80;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index434_79);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 434, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA439_eotS =
		"\6\uffff";
	static final String DFA439_eofS =
		"\6\uffff";
	static final String DFA439_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA439_maxS =
		"\1\u009a\1\u009b\3\uffff\1\u009b";
	static final String DFA439_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA439_specialS =
		"\6\uffff}>";
	static final String[] DFA439_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\1\2\5\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\3\1\2\4\uffff"+
			"\1\2\3\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff"+
			"\1\2\5\uffff\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff\1\2\2\uffff"+
			"\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\4\uffff\1\2\3\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff"+
			"\1\2\5\uffff\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2"+
			"\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff"+
			"\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5",
			"",
			"",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\2\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\4\uffff\1\2\3\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff"+
			"\1\2\5\uffff\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2"+
			"\1\uffff\2\2\2\uffff\1\2\1\uffff\3\2\1\uffff\3\2\1\uffff\5\2\3\uffff"+
			"\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5"
	};

	static final short[] DFA439_eot = DFA.unpackEncodedString(DFA439_eotS);
	static final short[] DFA439_eof = DFA.unpackEncodedString(DFA439_eofS);
	static final char[] DFA439_min = DFA.unpackEncodedStringToUnsignedChars(DFA439_minS);
	static final char[] DFA439_max = DFA.unpackEncodedStringToUnsignedChars(DFA439_maxS);
	static final short[] DFA439_accept = DFA.unpackEncodedString(DFA439_acceptS);
	static final short[] DFA439_special = DFA.unpackEncodedString(DFA439_specialS);
	static final short[][] DFA439_transition;

	static {
		int numStates = DFA439_transitionS.length;
		DFA439_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA439_transition[i] = DFA.unpackEncodedString(DFA439_transitionS[i]);
		}
	}

	protected class DFA439 extends DFA {

		public DFA439(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 439;
			this.eot = DFA439_eot;
			this.eof = DFA439_eof;
			this.min = DFA439_min;
			this.max = DFA439_max;
			this.accept = DFA439_accept;
			this.special = DFA439_special;
			this.transition = DFA439_transition;
		}
		@Override
		public String getDescription() {
			return "1337:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA446_eotS =
		"\4\uffff";
	static final String DFA446_eofS =
		"\4\uffff";
	static final String DFA446_minS =
		"\2\25\2\uffff";
	static final String DFA446_maxS =
		"\2\u009b\2\uffff";
	static final String DFA446_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA446_specialS =
		"\4\uffff}>";
	static final String[] DFA446_transitionS = {
			"\1\1\36\uffff\1\2\11\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"\1\1\36\uffff\1\2\11\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA446_eot = DFA.unpackEncodedString(DFA446_eotS);
	static final short[] DFA446_eof = DFA.unpackEncodedString(DFA446_eofS);
	static final char[] DFA446_min = DFA.unpackEncodedStringToUnsignedChars(DFA446_minS);
	static final char[] DFA446_max = DFA.unpackEncodedStringToUnsignedChars(DFA446_maxS);
	static final short[] DFA446_accept = DFA.unpackEncodedString(DFA446_acceptS);
	static final short[] DFA446_special = DFA.unpackEncodedString(DFA446_specialS);
	static final short[][] DFA446_transition;

	static {
		int numStates = DFA446_transitionS.length;
		DFA446_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA446_transition[i] = DFA.unpackEncodedString(DFA446_transitionS[i]);
		}
	}

	protected class DFA446 extends DFA {

		public DFA446(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 446;
			this.eot = DFA446_eot;
			this.eof = DFA446_eof;
			this.min = DFA446_min;
			this.max = DFA446_max;
			this.accept = DFA446_accept;
			this.special = DFA446_special;
			this.transition = DFA446_transition;
		}
		@Override
		public String getDescription() {
			return "1353:107: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA450_eotS =
		"\4\uffff";
	static final String DFA450_eofS =
		"\4\uffff";
	static final String DFA450_minS =
		"\2\25\2\uffff";
	static final String DFA450_maxS =
		"\2\u009b\2\uffff";
	static final String DFA450_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA450_specialS =
		"\4\uffff}>";
	static final String[] DFA450_transitionS = {
			"\1\1\50\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"\1\1\50\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA450_eot = DFA.unpackEncodedString(DFA450_eotS);
	static final short[] DFA450_eof = DFA.unpackEncodedString(DFA450_eofS);
	static final char[] DFA450_min = DFA.unpackEncodedStringToUnsignedChars(DFA450_minS);
	static final char[] DFA450_max = DFA.unpackEncodedStringToUnsignedChars(DFA450_maxS);
	static final short[] DFA450_accept = DFA.unpackEncodedString(DFA450_acceptS);
	static final short[] DFA450_special = DFA.unpackEncodedString(DFA450_specialS);
	static final short[][] DFA450_transition;

	static {
		int numStates = DFA450_transitionS.length;
		DFA450_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA450_transition[i] = DFA.unpackEncodedString(DFA450_transitionS[i]);
		}
	}

	protected class DFA450 extends DFA {

		public DFA450(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 450;
			this.eot = DFA450_eot;
			this.eof = DFA450_eof;
			this.min = DFA450_min;
			this.max = DFA450_max;
			this.accept = DFA450_accept;
			this.special = DFA450_special;
			this.transition = DFA450_transition;
		}
		@Override
		public String getDescription() {
			return "1355:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA465_eotS =
		"\4\uffff";
	static final String DFA465_eofS =
		"\2\3\2\uffff";
	static final String DFA465_minS =
		"\2\6\2\uffff";
	static final String DFA465_maxS =
		"\2\u009b\2\uffff";
	static final String DFA465_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA465_specialS =
		"\4\uffff}>";
	static final String[] DFA465_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\6\3\2\uffff\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\5\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\6\3\2\uffff\1\3\4\uffff\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff"+
			"\6\3\1\uffff\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA465_eot = DFA.unpackEncodedString(DFA465_eotS);
	static final short[] DFA465_eof = DFA.unpackEncodedString(DFA465_eofS);
	static final char[] DFA465_min = DFA.unpackEncodedStringToUnsignedChars(DFA465_minS);
	static final char[] DFA465_max = DFA.unpackEncodedStringToUnsignedChars(DFA465_maxS);
	static final short[] DFA465_accept = DFA.unpackEncodedString(DFA465_acceptS);
	static final short[] DFA465_special = DFA.unpackEncodedString(DFA465_specialS);
	static final short[][] DFA465_transition;

	static {
		int numStates = DFA465_transitionS.length;
		DFA465_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA465_transition[i] = DFA.unpackEncodedString(DFA465_transitionS[i]);
		}
	}

	protected class DFA465 extends DFA {

		public DFA465(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 465;
			this.eot = DFA465_eot;
			this.eof = DFA465_eof;
			this.min = DFA465_min;
			this.max = DFA465_max;
			this.accept = DFA465_accept;
			this.special = DFA465_special;
			this.transition = DFA465_transition;
		}
		@Override
		public String getDescription() {
			return "1367:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA467_eotS =
		"\4\uffff";
	static final String DFA467_eofS =
		"\2\3\2\uffff";
	static final String DFA467_minS =
		"\2\6\2\uffff";
	static final String DFA467_maxS =
		"\2\u009b\2\uffff";
	static final String DFA467_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA467_specialS =
		"\4\uffff}>";
	static final String[] DFA467_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\1\3\1\2\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff"+
			"\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\5\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\3\1\uffff\1\3\5\uffff\3\3"+
			"\7\uffff\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\4\uffff\1\3\1\uffff"+
			"\1\3\1\2\4\3\2\uffff\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff"+
			"\2\3\2\uffff\1\3\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\6\3\1\uffff"+
			"\3\3\1\uffff\6\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA467_eot = DFA.unpackEncodedString(DFA467_eotS);
	static final short[] DFA467_eof = DFA.unpackEncodedString(DFA467_eofS);
	static final char[] DFA467_min = DFA.unpackEncodedStringToUnsignedChars(DFA467_minS);
	static final char[] DFA467_max = DFA.unpackEncodedStringToUnsignedChars(DFA467_maxS);
	static final short[] DFA467_accept = DFA.unpackEncodedString(DFA467_acceptS);
	static final short[] DFA467_special = DFA.unpackEncodedString(DFA467_specialS);
	static final short[][] DFA467_transition;

	static {
		int numStates = DFA467_transitionS.length;
		DFA467_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA467_transition[i] = DFA.unpackEncodedString(DFA467_transitionS[i]);
		}
	}

	protected class DFA467 extends DFA {

		public DFA467(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 467;
			this.eot = DFA467_eot;
			this.eof = DFA467_eof;
			this.min = DFA467_min;
			this.max = DFA467_max;
			this.accept = DFA467_accept;
			this.special = DFA467_special;
			this.transition = DFA467_transition;
		}
		@Override
		public String getDescription() {
			return "1367:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA480_eotS =
		"\12\uffff";
	static final String DFA480_eofS =
		"\12\uffff";
	static final String DFA480_minS =
		"\4\5\1\uffff\1\5\1\uffff\1\5\1\64\1\5";
	static final String DFA480_maxS =
		"\1\u009a\3\u009b\1\uffff\1\u009b\1\uffff\1\u009b\1\u0082\1\u009b";
	static final String DFA480_acceptS =
		"\4\uffff\1\2\1\uffff\1\1\3\uffff";
	static final String DFA480_specialS =
		"\12\uffff}>";
	static final String[] DFA480_transitionS = {
			"\1\4\1\1\1\4\2\uffff\5\1\3\uffff\1\1\5\uffff\1\1\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\1\1\1\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\3"+
			"\1\4\1\1\4\uffff\1\1\2\uffff\2\4\3\1\1\4\1\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\1\1\4\1\1\5\uffff\1\1\4\uffff\2\4\3\uffff\1\1\2\4\1\uffff\1\4\4\uffff"+
			"\2\4\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\3\1\1\uffff\3\1"+
			"\1\uffff\2\1\1\2\2\1\3\uffff\1\4\2\uffff\2\4\5\1\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\5",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\7",
			"\3\4\2\uffff\5\4\3\uffff\4\4\2\uffff\4\4\3\uffff\1\4\1\10\1\uffff\1"+
			"\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\2\4\3\uffff\2\4\3\uffff"+
			"\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\2\4",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\5",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\7",
			"\1\4\115\uffff\1\11",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\2\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\4\uffff"+
			"\1\4\3\uffff\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\11\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\7"
	};

	static final short[] DFA480_eot = DFA.unpackEncodedString(DFA480_eotS);
	static final short[] DFA480_eof = DFA.unpackEncodedString(DFA480_eofS);
	static final char[] DFA480_min = DFA.unpackEncodedStringToUnsignedChars(DFA480_minS);
	static final char[] DFA480_max = DFA.unpackEncodedStringToUnsignedChars(DFA480_maxS);
	static final short[] DFA480_accept = DFA.unpackEncodedString(DFA480_acceptS);
	static final short[] DFA480_special = DFA.unpackEncodedString(DFA480_specialS);
	static final short[][] DFA480_transition;

	static {
		int numStates = DFA480_transitionS.length;
		DFA480_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA480_transition[i] = DFA.unpackEncodedString(DFA480_transitionS[i]);
		}
	}

	protected class DFA480 extends DFA {

		public DFA480(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 480;
			this.eot = DFA480_eot;
			this.eof = DFA480_eof;
			this.min = DFA480_min;
			this.max = DFA480_max;
			this.accept = DFA480_accept;
			this.special = DFA480_special;
			this.transition = DFA480_transition;
		}
		@Override
		public String getDescription() {
			return "1393:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA483_eotS =
		"\5\uffff";
	static final String DFA483_eofS =
		"\5\uffff";
	static final String DFA483_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA483_maxS =
		"\1\u0085\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA483_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA483_specialS =
		"\5\uffff}>";
	static final String[] DFA483_transitionS = {
			"\1\1\4\uffff\1\2\56\uffff\1\2\43\uffff\1\2\30\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3\4\5\uffff\1\2\3\uffff"+
			"\1\4\1\uffff\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff"+
			"\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\10\uffff"+
			"\5\4\10\uffff\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\2\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\4\uffff\1\4\4\uffff\3\4\5\uffff\1\2\3\uffff"+
			"\1\4\1\uffff\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff"+
			"\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\10\uffff"+
			"\5\4\10\uffff\1\4\1\3",
			""
	};

	static final short[] DFA483_eot = DFA.unpackEncodedString(DFA483_eotS);
	static final short[] DFA483_eof = DFA.unpackEncodedString(DFA483_eofS);
	static final char[] DFA483_min = DFA.unpackEncodedStringToUnsignedChars(DFA483_minS);
	static final char[] DFA483_max = DFA.unpackEncodedStringToUnsignedChars(DFA483_maxS);
	static final short[] DFA483_accept = DFA.unpackEncodedString(DFA483_acceptS);
	static final short[] DFA483_special = DFA.unpackEncodedString(DFA483_specialS);
	static final short[][] DFA483_transition;

	static {
		int numStates = DFA483_transitionS.length;
		DFA483_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA483_transition[i] = DFA.unpackEncodedString(DFA483_transitionS[i]);
		}
	}

	protected class DFA483 extends DFA {

		public DFA483(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 483;
			this.eot = DFA483_eot;
			this.eof = DFA483_eof;
			this.min = DFA483_min;
			this.max = DFA483_max;
			this.accept = DFA483_accept;
			this.special = DFA483_special;
			this.transition = DFA483_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1408:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA499_eotS =
		"\4\uffff";
	static final String DFA499_eofS =
		"\4\uffff";
	static final String DFA499_minS =
		"\2\24\2\uffff";
	static final String DFA499_maxS =
		"\2\u009b\2\uffff";
	static final String DFA499_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA499_specialS =
		"\4\uffff}>";
	static final String[] DFA499_transitionS = {
			"\1\3\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\36\uffff\1\3\11\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA499_eot = DFA.unpackEncodedString(DFA499_eotS);
	static final short[] DFA499_eof = DFA.unpackEncodedString(DFA499_eofS);
	static final char[] DFA499_min = DFA.unpackEncodedStringToUnsignedChars(DFA499_minS);
	static final char[] DFA499_max = DFA.unpackEncodedStringToUnsignedChars(DFA499_maxS);
	static final short[] DFA499_accept = DFA.unpackEncodedString(DFA499_acceptS);
	static final short[] DFA499_special = DFA.unpackEncodedString(DFA499_specialS);
	static final short[][] DFA499_transition;

	static {
		int numStates = DFA499_transitionS.length;
		DFA499_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA499_transition[i] = DFA.unpackEncodedString(DFA499_transitionS[i]);
		}
	}

	protected class DFA499 extends DFA {

		public DFA499(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 499;
			this.eot = DFA499_eot;
			this.eof = DFA499_eof;
			this.min = DFA499_min;
			this.max = DFA499_max;
			this.accept = DFA499_accept;
			this.special = DFA499_special;
			this.transition = DFA499_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1424:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA528_eotS =
		"\4\uffff";
	static final String DFA528_eofS =
		"\4\uffff";
	static final String DFA528_minS =
		"\1\24\1\6\2\uffff";
	static final String DFA528_maxS =
		"\2\u009b\2\uffff";
	static final String DFA528_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA528_specialS =
		"\4\uffff}>";
	static final String[] DFA528_transitionS = {
			"\1\3\1\1\77\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff"+
			"\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\2\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\6\2\1\uffff\12\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA528_eot = DFA.unpackEncodedString(DFA528_eotS);
	static final short[] DFA528_eof = DFA.unpackEncodedString(DFA528_eofS);
	static final char[] DFA528_min = DFA.unpackEncodedStringToUnsignedChars(DFA528_minS);
	static final char[] DFA528_max = DFA.unpackEncodedStringToUnsignedChars(DFA528_maxS);
	static final short[] DFA528_accept = DFA.unpackEncodedString(DFA528_acceptS);
	static final short[] DFA528_special = DFA.unpackEncodedString(DFA528_specialS);
	static final short[][] DFA528_transition;

	static {
		int numStates = DFA528_transitionS.length;
		DFA528_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA528_transition[i] = DFA.unpackEncodedString(DFA528_transitionS[i]);
		}
	}

	protected class DFA528 extends DFA {

		public DFA528(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 528;
			this.eot = DFA528_eot;
			this.eof = DFA528_eof;
			this.min = DFA528_min;
			this.max = DFA528_max;
			this.accept = DFA528_accept;
			this.special = DFA528_special;
			this.transition = DFA528_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1500:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA529_eotS =
		"\4\uffff";
	static final String DFA529_eofS =
		"\4\uffff";
	static final String DFA529_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA529_maxS =
		"\2\u009b\2\uffff";
	static final String DFA529_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA529_specialS =
		"\4\uffff}>";
	static final String[] DFA529_transitionS = {
			"\1\1\77\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\2\1\uffff\1\2\5\uffff\3\2"+
			"\7\uffff\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\4\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\4\2\2\uffff\1\2\6\uffff\3\2\5\uffff\1\2\1\1"+
			"\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\6\2\1\uffff\3\2\1\3\6\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA529_eot = DFA.unpackEncodedString(DFA529_eotS);
	static final short[] DFA529_eof = DFA.unpackEncodedString(DFA529_eofS);
	static final char[] DFA529_min = DFA.unpackEncodedStringToUnsignedChars(DFA529_minS);
	static final char[] DFA529_max = DFA.unpackEncodedStringToUnsignedChars(DFA529_maxS);
	static final short[] DFA529_accept = DFA.unpackEncodedString(DFA529_acceptS);
	static final short[] DFA529_special = DFA.unpackEncodedString(DFA529_specialS);
	static final short[][] DFA529_transition;

	static {
		int numStates = DFA529_transitionS.length;
		DFA529_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA529_transition[i] = DFA.unpackEncodedString(DFA529_transitionS[i]);
		}
	}

	protected class DFA529 extends DFA {

		public DFA529(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 529;
			this.eot = DFA529_eot;
			this.eof = DFA529_eof;
			this.min = DFA529_min;
			this.max = DFA529_max;
			this.accept = DFA529_accept;
			this.special = DFA529_special;
			this.transition = DFA529_transition;
		}
		@Override
		public String getDescription() {
			return "1500:83: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA535_eotS =
		"\10\uffff";
	static final String DFA535_eofS =
		"\2\4\6\uffff";
	static final String DFA535_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA535_maxS =
		"\3\u009b\2\uffff\3\u009b";
	static final String DFA535_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA535_specialS =
		"\10\uffff}>";
	static final String[] DFA535_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\2\1\3\1\uffff\5\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\5\1\3\6\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"",
			"",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7"
	};

	static final short[] DFA535_eot = DFA.unpackEncodedString(DFA535_eotS);
	static final short[] DFA535_eof = DFA.unpackEncodedString(DFA535_eofS);
	static final char[] DFA535_min = DFA.unpackEncodedStringToUnsignedChars(DFA535_minS);
	static final char[] DFA535_max = DFA.unpackEncodedStringToUnsignedChars(DFA535_maxS);
	static final short[] DFA535_accept = DFA.unpackEncodedString(DFA535_acceptS);
	static final short[] DFA535_special = DFA.unpackEncodedString(DFA535_specialS);
	static final short[][] DFA535_transition;

	static {
		int numStates = DFA535_transitionS.length;
		DFA535_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA535_transition[i] = DFA.unpackEncodedString(DFA535_transitionS[i]);
		}
	}

	protected class DFA535 extends DFA {

		public DFA535(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 535;
			this.eot = DFA535_eot;
			this.eof = DFA535_eof;
			this.min = DFA535_min;
			this.max = DFA535_max;
			this.accept = DFA535_accept;
			this.special = DFA535_special;
			this.transition = DFA535_transition;
		}
		@Override
		public String getDescription() {
			return "1525:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA543_eotS =
		"\5\uffff";
	static final String DFA543_eofS =
		"\5\uffff";
	static final String DFA543_minS =
		"\1\163\1\25\1\uffff\1\25\1\uffff";
	static final String DFA543_maxS =
		"\1\164\1\u009b\1\uffff\1\u009b\1\uffff";
	static final String DFA543_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA543_specialS =
		"\5\uffff}>";
	static final String[] DFA543_transitionS = {
			"\1\1\1\2",
			"\1\3\36\uffff\1\2\11\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\3\36\uffff\1\2\11\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA543_eot = DFA.unpackEncodedString(DFA543_eotS);
	static final short[] DFA543_eof = DFA.unpackEncodedString(DFA543_eofS);
	static final char[] DFA543_min = DFA.unpackEncodedStringToUnsignedChars(DFA543_minS);
	static final char[] DFA543_max = DFA.unpackEncodedStringToUnsignedChars(DFA543_maxS);
	static final short[] DFA543_accept = DFA.unpackEncodedString(DFA543_acceptS);
	static final short[] DFA543_special = DFA.unpackEncodedString(DFA543_specialS);
	static final short[][] DFA543_transition;

	static {
		int numStates = DFA543_transitionS.length;
		DFA543_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA543_transition[i] = DFA.unpackEncodedString(DFA543_transitionS[i]);
		}
	}

	protected class DFA543 extends DFA {

		public DFA543(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 543;
			this.eot = DFA543_eot;
			this.eof = DFA543_eof;
			this.min = DFA543_min;
			this.max = DFA543_max;
			this.accept = DFA543_accept;
			this.special = DFA543_special;
			this.transition = DFA543_transition;
		}
		@Override
		public String getDescription() {
			return "1528:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA542_eotS =
		"\10\uffff";
	static final String DFA542_eofS =
		"\2\4\6\uffff";
	static final String DFA542_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA542_maxS =
		"\3\u009b\2\uffff\3\u009b";
	static final String DFA542_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA542_specialS =
		"\10\uffff}>";
	static final String[] DFA542_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\2\1\3\1\uffff\5\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\4\1\uffff\1\4\5\uffff\3\4"+
			"\7\uffff\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\4\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\4\4\2\uffff\1\4\6\uffff\3\4\5\uffff\1\4\1\1"+
			"\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4\3\uffff\4\4\1\uffff\3\4\1\uffff"+
			"\1\4\1\5\1\3\6\4\1\uffff\3\4\1\uffff\6\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"",
			"",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7",
			"\1\4\1\uffff\1\6\36\uffff\1\3\11\uffff\1\3\26\uffff\1\6\105\uffff\1"+
			"\6",
			"\1\4\1\uffff\1\7\36\uffff\1\3\11\uffff\1\3\26\uffff\1\7\105\uffff\1"+
			"\7"
	};

	static final short[] DFA542_eot = DFA.unpackEncodedString(DFA542_eotS);
	static final short[] DFA542_eof = DFA.unpackEncodedString(DFA542_eofS);
	static final char[] DFA542_min = DFA.unpackEncodedStringToUnsignedChars(DFA542_minS);
	static final char[] DFA542_max = DFA.unpackEncodedStringToUnsignedChars(DFA542_maxS);
	static final short[] DFA542_accept = DFA.unpackEncodedString(DFA542_acceptS);
	static final short[] DFA542_special = DFA.unpackEncodedString(DFA542_specialS);
	static final short[][] DFA542_transition;

	static {
		int numStates = DFA542_transitionS.length;
		DFA542_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA542_transition[i] = DFA.unpackEncodedString(DFA542_transitionS[i]);
		}
	}

	protected class DFA542 extends DFA {

		public DFA542(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 542;
			this.eot = DFA542_eot;
			this.eof = DFA542_eof;
			this.min = DFA542_min;
			this.max = DFA542_max;
			this.accept = DFA542_accept;
			this.special = DFA542_special;
			this.transition = DFA542_transition;
		}
		@Override
		public String getDescription() {
			return "1532:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA546_eotS =
		"\4\uffff";
	static final String DFA546_eofS =
		"\4\uffff";
	static final String DFA546_minS =
		"\2\5\2\uffff";
	static final String DFA546_maxS =
		"\2\u009b\2\uffff";
	static final String DFA546_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA546_specialS =
		"\4\uffff}>";
	static final String[] DFA546_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\4\uffff\1\3\2\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff"+
			"\1\3\1\1\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\4\uffff\1\3\2\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff"+
			"\1\3\1\1\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\3\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA546_eot = DFA.unpackEncodedString(DFA546_eotS);
	static final short[] DFA546_eof = DFA.unpackEncodedString(DFA546_eofS);
	static final char[] DFA546_min = DFA.unpackEncodedStringToUnsignedChars(DFA546_minS);
	static final char[] DFA546_max = DFA.unpackEncodedStringToUnsignedChars(DFA546_maxS);
	static final short[] DFA546_accept = DFA.unpackEncodedString(DFA546_acceptS);
	static final short[] DFA546_special = DFA.unpackEncodedString(DFA546_specialS);
	static final short[][] DFA546_transition;

	static {
		int numStates = DFA546_transitionS.length;
		DFA546_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA546_transition[i] = DFA.unpackEncodedString(DFA546_transitionS[i]);
		}
	}

	protected class DFA546 extends DFA {

		public DFA546(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 546;
			this.eot = DFA546_eot;
			this.eof = DFA546_eof;
			this.min = DFA546_min;
			this.max = DFA546_max;
			this.accept = DFA546_accept;
			this.special = DFA546_special;
			this.transition = DFA546_transition;
		}
		@Override
		public String getDescription() {
			return "1547:102: ( ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA551_eotS =
		"\4\uffff";
	static final String DFA551_eofS =
		"\4\uffff";
	static final String DFA551_minS =
		"\2\24\2\uffff";
	static final String DFA551_maxS =
		"\2\u009b\2\uffff";
	static final String DFA551_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA551_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA551_transitionS = {
			"\1\2\1\1\77\uffff\1\1\105\uffff\1\1",
			"\1\2\1\1\36\uffff\1\3\40\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA551_eot = DFA.unpackEncodedString(DFA551_eotS);
	static final short[] DFA551_eof = DFA.unpackEncodedString(DFA551_eofS);
	static final char[] DFA551_min = DFA.unpackEncodedStringToUnsignedChars(DFA551_minS);
	static final char[] DFA551_max = DFA.unpackEncodedStringToUnsignedChars(DFA551_maxS);
	static final short[] DFA551_accept = DFA.unpackEncodedString(DFA551_acceptS);
	static final short[] DFA551_special = DFA.unpackEncodedString(DFA551_specialS);
	static final short[][] DFA551_transition;

	static {
		int numStates = DFA551_transitionS.length;
		DFA551_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA551_transition[i] = DFA.unpackEncodedString(DFA551_transitionS[i]);
		}
	}

	protected class DFA551 extends DFA {

		public DFA551(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 551;
			this.eot = DFA551_eot;
			this.eof = DFA551_eof;
			this.min = DFA551_min;
			this.max = DFA551_max;
			this.accept = DFA551_accept;
			this.special = DFA551_special;
			this.transition = DFA551_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1552:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA551_1 = input.LA(1);
						 
						int index551_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA551_1==IDENT) ) {s = 3;}
						else if ( (LA551_1==COMMENT||LA551_1==NL||LA551_1==WS) ) {s = 1;}
						else if ( (LA551_1==COMMA) && (synpred71_Css3())) {s = 2;}
						 
						input.seek(index551_1);
						if ( s>=0 ) return s;
						break;
					case 1 : 
						int LA551_0 = input.LA(1);
						 
						int index551_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA551_0==COMMENT||LA551_0==NL||LA551_0==WS) ) {s = 1;}
						else if ( (LA551_0==COMMA) && (synpred71_Css3())) {s = 2;}
						 
						input.seek(index551_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 551, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA571_eotS =
		"\4\uffff";
	static final String DFA571_eofS =
		"\4\uffff";
	static final String DFA571_minS =
		"\2\25\2\uffff";
	static final String DFA571_maxS =
		"\2\u009b\2\uffff";
	static final String DFA571_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA571_specialS =
		"\4\uffff}>";
	static final String[] DFA571_transitionS = {
			"\1\1\37\uffff\1\2\37\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"\1\1\37\uffff\1\2\37\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA571_eot = DFA.unpackEncodedString(DFA571_eotS);
	static final short[] DFA571_eof = DFA.unpackEncodedString(DFA571_eofS);
	static final char[] DFA571_min = DFA.unpackEncodedStringToUnsignedChars(DFA571_minS);
	static final char[] DFA571_max = DFA.unpackEncodedStringToUnsignedChars(DFA571_maxS);
	static final short[] DFA571_accept = DFA.unpackEncodedString(DFA571_acceptS);
	static final short[] DFA571_special = DFA.unpackEncodedString(DFA571_specialS);
	static final short[][] DFA571_transition;

	static {
		int numStates = DFA571_transitionS.length;
		DFA571_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA571_transition[i] = DFA.unpackEncodedString(DFA571_transitionS[i]);
		}
	}

	protected class DFA571 extends DFA {

		public DFA571(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 571;
			this.eot = DFA571_eot;
			this.eof = DFA571_eof;
			this.min = DFA571_min;
			this.max = DFA571_max;
			this.accept = DFA571_accept;
			this.special = DFA571_special;
			this.transition = DFA571_transition;
		}
		@Override
		public String getDescription() {
			return "421:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA578_eotS =
		"\6\uffff";
	static final String DFA578_eofS =
		"\6\uffff";
	static final String DFA578_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA578_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\2\uffff";
	static final String DFA578_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA578_specialS =
		"\6\uffff}>";
	static final String[] DFA578_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\12"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\11\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA578_eot = DFA.unpackEncodedString(DFA578_eotS);
	static final short[] DFA578_eof = DFA.unpackEncodedString(DFA578_eofS);
	static final char[] DFA578_min = DFA.unpackEncodedStringToUnsignedChars(DFA578_minS);
	static final char[] DFA578_max = DFA.unpackEncodedStringToUnsignedChars(DFA578_maxS);
	static final short[] DFA578_accept = DFA.unpackEncodedString(DFA578_acceptS);
	static final short[] DFA578_special = DFA.unpackEncodedString(DFA578_specialS);
	static final short[][] DFA578_transition;

	static {
		int numStates = DFA578_transitionS.length;
		DFA578_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA578_transition[i] = DFA.unpackEncodedString(DFA578_transitionS[i]);
		}
	}

	protected class DFA578 extends DFA {

		public DFA578(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 578;
			this.eot = DFA578_eot;
			this.eof = DFA578_eof;
			this.min = DFA578_min;
			this.max = DFA578_max;
			this.accept = DFA578_accept;
			this.special = DFA578_special;
			this.transition = DFA578_transition;
		}
		@Override
		public String getDescription() {
			return "423:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA573_eotS =
		"\4\uffff";
	static final String DFA573_eofS =
		"\4\uffff";
	static final String DFA573_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA573_maxS =
		"\2\u009b\2\uffff";
	static final String DFA573_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA573_specialS =
		"\4\uffff}>";
	static final String[] DFA573_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA573_eot = DFA.unpackEncodedString(DFA573_eotS);
	static final short[] DFA573_eof = DFA.unpackEncodedString(DFA573_eofS);
	static final char[] DFA573_min = DFA.unpackEncodedStringToUnsignedChars(DFA573_minS);
	static final char[] DFA573_max = DFA.unpackEncodedStringToUnsignedChars(DFA573_maxS);
	static final short[] DFA573_accept = DFA.unpackEncodedString(DFA573_acceptS);
	static final short[] DFA573_special = DFA.unpackEncodedString(DFA573_specialS);
	static final short[][] DFA573_transition;

	static {
		int numStates = DFA573_transitionS.length;
		DFA573_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA573_transition[i] = DFA.unpackEncodedString(DFA573_transitionS[i]);
		}
	}

	protected class DFA573 extends DFA {

		public DFA573(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 573;
			this.eot = DFA573_eot;
			this.eof = DFA573_eof;
			this.min = DFA573_min;
			this.max = DFA573_max;
			this.accept = DFA573_accept;
			this.special = DFA573_special;
			this.transition = DFA573_transition;
		}
		@Override
		public String getDescription() {
			return "423:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA616_eotS =
		"\6\uffff";
	static final String DFA616_eofS =
		"\6\uffff";
	static final String DFA616_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA616_maxS =
		"\1\u008b\1\u009b\1\uffff\1\u009b\2\uffff";
	static final String DFA616_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA616_specialS =
		"\6\uffff}>";
	static final String[] DFA616_transitionS = {
			"\1\2\13\uffff\1\2\12\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\12"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\50\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\10\uffff\3\4\12\uffff\2\4\2\uffff\2\4"+
			"\3\uffff\1\4\11\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff"+
			"\1\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA616_eot = DFA.unpackEncodedString(DFA616_eotS);
	static final short[] DFA616_eof = DFA.unpackEncodedString(DFA616_eofS);
	static final char[] DFA616_min = DFA.unpackEncodedStringToUnsignedChars(DFA616_minS);
	static final char[] DFA616_max = DFA.unpackEncodedStringToUnsignedChars(DFA616_maxS);
	static final short[] DFA616_accept = DFA.unpackEncodedString(DFA616_acceptS);
	static final short[] DFA616_special = DFA.unpackEncodedString(DFA616_specialS);
	static final short[][] DFA616_transition;

	static {
		int numStates = DFA616_transitionS.length;
		DFA616_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA616_transition[i] = DFA.unpackEncodedString(DFA616_transitionS[i]);
		}
	}

	protected class DFA616 extends DFA {

		public DFA616(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 616;
			this.eot = DFA616_eot;
			this.eof = DFA616_eof;
			this.min = DFA616_min;
			this.max = DFA616_max;
			this.accept = DFA616_accept;
			this.special = DFA616_special;
			this.transition = DFA616_transition;
		}
		@Override
		public String getDescription() {
			return "892:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA611_eotS =
		"\4\uffff";
	static final String DFA611_eofS =
		"\4\uffff";
	static final String DFA611_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA611_maxS =
		"\2\u009b\2\uffff";
	static final String DFA611_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA611_specialS =
		"\4\uffff}>";
	static final String[] DFA611_transitionS = {
			"\1\1\50\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\10\uffff\3\3\12\uffff\2\3\2\uffff\2\3"+
			"\3\uffff\1\3\11\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13"+
			"\uffff\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA611_eot = DFA.unpackEncodedString(DFA611_eotS);
	static final short[] DFA611_eof = DFA.unpackEncodedString(DFA611_eofS);
	static final char[] DFA611_min = DFA.unpackEncodedStringToUnsignedChars(DFA611_minS);
	static final char[] DFA611_max = DFA.unpackEncodedStringToUnsignedChars(DFA611_maxS);
	static final short[] DFA611_accept = DFA.unpackEncodedString(DFA611_acceptS);
	static final short[] DFA611_special = DFA.unpackEncodedString(DFA611_specialS);
	static final short[][] DFA611_transition;

	static {
		int numStates = DFA611_transitionS.length;
		DFA611_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA611_transition[i] = DFA.unpackEncodedString(DFA611_transitionS[i]);
		}
	}

	protected class DFA611 extends DFA {

		public DFA611(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 611;
			this.eot = DFA611_eot;
			this.eof = DFA611_eof;
			this.min = DFA611_min;
			this.max = DFA611_max;
			this.accept = DFA611_accept;
			this.special = DFA611_special;
			this.transition = DFA611_transition;
		}
		@Override
		public String getDescription() {
			return "892:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA627_eotS =
		"\5\uffff";
	static final String DFA627_eofS =
		"\5\uffff";
	static final String DFA627_minS =
		"\2\5\3\uffff";
	static final String DFA627_maxS =
		"\2\u009b\3\uffff";
	static final String DFA627_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA627_specialS =
		"\5\uffff}>";
	static final String[] DFA627_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\2\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff"+
			"\1\3\1\1\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff"+
			"\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\2\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff"+
			"\1\4\1\1\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4"+
			"\1\uffff\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff"+
			"\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA627_eot = DFA.unpackEncodedString(DFA627_eotS);
	static final short[] DFA627_eof = DFA.unpackEncodedString(DFA627_eofS);
	static final char[] DFA627_min = DFA.unpackEncodedStringToUnsignedChars(DFA627_minS);
	static final char[] DFA627_max = DFA.unpackEncodedStringToUnsignedChars(DFA627_maxS);
	static final short[] DFA627_accept = DFA.unpackEncodedString(DFA627_acceptS);
	static final short[] DFA627_special = DFA.unpackEncodedString(DFA627_specialS);
	static final short[][] DFA627_transition;

	static {
		int numStates = DFA627_transitionS.length;
		DFA627_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA627_transition[i] = DFA.unpackEncodedString(DFA627_transitionS[i]);
		}
	}

	protected class DFA627 extends DFA {

		public DFA627(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 627;
			this.eot = DFA627_eot;
			this.eof = DFA627_eof;
			this.min = DFA627_min;
			this.max = DFA627_max;
			this.accept = DFA627_accept;
			this.special = DFA627_special;
			this.transition = DFA627_transition;
		}
		@Override
		public String getDescription() {
			return "1152:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA632_eotS =
		"\5\uffff";
	static final String DFA632_eofS =
		"\5\uffff";
	static final String DFA632_minS =
		"\2\5\3\uffff";
	static final String DFA632_maxS =
		"\2\u009b\3\uffff";
	static final String DFA632_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA632_specialS =
		"\5\uffff}>";
	static final String[] DFA632_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\2\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\4\uffff\1\3\3\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\3\3\1\uffff\3\3\1\uffff\5\3\1\uffff\1\2\1\uffff"+
			"\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\2\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\3\4\1\uffff\3\4\1\uffff\5\4\1\uffff\1\2\1\uffff"+
			"\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA632_eot = DFA.unpackEncodedString(DFA632_eotS);
	static final short[] DFA632_eof = DFA.unpackEncodedString(DFA632_eofS);
	static final char[] DFA632_min = DFA.unpackEncodedStringToUnsignedChars(DFA632_minS);
	static final char[] DFA632_max = DFA.unpackEncodedStringToUnsignedChars(DFA632_maxS);
	static final short[] DFA632_accept = DFA.unpackEncodedString(DFA632_acceptS);
	static final short[] DFA632_special = DFA.unpackEncodedString(DFA632_specialS);
	static final short[][] DFA632_transition;

	static {
		int numStates = DFA632_transitionS.length;
		DFA632_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA632_transition[i] = DFA.unpackEncodedString(DFA632_transitionS[i]);
		}
	}

	protected class DFA632 extends DFA {

		public DFA632(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 632;
			this.eot = DFA632_eot;
			this.eof = DFA632_eof;
			this.min = DFA632_min;
			this.max = DFA632_max;
			this.accept = DFA632_accept;
			this.special = DFA632_special;
			this.transition = DFA632_transition;
		}
		@Override
		public String getDescription() {
			return "1238:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet102 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_charSet_in_styleSheet112 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_styleSheet114 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_layerStatement_in_styleSheet130 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_styleSheet132 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_imports_in_styleSheet146 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_namespaces_in_styleSheet157 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_styleSheet168 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet176 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces193 = new BitSet(new long[]{0x0000000000200002L,0x0000000000300000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_namespaces195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace211 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_namespace213 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace217 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_namespace219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace224 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_namespace226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_namespace229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet276 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_ws_in_charSet278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_charSetValue_in_charSet281 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_charSet283 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_charSet286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue300 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports328 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_imports330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_imports333 = new BitSet(new long[]{0x0040000000200002L,0x0200000000200000L,0x0000000008000002L});
	public static final BitSet FOLLOW_ws_in_imports335 = new BitSet(new long[]{0x0040000000000002L,0x0200000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_sass_use_in_imports370 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_imports372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_imports375 = new BitSet(new long[]{0x0040000000200002L,0x0200000000200000L,0x0000000008000002L});
	public static final BitSet FOLLOW_ws_in_imports377 = new BitSet(new long[]{0x0040000000000002L,0x0200000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_sass_forward_in_imports412 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_imports414 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_imports417 = new BitSet(new long[]{0x0040000000200002L,0x0200000000200000L,0x0000000008000002L});
	public static final BitSet FOLLOW_ws_in_imports419 = new BitSet(new long[]{0x0040000000000002L,0x0200000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem455 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem460 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem462 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_importLayer_in_importItem465 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem476 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem479 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem512 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem514 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem517 = new BitSet(new long[]{0x0851090001347C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem520 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem523 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem528 = new BitSet(new long[]{0x0851090001347C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem532 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_importLayer_in_importItem535 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem546 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem549 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem573 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000200100L});
	public static final BitSet FOLLOW_LPAREN_in_importItem579 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem581 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem583 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008200100L});
	public static final BitSet FOLLOW_ws_in_importItem585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem590 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem592 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_importLayer_in_importItem595 = new BitSet(new long[]{0x0851090001247C42L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_importItem606 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_importLayer634 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_importLayer637 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_importLayer639 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_importLayer642 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_importLayer644 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importLayer647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_USE_in_sass_use674 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use676 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_use678 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use681 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_use_as_in_sass_use683 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use688 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_use_with_in_sass_use690 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as715 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_as717 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as719 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_with742 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_use_with747 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with749 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with752 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with756 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_use_with759 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with761 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with764 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with769 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_use_with772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_use_with_declaration793 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration795 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_use_with_declaration798 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration800 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_use_with_declaration803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FORWARD_in_sass_forward829 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200100L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_forward833 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward837 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_hide_in_sass_forward841 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_sass_forward_show_in_sass_forward846 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward854 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_as_in_sass_forward856 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward863 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_forward_with_in_sass_forward865 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as890 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_as892 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_with917 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_forward_with922 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with924 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with927 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with931 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_with934 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with936 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with939 = new BitSet(new long[]{0x0000000000300000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with944 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_forward_with947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_forward_with_declaration968 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration970 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_forward_with_declaration973 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration975 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_forward_with_declaration978 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1001 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1003 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1005 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1008 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_hide1011 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide1013 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide1016 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1041 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1043 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1045 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1048 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_show1051 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show1053 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show1056 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media1075 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_media1077 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_media1095 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_media1103 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media1110 = new BitSet(new long[]{0x88519901C12C7CC0L,0x77CDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_media1112 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_media1115 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_mediaBody_in_media1125 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_media1132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody1166 = new BitSet(new long[]{0x88519901C12C7CC2L,0x77CDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_mediaBody1176 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1179 = new BitSet(new long[]{0x88519901C12C7CC2L,0x77CDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_mediaBody1183 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1210 = new BitSet(new long[]{0x88519901C12C7CC2L,0x77CDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_mediaBody1212 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody1231 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_mediaBody1234 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1239 = new BitSet(new long[]{0x88519901C10C7CC2L,0x77CDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem1313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1346 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1349 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1352 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1369 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1372 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1440 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem1452 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem1462 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem1472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem1482 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem1492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem1508 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem1516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem1524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem1537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_mediaBodyItem1545 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1559 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1571 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList1574 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0042305407L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1576 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1579 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery1598 = new BitSet(new long[]{0x0011080000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1600 = new BitSet(new long[]{0x0011080000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery1607 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1618 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1621 = new BitSet(new long[]{0x0001000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1623 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1626 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1637 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1648 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1651 = new BitSet(new long[]{0x0001000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1653 = new BitSet(new long[]{0x0001000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1656 = new BitSet(new long[]{0x0010000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1669 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1681 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1707 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1732 = new BitSet(new long[]{0x0851090001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_mediaExpression1734 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1737 = new BitSet(new long[]{0x0000000000280000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1739 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1742 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1745 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaExpression1762 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1783 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1786 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1788 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1807 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1827 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1847 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1851 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1863 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1897 = new BitSet(new long[]{0xA8519901C16C7CC2L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_body1907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_body1910 = new BitSet(new long[]{0xA8519901C16C7CC2L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_body1914 = new BitSet(new long[]{0xA8519901C14C7CC2L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_SEMI_in_body1941 = new BitSet(new long[]{0xA8519901C16C7CC2L,0x77CDCE0640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_body1943 = new BitSet(new long[]{0xA8519901C14C7CC2L,0x77CDCE0640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem2023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem2056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem2075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem2084 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem2106 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem2123 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem2135 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem2158 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem2172 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem2186 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem2200 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SUPPORTS_SYM_in_supportsAtRule2220 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2222 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsAtRule2225 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2227 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_supportsAtRule2230 = new BitSet(new long[]{0x88519901C12C7CC0L,0x77CDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2232 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_supportsAtRule2235 = new BitSet(new long[]{0x88519901C10C7CC0L,0x77CDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_mediaBody_in_supportsAtRule2237 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_supportsAtRule2240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_supportsCondition2253 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2255 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2262 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2265 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsWithOperator_in_supportsCondition2267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2295 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2298 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2300 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2314 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2317 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2319 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_supportsConjunction2347 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsConjunction2349 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsConjunction2351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_supportsDisjunction2378 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsDisjunction2380 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsDisjunction2382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_supportsInParens2409 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2411 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsInParens2414 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2416 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_supportsInParens2419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsFeature_in_supportsInParens2424 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_supportsInParens2436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsDecl_in_supportsFeature2466 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_supportsDecl2478 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_supportsDecl2480 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_declaration_in_supportsDecl2483 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_supportsDecl2485 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_supportsDecl2488 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_containerAtRule2522 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2524 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_containerAtRule2526 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2528 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_containerAtRule2531 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_containerAtRule2533 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_containerAtRule2536 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_containerAtRule2538 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_containerAtRule2541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_containerAtRule2546 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2548 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerName_in_containerAtRule2550 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2552 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_containerAtRule2554 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerAtRule2556 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_containerAtRule2559 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_containerAtRule2561 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_containerAtRule2564 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_containerAtRule2566 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_containerAtRule2569 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_containerCondition2595 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerCondition2597 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerCondition2599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerCondition2611 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerCondition2614 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryWithOperator_in_containerCondition2616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2651 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryWithOperator2654 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryConjunction_in_containerQueryWithOperator2656 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2670 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryWithOperator2673 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_containerQueryDisjunction_in_containerQueryWithOperator2675 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_containerQueryConjunction2703 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryConjunction2705 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerQueryConjunction2707 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_containerQueryDisjunction2734 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryDisjunction2736 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_containerQueryInParens_in_containerQueryDisjunction2738 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_containerQueryInParens2765 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2767 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_containerQueryInParens2770 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2772 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_containerQueryInParens2775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeature_in_containerQueryInParens2780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_containerQueryInParens2787 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_containerQueryInParens2792 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0642307427L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2794 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0642107427L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleQuery_in_containerQueryInParens2797 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_containerQueryInParens2799 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_containerQueryInParens2802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_containerQueryInParens2814 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_containerName2850 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleCondition_in_styleQuery2874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleFeature_in_styleQuery2886 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_styleCondition2910 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleCondition2912 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_styleInParens_in_styleCondition2914 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleInParens_in_styleCondition2926 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleCondition2929 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleConditionWithOperator_in_styleCondition2931 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2965 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleConditionWithOperator2968 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleQueryConjunction_in_styleConditionWithOperator2970 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2984 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleConditionWithOperator2987 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_styleQueryDisjunction_in_styleConditionWithOperator2989 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_styleQueryConjunction3017 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleQueryConjunction3019 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_styleInParens_in_styleQueryConjunction3021 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_styleQueryDisjunction3048 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleQueryDisjunction3050 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_styleInParens_in_styleQueryDisjunction3052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_styleInParens3093 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3095 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_styleCondition_in_styleInParens3098 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3100 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_styleInParens3103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_styleInParens3115 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_styleInParens3117 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleFeature_in_styleInParens3120 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_styleInParens3122 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_styleInParens3125 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_styleInParens3137 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3195 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3197 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureFixedValue_in_sizeFeature3200 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3202 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3205 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3217 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3219 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeSingle_in_sizeFeature3222 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3224 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3227 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3239 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3241 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenLt_in_sizeFeature3244 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3246 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3249 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_sizeFeature3261 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeature3263 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenGt_in_sizeFeature3266 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeature3268 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeFeature3271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureFixedValue3304 = new BitSet(new long[]{0x0000000000280002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureFixedValue3308 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sizeFeatureFixedValue3311 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureFixedValue3313 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureFixedValue3316 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3352 = new BitSet(new long[]{0x0000300000200000L,0x0000000010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3356 = new BitSet(new long[]{0x0000300000200000L,0x0000000010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeSingle3359 = new BitSet(new long[]{0x0000300000000000L,0x0000000010000090L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeSingle3362 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeSingle3382 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeSingle3386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeSingle3390 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3424 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenLt3429 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3437 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenLt3440 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenLt3445 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenLt3453 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenLt3456 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3489 = new BitSet(new long[]{0x0000300000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3491 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenGt3494 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3502 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureName_in_sizeFeatureRangeBetweenGt3505 = new BitSet(new long[]{0x0000300000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3507 = new BitSet(new long[]{0x0000300000000000L});
	public static final BitSet FOLLOW_set_in_sizeFeatureRangeBetweenGt3510 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sizeFeatureRangeBetweenGt3518 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureValue_in_sizeFeatureRangeBetweenGt3521 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_sizeFeatureValue3599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_in_styleFeature3632 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerBlock_in_layerAtRule3665 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerStatement_in_layerAtRule3685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LAYER_SYM_in_layerBlock3719 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerBlock3721 = new BitSet(new long[]{0x4010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_layerName_in_layerBlock3723 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerBlock3726 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_layerBody_in_layerBlock3729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LAYER_SYM_in_layerStatement3764 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerStatement3766 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_layerStatement3768 = new BitSet(new long[]{0x0000000000300000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_layerStatement3772 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_layerStatement3775 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerStatement3777 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_layerName_in_layerStatement3780 = new BitSet(new long[]{0x0000000000300000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_SEMI_in_layerStatement3784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_layerName3818 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_layerName3821 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_layerName3823 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_LBRACE_in_layerBody3858 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_layerBody3860 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_body_in_layerBody3863 = new BitSet(new long[]{0x0000000000200000L,0x0000002000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_layerBody3866 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_layerBody3869 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule3894 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule3902 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule3910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule3918 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_at_rule3926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule3934 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_layerAtRule_in_at_rule3942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_containerAtRule_in_at_rule3950 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule3963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule3967 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule3971 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_atRuleId3981 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_atRuleId3985 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_atRuleId3993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_atRuleId3997 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule4013 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule4015 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_braceBlock2_in_generic_at_rule4024 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_componentValue_in_generic_at_rule4034 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule4059 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_braceBlock2_in_generic_at_rule4068 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_componentValue_in_generic_at_rule4078 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document4092 = new BitSet(new long[]{0x0000000000200000L,0x0000000000238000L,0x0000000008200000L});
	public static final BitSet FOLLOW_ws_in_moz_document4094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000038000L,0x0000000000200000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document4099 = new BitSet(new long[]{0x4000000000300000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_moz_document4101 = new BitSet(new long[]{0x4000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document4107 = new BitSet(new long[]{0x0000000000200000L,0x0000000000238000L,0x0000000008200000L});
	public static final BitSet FOLLOW_ws_in_moz_document4109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000038000L,0x0000000000200000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document4112 = new BitSet(new long[]{0x4000000000300000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_moz_document4114 = new BitSet(new long[]{0x4000000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document4121 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77CDCE2640307027L,0x000000000C03EABFL});
	public static final BitSet FOLLOW_ws_in_moz_document4123 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77CDCE2640107027L,0x000000000403EABFL});
	public static final BitSet FOLLOW_body_in_moz_document4128 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document4133 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes4172 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_KEYFRAMES_SYM_in_webkitKeyframes4176 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_AT_IDENT_in_webkitKeyframes4182 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_AT_IDENT_in_webkitKeyframes4188 = new BitSet(new long[]{0x0851010001247C40L,0x774DCE0040305007L,0x000000000C03E11FL});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4192 = new BitSet(new long[]{0x0851010001047C40L,0x774DCE0040105007L,0x000000000403E11FL});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes4195 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4197 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes4201 = new BitSet(new long[]{0x0010000000200000L,0x0000802080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4203 = new BitSet(new long[]{0x0010000000000000L,0x0000802080000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes4210 = new BitSet(new long[]{0x0010000000200000L,0x0000802080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes4212 = new BitSet(new long[]{0x0010000000000000L,0x0000802080000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes4219 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock4231 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock4233 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock4237 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock4240 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock4243 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock4247 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock4251 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_webkitKeyframesBlock4268 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_webkitKeyframesBlock4270 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4287 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4293 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4297 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors4303 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors4306 = new BitSet(new long[]{0x0010000000200000L,0x0000000080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors4308 = new BitSet(new long[]{0x0010000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4315 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors4321 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors4325 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page4349 = new BitSet(new long[]{0x4010000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4351 = new BitSet(new long[]{0x4010000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page4356 = new BitSet(new long[]{0x4000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4358 = new BitSet(new long[]{0x4000000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page4365 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4367 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page4380 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE2040307007L,0x000000000D03E0BFL});
	public static final BitSet FOLLOW_ws_in_page4422 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E0BFL});
	public static final BitSet FOLLOW_SEMI_in_page4429 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE0040307007L,0x000000000D03E09FL});
	public static final BitSet FOLLOW_ws_in_page4431 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E09FL});
	public static final BitSet FOLLOW_SEMI_in_page4438 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE0040307007L,0x000000000D03E09FL});
	public static final BitSet FOLLOW_ws_in_page4440 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E09FL});
	public static final BitSet FOLLOW_propertyDeclaration_in_page4447 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE2040307007L,0x000000000D03E0BFL});
	public static final BitSet FOLLOW_margin_in_page4450 = new BitSet(new long[]{0x0851090001247CC0L,0x774DCE2040307007L,0x000000000D03E0BFL});
	public static final BitSet FOLLOW_SEMI_in_page4468 = new BitSet(new long[]{0x0000000000200000L,0x0000002000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_page4483 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_page4494 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle4511 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle4513 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle4516 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle4518 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle4529 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_counterStyle4531 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle4534 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_counterStyle4538 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle4549 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace4566 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_fontFace4568 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace4579 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_fontFace4581 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace4584 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_fontFace4588 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace4599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin4613 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_margin4615 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin4618 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_margin4620 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin4623 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_margin4625 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin4628 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage4837 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage4839 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property4923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_property4933 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_property4941 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property4949 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property4957 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property4967 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map4994 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map4996 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map4998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map5001 = new BitSet(new long[]{0x0851090001347CC0L,0x774DDE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map5003 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map5006 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map5025 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map5032 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map5036 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map5039 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map5045 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map5048 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name5072 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs5106 = new BitSet(new long[]{0x0851090001347CC2L,0x774DCE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5116 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs5119 = new BitSet(new long[]{0x0851090001347CC2L,0x774DCE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5123 = new BitSet(new long[]{0x0851090001147CC2L,0x774DCE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs5150 = new BitSet(new long[]{0x0851090001347CC2L,0x774DCE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs5152 = new BitSet(new long[]{0x0851090001147CC2L,0x774DCE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_NUMBER_in_sass_map_pair5188 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair5191 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5194 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair5197 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_function_in_sass_map_pair5207 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_property_in_sass_map_pair5210 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_sass_map_in_sass_map_pair5212 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5215 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair5218 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5220 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair5223 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair5226 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair5229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule5271 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5274 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule5276 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule5297 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5299 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_rule5301 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5303 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule5308 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5312 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_rule5315 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5317 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule5320 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5322 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_rule5325 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule5343 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_rule5355 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule5362 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_rule5364 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_rule5367 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_rule5377 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule5384 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations5418 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_declarations5420 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declaration_in_declarations5426 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5431 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_declarations5435 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_declarations5437 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_ws_in_declarations5443 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_declaration_in_declarations5446 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_declarations5456 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5458 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_ws_in_declarations5464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations5476 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_declarations5478 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration5507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration5520 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration5532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration5595 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration5607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration5646 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration5658 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration5671 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_declaration5674 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration5677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration5694 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_declaration5697 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration5700 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration5714 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration5724 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration5734 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration5744 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration5754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration5764 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_error_in_declaration5774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration5784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration5792 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup5826 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup5829 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup5832 = new BitSet(new long[]{0x80119801C0280080L,0x0080000600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup5834 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup5837 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup5844 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector5865 = new BitSet(new long[]{0x80118801C0280080L,0x0080000200202020L,0x0000000008000080L});
	public static final BitSet FOLLOW_ws_in_selector5867 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector5872 = new BitSet(new long[]{0x0000100000200002L,0x0000000400200000L,0x0000000008000800L});
	public static final BitSet FOLLOW_ws_in_selector5878 = new BitSet(new long[]{0x0000100000000000L,0x0000000400000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_combinator_in_selector5881 = new BitSet(new long[]{0x80118801C0280080L,0x0080000200202020L,0x0000000008000080L});
	public static final BitSet FOLLOW_ws_in_selector5883 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_ws_in_selector5887 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector5890 = new BitSet(new long[]{0x0000100000200002L,0x0000000400200000L,0x0000000008000800L});
	public static final BitSet FOLLOW_combinator_in_selector5905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence5957 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence5963 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence5977 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence5992 = new BitSet(new long[]{0x80018001C0080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence5995 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6000 = new BitSet(new long[]{0x0011000000000080L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6005 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence6011 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence6025 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6037 = new BitSet(new long[]{0x80018001C0080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence6040 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence6047 = new BitSet(new long[]{0x0011000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence6049 = new BitSet(new long[]{0x80018001C0280002L,0x0080000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_esPred6074 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_esPred6078 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_esPred6082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_esPred6086 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_esPred6090 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DCOLON_in_esPred6094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred6098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_esPred6104 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector6146 = new BitSet(new long[]{0x0010080000000000L,0x0000000000000020L,0x0000000000000080L});
	public static final BitSet FOLLOW_elementName_in_typeSelector6150 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix6165 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix6169 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix6173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent6205 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent6219 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_IDENT_in_elementSubsequent6222 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_NUMBER_in_elementSubsequent6226 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_elementSubsequent6232 = new BitSet(new long[]{0x0011000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent6248 = new BitSet(new long[]{0x0010000000000080L,0x0000000000002000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_elementSubsequent6250 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent6259 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent6268 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent6280 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent6292 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId6316 = new BitSet(new long[]{0x0011000000000002L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId6321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId6343 = new BitSet(new long[]{0x0010000000000080L,0x0000000000082000L});
	public static final BitSet FOLLOW_NAME_in_cssId6359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssId6379 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass6431 = new BitSet(new long[]{0x0011080000000080L,0x0000000002002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass6459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssClass6477 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass6493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass6509 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass6525 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_cssClass6549 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute6605 = new BitSet(new long[]{0x0010000000200000L,0x0000000200200000L,0x0000000008000080L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute6612 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6615 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute6626 = new BitSet(new long[]{0x0080000820A00200L,0x0000004010200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6628 = new BitSet(new long[]{0x0080000820800200L,0x0000004010000000L});
	public static final BitSet FOLLOW_set_in_slAttribute6662 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000100L});
	public static final BitSet FOLLOW_ws_in_slAttribute6842 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute6861 = new BitSet(new long[]{0x0000000000200000L,0x0000004000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute6879 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute6904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName6920 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo6992 = new BitSet(new long[]{0x0011080000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_set_in_pseudo7055 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7115 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DDF85C430706FL,0x000000000D33F99FL});
	public static final BitSet FOLLOW_ws_in_pseudo7117 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DDF85C410706FL,0x000000000533F99FL});
	public static final BitSet FOLLOW_expression_in_pseudo7123 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7125 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo7131 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_pseudo7199 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo7221 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7223 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7226 = new BitSet(new long[]{0x80119801C0280080L,0x0080100600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_pseudo7228 = new BitSet(new long[]{0x80119801C0080080L,0x0080100600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7233 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7235 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7240 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo7266 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7268 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7271 = new BitSet(new long[]{0x80119801C0280080L,0x0080100600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_pseudo7273 = new BitSet(new long[]{0x80119801C0080080L,0x0080100600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7278 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7280 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo7312 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_pseudo7314 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo7317 = new BitSet(new long[]{0x80119801C0280080L,0x0080100600202020L,0x0000000008000880L});
	public static final BitSet FOLLOW_ws_in_pseudo7319 = new BitSet(new long[]{0x80119801C0080080L,0x0080100600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo7322 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo7325 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration7367 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E01FL});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7370 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7372 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7375 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7377 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration7380 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7391 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7393 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7396 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7398 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_componentValueOuter_in_propertyDeclaration7401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration7410 = new BitSet(new long[]{0x0851090001047CC0L,0x774DCE0040107007L,0x000000000503E01FL});
	public static final BitSet FOLLOW_property_in_propertyDeclaration7413 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7415 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration7418 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7420 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration7423 = new BitSet(new long[]{0x0020000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration7426 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration7429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue7469 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue7477 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue7499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate7568 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_braceBlock27660 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_braceBlock27662 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_braceBlock27673 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_braceBlock27680 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_braceBlock7693 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEFBFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_braceBlock7695 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEFBFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RBRACE_in_braceBlock7698 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_bracketBlock7705 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_bracketBlock7707 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEFDFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RBRACKET_in_bracketBlock7710 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_parenBlock7717 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_componentValue_in_parenBlock7719 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_parenBlock7722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parenBlock_in_componentValue7729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_braceBlock_in_componentValue7733 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bracketBlock_in_componentValue7737 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_componentValue7752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_preservedToken_in_componentValue7756 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parenBlock_in_componentValueOuter7764 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_braceBlock_in_componentValueOuter7768 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_bracketBlock_in_componentValueOuter7772 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_function_in_componentValueOuter7787 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_preservedTokenTopLevel_in_componentValueOuter7791 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_componentValueOuter_in_componentValueOuter7794 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI7883 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio7928 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression7945 = new BitSet(new long[]{0x88518B4481347CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_ws_in_expression7977 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_expression7982 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_operator_in_expression7985 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_expression7987 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_expression7996 = new BitSet(new long[]{0x88518B4481347CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_unaryOperator_in_term8021 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF81C430506FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_term8023 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF81C410506FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_function_in_term8052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_term8065 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term8079 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_term8092 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_term8094 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term8097 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_term8100 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term8102 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_term8106 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_RBRACKET_in_term8109 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term8122 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URANGE_in_term8134 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term8146 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term8158 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term8170 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term8182 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term8194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term8206 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term8218 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term8230 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term8242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term8254 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term8271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term8283 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000000100L});
	public static final BitSet FOLLOW_set_in_term8285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term8306 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term8321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term8333 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term8345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term8359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_term8373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term8387 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_term8401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term8415 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol8442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function8458 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_function8462 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_function8464 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_fnAttributes_in_function8491 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function8522 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName8574 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName8576 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName8580 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_functionName8583 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName8585 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes8609 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_fnAttributes8612 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes8616 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_SEMI_in_fnAttributes8622 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttributes8625 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes8628 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_fnAttributes8632 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute8669 = new BitSet(new long[]{0x0000000000280000L,0x0000000010200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute8671 = new BitSet(new long[]{0x0000000000080000L,0x0000000010000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute8674 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttribute8680 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute8683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute8700 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute8712 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName8735 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName8738 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName8740 = new BitSet(new long[]{0x0000000100000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName8760 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue8783 = new BitSet(new long[]{0x88518B4481247CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue8815 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue8820 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue8823 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue8825 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_fnAttributeValue8834 = new BitSet(new long[]{0x88518B4481247CE2L,0x774DCF85C430706FL,0x000000000D33F95FL});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue8855 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor8869 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration8929 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8931 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration8934 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8936 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration8939 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration8961 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8963 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration8966 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8968 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration8971 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8975 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration8978 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration8984 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration8987 = new BitSet(new long[]{0x0000000000200002L,0x0802000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_cp_variable9027 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable9223 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_variable9227 = new BitSet(new long[]{0x0000000100000000L});
	public static final BitSet FOLLOW_DOT_in_cp_variable9229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable9231 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list9261 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list9280 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list9283 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_list9285 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list9288 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_LBRACE_in_cp_expression9324 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_cp_expression9326 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression9329 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_cp_expression9331 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_expression9334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9350 = new BitSet(new long[]{0x8871BB448D247CE2L,0x774DCF85C63074FFL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9374 = new BitSet(new long[]{0x001030000C000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression9377 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9379 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9383 = new BitSet(new long[]{0x8871BB448D247CE2L,0x774DCF85C63074FFL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9402 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression9405 = new BitSet(new long[]{0x8871BB448D247CE2L,0x774DCF85C63074FFL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression9423 = new BitSet(new long[]{0x0851090001347CC0L,0x774DDE0044307007L,0x000000000D03E11FL});
	public static final BitSet FOLLOW_ws_in_cp_expression9425 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression9428 = new BitSet(new long[]{0x0851090001147CC0L,0x774DDE0044107007L,0x000000000503E11FL});
	public static final BitSet FOLLOW_sass_map_pairs_in_cp_expression9430 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression9433 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator9454 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator9458 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator9463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator9467 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator9471 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator9475 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator9479 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator9483 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom9509 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9511 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom9542 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom9558 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9560 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom9564 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom9566 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom9571 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions9603 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions9610 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions9612 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression9646 = new BitSet(new long[]{0x0000000000200002L,0x0000000400202000L,0x00000000080000C0L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression9688 = new BitSet(new long[]{0x0000000000000000L,0x0000000400002000L,0x00000000000000C0L});
	public static final BitSet FOLLOW_set_in_cp_math_expression9691 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression9701 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression9704 = new BitSet(new long[]{0x0000000000200002L,0x0000000400202000L,0x00000000080000C0L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom9737 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom9745 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom9756 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom9758 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom9764 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom9766 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom9769 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom9771 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom9774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_declaration9814 = new BitSet(new long[]{0x4010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration9821 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration9823 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_declaration9828 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration9834 = new BitSet(new long[]{0x0850010003247C40L,0x774DDE0040305107L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9836 = new BitSet(new long[]{0x0850010003047C40L,0x774DDE0040105107L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration9839 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration9842 = new BitSet(new long[]{0x4010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9847 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration9850 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration9874 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9876 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration9878 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9881 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration9884 = new BitSet(new long[]{0x0850010003247C40L,0x774DDE0040305107L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9886 = new BitSet(new long[]{0x0850010003047C40L,0x774DDE0040105107L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration9889 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration9892 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration9906 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration9909 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call9945 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call9947 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call9951 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call9955 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call9959 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9975 = new BitSet(new long[]{0x0000100000000000L,0x0000000400000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_combinator_in_cp_mixin_call9978 = new BitSet(new long[]{0x0000800100200040L,0x0000000000200020L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call9980 = new BitSet(new long[]{0x0000800100000040L,0x0000000000000020L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call9984 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call9986 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call9990 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call9994 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call9998 = new BitSet(new long[]{0x0000100040280002L,0x0000000400200400L,0x0000000008000800L});
	public static final BitSet FOLLOW_pseudo_in_cp_mixin_call10008 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10020 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call10023 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10025 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call10028 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call10031 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call10056 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10058 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call10060 = new BitSet(new long[]{0x4000000000200002L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10063 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call10066 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DDF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10068 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DDF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call10071 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call10074 = new BitSet(new long[]{0x4000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call10079 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call10082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block10111 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE26C0307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block10113 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE26C0107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block10116 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE26C0107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block10127 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_cp_mixin_block10142 = new BitSet(new long[]{0x0010000000200000L,0x0000802080200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block10144 = new BitSet(new long[]{0x0010000000000000L,0x0000802080000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block10156 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name10177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10208 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args10212 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args10220 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args10223 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args10229 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args10231 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_cp_mixin_call_args10236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg10268 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10270 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg10273 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10275 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg10278 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg10290 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg10298 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list10345 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000100L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_cp_args_list10349 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_cp_args_list10359 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list10362 = new BitSet(new long[]{0x0000000002100002L,0x0000000000000100L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_cp_args_list10369 = new BitSet(new long[]{0x0000000002200002L,0x0000000000200100L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10377 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000100L});
	public static final BitSet FOLLOW_set_in_cp_args_list10385 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10393 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list10410 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list10418 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg10441 = new BitSet(new long[]{0x0000000000280002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg10443 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg10448 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_cp_arg10450 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg10453 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg10455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_arg10468 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded10491 = new BitSet(new long[]{0x0000000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10493 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded10496 = new BitSet(new long[]{0x0010000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10499 = new BitSet(new long[]{0x0010000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded10503 = new BitSet(new long[]{0x0000000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded10507 = new BitSet(new long[]{0x0000000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded10510 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded10513 = new BitSet(new long[]{0x0010000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_NOT_in_less_condition10539 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_condition10541 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition10550 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_less_condition10552 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_less_condition10579 = new BitSet(new long[]{0x0000300000200000L,0x0000100010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition10583 = new BitSet(new long[]{0x0000300000200000L,0x0000100010200090L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_condition10586 = new BitSet(new long[]{0x0000300000000000L,0x0000100010000090L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition10590 = new BitSet(new long[]{0x88718B4481247CE0L,0x774DCF85C430746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_less_condition10592 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition10595 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition10613 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition10635 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10637 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition10640 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10642 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition10645 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition10647 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition10650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name10672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp10735 = new BitSet(new long[]{0x0010000080000082L,0x0000000000002008L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp10738 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation10781 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation10783 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation10785 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation10788 = new BitSet(new long[]{0x0000000000200000L,0x0000002000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation10790 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation10793 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp10820 = new BitSet(new long[]{0x0011000080000002L,0x0000000000002008L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp10823 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var10870 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var10872 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var10874 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var10877 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var10879 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var10882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties10922 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10924 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties10927 = new BitSet(new long[]{0xC8518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10929 = new BitSet(new long[]{0xC8518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties10933 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10935 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties10940 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties10942 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties10945 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties10947 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties10950 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend10971 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend10973 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend10975 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend10978 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_extend10981 = new BitSet(new long[]{0x80118801C0280080L,0x0080000200202020L,0x0000000008000080L});
	public static final BitSet FOLLOW_ws_in_sass_extend10983 = new BitSet(new long[]{0x80118801C0080080L,0x0080000200002020L,0x0000000000000080L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend10986 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend10991 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend10993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector11016 = new BitSet(new long[]{0x0011000000000002L,0x0000000000002000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector11018 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug11040 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_debug11050 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug11052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ERROR_in_sass_error11073 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_error11075 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_STRING_in_sass_error11077 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control11098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control11102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control11106 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control11110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if11131 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_if11133 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if11136 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_if11138 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if11141 = new BitSet(new long[]{0x0000000000200002L,0x0018000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_if11144 = new BitSet(new long[]{0x0000000000000000L,0x0018000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if11147 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else11170 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11172 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else11175 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else11189 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11191 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else11196 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else11203 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_else11206 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else11209 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11211 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else11214 = new BitSet(new long[]{0x0000000000200002L,0x0018000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_else11217 = new BitSet(new long[]{0x0000000000000000L,0x0018000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else11220 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression11243 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for11264 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11266 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_sass_for11268 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11270 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for11274 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11278 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for11280 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11282 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for11286 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11290 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C410746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for11292 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_for11294 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for11297 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each11318 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11320 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each11322 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11324 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each11328 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each11332 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each11335 = new BitSet(new long[]{0xC8718B4481347CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_each11338 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each11341 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_sass_each11345 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each11351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables11372 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables11384 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables11387 = new BitSet(new long[]{0x0850010001247C40L,0x774DCE0040305007L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_each_variables11389 = new BitSet(new long[]{0x0850010001047C40L,0x774DCE0040105007L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables11392 = new BitSet(new long[]{0x0000000000300002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while11417 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_while11419 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while11421 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_while11423 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while11426 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block11447 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_sass_control_block11449 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_sass_control_block11452 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block11455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration11497 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11499 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration11501 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11503 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration11506 = new BitSet(new long[]{0x0850010003247C40L,0x774DDE0040305107L,0x000000000C03E01FL});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11508 = new BitSet(new long[]{0x0850010003047C40L,0x774DDE0040105107L,0x000000000403E01FL});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration11511 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration11514 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11516 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration11519 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE2640307027L,0x000000000D03EABFL});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration11521 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE2640107027L,0x000000000503EABFL});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration11524 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration11527 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name11548 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return11569 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return11571 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return11573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content11594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types11613 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when11636 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and11655 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or11673 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only11691 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3470 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3540 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3543 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3600 = new BitSet(new long[]{0x0851090001047C40L,0x774DCE0042105407L,0x000000000403E01FL});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3603 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css31170 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css31173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css31271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css31278 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css31280 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_in_synpred5_Css31285 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css31288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css31291 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css31299 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css31309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css31327 = new BitSet(new long[]{0x0020000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31330 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css31333 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css31340 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css31363 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31388 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31391 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31393 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31402 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31404 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred8_Css31406 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31408 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31411 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31413 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css31416 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31418 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31421 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31423 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred8_Css31426 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31431 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31434 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred8_Css31437 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred9_Css31449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css31564 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred10_Css31567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31611 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_synpred11_Css31614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31641 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_key_and_in_synpred12_Css31644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred13_Css31726 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_synpred14_Css31755 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred15_Css31901 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred15_Css31904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred16_Css31979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred16_Css31986 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred16_Css31988 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_HASH_in_synpred16_Css31993 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred16_Css31996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred16_Css31999 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred16_Css32007 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFDFFFFFFFFFL,0x000000007FFFFFDFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred16_Css32019 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred17_Css32045 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000020L});
	public static final BitSet FOLLOW_ws_in_synpred17_Css32047 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_SEMI_in_synpred17_Css32050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred18_Css32069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred19_Css32097 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred19_Css32099 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred19_Css32102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred20_Css32119 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred21_Css32409 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred21_Css32411 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_supportsCondition_in_synpred21_Css32414 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred21_Css32416 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred21_Css32419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsFeature_in_synpred22_Css32424 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONTAINER_SYM_in_synpred23_Css32508 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred23_Css32510 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_synpred23_Css32512 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred23_Css32514 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred23_Css32517 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred24_Css32765 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css32767 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_containerCondition_in_synpred24_Css32770 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred24_Css32772 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred24_Css32775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeFeature_in_synpred25_Css32780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_synpred26_Css32787 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css32789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred26_Css32792 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0642307427L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_synpred26_Css32794 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0642107427L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleQuery_in_synpred26_Css32797 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css32799 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred26_Css32802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred27_Css33093 = new BitSet(new long[]{0x0010000000200000L,0x0000000002200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred27_Css33095 = new BitSet(new long[]{0x0010000000000000L,0x0000000002000400L});
	public static final BitSet FOLLOW_styleCondition_in_synpred27_Css33098 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred27_Css33100 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred27_Css33103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred28_Css33115 = new BitSet(new long[]{0xA8519901C16C7CC0L,0x77EDCE0640307027L,0x000000000D03EA9FL});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33117 = new BitSet(new long[]{0xA8519901C14C7CC0L,0x77EDCE0640107027L,0x000000000503EA9FL});
	public static final BitSet FOLLOW_styleFeature_in_synpred28_Css33120 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css33122 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred28_Css33125 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred29_Css33195 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000009000000L});
	public static final BitSet FOLLOW_ws_in_synpred29_Css33197 = new BitSet(new long[]{0x0010000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sizeFeatureFixedValue_in_synpred29_Css33200 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred29_Css33202 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred29_Css33205 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred30_Css33217 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33219 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeSingle_in_synpred30_Css33222 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred30_Css33224 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred30_Css33227 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred31_Css33239 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred31_Css33241 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_sizeFeatureRangeBetweenLt_in_synpred31_Css33244 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred31_Css33246 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred31_Css33249 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_synpred32_Css34019 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_componentValue_in_synpred33_Css34029 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_componentValue_in_synpred34_Css34047 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred35_Css34039 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFEF9FFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_LBRACE_in_synpred35_Css34042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_componentValue_in_synpred35_Css34052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_synpred36_Css34063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_componentValue_in_synpred37_Css34073 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css35110 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred38_Css35113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_synpred39_Css35204 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred40_Css35504 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred41_Css35516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred42_Css35529 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred43_Css35543 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35546 = new BitSet(new long[]{0x80119801C0080080L,0x0080000600002020L,0x0000000000000880L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred43_Css35548 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred43_Css35557 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35559 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred43_Css35561 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35563 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred43_Css35566 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35568 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred43_Css35571 = new BitSet(new long[]{0x0010000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35573 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred43_Css35576 = new BitSet(new long[]{0x0000000000200000L,0x0000100000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35578 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred43_Css35581 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred43_Css35586 = new BitSet(new long[]{0x4000000000200000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred43_Css35589 = new BitSet(new long[]{0x4000000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred43_Css35592 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred44_Css35604 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred45_Css35621 = new BitSet(new long[]{0x0000000000280000L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred45_Css35623 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred45_Css35626 = new BitSet(new long[]{0xBFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000007FFFFFFFL});
	public static final BitSet FOLLOW_set_in_synpred45_Css35638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_synpred46_Css35655 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred47_Css35667 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred48_Css35688 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred49_Css35984 = new BitSet(new long[]{0x8001800140080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_esPred_in_synpred49_Css35987 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred50_Css36022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred51_Css36029 = new BitSet(new long[]{0x8001800140080000L,0x0080000000000020L});
	public static final BitSet FOLLOW_esPred_in_synpred51_Css36032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred52_Css36143 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred53_Css37742 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred53_Css37744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred53_Css37747 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred54_Css37777 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred54_Css37779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred54_Css37782 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred55_Css37952 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_synpred55_Css37957 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_operator_in_synpred55_Css37960 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred55_Css37962 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_synpred55_Css37971 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred56_Css38044 = new BitSet(new long[]{0x0000000000200000L,0x0000000000200400L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred56_Css38046 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred56_Css38049 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred57_Css38656 = new BitSet(new long[]{0x0000000000280000L,0x0000000010200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred57_Css38658 = new BitSet(new long[]{0x0000000000080000L,0x0000000010000000L});
	public static final BitSet FOLLOW_set_in_synpred57_Css38661 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred58_Css38696 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred59_Css38790 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_ws_in_synpred59_Css38795 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred59_Css38798 = new BitSet(new long[]{0x88518B4481247CE0L,0x774DCF85C430706FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred59_Css38800 = new BitSet(new long[]{0x88518B4481047CE0L,0x774DCF85C410706FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_term_in_synpred59_Css38809 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred61_Css39269 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred61_Css39272 = new BitSet(new long[]{0xC8718B4481247CE0L,0x774DCF85C630746FL,0x000000000D33F91FL});
	public static final BitSet FOLLOW_ws_in_synpred61_Css39274 = new BitSet(new long[]{0xC8718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_in_synpred61_Css39277 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred62_Css39344 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred63_Css39367 = new BitSet(new long[]{0x001030000C000000L,0x0000000000000090L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred63_Css39370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred64_Css39396 = new BitSet(new long[]{0x88718B4481047CE0L,0x774DCF85C610746FL,0x000000000533F91FL});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred64_Css39399 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred65_Css39539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred66_Css39672 = new BitSet(new long[]{0x0000000000000000L,0x0000000400002000L,0x00000000000000C0L});
	public static final BitSet FOLLOW_set_in_synpred66_Css39675 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred67_Css39964 = new BitSet(new long[]{0x0000100000000000L,0x0000000400000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_combinator_in_synpred67_Css39967 = new BitSet(new long[]{0x0000000000200002L,0x0000000000200000L,0x0000000008000000L});
	public static final BitSet FOLLOW_ws_in_synpred67_Css39969 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_synpred68_Css310005 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred69_Css310013 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LPAREN_in_synpred69_Css310016 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_synpred70_Css310132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred71_Css311377 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred71_Css311380 = new BitSet(new long[]{0x0000000000000002L});
}
