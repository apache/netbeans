plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.3"
}
version = "0.1"
group = "com.example"
repositories {
    mavenCentral()
}
dependencies {
    // with parenthesis
    @@A@@annotationProcessor("io.micronaut:micronaut-http-validation")@@A@@
    // without parenthesis
    @@B@@implementation "io.micronaut:micronaut-http-client"@@B@@
    // several deps in a common group
    implementation(
        @@C@@'io.micronaut:micronaut-jackson-databind'@@C@@,
        @@D@@"jakarta.annotation:jakarta.annotation-api"@@D@@
    )
    // with a closure
    @@E@@runtimeOnly("ch.qos.logback:logback-classic") {
        transitive = true
    }@@E@@
    // map in parenthesis
    @@F@@implementation(group : "io.micronaut", name: "micronaut-validation", version: "2.5")@@F@@
    // list of maps in parenthesis
    runtimeOnly(
        @@G@@[group: 'org.hibernate', name: 'hibernate', version: '3.0.5', transitive: true]@@G@@,
        @@H@@[group:'org.ow2.asm', name:'asm', version:'7.1']@@H@@
    )
    @@I@@implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'@@I@@
}
application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}
