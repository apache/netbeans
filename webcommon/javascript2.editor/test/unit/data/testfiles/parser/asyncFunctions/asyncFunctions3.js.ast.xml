<FunctionNode name=':program' kind='SCRIPT' start='0' end='171'>
  <hasDeclaredFunctions/>
  <isProgram/>
  <!-- FunctionNode Parameters -->
  <!-- FunctionNode Body -->
  <Block start='0' end='171'>
    <isFunctionBody/>
    <isSynthetic/>
    <!-- Block Statements -->
    <VarNode name='foo' start='30' end='65'>
      <hasInit/>
      <isAssignment/>
      <isFunctionDeclaration/>
      <!-- VarNode Assignment Dest -->
      <IdentNode start='39' end='42'>
        <name>foo</name>
        <isInitializedHere/>
      </IdentNode>
      <!-- VarNode Init -->
      <FunctionNode name='foo' kind='NORMAL' start='30' end='65'>
        <isDeclared/>
        <isAsync/>
        <!-- FunctionNode Parameters -->
        <!-- FunctionNode Body -->
        <Block start='46' end='58'>
          <isFunctionBody/>
          <!-- Block Statements -->
          <ExpressionStatement start='50' end='58'>
            <UnaryNode type='AWAIT' start='50' end='57'>
              <!-- UnaryNode Expression -->
              <NumberLiteralNode value='1' start='56' end='57'/>
            </UnaryNode>
          </ExpressionStatement>
        </Block>
      </FunctionNode>
    </VarNode>
    <VarNode name='r' start='144' end='171'>
      <hasInit/>
      <isAssignment/>
      <isFunctionDeclaration/>
      <!-- VarNode Assignment Dest -->
      <IdentNode start='153' end='154'>
        <name>r</name>
        <isInitializedHere/>
      </IdentNode>
      <!-- VarNode Init -->
      <FunctionNode name='r' kind='NORMAL' start='144' end='171'>
        <isDeclared/>
        <isAsync/>
        <!-- FunctionNode Parameters -->
        <IdentNode start='155' end='159'>
          <name>awai</name>
        </IdentNode>
        <!-- FunctionNode Body -->
        <Block start='161' end='162'>
          <isFunctionBody/>
          <!-- Block Statements -->
        </Block>
      </FunctionNode>
    </VarNode>
    <ExpressionStatement start='0' end='21'>
      <FunctionNode name='=>:1' kind='ARROW' start='0' end='20'>
        <isAnonymous/>
        <isAsync/>
        <!-- FunctionNode Parameters -->
        <IdentNode start='6' end='7'>
          <name>x</name>
        </IdentNode>
        <!-- FunctionNode Body -->
        <Block start='11' end='18'>
          <isFunctionBody/>
          <!-- Block Statements -->
          <ExpressionStatement start='17' end='18'>
            <IdentNode start='17' end='18'>
              <name>x</name>
            </IdentNode>
          </ExpressionStatement>
        </Block>
      </FunctionNode>
    </ExpressionStatement>
    <VarNode name='X' start='69' end='76'>
      <hasInit/>
      <isAssignment/>
      <isBlockScoped/>
      <isConst/>
      <!-- VarNode Assignment Dest -->
      <IdentNode start='75' end='76'>
        <name>X</name>
        <isInitializedHere/>
      </IdentNode>
      <!-- VarNode Init -->
      <ClassNode ident='X' start='69' end='134'>
        <!-- ClassNode Constructor -->
        <PropertyNode name='X' start='69' end='134'>
          <!-- PropertyNode Key -->
          <IdentNode start='75' end='76'>
            <name>X</name>
          </IdentNode>
          <!-- PropertyNode Value -->
          <FunctionNode name='X' kind='NORMAL' start='69' end='134'>
            <isClassConstructor/>
            <isMethod/>
            <isNamedFunctionExpression/>
            <!-- FunctionNode Parameters -->
            <!-- FunctionNode Body -->
            <Block start='69' end='134'>
              <isFunctionBody/>
              <!-- Block Statements -->
            </Block>
          </FunctionNode>
          <!-- PropertyNode Decorators -->
        </PropertyNode>
        <!-- ClassNode Elements -->
        <PropertyNode name='ddddd' start='97' end='131'>
          <isStatic/>
          <!-- PropertyNode Key -->
          <IdentNode start='97' end='102'>
            <name>ddddd</name>
            <isPropertyName/>
          </IdentNode>
          <!-- PropertyNode Value -->
          <FunctionNode name='ddddd' kind='NORMAL' start='97' end='131'>
            <isMethod/>
            <isNamedFunctionExpression/>
            <isAsync/>
            <!-- FunctionNode Parameters -->
            <!-- FunctionNode Body -->
            <Block start='105' end='124'>
              <isFunctionBody/>
              <!-- Block Statements -->
              <ExpressionStatement start='116' end='124'>
                <UnaryNode type='AWAIT' start='116' end='123'>
                  <!-- UnaryNode Expression -->
                  <IdentNode start='122' end='123'>
                    <name>x</name>
                  </IdentNode>
                </UnaryNode>
              </ExpressionStatement>
            </Block>
          </FunctionNode>
          <!-- PropertyNode Decorators -->
        </PropertyNode>
        <!-- ClassNode Decorators -->
      </ClassNode>
    </VarNode>
  </Block>
</FunctionNode>
