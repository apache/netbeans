<testresult testFile='issue269707.php'>
    <scanner>
        <token id='T_CLASS' start='7' end='12'>
            <text>class</text>
        </token>
        <token id='T_STRING' start='13' end='16'>
            <text>Foo</text>
        </token>
        <token id='T_CURLY_OPEN' start='17' end='18'>
            <text>{</text>
        </token>
        <token id='T_PUBLIC' start='24' end='30'>
            <text>public</text>
        </token>
        <token id='T_FUNCTION' start='31' end='39'>
            <text>function</text>
        </token>
        <token id='T_STRING' start='40' end='48'>
            <text>sayHello</text>
        </token>
        <token id='T_OPEN_PARENTHESE' start='48' end='49'>
            <text>(</text>
        </token>
        <token id='T_CLOSE_PARENTHESE' start='49' end='50'>
            <text>)</text>
        </token>
        <token id='T_CURLY_OPEN' start='51' end='52'>
            <text>{</text>
        </token>
        <token id='T_ECHO' start='61' end='65'>
            <text>echo</text>
        </token>
        <token id='T_QUATE' start='66' end='67'>
            <text>"</text>
        </token>
        <token id='T_ENCAPSED_AND_WHITESPACE' start='67' end='74'>
            <text>Hello, </text>
        </token>
        <token id='T_CURLY_OPEN_WITH_DOLAR' start='74' end='75'>
            <text>{</text>
        </token>
        <token id='T_VARIABLE' start='75' end='82'>
            <text>$person</text>
        </token>
        <token id='T_OBJECT_OPERATOR' start='82' end='84'>
            <text>-&gt;</text>
        </token>
        <token id='T_STRING' start='84' end='91'>
            <text>getName</text>
        </token>
        <token id='T_OPEN_PARENTHESE' start='91' end='92'>
            <text>(</text>
        </token>
        <token id='T_CLOSE_PARENTHESE' start='92' end='93'>
            <text>)</text>
        </token>
        <token id='T_CURLY_CLOSE' start='93' end='94'>
            <text>}</text>
        </token>
        <token id='T_ENCAPSED_AND_WHITESPACE' start='94' end='95'>
            <text>.</text>
        </token>
        <token id='T_QUATE' start='95' end='96'>
            <text>"</text>
        </token>
        <token id='T_SEMICOLON' start='96' end='97'>
            <text>;</text>
        </token>
        <token id='T_CURLY_CLOSE' start='102' end='103'>
            <text>}</text>
        </token>
        <token id='T_PUBLIC' start='109' end='115'>
            <text>public</text>
        </token>
        <token id='T_FUNCTION' start='116' end='124'>
            <text>function</text>
        </token>
        <token id='T_STRING' start='125' end='137'>
            <text>newAnonClass</text>
        </token>
        <token id='T_OPEN_PARENTHESE' start='137' end='138'>
            <text>(</text>
        </token>
        <token id='T_CLOSE_PARENTHESE' start='138' end='139'>
            <text>)</text>
        </token>
        <token id='T_CURLY_OPEN' start='140' end='141'>
            <text>{</text>
        </token>
        <token id='T_VARIABLE' start='151' end='156'>
            <text>$anon</text>
        </token>
        <token id='T_EQUAL' start='157' end='158'>
            <text>=</text>
        </token>
        <token id='T_NEW' start='159' end='162'>
            <text>new</text>
        </token>
        <token id='T_CLASS' start='163' end='168'>
            <text>class</text>
        </token>
        <token id='T_OPEN_PARENTHESE' start='168' end='169'>
            <text>(</text>
        </token>
        <token id='T_CLOSE_PARENTHESE' start='169' end='170'>
            <text>)</text>
        </token>
        <token id='T_CURLY_OPEN' start='171' end='172'>
            <text>{</text>
        </token>
        <token id='T_PUBLIC' start='186' end='192'>
            <text>public</text>
        </token>
        <token id='T_FUNCTION' start='193' end='201'>
            <text>function</text>
        </token>
        <token id='T_STRING' start='202' end='211'>
            <text>something</text>
        </token>
        <token id='T_OPEN_PARENTHESE' start='211' end='212'>
            <text>(</text>
        </token>
        <token id='T_CLOSE_PARENTHESE' start='212' end='213'>
            <text>)</text>
        </token>
        <token id='T_CURLY_OPEN' start='214' end='215'>
            <text>{</text>
        </token>
        <token id='T_RETURN' start='232' end='238'>
            <text>return</text>
        </token>
        <token id='T_CONSTANT_ENCAPSED_STRING' start='239' end='250'>
            <text>&apos;something&apos;</text>
        </token>
        <token id='T_SEMICOLON' start='250' end='251'>
            <text>;</text>
        </token>
        <token id='T_CURLY_CLOSE' start='264' end='265'>
            <text>}</text>
        </token>
        <token id='T_CURLY_CLOSE' start='275' end='276'>
            <text>}</text>
        </token>
        <token id='T_SEMICOLON' start='276' end='277'>
            <text>;</text>
        </token>
        <token id='T_CURLY_CLOSE' start='282' end='283'>
            <text>}</text>
        </token>
        <token id='T_CURLY_CLOSE' start='285' end='286'>
            <text>}</text>
        </token>
        <token id='EOF' start='287' end='287'>
            <text></text>
        </token>
    </scanner>
    <Program start='0' end='287'>
        <Comments>
        </Comments>
        <Statements>
            <ClassDeclaration start='7' end='286' modifier='NONE'>
                <ClassName>
                    <Identifier start='13' end='16' name='Foo'/>
                </ClassName>
                <SuperClassName>
                </SuperClassName>
                <Interfaces>
                </Interfaces>
                <Block start='17' end='286' isCurly='true'>
                    <MethodDeclaration start='24' end='103' modifiers='public'>
                        <FunctionDeclaration start='31' end='103' isReference='false'>
                            <Identifier start='40' end='48' name='sayHello'/>
                            <FormalParameters>
                            </FormalParameters>
                            <Block start='51' end='103' isCurly='true'>
                                <EchoStatement start='61' end='97'>
                                    <Quote start='66' end='96' type='QUOTE'>
                                        <Expressions>
                                            <Scalar start='67' end='74' type='STRING' value='Hello, '/>
                                            <ReflectionVariable start='74' end='94'>
                                                <MethodInvocation start='75' end='93' isNullsafe='false'>
                                                    <Variable start='75' end='82' isDollared='true'>
                                                        <Identifier start='76' end='82' name='person'/>
                                                    </Variable>
                                                    <Method>
                                                        <FunctionInvocation start='84' end='93'>
                                                            <FucntionName start='84' end='91'>
                                                                <Variable start='84' end='91' isDollared='false'>
                                                                    <Identifier start='84' end='91' name='getName'/>
                                                                </Variable>
                                                            </FucntionName>
                                                            <Parameters>
                                                            </Parameters>
                                                        </FunctionInvocation>
                                                    </Method>
                                                </MethodInvocation>
                                            </ReflectionVariable>
                                            <Scalar start='94' end='95' type='STRING' value='.'/>
                                        </Expressions>
                                    </Quote>
                                </EchoStatement>
                            </Block>
                        </FunctionDeclaration>
                    </MethodDeclaration>
                    <MethodDeclaration start='109' end='283' modifiers='public'>
                        <FunctionDeclaration start='116' end='283' isReference='false'>
                            <Identifier start='125' end='137' name='newAnonClass'/>
                            <FormalParameters>
                            </FormalParameters>
                            <Block start='140' end='283' isCurly='true'>
                                <ExpressionStatement start='151' end='277'>
                                    <Assignment start='151' end='276' operator='EQUAL'>
                                        <Variable start='151' end='156' isDollared='true'>
                                            <Identifier start='152' end='156' name='anon'/>
                                        </Variable>
                                        <ClassInstanceCreation start='159' end='276' anonymous='true'>
                                            <Parameters>
                                            </Parameters>
                                            <Superclass>
                                            </Superclass>
                                            <Interfaces>
                                            </Interfaces>
                                            <Block start='171' end='276' isCurly='true'>
                                                <MethodDeclaration start='186' end='265' modifiers='public'>
                                                    <FunctionDeclaration start='193' end='265' isReference='false'>
                                                        <Identifier start='202' end='211' name='something'/>
                                                        <FormalParameters>
                                                        </FormalParameters>
                                                        <Block start='214' end='265' isCurly='true'>
                                                            <ReturnStatement start='232' end='251'>
                                                                <Scalar start='239' end='250' type='STRING' value='&apos;something&apos;'/>
                                                            </ReturnStatement>
                                                        </Block>
                                                    </FunctionDeclaration>
                                                </MethodDeclaration>
                                            </Block>
                                        </ClassInstanceCreation>
                                    </Assignment>
                                </ExpressionStatement>
                            </Block>
                        </FunctionDeclaration>
                    </MethodDeclaration>
                </Block>
            </ClassDeclaration>
        </Statements>
    </Program>
</testresult>
