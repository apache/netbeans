<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<?xml-stylesheet type="text/xml" href="../../nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../nbbuild/javadoctools/apichanges.dtd">

<apichanges>

    <!-- First, a list of API names you may use: -->
    <apidefs>
        <apidef name="recent">Project UI</apidef>
    </apidefs>

    <changes>
        <change id="LOAD_PROJECTS_ON_START">
            <api name="recent"/>
            <summary>Disable loading of projects on startup</summary>
            <version major="1" minor="69"/>
            <date year="2020" month="9" day="30"/>
            <author login="jtulach"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    A branding API to disable loading of previously opened
                    projects - <a href="architecture-summary.html#group-branding">LOAD_PROJECTS_ON_START</a>.
                </p>
            </description>
        </change>
        <change id="SelectAndExpandProjectAPI">
            <api name="recent"/>
            <summary>Added <code>ProjectActionUtils</code></summary>
            <version major="1" minor="49"/>
            <date year="2013" month="10" day="21"/>
            <author login="mkozeny"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    Added new API interface <code>ProjectActionUtils</code> providing actions <code>selectAndExpandProject()</code> and <code>makeProjectTabVisible()</code>
                    on project node a project tab
                </p>
            </description>
            <class package="org.netbeans.modules.project.ui.api" name="ProjectActionUtils"/>
            <issue number="232642"/>
        </change>
        <change id="ProjectGroupCustomizer">
            <api name="recent"/>
            <summary>Location <code>Projects/Groups/Customizer</code> recognized in layers</summary>
            <version major="1" minor="45"/>
            <date year="2013" month="4" day="16"/>
            <author login="mkleint"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    <code>@ProjectCustomizer.CompositeCategoryProvider.Registration</code> annotation now accepts "Groups" projectType parameter value which
                    adds a panel to the Project Group customizer. Implementations can expect an instance of <code>org.netbeans.api.project.ui.ProjectGroup</code> in the lookup 
                    passed to the provider. NO central storing procedure in place, each panel is expected to set it's own values in <code>Category.setStoreListener</code>
                </p>
            </description>
            <issue number="197577"/>
        </change>
        <change id="TemplateCategorySorter">
            <api name="recent"/>
            <summary>Added <code>TemplateCategorySorter</code></summary>
            <version major="1" minor="40"/>
            <date year="2012" month="12" day="11"/>
            <author login="mkleint"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    Added a new SPI interface <code>TemplatesCategorySorter</code> allowing to post process the order of template categories for given project.
                    Implementations of this interface are to be put into project's lookup. If not present, standard layer ordering rules apply.
                </p>
            </description>
            <class package="org.netbeans.modules.project.ui.spi" name="TemplateCategorySorter"/>
            <issue number="206126"/>
        </change>
        <change id="ProjectTemplates">
            <api name="recent"/>
            <summary>Added <code>ProjectTemplates</code></summary>
            <version major="1" minor="32"/>
            <date year="2011" month="12" day="1"/>
            <author login="jglick"/>
            <compatibility addition="yes">
                <p>
                    Undocumented tricks like trying to call <code>NewProject.newSample</code>
                    by reflection will no longer work.
                </p>
            </compatibility>
            <description>
                <p>
                    Added a new class of constants to use with the New Project action.
                </p>
            </description>
            <class package="org.netbeans.modules.project.ui.api" name="ProjectTemplates"/>
        </change>
        <change id="BuildActions">
            <api name="recent"/>
            <summary>Externalize Build related action registration.</summary>
            <version major="1" minor="15"/>
            <date day="20" month="7" year="2008"/>
            <author login="mkleint"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    For certain distributions of NetBeans (PHP or Ruby), actions like "Build project" or "Rebuild project" make no sense in the
                    main menu. Therefore the layer registration for these actions was moved to projectui.buildmenu module
                    which provides token "BuildActions". If a certain distribution requires these actiosn to be present it shall
                    require this token. Java and CND do now.
                </p>
            </description>
            <issue number="140731"/>
        </change>
        <change id="project.tab.no.selection">
            <api name="recent"/>
            <summary>Don't open project view component in bluej edition.</summary>
            <version major="1" minor="12"/>
            <date day="1" month="2" year="2007"/>
            <author login="mkleint"/>
            <compatibility addition="yes"/>
            <description>
                <p>
         Use system property "project.tab.no.selection" for influencing the behaviour on creation or opening of projects.
         When this property is set, the opening/creating of projects doesn't trigger 
         opening and focusing of the projects logical view  top component.
         Allows the BlueJ Edition to focus it's own component instead.
                </p>
            </description>
            <!--class package="org.netbeans.modules.project.ui.actions" name="NewProject"/>
            <class package="org.netbeans.modules.project.ui.actions" name="OpenProject"/-->
            <issue number="78746"/>
        </change>
        
        <change id="RecentProjects">
            <api name="recent"/>
            <summary>Provide a way to get list of information about recent projects.</summary>
            <version major="1" minor="9"/>
            <date day="20" month="3" year="2006"/>
            <author login="mkubec"/>
            <compatibility addition="yes"/>
            <description>
                <p>
                    Added <code>RecentProjects</code> class that provides access to list of
                    recently used projects (<code>UnloadedProjectInformation</code> class). 
                    Listener can be registered to be notified about change in the 
                    list of recent projects. The API is only for friend access.
                </p>
            </description>
            <class package="org.netbeans.modules.project.ui.api" name="RecentProjects"/>
            <issue number="57073"/>
        </change>
    </changes>

    <!-- Now the surrounding HTML text and document structure: -->

    <htmlcontents>
        <!-- Generated from apichanges.xml -->
        <head>
            <title>Change History for the Project UI</title>
            <link rel="stylesheet" href="prose.css" type="text/css"/>
        </head>
        <body>

            <p class="overviewlink"><a href="@org-netbeans-modules-projectui@/overview-summary.html">Overview</a></p>

            <h1>Introduction</h1>
            <p>This document lists changes made to the <a href="@org-netbeans-modules-projectui@/overview-summary.html">Project UI</a>.</p>

            <!-- The actual lists of changes, as summaries and details: -->
            <hr/>
            <standard-changelists module-code-name="org.netbeans.modules.projectui/1"/>
            <hr/>
            <p>@FOOTER@</p>

        </body>
    </htmlcontents>

</apichanges>
