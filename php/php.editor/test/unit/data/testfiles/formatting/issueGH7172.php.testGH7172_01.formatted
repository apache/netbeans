<?php

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

function gh7172($param): void {
    $test1 = (new Example())
        ->method(
            test: $param,
        );

    $test2 = (new Example())
        ->method(
            test1: $param1,
            test2: $param2,
        )
        ->field;

    $test3 = (new Example())
        ->method(
            test1: $param1,
            test2: $param2
        )
        ->method2()
        ->field;

    $test4 = (new Example())
        ->method(
            test1: $param1,
        )
        ->field
        ->field2;

    $test5 = (new Example())
        ->method(
            test: $param,
        )
        ->method2();

    $test6 = (new Example())
        ?->method(
            test1: $param1,
            test2: $param2,
        );

    $test7 = (new Example())
        ?->method(
            test: $param,
        )
        ?->field;

    $test8 = (new Example())
        ?->method(
            test: $param,
        )
        ?->method2();

    $test9 = (new Example())
        ?->method(
            test: $param,
        )
        ?->field
        ?->method2(
            test: $param,
        );
}

$test1 = $example
    ->method(
        test: $param,
    );

$test2 = $example
    ->method(
        test: $param,
    )
    ->field;

$test3 = $example
    ->method(
        test1: $param1,
        test2: $param2
    )
    ->method2()
    ->field;

$test4 = $example
    ->method(
        test1: $param1,
    )
    ->field
    ->field2;

$test5 = $example
    ->method(
        test: $param,
    )
    ->method2();

$test6 = $example
    ?->method(
        test1: $param1,
        test2: $param2,
    );

$test7 = $example
    ?->method(
        test: $param,
    )
    ?->field;

$test8 = $example
    ?->method(
        test: $param,
    )
    ?->method2();

$test9 = $example
    ?->method(
        test: $param,
    )
    ?->field
    ?->method2(
        test: $param,
    );

// formatted
function gh7172_2($param): void {
    $test1 = (new Example())
        ->method(
            test: $param,
        );

    $test2 = (new Example())
        ->method(
            test1: $param1,
            test2: $param2,
        )
        ->field;

    $test3 = (new Example())
        ->method(
            test1: $param1,
            test2: $param2
        )
        ->method2()
        ->field;

    $test4 = (new Example())
        ->method(
            test1: $param1,
        )
        ->field
        ->field2;

    $test5 = (new Example())
        ->method(
            test: $param,
        )
        ->method2();

    $test6 = (new Example())
        ?->method(
            test1: $param1,
            test2: $param2,
        );

    $test7 = (new Example())
        ?->method(
            test: $param,
        )
        ?->field;

    $test8 = (new Example())
        ?->method(
            test: $param,
        )
        ?->method2();

    $test9 = (new Example())
        ?->method(
            test: $param,
        )
        ?->field
        ?->method2(
            test: $param,
        );
}

$test1 = $example
    ->method(
        test: $param,
    );

$test2 = $example
    ->method(
        test: $param,
    )
    ->field;

$test3 = $example
    ->method(
        test1: $param1,
        test2: $param2
    )
    ->method2()
    ->field;

$test4 = $example
    ->method(
        test1: $param1,
    )
    ->field
    ->field2;

$test5 = $example
    ->method(
        test: $param,
    )
    ->method2();

$test6 = $example
    ?->method(
        test1: $param1,
        test2: $param2,
    );

$test7 = $example
    ?->method(
        test: $param,
    )
    ?->field;

$test8 = $example
    ?->method(
        test: $param,
    )
    ?->method2();

$test9 = $example
    ?->method(
        test: $param,
    )
    ?->field
    ?->method2(
        test: $param,
    );
