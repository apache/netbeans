<#--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<#assign licenseFirst = "/*">
<#assign licensePrefix = " * ">
<#assign licenseLast = " */">
<#include "${project.licensePath}">

package ${PACKAGE_NAME};

${IMPORTS}

@MimeRegistration(mimeType="${MIME_TYPE}", service=CodeGeneratorContextProvider.class)
public class ${CLASS_NAME} implements CodeGeneratorContextProvider {

    /**
     * Adds an additional content to the original context and runs the given task
     * with the new context as a parameter.
     * @param context the original context
     * @param task the task to be run
     */
    public void runTaskWithinContext(Lookup context, Task task) {
        //JTextComponent is always guaranteed, you can get it like this
        //JTextComponent component = context.lookup(JTextComponent.class);

        // Create new Lookup with extra items to be used in the task
        // Make sure that newContext contains the original context
        Lookup extraItems = Lookups.fixed(/* Add you extra items here */);
        Lookup newContext = new ProxyLookup(context, extraItems);
        
        // You may aquire a lock here:
        //try {
        task.run(newContext);
        // } finally {
        // Don't forget to unlock here
        //}
    }

}
