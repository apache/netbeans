// $ANTLR 3.5.2 /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g 2022-02-19 22:48:20

/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// DO NOT EDIT THIS FILE MANUALLY!
// SEE Css3.g FOR INSTRUCTIONS

package org.netbeans.modules.css.lib;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.debug.*;
import java.io.IOException;
@SuppressWarnings("all")
public class Css3Parser extends DebugParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "ANGLE", "AT_IDENT", "AT_SIGN", 
		"B", "BEGINS", "BOTTOMCENTER_SYM", "BOTTOMLEFTCORNER_SYM", "BOTTOMLEFT_SYM", 
		"BOTTOMRIGHTCORNER_SYM", "BOTTOMRIGHT_SYM", "C", "CDC", "CDO", "CHARSET_SYM", 
		"COLON", "COMMA", "COMMENT", "CONTAINS", "COUNTER_STYLE_SYM", "CP_DOTS", 
		"CP_EQ", "CP_NOT_EQ", "D", "DASHMATCH", "DCOLON", "DIMENSION", "DOT", 
		"E", "EMS", "ENDS", "ESCAPE", "EXCLAMATION_MARK", "EXS", "F", "FONT_FACE_SYM", 
		"FREQ", "G", "GEN", "GREATER", "GREATER_OR_EQ", "H", "HASH", "HASH_SYMBOL", 
		"HEXCHAR", "HEXCHAR_WILDCARD", "I", "IDENT", "IMPORTANT_SYM", "IMPORT_SYM", 
		"INCLUDES", "INVALID", "J", "K", "L", "LBRACE", "LBRACKET", "LEFTBOTTOM_SYM", 
		"LEFTMIDDLE_SYM", "LEFTTOP_SYM", "LENGTH", "LESS", "LESS_AND", "LESS_JS_STRING", 
		"LESS_OR_EQ", "LESS_REST", "LINE_COMMENT", "LPAREN", "M", "MEDIA_SYM", 
		"MINUS", "MOZ_DOCUMENT_SYM", "MOZ_DOMAIN", "MOZ_REGEXP", "MOZ_URL_PREFIX", 
		"N", "NAME", "NAMESPACE_SYM", "NL", "NMCHAR", "NMSTART", "NONASCII", "NOT", 
		"NUMBER", "O", "OPEQ", "P", "PAGE_SYM", "PERCENTAGE", "PERCENTAGE_SYMBOL", 
		"PIPE", "PLUS", "Q", "R", "RBRACE", "RBRACKET", "REM", "RESOLUTION", "RIGHTBOTTOM_SYM", 
		"RIGHTMIDDLE_SYM", "RIGHTTOP_SYM", "RPAREN", "S", "SASS_AT_ROOT", "SASS_CONTENT", 
		"SASS_DEBUG", "SASS_DEFAULT", "SASS_EACH", "SASS_ELSE", "SASS_ELSEIF", 
		"SASS_ERROR", "SASS_EXTEND", "SASS_EXTEND_ONLY_SELECTOR", "SASS_FOR", 
		"SASS_FORWARD", "SASS_FUNCTION", "SASS_GLOBAL", "SASS_IF", "SASS_INCLUDE", 
		"SASS_MIXIN", "SASS_OPTIONAL", "SASS_RETURN", "SASS_USE", "SASS_VAR", 
		"SASS_WARN", "SASS_WHILE", "SEMI", "SOLIDUS", "STAR", "STRING", "SUPPORTS_SYM", 
		"T", "TILDE", "TIME", "TOPCENTER_SYM", "TOPLEFTCORNER_SYM", "TOPLEFT_SYM", 
		"TOPRIGHTCORNER_SYM", "TOPRIGHT_SYM", "U", "UNICODE", "URANGE", "URI", 
		"URL", "V", "VARIABLE", "W", "WEBKIT_KEYFRAMES_SYM", "WS", "X", "Y", "Z"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int ANGLE=5;
	public static final int AT_IDENT=6;
	public static final int AT_SIGN=7;
	public static final int B=8;
	public static final int BEGINS=9;
	public static final int BOTTOMCENTER_SYM=10;
	public static final int BOTTOMLEFTCORNER_SYM=11;
	public static final int BOTTOMLEFT_SYM=12;
	public static final int BOTTOMRIGHTCORNER_SYM=13;
	public static final int BOTTOMRIGHT_SYM=14;
	public static final int C=15;
	public static final int CDC=16;
	public static final int CDO=17;
	public static final int CHARSET_SYM=18;
	public static final int COLON=19;
	public static final int COMMA=20;
	public static final int COMMENT=21;
	public static final int CONTAINS=22;
	public static final int COUNTER_STYLE_SYM=23;
	public static final int CP_DOTS=24;
	public static final int CP_EQ=25;
	public static final int CP_NOT_EQ=26;
	public static final int D=27;
	public static final int DASHMATCH=28;
	public static final int DCOLON=29;
	public static final int DIMENSION=30;
	public static final int DOT=31;
	public static final int E=32;
	public static final int EMS=33;
	public static final int ENDS=34;
	public static final int ESCAPE=35;
	public static final int EXCLAMATION_MARK=36;
	public static final int EXS=37;
	public static final int F=38;
	public static final int FONT_FACE_SYM=39;
	public static final int FREQ=40;
	public static final int G=41;
	public static final int GEN=42;
	public static final int GREATER=43;
	public static final int GREATER_OR_EQ=44;
	public static final int H=45;
	public static final int HASH=46;
	public static final int HASH_SYMBOL=47;
	public static final int HEXCHAR=48;
	public static final int HEXCHAR_WILDCARD=49;
	public static final int I=50;
	public static final int IDENT=51;
	public static final int IMPORTANT_SYM=52;
	public static final int IMPORT_SYM=53;
	public static final int INCLUDES=54;
	public static final int INVALID=55;
	public static final int J=56;
	public static final int K=57;
	public static final int L=58;
	public static final int LBRACE=59;
	public static final int LBRACKET=60;
	public static final int LEFTBOTTOM_SYM=61;
	public static final int LEFTMIDDLE_SYM=62;
	public static final int LEFTTOP_SYM=63;
	public static final int LENGTH=64;
	public static final int LESS=65;
	public static final int LESS_AND=66;
	public static final int LESS_JS_STRING=67;
	public static final int LESS_OR_EQ=68;
	public static final int LESS_REST=69;
	public static final int LINE_COMMENT=70;
	public static final int LPAREN=71;
	public static final int M=72;
	public static final int MEDIA_SYM=73;
	public static final int MINUS=74;
	public static final int MOZ_DOCUMENT_SYM=75;
	public static final int MOZ_DOMAIN=76;
	public static final int MOZ_REGEXP=77;
	public static final int MOZ_URL_PREFIX=78;
	public static final int N=79;
	public static final int NAME=80;
	public static final int NAMESPACE_SYM=81;
	public static final int NL=82;
	public static final int NMCHAR=83;
	public static final int NMSTART=84;
	public static final int NONASCII=85;
	public static final int NOT=86;
	public static final int NUMBER=87;
	public static final int O=88;
	public static final int OPEQ=89;
	public static final int P=90;
	public static final int PAGE_SYM=91;
	public static final int PERCENTAGE=92;
	public static final int PERCENTAGE_SYMBOL=93;
	public static final int PIPE=94;
	public static final int PLUS=95;
	public static final int Q=96;
	public static final int R=97;
	public static final int RBRACE=98;
	public static final int RBRACKET=99;
	public static final int REM=100;
	public static final int RESOLUTION=101;
	public static final int RIGHTBOTTOM_SYM=102;
	public static final int RIGHTMIDDLE_SYM=103;
	public static final int RIGHTTOP_SYM=104;
	public static final int RPAREN=105;
	public static final int S=106;
	public static final int SASS_AT_ROOT=107;
	public static final int SASS_CONTENT=108;
	public static final int SASS_DEBUG=109;
	public static final int SASS_DEFAULT=110;
	public static final int SASS_EACH=111;
	public static final int SASS_ELSE=112;
	public static final int SASS_ELSEIF=113;
	public static final int SASS_ERROR=114;
	public static final int SASS_EXTEND=115;
	public static final int SASS_EXTEND_ONLY_SELECTOR=116;
	public static final int SASS_FOR=117;
	public static final int SASS_FORWARD=118;
	public static final int SASS_FUNCTION=119;
	public static final int SASS_GLOBAL=120;
	public static final int SASS_IF=121;
	public static final int SASS_INCLUDE=122;
	public static final int SASS_MIXIN=123;
	public static final int SASS_OPTIONAL=124;
	public static final int SASS_RETURN=125;
	public static final int SASS_USE=126;
	public static final int SASS_VAR=127;
	public static final int SASS_WARN=128;
	public static final int SASS_WHILE=129;
	public static final int SEMI=130;
	public static final int SOLIDUS=131;
	public static final int STAR=132;
	public static final int STRING=133;
	public static final int SUPPORTS_SYM=134;
	public static final int T=135;
	public static final int TILDE=136;
	public static final int TIME=137;
	public static final int TOPCENTER_SYM=138;
	public static final int TOPLEFTCORNER_SYM=139;
	public static final int TOPLEFT_SYM=140;
	public static final int TOPRIGHTCORNER_SYM=141;
	public static final int TOPRIGHT_SYM=142;
	public static final int U=143;
	public static final int UNICODE=144;
	public static final int URANGE=145;
	public static final int URI=146;
	public static final int URL=147;
	public static final int V=148;
	public static final int VARIABLE=149;
	public static final int W=150;
	public static final int WEBKIT_KEYFRAMES_SYM=151;
	public static final int WS=152;
	public static final int X=153;
	public static final int Y=154;
	public static final int Z=155;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public static final String[] ruleNames = new String[] {
		"invalidRule", "synpred11_Css3", "synpred10_Css3", "webkitKeyframeSelectors", 
		"cssClass", "prio", "less_condition", "supportsDisjunction", "mediaExpression", 
		"less_when", "synpred39_Css3", "term", "cp_mixin_call_args", "fnAttributeName", 
		"synpred35_Css3", "declaration", "cp_expression_atom", "namespacePrefix", 
		"cp_mixin_call", "synpred28_Css3", "sass_debug", "sass_forward_as", "synpred45_Css3", 
		"synpred38_Css3", "synpred23_Css3", "synpred2_Css3", "sass_forward_show", 
		"importItem", "webkitKeyframes", "synpred47_Css3", "sass_control_block", 
		"supportsWithOperator", "supportsCondition", "less_condition_operator", 
		"mediaQueryOperator", "slAttributeName", "synpred18_Css3", "property", 
		"hexColor", "cp_variable_declaration", "sass_control_expression", "supportsInParens", 
		"synpred17_Css3", "key_only", "syncTo_SEMI", "synpred32_Css3", "synpred41_Css3", 
		"sass_function_name", "synpred5_Css3", "cp_arg", "cp_variable", "supportsFeature", 
		"cp_term_symbol", "cp_propertyValue", "synpred27_Css3", "synpred29_Css3", 
		"fnAttributes", "synpred15_Css3", "rule", "charSet", "margin", "mediaType", 
		"syncToDeclarationsRule", "fnAttribute", "declarations", "sass_for", "synpred22_Css3", 
		"supportsDecl", "supportsAtRule", "sass_map_name", "synpred4_Css3", "imports", 
		"functionName", "mediaBody", "synpred48_Css3", "expressionPredicate", 
		"namespacePrefixName", "media", "less_function_in_condition", "mediaFeatureValue", 
		"key_or", "synpred43_Css3", "cp_mixin_name", "syncTo_RBRACE", "synpred8_Css3", 
		"synpred49_Css3", "propertyDeclaration", "sass_while", "margin_sym", "at_rule", 
		"esPred", "sass_each_variables", "synpred31_Css3", "mediaQuery", "webkitKeyframesBlock", 
		"sass_error", "synpred12_Css3", "selectorsGroup", "moz_document", "synpred1_Css3", 
		"less_selector_interpolation_exp", "less_mixin_guarded", "synpred6_Css3", 
		"cp_math_expression_atom", "synpred14_Css3", "sass_use", "cp_math_expressions", 
		"slAttribute", "synpred42_Css3", "fontFace", "sass_forward_hide", "synpred9_Css3", 
		"synpred52_Css3", "namespaces", "synpred51_Css3", "operator", "page", 
		"synpred30_Css3", "function", "body", "unaryOperator", "synpred26_Css3", 
		"sass_control", "supportsConjunction", "simpleSelectorSequence", "less_fn_name", 
		"mediaBodyItem", "mediaQueryList", "syncToFollow", "sass_selector_interpolation_exp", 
		"cp_expression_list", "styleSheet", "sass_forward_with_declaration", "mediaFeature", 
		"sass_nested_properties", "cp_args_list", "slAttributeValue", "synpred40_Css3", 
		"synpred3_Css3", "cssId", "cp_mixin_declaration", "moz_document_function", 
		"sass_map_pair", "sass_extend_only_selector", "sass_if", "expression", 
		"cp_math_expression", "cp_mixin_call_arg", "synpred19_Css3", "sass_map_pairs", 
		"synpred21_Css3", "pseudo", "sass_each", "sass_else", "bodyItem", "typeSelector", 
		"ws", "synpred50_Css3", "synpred25_Css3", "sass_function_declaration", 
		"less_selector_interpolation", "charSetValue", "sass_extend", "sass_use_with", 
		"synpred33_Css3", "synpred46_Css3", "sass_interpolation_expression_var", 
		"synpred37_Css3", "sass_forward_with", "synpred16_Css3", "sass_content", 
		"elementName", "cp_mixin_block", "cp_expression", "sass_use_as", "atRuleId", 
		"synpred34_Css3", "synpred36_Css3", "vendorAtRule", "fnAttributeValue", 
		"cp_expression_operator", "synpred20_Css3", "sass_map", "synpred44_Css3", 
		"namespace", "sass_forward", "key_and", "resourceIdentifier", "generic_at_rule", 
		"synpred7_Css3", "synpred24_Css3", "selector", "propertyValue", "counterStyle", 
		"combinator", "less_import_types", "synpred13_Css3", "sass_use_with_declaration", 
		"elementSubsequent", "sass_function_return", "pseudoPage"
	};

	public static final boolean[] decisionCanBacktrack = new boolean[] {
		false, // invalid decision
		false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, true, false, false, false, false, false, true, 
		    false, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, true, false, 
		    false, false, false, false, false, false, true, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, true, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, true, false, false, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, true, false, false, true, true, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, true, false, false, false, false, false, false, 
		    false, false, false, false, false, false, true, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, true, false, false, 
		    false, false, false, true, false, false, true, false, false, false, 
		    false, false, false, true, false, false, false, true, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    true, false, false, false, true, false, false, false, false, false, 
		    false, false, false, false, false, true, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false, false, false, false, false, false, false, 
		    false, false, false, false
	};

 
	public int ruleLevel = 0;
	public int getRuleLevel() { return ruleLevel; }
	public void incRuleLevel() { ruleLevel++; }
	public void decRuleLevel() { ruleLevel--; }
	public Css3Parser(TokenStream input) {
		this(input, DebugEventSocketProxy.DEFAULT_DEBUGGER_PORT, new RecognizerSharedState());
	}
	public Css3Parser(TokenStream input, int port, RecognizerSharedState state) {
		super(input, state);
		DebugEventSocketProxy proxy =
			new DebugEventSocketProxy(this, port, null);

		setDebugListener(proxy);
		try {
			proxy.handshake();
		}
		catch (IOException ioe) {
			reportError(ioe);
		}
	}

	public Css3Parser(TokenStream input, DebugEventListener dbg) {
		super(input, dbg, new RecognizerSharedState());
	}

	protected boolean evalPredicate(boolean result, String predicate) {
		dbg.semanticPredicate(result, predicate);
		return result;
	}

	@Override public String[] getTokenNames() { return Css3Parser.tokenNames; }
	@Override public String getGrammarFileName() { return "/home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g"; }



	    protected boolean isLessSource() {
	        return false;
	    }

	    protected boolean isScssSource() {
	        return false;
	    }

	    private boolean isCssPreprocessorSource() {
	        return isLessSource() || isScssSource();
	    }

	    private boolean tokenNameEquals(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(1).getText());
	    }
	    
	    private boolean tokenNameEquals2(String tokenImage) {
	        return tokenImage.equalsIgnoreCase(input.LT(2).getText());
	    }

	    private boolean tokenNameIs(String[] tokens) {
	        for(String tokenImage : tokens) {
	            if(tokenImage.equalsIgnoreCase(input.LT(1).getText())) {
	                return true;
	            }
	        }
	        return false;
	    }

	    private boolean tokenNameStartsWith(String prefix) {
	        return input.LT(1).getText() != null
	            && input.LT(1).getText().startsWith(prefix);
	    }

	    /**
	     * Use the current stacked followset to work out the valid tokens that
	     * can follow on from the current point in the parse, then recover by
	     * eating tokens that are not a member of the follow set we compute.
	     *
	     * This method is used whenever we wish to force a sync, even though
	     * the parser has not yet checked LA(1) for alt selection. This is useful
	     * in situations where only a subset of tokens can begin a new construct
	     * (such as the start of a new statement in a block) and we want to
	     * proactively detect garbage so that the current rule does not exit on
	     * on an exception.
	     *
	     * We could override recover() to make this the default behavior but that
	     * is too much like using a sledge hammer to crack a nut. We want finer
	     * grained control of the recovery and error mechanisms.
	     */
	    protected void syncToSet()
	    {
	        // Compute the followset that is in context wherever we are in the
	        // rule chain/stack
	        //
	         BitSet follow = state.following[state._fsp]; //computeContextSensitiveRuleFOLLOW();

	         syncToSet(follow);
	    }

	    protected void syncToSet(BitSet follow)
	    {
	        int mark = -1;

	        //create error-recovery node
	        dbg.enterRule(getGrammarFileName(), "recovery");

	        try {

	            mark = input.mark();

	            // Consume all tokens in the stream until we find a member of the follow
	            // set, which means the next production should be guaranteed to be happy.
	            //
	            while (! follow.member(input.LA(1)) ) {

	                if  (input.LA(1) == Token.EOF) {

	                    // Looks like we didn't find anything at all that can help us here
	                    // so we need to rewind to where we were and let normal error handling
	                    // bail out.
	                    //
	                    input.rewind();
	                    mark = -1;
	                    return;
	                }
	                input.consume();

	                // Now here, because you are consuming some tokens, yu will probably want
	                // to raise an error message such as "Spurious elements after the class member were discarded"
	                // using whatever your override of displayRecognitionError() routine does to record
	                // error messages. The exact error my depend on context etc.
	                //
	            }
	        } catch (Exception e) {

	          // Just ignore any errors here, we will just let the recognizer
	          // try to resync as normal - something must be very screwed.
	          //
	        }
	        finally {
	            dbg.exitRule(getGrammarFileName(), "recovery");

	            // Always release the mark we took
	            //
	            if  (mark != -1) {
	                input.release(mark);
	            }
	        }
	    }

	        /**
	         * synces to next RBRACE "}" taking nesting into account
	         */
	        protected void syncToRBRACE(int nest)
	            {

	                int mark = -1;
	                //create error-recovery node
	                //dbg.enterRule(getGrammarFileName(), "recovery");

	                try {
	                    mark = input.mark();
	                    for(;;) {
	                        //read char
	                        int c = input.LA(1);

	                        switch(c) {
	                            case Token.EOF:
	                                input.rewind();
	                                mark = -1;
	                                return ;
	                            case Css3Lexer.LBRACE:
	                                nest++;
	                                break;
	                            case Css3Lexer.RBRACE:
	                                nest--;
	                                if(nest == 0) {
	                                    //do not eat the final RBRACE
	                                    return ;
	                                }
	                        }

	                        input.consume();

	                    }

	                } catch (Exception e) {

	                  // Just ignore any errors here, we will just let the recognizer
	                  // try to resync as normal - something must be very screwed.
	                  //
	                }
	                finally {
	                    if  (mark != -1) {
	                        input.release(mark);
	                    }
	                    //dbg.exitRule(getGrammarFileName(), "recovery");
	                }
	            }




	// $ANTLR start "styleSheet"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:281:1: styleSheet : ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF ;
	public final void styleSheet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "styleSheet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(281, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:282:5: ( ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:283:6: ( ws )? ( charSet ( ws )? )? ( imports )? ( namespaces )? ( body )? EOF
			{
			dbg.location(283,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:283:6: ( ws )?
			int alt1=2;
			try { dbg.enterSubRule(1);
			try { dbg.enterDecision(1, decisionCanBacktrack[1]);

			int LA1_0 = input.LA(1);
			if ( (LA1_0==COMMENT||LA1_0==NL||LA1_0==WS) ) {
				alt1=1;
			}
			} finally {dbg.exitDecision(1);}

			switch (alt1) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:283:6: ws
					{
					dbg.location(283,6);
					pushFollow(FOLLOW_ws_in_styleSheet99);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(1);}
			dbg.location(284,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:284:6: ( charSet ( ws )? )?
			int alt3=2;
			try { dbg.enterSubRule(3);
			try { dbg.enterDecision(3, decisionCanBacktrack[3]);

			try {
				isCyclicDecision = true;
				alt3 = dfa3.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(3);}

			switch (alt3) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:284:8: charSet ( ws )?
					{
					dbg.location(284,8);
					pushFollow(FOLLOW_charSet_in_styleSheet109);
					charSet();
					state._fsp--;
					if (state.failed) return;dbg.location(284,16);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:284:16: ( ws )?
					int alt2=2;
					try { dbg.enterSubRule(2);
					try { dbg.enterDecision(2, decisionCanBacktrack[2]);

					int LA2_0 = input.LA(1);
					if ( (LA2_0==COMMENT||LA2_0==NL||LA2_0==WS) ) {
						alt2=1;
					}
					} finally {dbg.exitDecision(2);}

					switch (alt2) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:284:16: ws
							{
							dbg.location(284,16);
							pushFollow(FOLLOW_ws_in_styleSheet111);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(2);}

					}
					break;

			}
			} finally {dbg.exitSubRule(3);}
			dbg.location(285,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:285:9: ( imports )?
			int alt4=2;
			try { dbg.enterSubRule(4);
			try { dbg.enterDecision(4, decisionCanBacktrack[4]);

			int LA4_0 = input.LA(1);
			if ( (LA4_0==IMPORT_SYM) ) {
				int LA4_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
					alt4=1;
				}
			}
			else if ( (LA4_0==SASS_FORWARD||LA4_0==SASS_USE) ) {
				alt4=1;
			}
			} finally {dbg.exitDecision(4);}

			switch (alt4) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:285:9: imports
					{
					dbg.location(285,9);
					pushFollow(FOLLOW_imports_in_styleSheet125);
					imports();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(4);}
			dbg.location(286,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:9: ( namespaces )?
			int alt5=2;
			try { dbg.enterSubRule(5);
			try { dbg.enterDecision(5, decisionCanBacktrack[5]);

			try {
				isCyclicDecision = true;
				alt5 = dfa5.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(5);}

			switch (alt5) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:286:9: namespaces
					{
					dbg.location(286,9);
					pushFollow(FOLLOW_namespaces_in_styleSheet136);
					namespaces();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(5);}
			dbg.location(287,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:9: ( body )?
			int alt6=2;
			try { dbg.enterSubRule(6);
			try { dbg.enterDecision(6, decisionCanBacktrack[6]);

			int LA6_0 = input.LA(1);
			if ( ((LA6_0 >= AT_IDENT && LA6_0 <= AT_SIGN)||(LA6_0 >= BOTTOMCENTER_SYM && LA6_0 <= BOTTOMRIGHT_SYM)||(LA6_0 >= CHARSET_SYM && LA6_0 <= COLON)||LA6_0==COUNTER_STYLE_SYM||(LA6_0 >= DCOLON && LA6_0 <= DOT)||LA6_0==FONT_FACE_SYM||(LA6_0 >= GEN && LA6_0 <= GREATER)||(LA6_0 >= HASH && LA6_0 <= HASH_SYMBOL)||LA6_0==IDENT||LA6_0==IMPORT_SYM||(LA6_0 >= LBRACKET && LA6_0 <= LEFTTOP_SYM)||LA6_0==LESS_AND||(LA6_0 >= MEDIA_SYM && LA6_0 <= MOZ_DOCUMENT_SYM)||LA6_0==NAMESPACE_SYM||LA6_0==PAGE_SYM||(LA6_0 >= PIPE && LA6_0 <= PLUS)||(LA6_0 >= RIGHTBOTTOM_SYM && LA6_0 <= RIGHTTOP_SYM)||(LA6_0 >= SASS_AT_ROOT && LA6_0 <= SASS_DEBUG)||(LA6_0 >= SASS_EACH && LA6_0 <= SASS_ELSE)||(LA6_0 >= SASS_EXTEND && LA6_0 <= SASS_FOR)||LA6_0==SASS_FUNCTION||(LA6_0 >= SASS_IF && LA6_0 <= SASS_MIXIN)||LA6_0==SASS_RETURN||(LA6_0 >= SASS_VAR && LA6_0 <= SEMI)||LA6_0==STAR||LA6_0==SUPPORTS_SYM||LA6_0==TILDE||(LA6_0 >= TOPCENTER_SYM && LA6_0 <= TOPRIGHT_SYM)||LA6_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt6=1;
			}
			} finally {dbg.exitDecision(6);}

			switch (alt6) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:287:9: body
					{
					dbg.location(287,9);
					pushFollow(FOLLOW_body_in_styleSheet147);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(6);}
			dbg.location(288,6);
			match(input,EOF,FOLLOW_EOF_in_styleSheet155); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(289, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "styleSheet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "styleSheet"



	// $ANTLR start "namespaces"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:291:1: namespaces : ( namespace ( ws )? )+ ;
	public final void namespaces() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespaces");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(291, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:292:2: ( ( namespace ( ws )? )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:293:2: ( namespace ( ws )? )+
			{
			dbg.location(293,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:293:2: ( namespace ( ws )? )+
			int cnt8=0;
			try { dbg.enterSubRule(8);

			loop8:
			while (true) {
				int alt8=2;
				try { dbg.enterDecision(8, decisionCanBacktrack[8]);

				try {
					isCyclicDecision = true;
					alt8 = dfa8.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(8);}

				switch (alt8) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:293:4: namespace ( ws )?
					{
					dbg.location(293,4);
					pushFollow(FOLLOW_namespace_in_namespaces172);
					namespace();
					state._fsp--;
					if (state.failed) return;dbg.location(293,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:293:14: ( ws )?
					int alt7=2;
					try { dbg.enterSubRule(7);
					try { dbg.enterDecision(7, decisionCanBacktrack[7]);

					int LA7_0 = input.LA(1);
					if ( (LA7_0==COMMENT||LA7_0==NL||LA7_0==WS) ) {
						alt7=1;
					}
					} finally {dbg.exitDecision(7);}

					switch (alt7) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:293:14: ws
							{
							dbg.location(293,14);
							pushFollow(FOLLOW_ws_in_namespaces174);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(7);}

					}
					break;

				default :
					if ( cnt8 >= 1 ) break loop8;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(8, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt8++;
			}
			} finally {dbg.exitSubRule(8);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(294, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespaces");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespaces"



	// $ANTLR start "namespace"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:296:1: namespace : NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI ;
	public final void namespace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(296, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:3: ( NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:5: NAMESPACE_SYM ( ws )? ( namespacePrefixName ( ws )? )? resourceIdentifier ( ws )? SEMI
			{
			dbg.location(297,5);
			match(input,NAMESPACE_SYM,FOLLOW_NAMESPACE_SYM_in_namespace190); if (state.failed) return;dbg.location(297,19);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:19: ( ws )?
			int alt9=2;
			try { dbg.enterSubRule(9);
			try { dbg.enterDecision(9, decisionCanBacktrack[9]);

			int LA9_0 = input.LA(1);
			if ( (LA9_0==COMMENT||LA9_0==NL||LA9_0==WS) ) {
				alt9=1;
			}
			} finally {dbg.exitDecision(9);}

			switch (alt9) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:19: ws
					{
					dbg.location(297,19);
					pushFollow(FOLLOW_ws_in_namespace192);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(9);}
			dbg.location(297,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:23: ( namespacePrefixName ( ws )? )?
			int alt11=2;
			try { dbg.enterSubRule(11);
			try { dbg.enterDecision(11, decisionCanBacktrack[11]);

			int LA11_0 = input.LA(1);
			if ( (LA11_0==IDENT) ) {
				alt11=1;
			}
			} finally {dbg.exitDecision(11);}

			switch (alt11) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:24: namespacePrefixName ( ws )?
					{
					dbg.location(297,24);
					pushFollow(FOLLOW_namespacePrefixName_in_namespace196);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;dbg.location(297,44);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:44: ( ws )?
					int alt10=2;
					try { dbg.enterSubRule(10);
					try { dbg.enterDecision(10, decisionCanBacktrack[10]);

					int LA10_0 = input.LA(1);
					if ( (LA10_0==COMMENT||LA10_0==NL||LA10_0==WS) ) {
						alt10=1;
					}
					} finally {dbg.exitDecision(10);}

					switch (alt10) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:44: ws
							{
							dbg.location(297,44);
							pushFollow(FOLLOW_ws_in_namespace198);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(10);}

					}
					break;

			}
			} finally {dbg.exitSubRule(11);}
			dbg.location(297,50);
			pushFollow(FOLLOW_resourceIdentifier_in_namespace203);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(297,69);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:69: ( ws )?
			int alt12=2;
			try { dbg.enterSubRule(12);
			try { dbg.enterDecision(12, decisionCanBacktrack[12]);

			int LA12_0 = input.LA(1);
			if ( (LA12_0==COMMENT||LA12_0==NL||LA12_0==WS) ) {
				alt12=1;
			}
			} finally {dbg.exitDecision(12);}

			switch (alt12) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:297:69: ws
					{
					dbg.location(297,69);
					pushFollow(FOLLOW_ws_in_namespace205);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(12);}
			dbg.location(297,73);
			match(input,SEMI,FOLLOW_SEMI_in_namespace208); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(298, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespace"



	// $ANTLR start "namespacePrefixName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:300:1: namespacePrefixName : IDENT ;
	public final void namespacePrefixName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefixName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(300, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:3: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:301:5: IDENT
			{
			dbg.location(301,5);
			match(input,IDENT,FOLLOW_IDENT_in_namespacePrefixName221); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(302, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefixName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefixName"



	// $ANTLR start "resourceIdentifier"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:304:1: resourceIdentifier : ( STRING | URI );
	public final void resourceIdentifier() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "resourceIdentifier");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(304, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:305:3: ( STRING | URI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(305,3);
			if ( input.LA(1)==STRING||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(306, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "resourceIdentifier");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "resourceIdentifier"



	// $ANTLR start "charSet"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:308:1: charSet : CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI ;
	public final void charSet() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSet");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(308, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:5: ( CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:9: CHARSET_SYM ( ws )? charSetValue ( ws )? SEMI
			{
			dbg.location(309,9);
			match(input,CHARSET_SYM,FOLLOW_CHARSET_SYM_in_charSet255); if (state.failed) return;dbg.location(309,21);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:21: ( ws )?
			int alt13=2;
			try { dbg.enterSubRule(13);
			try { dbg.enterDecision(13, decisionCanBacktrack[13]);

			int LA13_0 = input.LA(1);
			if ( (LA13_0==COMMENT||LA13_0==NL||LA13_0==WS) ) {
				alt13=1;
			}
			} finally {dbg.exitDecision(13);}

			switch (alt13) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:21: ws
					{
					dbg.location(309,21);
					pushFollow(FOLLOW_ws_in_charSet257);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(13);}
			dbg.location(309,25);
			pushFollow(FOLLOW_charSetValue_in_charSet260);
			charSetValue();
			state._fsp--;
			if (state.failed) return;dbg.location(309,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:38: ( ws )?
			int alt14=2;
			try { dbg.enterSubRule(14);
			try { dbg.enterDecision(14, decisionCanBacktrack[14]);

			int LA14_0 = input.LA(1);
			if ( (LA14_0==COMMENT||LA14_0==NL||LA14_0==WS) ) {
				alt14=1;
			}
			} finally {dbg.exitDecision(14);}

			switch (alt14) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:309:38: ws
					{
					dbg.location(309,38);
					pushFollow(FOLLOW_ws_in_charSet262);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(14);}
			dbg.location(309,42);
			match(input,SEMI,FOLLOW_SEMI_in_charSet265); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(310, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSet");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSet"



	// $ANTLR start "charSetValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:312:1: charSetValue : STRING ;
	public final void charSetValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "charSetValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(312, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:2: ( STRING )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:313:4: STRING
			{
			dbg.location(313,4);
			match(input,STRING,FOLLOW_STRING_in_charSetValue279); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(314, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "charSetValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "charSetValue"



	// $ANTLR start "imports"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:316:1: imports : ( ( importItem ( ws )? SEMI ( ws )? ) | ( sass_use ( ws )? SEMI ( ws )? ) | ( sass_forward ( ws )? SEMI ( ws )? ) )+ ;
	public final void imports() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "imports");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(316, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:317:2: ( ( ( importItem ( ws )? SEMI ( ws )? ) | ( sass_use ( ws )? SEMI ( ws )? ) | ( sass_forward ( ws )? SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:318:2: ( ( importItem ( ws )? SEMI ( ws )? ) | ( sass_use ( ws )? SEMI ( ws )? ) | ( sass_forward ( ws )? SEMI ( ws )? ) )+
			{
			dbg.location(318,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:318:2: ( ( importItem ( ws )? SEMI ( ws )? ) | ( sass_use ( ws )? SEMI ( ws )? ) | ( sass_forward ( ws )? SEMI ( ws )? ) )+
			int cnt21=0;
			try { dbg.enterSubRule(21);

			loop21:
			while (true) {
				int alt21=4;
				try { dbg.enterDecision(21, decisionCanBacktrack[21]);

				switch ( input.LA(1) ) {
				case IMPORT_SYM:
					{
					int LA21_29 = input.LA(2);
					if ( (!(evalPredicate(((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))),""))) ) {
						alt21=1;
					}

					}
					break;
				case SASS_USE:
					{
					alt21=2;
					}
					break;
				case SASS_FORWARD:
					{
					alt21=3;
					}
					break;
				}
				} finally {dbg.exitDecision(21);}

				switch (alt21) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:319:13: ( importItem ( ws )? SEMI ( ws )? )
					{
					dbg.location(319,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:319:13: ( importItem ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:319:15: importItem ( ws )? SEMI ( ws )?
					{
					dbg.location(319,15);
					pushFollow(FOLLOW_importItem_in_imports307);
					importItem();
					state._fsp--;
					if (state.failed) return;dbg.location(319,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:319:26: ( ws )?
					int alt15=2;
					try { dbg.enterSubRule(15);
					try { dbg.enterDecision(15, decisionCanBacktrack[15]);

					int LA15_0 = input.LA(1);
					if ( (LA15_0==COMMENT||LA15_0==NL||LA15_0==WS) ) {
						alt15=1;
					}
					} finally {dbg.exitDecision(15);}

					switch (alt15) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:319:26: ws
							{
							dbg.location(319,26);
							pushFollow(FOLLOW_ws_in_imports309);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(15);}
					dbg.location(319,30);
					match(input,SEMI,FOLLOW_SEMI_in_imports312); if (state.failed) return;dbg.location(319,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:319:35: ( ws )?
					int alt16=2;
					try { dbg.enterSubRule(16);
					try { dbg.enterDecision(16, decisionCanBacktrack[16]);

					int LA16_0 = input.LA(1);
					if ( (LA16_0==COMMENT||LA16_0==NL||LA16_0==WS) ) {
						alt16=1;
					}
					} finally {dbg.exitDecision(16);}

					switch (alt16) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:319:35: ws
							{
							dbg.location(319,35);
							pushFollow(FOLLOW_ws_in_imports314);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(16);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:13: ( sass_use ( ws )? SEMI ( ws )? )
					{
					dbg.location(321,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:13: ( sass_use ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:15: sass_use ( ws )? SEMI ( ws )?
					{
					dbg.location(321,15);
					pushFollow(FOLLOW_sass_use_in_imports347);
					sass_use();
					state._fsp--;
					if (state.failed) return;dbg.location(321,24);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:24: ( ws )?
					int alt17=2;
					try { dbg.enterSubRule(17);
					try { dbg.enterDecision(17, decisionCanBacktrack[17]);

					int LA17_0 = input.LA(1);
					if ( (LA17_0==COMMENT||LA17_0==NL||LA17_0==WS) ) {
						alt17=1;
					}
					} finally {dbg.exitDecision(17);}

					switch (alt17) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:24: ws
							{
							dbg.location(321,24);
							pushFollow(FOLLOW_ws_in_imports349);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(17);}
					dbg.location(321,28);
					match(input,SEMI,FOLLOW_SEMI_in_imports352); if (state.failed) return;dbg.location(321,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:33: ( ws )?
					int alt18=2;
					try { dbg.enterSubRule(18);
					try { dbg.enterDecision(18, decisionCanBacktrack[18]);

					int LA18_0 = input.LA(1);
					if ( (LA18_0==COMMENT||LA18_0==NL||LA18_0==WS) ) {
						alt18=1;
					}
					} finally {dbg.exitDecision(18);}

					switch (alt18) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:321:33: ws
							{
							dbg.location(321,33);
							pushFollow(FOLLOW_ws_in_imports354);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(18);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:13: ( sass_forward ( ws )? SEMI ( ws )? )
					{
					dbg.location(323,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:13: ( sass_forward ( ws )? SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:15: sass_forward ( ws )? SEMI ( ws )?
					{
					dbg.location(323,15);
					pushFollow(FOLLOW_sass_forward_in_imports387);
					sass_forward();
					state._fsp--;
					if (state.failed) return;dbg.location(323,28);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:28: ( ws )?
					int alt19=2;
					try { dbg.enterSubRule(19);
					try { dbg.enterDecision(19, decisionCanBacktrack[19]);

					int LA19_0 = input.LA(1);
					if ( (LA19_0==COMMENT||LA19_0==NL||LA19_0==WS) ) {
						alt19=1;
					}
					} finally {dbg.exitDecision(19);}

					switch (alt19) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:28: ws
							{
							dbg.location(323,28);
							pushFollow(FOLLOW_ws_in_imports389);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(19);}
					dbg.location(323,32);
					match(input,SEMI,FOLLOW_SEMI_in_imports392); if (state.failed) return;dbg.location(323,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:37: ( ws )?
					int alt20=2;
					try { dbg.enterSubRule(20);
					try { dbg.enterDecision(20, decisionCanBacktrack[20]);

					int LA20_0 = input.LA(1);
					if ( (LA20_0==COMMENT||LA20_0==NL||LA20_0==WS) ) {
						alt20=1;
					}
					} finally {dbg.exitDecision(20);}

					switch (alt20) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:323:37: ws
							{
							dbg.location(323,37);
							pushFollow(FOLLOW_ws_in_imports394);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(20);}

					}

					}
					break;

				default :
					if ( cnt21 >= 1 ) break loop21;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(21, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt21++;
			}
			} finally {dbg.exitSubRule(21);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(325, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "imports");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "imports"



	// $ANTLR start "importItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:327:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );
	public final void importItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "importItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(327, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:328:5: ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? )
			int alt36=3;
			try { dbg.enterDecision(36, decisionCanBacktrack[36]);

			try {
				isCyclicDecision = true;
				alt36 = dfa36.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(36);}

			switch (alt36) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:9: IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(329,9);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem430); if (state.failed) return;dbg.location(329,20);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:20: ( ws )?
					int alt22=2;
					try { dbg.enterSubRule(22);
					try { dbg.enterDecision(22, decisionCanBacktrack[22]);

					int LA22_0 = input.LA(1);
					if ( (LA22_0==COMMENT||LA22_0==NL||LA22_0==WS) ) {
						alt22=1;
					}
					} finally {dbg.exitDecision(22);}

					switch (alt22) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:20: ws
							{
							dbg.location(329,20);
							pushFollow(FOLLOW_ws_in_importItem432);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(22);}
					dbg.location(329,24);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem435);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(329,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:43: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt24=2;
					try { dbg.enterSubRule(24);
					try { dbg.enterDecision(24, decisionCanBacktrack[24]);

					int LA24_0 = input.LA(1);
					if ( (LA24_0==COMMENT||LA24_0==NL||LA24_0==WS) ) {
						int LA24_1 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==IDENT) ) {
						int LA24_2 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==NOT) && (synpred1_Css3())) {
						alt24=1;
					}
					else if ( (LA24_0==GEN) ) {
						int LA24_4 = input.LA(2);
						if ( (synpred1_Css3()) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==HASH_SYMBOL) ) {
						int LA24_5 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==LPAREN) && (synpred1_Css3())) {
						alt24=1;
					}
					else if ( (LA24_0==SASS_MIXIN) ) {
						int LA24_7 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_VAR) ) {
						int LA24_8 = input.LA(2);
						if ( (((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==AT_IDENT) ) {
						int LA24_14 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_INCLUDE) ) {
						int LA24_15 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_AT_ROOT) ) {
						int LA24_16 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_DEBUG||LA24_0==SASS_WARN) ) {
						int LA24_17 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_IF) ) {
						int LA24_28 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_FOR) ) {
						int LA24_29 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_EACH) ) {
						int LA24_30 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_WHILE) ) {
						int LA24_31 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_CONTENT) ) {
						int LA24_32 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==IMPORT_SYM) ) {
						int LA24_33 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==PAGE_SYM) ) {
						int LA24_34 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==FONT_FACE_SYM) ) {
						int LA24_35 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==MOZ_DOCUMENT_SYM) ) {
						int LA24_36 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA24_37 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==MEDIA_SYM) ) {
						int LA24_38 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_EXTEND) ) {
						int LA24_39 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==COUNTER_STYLE_SYM) ) {
						int LA24_41 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( (LA24_0==SASS_FUNCTION) ) {
						int LA24_43 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					else if ( ((LA24_0 >= BOTTOMCENTER_SYM && LA24_0 <= BOTTOMRIGHT_SYM)||LA24_0==CHARSET_SYM||(LA24_0 >= LEFTBOTTOM_SYM && LA24_0 <= LEFTTOP_SYM)||LA24_0==NAMESPACE_SYM||(LA24_0 >= RIGHTBOTTOM_SYM && LA24_0 <= RIGHTTOP_SYM)||LA24_0==SASS_ELSE||LA24_0==SASS_RETURN||(LA24_0 >= TOPCENTER_SYM && LA24_0 <= TOPRIGHT_SYM)) ) {
						int LA24_44 = input.LA(2);
						if ( ((synpred1_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt24=1;
						}
					}
					} finally {dbg.exitDecision(24);}

					switch (alt24) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:44: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(329,66);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:66: ( ws )?
							int alt23=2;
							try { dbg.enterSubRule(23);
							try { dbg.enterDecision(23, decisionCanBacktrack[23]);

							int LA23_0 = input.LA(1);
							if ( (LA23_0==COMMENT||LA23_0==NL||LA23_0==WS) ) {
								alt23=1;
							}
							} finally {dbg.exitDecision(23);}

							switch (alt23) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:66: ws
									{
									dbg.location(329,66);
									pushFollow(FOLLOW_ws_in_importItem445);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(23);}
							dbg.location(329,70);
							pushFollow(FOLLOW_mediaQueryList_in_importItem448);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(24);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:9: {...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(332,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isScssSource()");
					}dbg.location(332,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem481); if (state.failed) return;dbg.location(332,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:38: ( ws )?
					int alt25=2;
					try { dbg.enterSubRule(25);
					try { dbg.enterDecision(25, decisionCanBacktrack[25]);

					int LA25_0 = input.LA(1);
					if ( (LA25_0==COMMENT||LA25_0==NL||LA25_0==WS) ) {
						alt25=1;
					}
					} finally {dbg.exitDecision(25);}

					switch (alt25) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:38: ws
							{
							dbg.location(332,38);
							pushFollow(FOLLOW_ws_in_importItem483);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(25);}
					dbg.location(332,42);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem486);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(332,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*
					try { dbg.enterSubRule(28);

					loop28:
					while (true) {
						int alt28=2;
						try { dbg.enterDecision(28, decisionCanBacktrack[28]);

						try {
							isCyclicDecision = true;
							alt28 = dfa28.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(28);}

						switch (alt28) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:62: ( ws )? COMMA ( ws )? resourceIdentifier
							{
							dbg.location(332,62);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:62: ( ws )?
							int alt26=2;
							try { dbg.enterSubRule(26);
							try { dbg.enterDecision(26, decisionCanBacktrack[26]);

							int LA26_0 = input.LA(1);
							if ( (LA26_0==COMMENT||LA26_0==NL||LA26_0==WS) ) {
								alt26=1;
							}
							} finally {dbg.exitDecision(26);}

							switch (alt26) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:62: ws
									{
									dbg.location(332,62);
									pushFollow(FOLLOW_ws_in_importItem489);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(26);}
							dbg.location(332,66);
							match(input,COMMA,FOLLOW_COMMA_in_importItem492); if (state.failed) return;dbg.location(332,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:72: ( ws )?
							int alt27=2;
							try { dbg.enterSubRule(27);
							try { dbg.enterDecision(27, decisionCanBacktrack[27]);

							int LA27_0 = input.LA(1);
							if ( (LA27_0==COMMENT||LA27_0==NL||LA27_0==WS) ) {
								alt27=1;
							}
							} finally {dbg.exitDecision(27);}

							switch (alt27) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:72: ws
									{
									dbg.location(332,72);
									pushFollow(FOLLOW_ws_in_importItem494);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(27);}
							dbg.location(332,76);
							pushFollow(FOLLOW_resourceIdentifier_in_importItem497);
							resourceIdentifier();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop28;
						}
					}
					} finally {dbg.exitSubRule(28);}
					dbg.location(332,97);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:97: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt30=2;
					try { dbg.enterSubRule(30);
					try { dbg.enterDecision(30, decisionCanBacktrack[30]);

					int LA30_0 = input.LA(1);
					if ( (LA30_0==COMMENT||LA30_0==NL||LA30_0==WS) ) {
						int LA30_1 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==IDENT) ) {
						int LA30_2 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==NOT) && (synpred2_Css3())) {
						alt30=1;
					}
					else if ( (LA30_0==GEN) ) {
						int LA30_4 = input.LA(2);
						if ( (synpred2_Css3()) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==HASH_SYMBOL) ) {
						int LA30_5 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==LPAREN) && (synpred2_Css3())) {
						alt30=1;
					}
					else if ( (LA30_0==SASS_MIXIN) ) {
						int LA30_7 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_VAR) ) {
						int LA30_8 = input.LA(2);
						if ( (((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==AT_IDENT) ) {
						int LA30_14 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_INCLUDE) ) {
						int LA30_15 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_AT_ROOT) ) {
						int LA30_16 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_DEBUG||LA30_0==SASS_WARN) ) {
						int LA30_17 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_IF) ) {
						int LA30_28 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_FOR) ) {
						int LA30_29 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_EACH) ) {
						int LA30_30 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_WHILE) ) {
						int LA30_31 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_CONTENT) ) {
						int LA30_32 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==IMPORT_SYM) ) {
						int LA30_33 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==PAGE_SYM) ) {
						int LA30_34 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==FONT_FACE_SYM) ) {
						int LA30_35 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==MOZ_DOCUMENT_SYM) ) {
						int LA30_36 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA30_37 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==MEDIA_SYM) ) {
						int LA30_38 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_EXTEND) ) {
						int LA30_39 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==COUNTER_STYLE_SYM) ) {
						int LA30_41 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( (LA30_0==SASS_FUNCTION) ) {
						int LA30_43 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					else if ( ((LA30_0 >= BOTTOMCENTER_SYM && LA30_0 <= BOTTOMRIGHT_SYM)||LA30_0==CHARSET_SYM||(LA30_0 >= LEFTBOTTOM_SYM && LA30_0 <= LEFTTOP_SYM)||LA30_0==NAMESPACE_SYM||(LA30_0 >= RIGHTBOTTOM_SYM && LA30_0 <= RIGHTTOP_SYM)||LA30_0==SASS_ELSE||LA30_0==SASS_RETURN||(LA30_0 >= TOPCENTER_SYM && LA30_0 <= TOPRIGHT_SYM)) ) {
						int LA30_44 = input.LA(2);
						if ( ((synpred2_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
							alt30=1;
						}
					}
					} finally {dbg.exitDecision(30);}

					switch (alt30) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:98: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(332,120);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:120: ( ws )?
							int alt29=2;
							try { dbg.enterSubRule(29);
							try { dbg.enterDecision(29, decisionCanBacktrack[29]);

							int LA29_0 = input.LA(1);
							if ( (LA29_0==COMMENT||LA29_0==NL||LA29_0==WS) ) {
								alt29=1;
							}
							} finally {dbg.exitDecision(29);}

							switch (alt29) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:120: ws
									{
									dbg.location(332,120);
									pushFollow(FOLLOW_ws_in_importItem509);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(29);}
							dbg.location(332,124);
							pushFollow(FOLLOW_mediaQueryList_in_importItem512);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(30);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:9: {...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					{
					dbg.location(334,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "importItem", "isLessSource()");
					}dbg.location(334,27);
					match(input,IMPORT_SYM,FOLLOW_IMPORT_SYM_in_importItem536); if (state.failed) return;dbg.location(334,38);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:38: ( ws )?
					int alt31=2;
					try { dbg.enterSubRule(31);
					try { dbg.enterDecision(31, decisionCanBacktrack[31]);

					int LA31_0 = input.LA(1);
					if ( (LA31_0==COMMENT||LA31_0==NL||LA31_0==WS) ) {
						alt31=1;
					}
					} finally {dbg.exitDecision(31);}

					switch (alt31) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:38: ws
							{
							dbg.location(334,38);
							pushFollow(FOLLOW_ws_in_importItem538);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(31);}
					dbg.location(334,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:42: ( LPAREN less_import_types RPAREN ( ws )? )?
					int alt33=2;
					try { dbg.enterSubRule(33);
					try { dbg.enterDecision(33, decisionCanBacktrack[33]);

					int LA33_0 = input.LA(1);
					if ( (LA33_0==LPAREN) ) {
						alt33=1;
					}
					} finally {dbg.exitDecision(33);}

					switch (alt33) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:43: LPAREN less_import_types RPAREN ( ws )?
							{
							dbg.location(334,43);
							match(input,LPAREN,FOLLOW_LPAREN_in_importItem542); if (state.failed) return;dbg.location(334,50);
							pushFollow(FOLLOW_less_import_types_in_importItem544);
							less_import_types();
							state._fsp--;
							if (state.failed) return;dbg.location(334,68);
							match(input,RPAREN,FOLLOW_RPAREN_in_importItem546); if (state.failed) return;dbg.location(334,75);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:75: ( ws )?
							int alt32=2;
							try { dbg.enterSubRule(32);
							try { dbg.enterDecision(32, decisionCanBacktrack[32]);

							int LA32_0 = input.LA(1);
							if ( (LA32_0==COMMENT||LA32_0==NL||LA32_0==WS) ) {
								alt32=1;
							}
							} finally {dbg.exitDecision(32);}

							switch (alt32) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:75: ws
									{
									dbg.location(334,75);
									pushFollow(FOLLOW_ws_in_importItem548);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(32);}

							}
							break;

					}
					} finally {dbg.exitSubRule(33);}
					dbg.location(334,81);
					pushFollow(FOLLOW_resourceIdentifier_in_importItem553);
					resourceIdentifier();
					state._fsp--;
					if (state.failed) return;dbg.location(334,100);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:100: ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )?
					int alt35=2;
					try { dbg.enterSubRule(35);
					try { dbg.enterDecision(35, decisionCanBacktrack[35]);

					int LA35_0 = input.LA(1);
					if ( (LA35_0==COMMENT||LA35_0==NL||LA35_0==WS) ) {
						int LA35_1 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==IDENT) ) {
						int LA35_2 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==NOT) && (synpred3_Css3())) {
						alt35=1;
					}
					else if ( (LA35_0==GEN) ) {
						int LA35_4 = input.LA(2);
						if ( (synpred3_Css3()) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==HASH_SYMBOL) ) {
						int LA35_5 = input.LA(2);
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==LPAREN) && (synpred3_Css3())) {
						alt35=1;
					}
					else if ( (LA35_0==SASS_MIXIN) ) {
						int LA35_7 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_VAR) ) {
						int LA35_8 = input.LA(2);
						if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==AT_IDENT) ) {
						int LA35_14 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_INCLUDE) ) {
						int LA35_15 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_AT_ROOT) ) {
						int LA35_16 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_DEBUG||LA35_0==SASS_WARN) ) {
						int LA35_17 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_IF) ) {
						int LA35_28 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_FOR) ) {
						int LA35_29 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_EACH) ) {
						int LA35_30 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_WHILE) ) {
						int LA35_31 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_CONTENT) ) {
						int LA35_32 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==IMPORT_SYM) ) {
						int LA35_33 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==PAGE_SYM) ) {
						int LA35_34 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==FONT_FACE_SYM) ) {
						int LA35_35 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==MOZ_DOCUMENT_SYM) ) {
						int LA35_36 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==WEBKIT_KEYFRAMES_SYM) ) {
						int LA35_37 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==MEDIA_SYM) ) {
						int LA35_38 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_EXTEND) ) {
						int LA35_39 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==COUNTER_STYLE_SYM) ) {
						int LA35_41 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( (LA35_0==SASS_FUNCTION) ) {
						int LA35_43 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					else if ( ((LA35_0 >= BOTTOMCENTER_SYM && LA35_0 <= BOTTOMRIGHT_SYM)||LA35_0==CHARSET_SYM||(LA35_0 >= LEFTBOTTOM_SYM && LA35_0 <= LEFTTOP_SYM)||LA35_0==NAMESPACE_SYM||(LA35_0 >= RIGHTBOTTOM_SYM && LA35_0 <= RIGHTTOP_SYM)||LA35_0==SASS_ELSE||LA35_0==SASS_RETURN||(LA35_0 >= TOPCENTER_SYM && LA35_0 <= TOPRIGHT_SYM)) ) {
						int LA35_44 = input.LA(2);
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred3_Css3())) ) {
							alt35=1;
						}
					}
					} finally {dbg.exitDecision(35);}

					switch (alt35) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:101: ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList
							{
							dbg.location(334,123);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:123: ( ws )?
							int alt34=2;
							try { dbg.enterSubRule(34);
							try { dbg.enterDecision(34, decisionCanBacktrack[34]);

							int LA34_0 = input.LA(1);
							if ( (LA34_0==COMMENT||LA34_0==NL||LA34_0==WS) ) {
								alt34=1;
							}
							} finally {dbg.exitDecision(34);}

							switch (alt34) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:123: ws
									{
									dbg.location(334,123);
									pushFollow(FOLLOW_ws_in_importItem563);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(34);}
							dbg.location(334,127);
							pushFollow(FOLLOW_mediaQueryList_in_importItem566);
							mediaQueryList();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(35);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(335, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "importItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "importItem"



	// $ANTLR start "sass_use"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:337:1: sass_use :{...}? SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? ;
	public final void sass_use() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(337, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:338:5: ({...}? SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:339:9: {...}? SASS_USE ws resourceIdentifier ( ws sass_use_as )? ( ws sass_use_with )?
			{
			dbg.location(339,9);
			if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use", "isScssSource()");
			}dbg.location(339,27);
			match(input,SASS_USE,FOLLOW_SASS_USE_in_sass_use595); if (state.failed) return;dbg.location(339,36);
			pushFollow(FOLLOW_ws_in_sass_use597);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(339,39);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_use599);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(339,58);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:339:58: ( ws sass_use_as )?
			int alt37=2;
			try { dbg.enterSubRule(37);
			try { dbg.enterDecision(37, decisionCanBacktrack[37]);

			try {
				isCyclicDecision = true;
				alt37 = dfa37.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(37);}

			switch (alt37) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:339:59: ws sass_use_as
					{
					dbg.location(339,59);
					pushFollow(FOLLOW_ws_in_sass_use602);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(339,62);
					pushFollow(FOLLOW_sass_use_as_in_sass_use604);
					sass_use_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(37);}
			dbg.location(339,76);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:339:76: ( ws sass_use_with )?
			int alt38=2;
			try { dbg.enterSubRule(38);
			try { dbg.enterDecision(38, decisionCanBacktrack[38]);

			try {
				isCyclicDecision = true;
				alt38 = dfa38.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(38);}

			switch (alt38) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:339:77: ws sass_use_with
					{
					dbg.location(339,77);
					pushFollow(FOLLOW_ws_in_sass_use609);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(339,80);
					pushFollow(FOLLOW_sass_use_with_in_sass_use611);
					sass_use_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(38);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(340, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use"



	// $ANTLR start "sass_use_as"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:342:1: sass_use_as :{...}? IDENT ws IDENT ;
	public final void sass_use_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(342, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:343:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:344:5: {...}? IDENT ws IDENT
			{
			dbg.location(344,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_as", "tokenNameEquals(\"as\")");
			}dbg.location(344,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as636); if (state.failed) return;dbg.location(344,36);
			pushFollow(FOLLOW_ws_in_sass_use_as638);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(344,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_as640); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(345, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_as"



	// $ANTLR start "sass_use_with"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:347:1: sass_use_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN ;
	public final void sass_use_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(347, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:348:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_use_with_declaration ( ( ws )? COMMA ( ws )? sass_use_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(349,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_use_with", "tokenNameEquals(\"with\")");
			}dbg.location(349,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_use_with663); if (state.failed) return;dbg.location(349,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:38: ( ws )?
			int alt39=2;
			try { dbg.enterSubRule(39);
			try { dbg.enterDecision(39, decisionCanBacktrack[39]);

			int LA39_0 = input.LA(1);
			if ( (LA39_0==COMMENT||LA39_0==NL||LA39_0==WS) ) {
				alt39=1;
			}
			} finally {dbg.exitDecision(39);}

			switch (alt39) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:38: ws
					{
					dbg.location(349,38);
					pushFollow(FOLLOW_ws_in_sass_use_with665);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(39);}
			dbg.location(349,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_use_with668); if (state.failed) return;dbg.location(349,49);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:49: ( ws )?
			int alt40=2;
			try { dbg.enterSubRule(40);
			try { dbg.enterDecision(40, decisionCanBacktrack[40]);

			int LA40_0 = input.LA(1);
			if ( (LA40_0==COMMENT||LA40_0==NL||LA40_0==WS) ) {
				alt40=1;
			}
			} finally {dbg.exitDecision(40);}

			switch (alt40) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:49: ws
					{
					dbg.location(349,49);
					pushFollow(FOLLOW_ws_in_sass_use_with670);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(40);}
			dbg.location(349,53);
			pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with673);
			sass_use_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(349,80);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*
			try { dbg.enterSubRule(43);

			loop43:
			while (true) {
				int alt43=2;
				try { dbg.enterDecision(43, decisionCanBacktrack[43]);

				try {
					isCyclicDecision = true;
					alt43 = dfa43.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(43);}

				switch (alt43) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:81: ( ws )? COMMA ( ws )? sass_use_with_declaration
					{
					dbg.location(349,81);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:81: ( ws )?
					int alt41=2;
					try { dbg.enterSubRule(41);
					try { dbg.enterDecision(41, decisionCanBacktrack[41]);

					int LA41_0 = input.LA(1);
					if ( (LA41_0==COMMENT||LA41_0==NL||LA41_0==WS) ) {
						alt41=1;
					}
					} finally {dbg.exitDecision(41);}

					switch (alt41) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:81: ws
							{
							dbg.location(349,81);
							pushFollow(FOLLOW_ws_in_sass_use_with677);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(41);}
					dbg.location(349,85);
					match(input,COMMA,FOLLOW_COMMA_in_sass_use_with680); if (state.failed) return;dbg.location(349,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:91: ( ws )?
					int alt42=2;
					try { dbg.enterSubRule(42);
					try { dbg.enterDecision(42, decisionCanBacktrack[42]);

					int LA42_0 = input.LA(1);
					if ( (LA42_0==COMMENT||LA42_0==NL||LA42_0==WS) ) {
						alt42=1;
					}
					} finally {dbg.exitDecision(42);}

					switch (alt42) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:91: ws
							{
							dbg.location(349,91);
							pushFollow(FOLLOW_ws_in_sass_use_with682);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(42);}
					dbg.location(349,95);
					pushFollow(FOLLOW_sass_use_with_declaration_in_sass_use_with685);
					sass_use_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop43;
				}
			}
			} finally {dbg.exitSubRule(43);}
			dbg.location(349,124);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:124: ( ws )?
			int alt44=2;
			try { dbg.enterSubRule(44);
			try { dbg.enterDecision(44, decisionCanBacktrack[44]);

			int LA44_0 = input.LA(1);
			if ( (LA44_0==COMMENT||LA44_0==NL||LA44_0==WS) ) {
				alt44=1;
			}
			} finally {dbg.exitDecision(44);}

			switch (alt44) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:349:124: ws
					{
					dbg.location(349,124);
					pushFollow(FOLLOW_ws_in_sass_use_with690);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(44);}
			dbg.location(349,128);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_use_with693); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(350, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with"



	// $ANTLR start "sass_use_with_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:352:1: sass_use_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_use_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_use_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(352, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:353:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(354,5);
			pushFollow(FOLLOW_cp_variable_in_sass_use_with_declaration714);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(354,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:17: ( ws )?
			int alt45=2;
			try { dbg.enterSubRule(45);
			try { dbg.enterDecision(45, decisionCanBacktrack[45]);

			int LA45_0 = input.LA(1);
			if ( (LA45_0==COMMENT||LA45_0==NL||LA45_0==WS) ) {
				alt45=1;
			}
			} finally {dbg.exitDecision(45);}

			switch (alt45) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:17: ws
					{
					dbg.location(354,17);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration716);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(45);}
			dbg.location(354,21);
			match(input,COLON,FOLLOW_COLON_in_sass_use_with_declaration719); if (state.failed) return;dbg.location(354,27);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:27: ( ws )?
			int alt46=2;
			try { dbg.enterSubRule(46);
			try { dbg.enterDecision(46, decisionCanBacktrack[46]);

			int LA46_0 = input.LA(1);
			if ( (LA46_0==COMMENT||LA46_0==NL||LA46_0==WS) ) {
				alt46=1;
			}
			} finally {dbg.exitDecision(46);}

			switch (alt46) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:354:27: ws
					{
					dbg.location(354,27);
					pushFollow(FOLLOW_ws_in_sass_use_with_declaration721);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(46);}
			dbg.location(354,31);
			pushFollow(FOLLOW_cp_expression_in_sass_use_with_declaration724);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(355, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_use_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_use_with_declaration"



	// $ANTLR start "sass_forward"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:358:1: sass_forward :{...}? SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? ;
	public final void sass_forward() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(358, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:359:5: ({...}? SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:9: {...}? SASS_FORWARD ws resourceIdentifier ( ws ( sass_forward_hide | sass_forward_show ) )? ({...}? ws sass_forward_as )? ({...}? ws sass_forward_with )?
			{
			dbg.location(360,9);
			if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward", "isScssSource()");
			}dbg.location(360,27);
			match(input,SASS_FORWARD,FOLLOW_SASS_FORWARD_in_sass_forward752); if (state.failed) return;dbg.location(360,40);
			pushFollow(FOLLOW_ws_in_sass_forward754);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(360,43);
			pushFollow(FOLLOW_resourceIdentifier_in_sass_forward756);
			resourceIdentifier();
			state._fsp--;
			if (state.failed) return;dbg.location(360,62);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:62: ( ws ( sass_forward_hide | sass_forward_show ) )?
			int alt48=2;
			try { dbg.enterSubRule(48);
			try { dbg.enterDecision(48, decisionCanBacktrack[48]);

			try {
				isCyclicDecision = true;
				alt48 = dfa48.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(48);}

			switch (alt48) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:64: ws ( sass_forward_hide | sass_forward_show )
					{
					dbg.location(360,64);
					pushFollow(FOLLOW_ws_in_sass_forward760);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(360,67);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:67: ( sass_forward_hide | sass_forward_show )
					int alt47=2;
					try { dbg.enterSubRule(47);
					try { dbg.enterDecision(47, decisionCanBacktrack[47]);

					try {
						isCyclicDecision = true;
						alt47 = dfa47.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(47);}

					switch (alt47) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:69: sass_forward_hide
							{
							dbg.location(360,69);
							pushFollow(FOLLOW_sass_forward_hide_in_sass_forward764);
							sass_forward_hide();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:90: sass_forward_show
							{
							dbg.location(360,90);
							pushFollow(FOLLOW_sass_forward_show_in_sass_forward769);
							sass_forward_show();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(47);}

					}
					break;

			}
			} finally {dbg.exitSubRule(48);}
			dbg.location(360,111);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:111: ({...}? ws sass_forward_as )?
			int alt49=2;
			try { dbg.enterSubRule(49);
			try { dbg.enterDecision(49, decisionCanBacktrack[49]);

			try {
				isCyclicDecision = true;
				alt49 = dfa49.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(49);}

			switch (alt49) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:112: {...}? ws sass_forward_as
					{
					dbg.location(360,112);
					if ( !(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"as\")");
					}dbg.location(360,138);
					pushFollow(FOLLOW_ws_in_sass_forward777);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(360,141);
					pushFollow(FOLLOW_sass_forward_as_in_sass_forward779);
					sass_forward_as();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(49);}
			dbg.location(360,159);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:159: ({...}? ws sass_forward_with )?
			int alt50=2;
			try { dbg.enterSubRule(50);
			try { dbg.enterDecision(50, decisionCanBacktrack[50]);

			try {
				isCyclicDecision = true;
				alt50 = dfa50.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(50);}

			switch (alt50) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:360:160: {...}? ws sass_forward_with
					{
					dbg.location(360,160);
					if ( !(evalPredicate(tokenNameEquals2("with"),"tokenNameEquals2(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "sass_forward", "tokenNameEquals2(\"with\")");
					}dbg.location(360,188);
					pushFollow(FOLLOW_ws_in_sass_forward786);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(360,191);
					pushFollow(FOLLOW_sass_forward_with_in_sass_forward788);
					sass_forward_with();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(50);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(361, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward"



	// $ANTLR start "sass_forward_as"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:363:1: sass_forward_as :{...}? IDENT ws IDENT ;
	public final void sass_forward_as() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_as");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(363, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:364:5: ({...}? IDENT ws IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:365:5: {...}? IDENT ws IDENT
			{
			dbg.location(365,5);
			if ( !(evalPredicate(tokenNameEquals("as"),"tokenNameEquals(\"as\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_as", "tokenNameEquals(\"as\")");
			}dbg.location(365,30);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as813); if (state.failed) return;dbg.location(365,36);
			pushFollow(FOLLOW_ws_in_sass_forward_as815);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(365,39);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_as817); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(366, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_as");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_as"



	// $ANTLR start "sass_forward_with"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:368:1: sass_forward_with :{...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN ;
	public final void sass_forward_with() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(368, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:369:5: ({...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:5: {...}? IDENT ( ws )? LPAREN ( ws )? sass_forward_with_declaration ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )* ( ws )? RPAREN
			{
			dbg.location(370,5);
			if ( !(evalPredicate(tokenNameEquals("with"),"tokenNameEquals(\"with\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_with", "tokenNameEquals(\"with\")");
			}dbg.location(370,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_with840); if (state.failed) return;dbg.location(370,38);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:38: ( ws )?
			int alt51=2;
			try { dbg.enterSubRule(51);
			try { dbg.enterDecision(51, decisionCanBacktrack[51]);

			int LA51_0 = input.LA(1);
			if ( (LA51_0==COMMENT||LA51_0==NL||LA51_0==WS) ) {
				alt51=1;
			}
			} finally {dbg.exitDecision(51);}

			switch (alt51) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:38: ws
					{
					dbg.location(370,38);
					pushFollow(FOLLOW_ws_in_sass_forward_with842);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(51);}
			dbg.location(370,42);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_forward_with845); if (state.failed) return;dbg.location(370,49);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:49: ( ws )?
			int alt52=2;
			try { dbg.enterSubRule(52);
			try { dbg.enterDecision(52, decisionCanBacktrack[52]);

			int LA52_0 = input.LA(1);
			if ( (LA52_0==COMMENT||LA52_0==NL||LA52_0==WS) ) {
				alt52=1;
			}
			} finally {dbg.exitDecision(52);}

			switch (alt52) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:49: ws
					{
					dbg.location(370,49);
					pushFollow(FOLLOW_ws_in_sass_forward_with847);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(52);}
			dbg.location(370,53);
			pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with850);
			sass_forward_with_declaration();
			state._fsp--;
			if (state.failed) return;dbg.location(370,84);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*
			try { dbg.enterSubRule(55);

			loop55:
			while (true) {
				int alt55=2;
				try { dbg.enterDecision(55, decisionCanBacktrack[55]);

				try {
					isCyclicDecision = true;
					alt55 = dfa55.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(55);}

				switch (alt55) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:85: ( ws )? COMMA ( ws )? sass_forward_with_declaration
					{
					dbg.location(370,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:85: ( ws )?
					int alt53=2;
					try { dbg.enterSubRule(53);
					try { dbg.enterDecision(53, decisionCanBacktrack[53]);

					int LA53_0 = input.LA(1);
					if ( (LA53_0==COMMENT||LA53_0==NL||LA53_0==WS) ) {
						alt53=1;
					}
					} finally {dbg.exitDecision(53);}

					switch (alt53) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:85: ws
							{
							dbg.location(370,85);
							pushFollow(FOLLOW_ws_in_sass_forward_with854);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(53);}
					dbg.location(370,89);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_with857); if (state.failed) return;dbg.location(370,95);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:95: ( ws )?
					int alt54=2;
					try { dbg.enterSubRule(54);
					try { dbg.enterDecision(54, decisionCanBacktrack[54]);

					int LA54_0 = input.LA(1);
					if ( (LA54_0==COMMENT||LA54_0==NL||LA54_0==WS) ) {
						alt54=1;
					}
					} finally {dbg.exitDecision(54);}

					switch (alt54) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:95: ws
							{
							dbg.location(370,95);
							pushFollow(FOLLOW_ws_in_sass_forward_with859);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(54);}
					dbg.location(370,99);
					pushFollow(FOLLOW_sass_forward_with_declaration_in_sass_forward_with862);
					sass_forward_with_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop55;
				}
			}
			} finally {dbg.exitSubRule(55);}
			dbg.location(370,132);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:132: ( ws )?
			int alt56=2;
			try { dbg.enterSubRule(56);
			try { dbg.enterDecision(56, decisionCanBacktrack[56]);

			int LA56_0 = input.LA(1);
			if ( (LA56_0==COMMENT||LA56_0==NL||LA56_0==WS) ) {
				alt56=1;
			}
			} finally {dbg.exitDecision(56);}

			switch (alt56) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:370:132: ws
					{
					dbg.location(370,132);
					pushFollow(FOLLOW_ws_in_sass_forward_with867);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(56);}
			dbg.location(370,136);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_forward_with870); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(371, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with"



	// $ANTLR start "sass_forward_with_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:373:1: sass_forward_with_declaration : cp_variable ( ws )? COLON ( ws )? cp_expression ;
	public final void sass_forward_with_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_with_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(373, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:374:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:5: cp_variable ( ws )? COLON ( ws )? cp_expression
			{
			dbg.location(375,5);
			pushFollow(FOLLOW_cp_variable_in_sass_forward_with_declaration891);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(375,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:17: ( ws )?
			int alt57=2;
			try { dbg.enterSubRule(57);
			try { dbg.enterDecision(57, decisionCanBacktrack[57]);

			int LA57_0 = input.LA(1);
			if ( (LA57_0==COMMENT||LA57_0==NL||LA57_0==WS) ) {
				alt57=1;
			}
			} finally {dbg.exitDecision(57);}

			switch (alt57) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:17: ws
					{
					dbg.location(375,17);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration893);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(57);}
			dbg.location(375,21);
			match(input,COLON,FOLLOW_COLON_in_sass_forward_with_declaration896); if (state.failed) return;dbg.location(375,27);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:27: ( ws )?
			int alt58=2;
			try { dbg.enterSubRule(58);
			try { dbg.enterDecision(58, decisionCanBacktrack[58]);

			int LA58_0 = input.LA(1);
			if ( (LA58_0==COMMENT||LA58_0==NL||LA58_0==WS) ) {
				alt58=1;
			}
			} finally {dbg.exitDecision(58);}

			switch (alt58) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:375:27: ws
					{
					dbg.location(375,27);
					pushFollow(FOLLOW_ws_in_sass_forward_with_declaration898);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(58);}
			dbg.location(375,31);
			pushFollow(FOLLOW_cp_expression_in_sass_forward_with_declaration901);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(376, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_with_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_with_declaration"



	// $ANTLR start "sass_forward_hide"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:378:1: sass_forward_hide :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_hide() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_hide");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(378, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:379:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(380,5);
			if ( !(evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_hide", "tokenNameEquals(\"hide\")");
			}dbg.location(380,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide924); if (state.failed) return;dbg.location(380,38);
			pushFollow(FOLLOW_ws_in_sass_forward_hide926);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(380,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide928); if (state.failed) return;dbg.location(380,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(61);

			loop61:
			while (true) {
				int alt61=2;
				try { dbg.enterDecision(61, decisionCanBacktrack[61]);

				try {
					isCyclicDecision = true;
					alt61 = dfa61.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(61);}

				switch (alt61) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(380,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:48: ( ws )?
					int alt59=2;
					try { dbg.enterSubRule(59);
					try { dbg.enterDecision(59, decisionCanBacktrack[59]);

					int LA59_0 = input.LA(1);
					if ( (LA59_0==COMMENT||LA59_0==NL||LA59_0==WS) ) {
						alt59=1;
					}
					} finally {dbg.exitDecision(59);}

					switch (alt59) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:48: ws
							{
							dbg.location(380,48);
							pushFollow(FOLLOW_ws_in_sass_forward_hide931);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(59);}
					dbg.location(380,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_hide934); if (state.failed) return;dbg.location(380,58);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:58: ( ws )?
					int alt60=2;
					try { dbg.enterSubRule(60);
					try { dbg.enterDecision(60, decisionCanBacktrack[60]);

					int LA60_0 = input.LA(1);
					if ( (LA60_0==COMMENT||LA60_0==NL||LA60_0==WS) ) {
						alt60=1;
					}
					} finally {dbg.exitDecision(60);}

					switch (alt60) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:380:58: ws
							{
							dbg.location(380,58);
							pushFollow(FOLLOW_ws_in_sass_forward_hide936);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(60);}
					dbg.location(380,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_hide939); if (state.failed) return;
					}
					break;

				default :
					break loop61;
				}
			}
			} finally {dbg.exitSubRule(61);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(381, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_hide");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_hide"



	// $ANTLR start "sass_forward_show"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:383:1: sass_forward_show :{...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* ;
	public final void sass_forward_show() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_forward_show");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(383, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:384:5: ({...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:5: {...}? IDENT ws IDENT ( ( ws )? COMMA ( ws )? IDENT )*
			{
			dbg.location(385,5);
			if ( !(evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_forward_show", "tokenNameEquals(\"show\")");
			}dbg.location(385,32);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show964); if (state.failed) return;dbg.location(385,38);
			pushFollow(FOLLOW_ws_in_sass_forward_show966);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(385,41);
			match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show968); if (state.failed) return;dbg.location(385,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:47: ( ( ws )? COMMA ( ws )? IDENT )*
			try { dbg.enterSubRule(64);

			loop64:
			while (true) {
				int alt64=2;
				try { dbg.enterDecision(64, decisionCanBacktrack[64]);

				try {
					isCyclicDecision = true;
					alt64 = dfa64.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(64);}

				switch (alt64) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:48: ( ws )? COMMA ( ws )? IDENT
					{
					dbg.location(385,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:48: ( ws )?
					int alt62=2;
					try { dbg.enterSubRule(62);
					try { dbg.enterDecision(62, decisionCanBacktrack[62]);

					int LA62_0 = input.LA(1);
					if ( (LA62_0==COMMENT||LA62_0==NL||LA62_0==WS) ) {
						alt62=1;
					}
					} finally {dbg.exitDecision(62);}

					switch (alt62) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:48: ws
							{
							dbg.location(385,48);
							pushFollow(FOLLOW_ws_in_sass_forward_show971);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(62);}
					dbg.location(385,52);
					match(input,COMMA,FOLLOW_COMMA_in_sass_forward_show974); if (state.failed) return;dbg.location(385,58);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:58: ( ws )?
					int alt63=2;
					try { dbg.enterSubRule(63);
					try { dbg.enterDecision(63, decisionCanBacktrack[63]);

					int LA63_0 = input.LA(1);
					if ( (LA63_0==COMMENT||LA63_0==NL||LA63_0==WS) ) {
						alt63=1;
					}
					} finally {dbg.exitDecision(63);}

					switch (alt63) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:385:58: ws
							{
							dbg.location(385,58);
							pushFollow(FOLLOW_ws_in_sass_forward_show976);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(63);}
					dbg.location(385,62);
					match(input,IDENT,FOLLOW_IDENT_in_sass_forward_show979); if (state.failed) return;
					}
					break;

				default :
					break loop64;
				}
			}
			} finally {dbg.exitSubRule(64);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(386, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_forward_show");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_forward_show"



	// $ANTLR start "media"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:388:1: media : MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void media() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "media");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(388, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:5: ( MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:7: MEDIA_SYM ( ws )? ( mediaQueryList ) ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(389,7);
			match(input,MEDIA_SYM,FOLLOW_MEDIA_SYM_in_media998); if (state.failed) return;dbg.location(389,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:17: ( ws )?
			int alt65=2;
			try { dbg.enterSubRule(65);
			try { dbg.enterDecision(65, decisionCanBacktrack[65]);

			int LA65_0 = input.LA(1);
			if ( (LA65_0==COMMENT||LA65_0==NL||LA65_0==WS) ) {
				alt65=1;
			}
			} finally {dbg.exitDecision(65);}

			switch (alt65) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:389:17: ws
					{
					dbg.location(389,17);
					pushFollow(FOLLOW_ws_in_media1000);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(65);}
			dbg.location(390,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:390:5: ( mediaQueryList )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:391:10: mediaQueryList
			{
			dbg.location(391,10);
			pushFollow(FOLLOW_mediaQueryList_in_media1018);
			mediaQueryList();
			state._fsp--;
			if (state.failed) return;
			}
			dbg.location(392,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:7: ( ws )?
			int alt66=2;
			try { dbg.enterSubRule(66);
			try { dbg.enterDecision(66, decisionCanBacktrack[66]);

			int LA66_0 = input.LA(1);
			if ( (LA66_0==COMMENT||LA66_0==NL||LA66_0==WS) ) {
				alt66=1;
			}
			} finally {dbg.exitDecision(66);}

			switch (alt66) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:392:7: ws
					{
					dbg.location(392,7);
					pushFollow(FOLLOW_ws_in_media1026);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(66);}
			dbg.location(393,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_media1033); if (state.failed) return;dbg.location(393,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:393:12: ( ws )?
			int alt67=2;
			try { dbg.enterSubRule(67);
			try { dbg.enterDecision(67, decisionCanBacktrack[67]);

			int LA67_0 = input.LA(1);
			if ( (LA67_0==COMMENT||LA67_0==NL||LA67_0==WS) ) {
				alt67=1;
			}
			} finally {dbg.exitDecision(67);}

			switch (alt67) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:393:12: ws
					{
					dbg.location(393,12);
					pushFollow(FOLLOW_ws_in_media1035);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(67);}
			dbg.location(393,16);
			pushFollow(FOLLOW_syncToFollow_in_media1038);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(394,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:9: ( mediaBody )?
			int alt68=2;
			try { dbg.enterSubRule(68);
			try { dbg.enterDecision(68, decisionCanBacktrack[68]);

			int LA68_0 = input.LA(1);
			if ( ((LA68_0 >= AT_IDENT && LA68_0 <= AT_SIGN)||(LA68_0 >= BOTTOMCENTER_SYM && LA68_0 <= BOTTOMRIGHT_SYM)||(LA68_0 >= CHARSET_SYM && LA68_0 <= COLON)||LA68_0==COUNTER_STYLE_SYM||(LA68_0 >= DCOLON && LA68_0 <= DOT)||LA68_0==FONT_FACE_SYM||(LA68_0 >= GEN && LA68_0 <= GREATER)||(LA68_0 >= HASH && LA68_0 <= HASH_SYMBOL)||LA68_0==IDENT||LA68_0==IMPORT_SYM||(LA68_0 >= LBRACKET && LA68_0 <= LEFTTOP_SYM)||LA68_0==LESS_AND||(LA68_0 >= MEDIA_SYM && LA68_0 <= MOZ_DOCUMENT_SYM)||LA68_0==NAMESPACE_SYM||LA68_0==PAGE_SYM||(LA68_0 >= PIPE && LA68_0 <= PLUS)||(LA68_0 >= RIGHTBOTTOM_SYM && LA68_0 <= RIGHTTOP_SYM)||(LA68_0 >= SASS_AT_ROOT && LA68_0 <= SASS_DEBUG)||(LA68_0 >= SASS_EACH && LA68_0 <= SASS_ELSE)||(LA68_0 >= SASS_EXTEND && LA68_0 <= SASS_FOR)||LA68_0==SASS_FUNCTION||(LA68_0 >= SASS_IF && LA68_0 <= SASS_MIXIN)||LA68_0==SASS_RETURN||(LA68_0 >= SASS_VAR && LA68_0 <= SEMI)||LA68_0==STAR||LA68_0==SUPPORTS_SYM||LA68_0==TILDE||(LA68_0 >= TOPCENTER_SYM && LA68_0 <= TOPRIGHT_SYM)||LA68_0==VARIABLE||LA68_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt68=1;
			}
			} finally {dbg.exitDecision(68);}

			switch (alt68) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:394:9: mediaBody
					{
					dbg.location(394,9);
					pushFollow(FOLLOW_mediaBody_in_media1048);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(68);}
			dbg.location(395,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_media1055); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(396, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "media");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "media"



	// $ANTLR start "mediaBody"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:398:1: mediaBody : ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ ;
	public final void mediaBody() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBody");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(398, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:399:5: ( ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			{
			dbg.location(400,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:400:5: ( ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) | ({...}? sass_extend ( ws | ( SEMI ) ) ) )+
			int cnt74=0;
			try { dbg.enterSubRule(74);

			loop74:
			while (true) {
				int alt74=4;
				try { dbg.enterDecision(74, decisionCanBacktrack[74]);

				switch ( input.LA(1) ) {
				case AT_IDENT:
				case AT_SIGN:
				case BOTTOMCENTER_SYM:
				case BOTTOMLEFTCORNER_SYM:
				case BOTTOMLEFT_SYM:
				case BOTTOMRIGHTCORNER_SYM:
				case BOTTOMRIGHT_SYM:
				case CHARSET_SYM:
				case COLON:
				case COUNTER_STYLE_SYM:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case FONT_FACE_SYM:
				case GEN:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case IDENT:
				case IMPORT_SYM:
				case LBRACKET:
				case LEFTBOTTOM_SYM:
				case LEFTMIDDLE_SYM:
				case LEFTTOP_SYM:
				case LESS_AND:
				case MEDIA_SYM:
				case MINUS:
				case MOZ_DOCUMENT_SYM:
				case NAMESPACE_SYM:
				case PAGE_SYM:
				case PIPE:
				case PLUS:
				case RIGHTBOTTOM_SYM:
				case RIGHTMIDDLE_SYM:
				case RIGHTTOP_SYM:
				case SASS_AT_ROOT:
				case SASS_CONTENT:
				case SASS_DEBUG:
				case SASS_EACH:
				case SASS_ELSE:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SASS_FOR:
				case SASS_FUNCTION:
				case SASS_IF:
				case SASS_INCLUDE:
				case SASS_MIXIN:
				case SASS_RETURN:
				case SASS_VAR:
				case SASS_WARN:
				case SASS_WHILE:
				case STAR:
				case SUPPORTS_SYM:
				case TILDE:
				case TOPCENTER_SYM:
				case TOPLEFTCORNER_SYM:
				case TOPLEFT_SYM:
				case TOPRIGHTCORNER_SYM:
				case TOPRIGHT_SYM:
				case VARIABLE:
				case WEBKIT_KEYFRAMES_SYM:
					{
					alt74=1;
					}
					break;
				case SASS_EXTEND:
					{
					int LA74_35 = input.LA(2);
					if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
						alt74=1;
					}
					else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
						alt74=3;
					}

					}
					break;
				case SEMI:
					{
					alt74=2;
					}
					break;
				}
				} finally {dbg.exitDecision(74);}

				switch (alt74) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(401,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:10: ( mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:12: mediaBodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(401,12);
					pushFollow(FOLLOW_mediaBodyItem_in_mediaBody1089);
					mediaBodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(401,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt70=2;
					try { dbg.enterSubRule(70);
					try { dbg.enterDecision(70, decisionCanBacktrack[70]);

					try {
						isCyclicDecision = true;
						alt70 = dfa70.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(70);}

					switch (alt70) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:27: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(401,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:39: ( ws )?
							int alt69=2;
							try { dbg.enterSubRule(69);
							try { dbg.enterDecision(69, decisionCanBacktrack[69]);

							int LA69_0 = input.LA(1);
							if ( (LA69_0==COMMENT||LA69_0==NL||LA69_0==WS) ) {
								alt69=1;
							}
							} finally {dbg.exitDecision(69);}

							switch (alt69) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:39: ws
									{
									dbg.location(401,39);
									pushFollow(FOLLOW_ws_in_mediaBody1099);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(69);}
							dbg.location(401,43);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1102); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(70);}
					dbg.location(401,50);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:50: ( ws )?
					int alt71=2;
					try { dbg.enterSubRule(71);
					try { dbg.enterDecision(71, decisionCanBacktrack[71]);

					int LA71_0 = input.LA(1);
					if ( (LA71_0==COMMENT||LA71_0==NL||LA71_0==WS) ) {
						alt71=1;
					}
					} finally {dbg.exitDecision(71);}

					switch (alt71) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:50: ws
							{
							dbg.location(401,50);
							pushFollow(FOLLOW_ws_in_mediaBody1106);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(71);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:10: ( SEMI ( ws )? )
					{
					dbg.location(403,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:12: SEMI ( ws )?
					{
					dbg.location(403,12);
					match(input,SEMI,FOLLOW_SEMI_in_mediaBody1133); if (state.failed) return;dbg.location(403,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:17: ( ws )?
					int alt72=2;
					try { dbg.enterSubRule(72);
					try { dbg.enterDecision(72, decisionCanBacktrack[72]);

					int LA72_0 = input.LA(1);
					if ( (LA72_0==COMMENT||LA72_0==NL||LA72_0==WS) ) {
						alt72=1;
					}
					} finally {dbg.exitDecision(72);}

					switch (alt72) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:403:17: ws
							{
							dbg.location(403,17);
							pushFollow(FOLLOW_ws_in_mediaBody1135);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(72);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					{
					dbg.location(404,12);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:12: ({...}? sass_extend ( ws | ( SEMI ) ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:13: {...}? sass_extend ( ws | ( SEMI ) )
					{
					dbg.location(404,13);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBody", "isScssSource()");
					}dbg.location(404,31);
					pushFollow(FOLLOW_sass_extend_in_mediaBody1154);
					sass_extend();
					state._fsp--;
					if (state.failed) return;dbg.location(404,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:43: ( ws | ( SEMI ) )
					int alt73=2;
					try { dbg.enterSubRule(73);
					try { dbg.enterDecision(73, decisionCanBacktrack[73]);

					int LA73_0 = input.LA(1);
					if ( (LA73_0==COMMENT||LA73_0==NL||LA73_0==WS) ) {
						alt73=1;
					}
					else if ( (LA73_0==SEMI) ) {
						alt73=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 73, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(73);}

					switch (alt73) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:44: ws
							{
							dbg.location(404,44);
							pushFollow(FOLLOW_ws_in_mediaBody1157);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:49: ( SEMI )
							{
							dbg.location(404,49);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:49: ( SEMI )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:404:50: SEMI
							{
							dbg.location(404,50);
							match(input,SEMI,FOLLOW_SEMI_in_mediaBody1162); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(73);}

					}

					}
					break;

				default :
					if ( cnt74 >= 1 ) break loop74;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(74, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt74++;
			}
			} finally {dbg.exitSubRule(74);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(406, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBody");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBody"



	// $ANTLR start "mediaBodyItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:408:1: mediaBodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule );
	public final void mediaBodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaBodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(408, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:409:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration |{...}? sass_debug |{...}? sass_control |{...}? sass_content |{...}? importItem | rule | page | fontFace | vendorAtRule | media | supportsAtRule )
			int alt79=15;
			try { dbg.enterDecision(79, decisionCanBacktrack[79]);

			int LA79_0 = input.LA(1);
			if ( (LA79_0==LESS_AND) ) {
				int LA79_1 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt79=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt79=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt79=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==DOT) ) {
				int LA79_2 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt79=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt79=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt79=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==HASH) ) {
				int LA79_3 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt79=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt79=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt79=3;
				}
				else if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==SASS_MIXIN) ) {
				int LA79_4 = input.LA(2);
				if ( ((synpred5_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt79=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==AT_IDENT) ) {
				int LA79_5 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())) ) {
					alt79=2;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred7_Css3())) ) {
					alt79=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=13;
				}

			}
			else if ( (LA79_0==SASS_INCLUDE) ) {
				int LA79_6 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred6_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt79=2;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred7_Css3())) ) {
					alt79=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==SASS_AT_ROOT) ) {
				int LA79_7 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==GREATER||LA79_0==PLUS||LA79_0==TILDE) ) {
				int LA79_8 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				int LA79_9 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt79=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt79=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==HASH_SYMBOL) ) {
				int LA79_10 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( ((synpred9_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==DIMENSION) ) {
				int LA79_11 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"))) ) {
					alt79=4;
				}
				else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
					alt79=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==LBRACKET) ) {
				int LA79_12 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==COLON||LA79_0==DCOLON) ) {
				int LA79_13 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==IDENT) ) {
				int LA79_14 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==AT_SIGN) ) {
				int LA79_15 = input.LA(2);
				if ( ((synpred8_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt79=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt79=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==MINUS) ) {
				int LA79_16 = input.LA(2);
				if ( ((synpred8_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt79=4;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt79=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==STAR) ) {
				int LA79_17 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==PIPE) ) {
				int LA79_18 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==GEN) ) {
				int LA79_19 = input.LA(2);
				if ( (synpred8_Css3()) ) {
					alt79=4;
				}
				else if ( (synpred9_Css3()) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=10;
				}

			}
			else if ( (LA79_0==VARIABLE) && (synpred9_Css3())) {
				alt79=5;
			}
			else if ( (LA79_0==SASS_DEBUG||LA79_0==SASS_WARN) ) {
				int LA79_21 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt79=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==SASS_VAR) && (synpred9_Css3())) {
				alt79=5;
			}
			else if ( (LA79_0==SASS_IF) ) {
				int LA79_23 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt79=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==SASS_FOR) ) {
				int LA79_24 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt79=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==SASS_EACH) ) {
				int LA79_25 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt79=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==SASS_WHILE) ) {
				int LA79_26 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt79=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==SASS_CONTENT) ) {
				int LA79_27 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt79=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==IMPORT_SYM) ) {
				int LA79_28 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt79=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 79, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA79_0==PAGE_SYM) ) {
				int LA79_29 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=11;
				}

			}
			else if ( (LA79_0==FONT_FACE_SYM) ) {
				int LA79_30 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=12;
				}

			}
			else if ( (LA79_0==MOZ_DOCUMENT_SYM) ) {
				int LA79_31 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=13;
				}

			}
			else if ( (LA79_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA79_32 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=13;
				}

			}
			else if ( (LA79_0==MEDIA_SYM) ) {
				int LA79_33 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred9_Css3())) ) {
					alt79=5;
				}
				else if ( (true) ) {
					alt79=14;
				}

			}
			else if ( ((LA79_0 >= BOTTOMCENTER_SYM && LA79_0 <= BOTTOMRIGHT_SYM)||LA79_0==CHARSET_SYM||LA79_0==COUNTER_STYLE_SYM||(LA79_0 >= LEFTBOTTOM_SYM && LA79_0 <= LEFTTOP_SYM)||LA79_0==NAMESPACE_SYM||(LA79_0 >= RIGHTBOTTOM_SYM && LA79_0 <= RIGHTTOP_SYM)||LA79_0==SASS_ELSE||LA79_0==SASS_EXTEND||LA79_0==SASS_FUNCTION||LA79_0==SASS_RETURN||(LA79_0 >= TOPCENTER_SYM && LA79_0 <= TOPRIGHT_SYM)) && (synpred9_Css3())) {
				alt79=5;
			}
			else if ( (LA79_0==SUPPORTS_SYM) ) {
				alt79=15;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 79, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(79);}

			switch (alt79) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(410,96);
					pushFollow(FOLLOW_cp_mixin_declaration_in_mediaBodyItem1236);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(412,55);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isLessSource()");
					}dbg.location(412,73);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1269);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(412,87);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:87: ( ( ws )? IMPORTANT_SYM )?
					int alt76=2;
					try { dbg.enterSubRule(76);
					try { dbg.enterDecision(76, decisionCanBacktrack[76]);

					try {
						isCyclicDecision = true;
						alt76 = dfa76.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(76);}

					switch (alt76) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:88: ( ws )? IMPORTANT_SYM
							{
							dbg.location(412,88);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:88: ( ws )?
							int alt75=2;
							try { dbg.enterSubRule(75);
							try { dbg.enterDecision(75, decisionCanBacktrack[75]);

							int LA75_0 = input.LA(1);
							if ( (LA75_0==COMMENT||LA75_0==NL||LA75_0==WS) ) {
								alt75=1;
							}
							} finally {dbg.exitDecision(75);}

							switch (alt75) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:88: ws
									{
									dbg.location(412,88);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1272);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(75);}
							dbg.location(412,92);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1275); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(76);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(413,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(413,43);
					pushFollow(FOLLOW_cp_mixin_call_in_mediaBodyItem1292);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(413,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:57: ( ( ws )? IMPORTANT_SYM )?
					int alt78=2;
					try { dbg.enterSubRule(78);
					try { dbg.enterDecision(78, decisionCanBacktrack[78]);

					try {
						isCyclicDecision = true;
						alt78 = dfa78.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(78);}

					switch (alt78) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(413,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:58: ( ws )?
							int alt77=2;
							try { dbg.enterSubRule(77);
							try { dbg.enterDecision(77, decisionCanBacktrack[77]);

							int LA77_0 = input.LA(1);
							if ( (LA77_0==COMMENT||LA77_0==NL||LA77_0==WS) ) {
								alt77=1;
							}
							} finally {dbg.exitDecision(77);}

							switch (alt77) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:58: ws
									{
									dbg.location(413,58);
									pushFollow(FOLLOW_ws_in_mediaBodyItem1295);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(77);}
							dbg.location(413,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1298); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(78);}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(414,145);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1363);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(415,30);
					pushFollow(FOLLOW_propertyDeclaration_in_mediaBodyItem1375);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:416:7: {...}? sass_debug
					{
					dbg.location(416,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(416,25);
					pushFollow(FOLLOW_sass_debug_in_mediaBodyItem1385);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:417:7: {...}? sass_control
					{
					dbg.location(417,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(417,25);
					pushFollow(FOLLOW_sass_control_in_mediaBodyItem1395);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:418:7: {...}? sass_content
					{
					dbg.location(418,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isScssSource()");
					}dbg.location(418,25);
					pushFollow(FOLLOW_sass_content_in_mediaBodyItem1405);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:419:7: {...}? importItem
					{
					dbg.location(419,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaBodyItem", "isCssPreprocessorSource()");
					}dbg.location(419,36);
					pushFollow(FOLLOW_importItem_in_mediaBodyItem1415);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:420:7: rule
					{
					dbg.location(420,7);
					pushFollow(FOLLOW_rule_in_mediaBodyItem1423);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:421:7: page
					{
					dbg.location(421,7);
					pushFollow(FOLLOW_page_in_mediaBodyItem1431);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:422:7: fontFace
					{
					dbg.location(422,7);
					pushFollow(FOLLOW_fontFace_in_mediaBodyItem1439);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:423:7: vendorAtRule
					{
					dbg.location(423,7);
					pushFollow(FOLLOW_vendorAtRule_in_mediaBodyItem1447);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:425:7: media
					{
					dbg.location(425,7);
					pushFollow(FOLLOW_media_in_mediaBodyItem1460);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:426:7: supportsAtRule
					{
					dbg.location(426,7);
					pushFollow(FOLLOW_supportsAtRule_in_mediaBodyItem1468);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(427, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaBodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaBodyItem"



	// $ANTLR start "mediaQueryList"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:429:1: mediaQueryList : mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* ;
	public final void mediaQueryList() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryList");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(429, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:2: ( mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:4: mediaQuery ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			{
			dbg.location(430,4);
			pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1482);
			mediaQuery();
			state._fsp--;
			if (state.failed) return;dbg.location(430,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*
			try { dbg.enterSubRule(82);

			loop82:
			while (true) {
				int alt82=2;
				try { dbg.enterDecision(82, decisionCanBacktrack[82]);

				try {
					isCyclicDecision = true;
					alt82 = dfa82.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(82);}

				switch (alt82) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:17: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery
					{
					dbg.location(430,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:31: ( ws )?
					int alt80=2;
					try { dbg.enterSubRule(80);
					try { dbg.enterDecision(80, decisionCanBacktrack[80]);

					int LA80_0 = input.LA(1);
					if ( (LA80_0==COMMENT||LA80_0==NL||LA80_0==WS) ) {
						alt80=1;
					}
					} finally {dbg.exitDecision(80);}

					switch (alt80) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:31: ws
							{
							dbg.location(430,31);
							pushFollow(FOLLOW_ws_in_mediaQueryList1494);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(80);}
					dbg.location(430,35);
					match(input,COMMA,FOLLOW_COMMA_in_mediaQueryList1497); if (state.failed) return;dbg.location(430,41);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:41: ( ws )?
					int alt81=2;
					try { dbg.enterSubRule(81);
					try { dbg.enterDecision(81, decisionCanBacktrack[81]);

					int LA81_0 = input.LA(1);
					if ( (LA81_0==COMMENT||LA81_0==NL||LA81_0==WS) ) {
						alt81=1;
					}
					} finally {dbg.exitDecision(81);}

					switch (alt81) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:41: ws
							{
							dbg.location(430,41);
							pushFollow(FOLLOW_ws_in_mediaQueryList1499);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(81);}
					dbg.location(430,45);
					pushFollow(FOLLOW_mediaQuery_in_mediaQueryList1502);
					mediaQuery();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop82;
				}
			}
			} finally {dbg.exitSubRule(82);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(431, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryList");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryList"



	// $ANTLR start "mediaQuery"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:433:1: mediaQuery : ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable );
	public final void mediaQuery() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQuery");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(433, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:434:2: ( ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* | mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )* |{...}? cp_variable )
			int alt91=3;
			try { dbg.enterDecision(91, decisionCanBacktrack[91]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA91_1 = input.LA(2);
				if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()")),""))) ) {
					alt91=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt91=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 91, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
			case NOT:
				{
				alt91=1;
				}
				break;
			case HASH_SYMBOL:
				{
				int LA91_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt91=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt91=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 91, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LPAREN:
				{
				alt91=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt91=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 91, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(91);}

			switch (alt91) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:5: ( mediaQueryOperator ( ws )? )? mediaType ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(435,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:5: ( mediaQueryOperator ( ws )? )?
					int alt84=2;
					try { dbg.enterSubRule(84);
					try { dbg.enterDecision(84, decisionCanBacktrack[84]);

					int LA84_0 = input.LA(1);
					if ( (LA84_0==IDENT) ) {
						int LA84_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
							alt84=1;
						}
					}
					else if ( (LA84_0==NOT) ) {
						alt84=1;
					}
					} finally {dbg.exitDecision(84);}

					switch (alt84) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:6: mediaQueryOperator ( ws )?
							{
							dbg.location(435,6);
							pushFollow(FOLLOW_mediaQueryOperator_in_mediaQuery1521);
							mediaQueryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(435,25);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:25: ( ws )?
							int alt83=2;
							try { dbg.enterSubRule(83);
							try { dbg.enterDecision(83, decisionCanBacktrack[83]);

							int LA83_0 = input.LA(1);
							if ( (LA83_0==COMMENT||LA83_0==NL||LA83_0==WS) ) {
								alt83=1;
							}
							} finally {dbg.exitDecision(83);}

							switch (alt83) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:25: ws
									{
									dbg.location(435,25);
									pushFollow(FOLLOW_ws_in_mediaQuery1523);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(83);}

							}
							break;

					}
					} finally {dbg.exitSubRule(84);}
					dbg.location(435,33);
					pushFollow(FOLLOW_mediaType_in_mediaQuery1530);
					mediaType();
					state._fsp--;
					if (state.failed) return;dbg.location(435,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:43: ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(87);

					loop87:
					while (true) {
						int alt87=2;
						try { dbg.enterDecision(87, decisionCanBacktrack[87]);

						int LA87_0 = input.LA(1);
						if ( (LA87_0==COMMENT||LA87_0==NL||LA87_0==WS) ) {
							int LA87_1 = input.LA(2);
							if ( (synpred11_Css3()) ) {
								alt87=1;
							}

						}
						else if ( (LA87_0==IDENT) ) {
							int LA87_18 = input.LA(2);
							if ( ((synpred11_Css3()&&evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")"))) ) {
								alt87=1;
							}

						}

						} finally {dbg.exitDecision(87);}

						switch (alt87) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:44: ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(435,60);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:60: ( ws )?
							int alt85=2;
							try { dbg.enterSubRule(85);
							try { dbg.enterDecision(85, decisionCanBacktrack[85]);

							int LA85_0 = input.LA(1);
							if ( (LA85_0==COMMENT||LA85_0==NL||LA85_0==WS) ) {
								alt85=1;
							}
							} finally {dbg.exitDecision(85);}

							switch (alt85) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:60: ws
									{
									dbg.location(435,60);
									pushFollow(FOLLOW_ws_in_mediaQuery1541);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(85);}
							dbg.location(435,64);
							pushFollow(FOLLOW_key_and_in_mediaQuery1544);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(435,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:72: ( ws )?
							int alt86=2;
							try { dbg.enterSubRule(86);
							try { dbg.enterDecision(86, decisionCanBacktrack[86]);

							int LA86_0 = input.LA(1);
							if ( (LA86_0==COMMENT||LA86_0==NL||LA86_0==WS) ) {
								alt86=1;
							}
							} finally {dbg.exitDecision(86);}

							switch (alt86) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:72: ws
									{
									dbg.location(435,72);
									pushFollow(FOLLOW_ws_in_mediaQuery1546);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(86);}
							dbg.location(435,76);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1549);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop87;
						}
					}
					} finally {dbg.exitSubRule(87);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:7: mediaExpression ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					{
					dbg.location(436,7);
					pushFollow(FOLLOW_mediaExpression_in_mediaQuery1560);
					mediaExpression();
					state._fsp--;
					if (state.failed) return;dbg.location(436,23);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:23: ( ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression )*
					try { dbg.enterSubRule(90);

					loop90:
					while (true) {
						int alt90=2;
						try { dbg.enterDecision(90, decisionCanBacktrack[90]);

						int LA90_0 = input.LA(1);
						if ( (LA90_0==COMMENT||LA90_0==NL||LA90_0==WS) ) {
							int LA90_1 = input.LA(2);
							if ( (synpred12_Css3()) ) {
								alt90=1;
							}

						}
						else if ( (LA90_0==IDENT) ) {
							int LA90_18 = input.LA(2);
							if ( ((evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")&&synpred12_Css3())) ) {
								alt90=1;
							}

						}

						} finally {dbg.exitDecision(90);}

						switch (alt90) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:24: ( ( ws )? key_and )=> ( ws )? key_and ( ws )? mediaExpression
							{
							dbg.location(436,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:40: ( ws )?
							int alt88=2;
							try { dbg.enterSubRule(88);
							try { dbg.enterDecision(88, decisionCanBacktrack[88]);

							int LA88_0 = input.LA(1);
							if ( (LA88_0==COMMENT||LA88_0==NL||LA88_0==WS) ) {
								alt88=1;
							}
							} finally {dbg.exitDecision(88);}

							switch (alt88) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:40: ws
									{
									dbg.location(436,40);
									pushFollow(FOLLOW_ws_in_mediaQuery1571);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(88);}
							dbg.location(436,44);
							pushFollow(FOLLOW_key_and_in_mediaQuery1574);
							key_and();
							state._fsp--;
							if (state.failed) return;dbg.location(436,52);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:52: ( ws )?
							int alt89=2;
							try { dbg.enterSubRule(89);
							try { dbg.enterDecision(89, decisionCanBacktrack[89]);

							int LA89_0 = input.LA(1);
							if ( (LA89_0==COMMENT||LA89_0==NL||LA89_0==WS) ) {
								alt89=1;
							}
							} finally {dbg.exitDecision(89);}

							switch (alt89) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:52: ws
									{
									dbg.location(436,52);
									pushFollow(FOLLOW_ws_in_mediaQuery1576);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(89);}
							dbg.location(436,56);
							pushFollow(FOLLOW_mediaExpression_in_mediaQuery1579);
							mediaExpression();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop90;
						}
					}
					} finally {dbg.exitSubRule(90);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:437:7: {...}? cp_variable
					{
					dbg.location(437,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaQuery", "isLessSource()");
					}dbg.location(437,25);
					pushFollow(FOLLOW_cp_variable_in_mediaQuery1592);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(438, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQuery");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQuery"



	// $ANTLR start "mediaQueryOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:440:1: mediaQueryOperator : ( key_only | NOT );
	public final void mediaQueryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaQueryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(440, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:441:3: ( key_only | NOT )
			int alt92=2;
			try { dbg.enterDecision(92, decisionCanBacktrack[92]);

			int LA92_0 = input.LA(1);
			if ( (LA92_0==IDENT) ) {
				alt92=1;
			}
			else if ( (LA92_0==NOT) ) {
				alt92=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 92, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(92);}

			switch (alt92) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:441:5: key_only
					{
					dbg.location(441,5);
					pushFollow(FOLLOW_key_only_in_mediaQueryOperator1604);
					key_only();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:441:16: NOT
					{
					dbg.location(441,16);
					match(input,NOT,FOLLOW_NOT_in_mediaQueryOperator1608); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(442, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaQueryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaQueryOperator"



	// $ANTLR start "mediaType"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:444:1: mediaType : ( IDENT | GEN |{...}? sass_interpolation_expression_var );
	public final void mediaType() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaType");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(444, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:2: ( IDENT | GEN |{...}? sass_interpolation_expression_var )
			int alt93=3;
			try { dbg.enterDecision(93, decisionCanBacktrack[93]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				alt93=1;
				}
				break;
			case GEN:
				{
				alt93=2;
				}
				break;
			case HASH_SYMBOL:
				{
				alt93=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 93, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(93);}

			switch (alt93) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:4: IDENT
					{
					dbg.location(445,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaType1620); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:12: GEN
					{
					dbg.location(445,12);
					match(input,GEN,FOLLOW_GEN_in_mediaType1624); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:445:18: {...}? sass_interpolation_expression_var
					{
					dbg.location(445,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaType", "isCssPreprocessorSource()");
					}dbg.location(445,47);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaType1630);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(446, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaType");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaType"



	// $ANTLR start "mediaExpression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:448:1: mediaExpression : ( ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ) | ( HASH )=>{...}? sass_interpolation_expression_var );
	public final void mediaExpression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaExpression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(448, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:449:5: ( ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN ) | ( HASH )=>{...}? sass_interpolation_expression_var )
			int alt97=2;
			try { dbg.enterDecision(97, decisionCanBacktrack[97]);

			int LA97_0 = input.LA(1);
			if ( (LA97_0==LPAREN) && (synpred13_Css3())) {
				alt97=1;
			}
			else if ( (LA97_0==HASH_SYMBOL) && (synpred14_Css3())) {
				alt97=2;
			}

			} finally {dbg.exitDecision(97);}

			switch (alt97) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:5: ( LPAREN )=> ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
					{
					dbg.location(450,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:17: ( LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:18: LPAREN ( ws )? mediaFeature ( mediaFeatureValue )? ( ws )? RPAREN
					{
					dbg.location(450,18);
					match(input,LPAREN,FOLLOW_LPAREN_in_mediaExpression1655); if (state.failed) return;dbg.location(450,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:25: ( ws )?
					int alt94=2;
					try { dbg.enterSubRule(94);
					try { dbg.enterDecision(94, decisionCanBacktrack[94]);

					int LA94_0 = input.LA(1);
					if ( (LA94_0==COMMENT||LA94_0==NL||LA94_0==WS) ) {
						alt94=1;
					}
					} finally {dbg.exitDecision(94);}

					switch (alt94) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:25: ws
							{
							dbg.location(450,25);
							pushFollow(FOLLOW_ws_in_mediaExpression1657);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(94);}
					dbg.location(450,29);
					pushFollow(FOLLOW_mediaFeature_in_mediaExpression1660);
					mediaFeature();
					state._fsp--;
					if (state.failed) return;dbg.location(450,42);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:42: ( mediaFeatureValue )?
					int alt95=2;
					try { dbg.enterSubRule(95);
					try { dbg.enterDecision(95, decisionCanBacktrack[95]);

					try {
						isCyclicDecision = true;
						alt95 = dfa95.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(95);}

					switch (alt95) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:42: mediaFeatureValue
							{
							dbg.location(450,42);
							pushFollow(FOLLOW_mediaFeatureValue_in_mediaExpression1662);
							mediaFeatureValue();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(95);}
					dbg.location(450,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:61: ( ws )?
					int alt96=2;
					try { dbg.enterSubRule(96);
					try { dbg.enterDecision(96, decisionCanBacktrack[96]);

					int LA96_0 = input.LA(1);
					if ( (LA96_0==COMMENT||LA96_0==NL||LA96_0==WS) ) {
						alt96=1;
					}
					} finally {dbg.exitDecision(96);}

					switch (alt96) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:61: ws
							{
							dbg.location(450,61);
							pushFollow(FOLLOW_ws_in_mediaExpression1665);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(96);}
					dbg.location(450,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_mediaExpression1668); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:451:7: ( HASH )=>{...}? sass_interpolation_expression_var
					{
					dbg.location(451,17);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaExpression", "isCssPreprocessorSource()");
					}dbg.location(451,46);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaExpression1685);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(452, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaExpression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaExpression"



	// $ANTLR start "mediaFeatureValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:454:1: mediaFeatureValue : ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) ;
	public final void mediaFeatureValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeatureValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(454, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:455:5: ( ( ws )? COLON ( ws )? ({...}? cp_expression | expression ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:456:5: ( ws )? COLON ( ws )? ({...}? cp_expression | expression )
			{
			dbg.location(456,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:456:5: ( ws )?
			int alt98=2;
			try { dbg.enterSubRule(98);
			try { dbg.enterDecision(98, decisionCanBacktrack[98]);

			int LA98_0 = input.LA(1);
			if ( (LA98_0==COMMENT||LA98_0==NL||LA98_0==WS) ) {
				alt98=1;
			}
			} finally {dbg.exitDecision(98);}

			switch (alt98) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:456:5: ws
					{
					dbg.location(456,5);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1706);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(98);}
			dbg.location(456,9);
			match(input,COLON,FOLLOW_COLON_in_mediaFeatureValue1709); if (state.failed) return;dbg.location(456,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:456:15: ( ws )?
			int alt99=2;
			try { dbg.enterSubRule(99);
			try { dbg.enterDecision(99, decisionCanBacktrack[99]);

			int LA99_0 = input.LA(1);
			if ( (LA99_0==COMMENT||LA99_0==NL||LA99_0==WS) ) {
				alt99=1;
			}
			} finally {dbg.exitDecision(99);}

			switch (alt99) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:456:15: ws
					{
					dbg.location(456,15);
					pushFollow(FOLLOW_ws_in_mediaFeatureValue1711);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(99);}
			dbg.location(457,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:457:5: ({...}? cp_expression | expression )
			int alt100=2;
			try { dbg.enterSubRule(100);
			try { dbg.enterDecision(100, decisionCanBacktrack[100]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt100=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA100_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case IDENT:
				{
				int LA100_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case VARIABLE:
				{
				int LA100_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case LBRACKET:
				{
				int LA100_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA100_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case URANGE:
				{
				int LA100_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA100_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA100_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case EMS:
				{
				int LA100_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case REM:
				{
				int LA100_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case EXS:
				{
				int LA100_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA100_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case TIME:
				{
				int LA100_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case FREQ:
				{
				int LA100_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA100_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA100_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case STRING:
				{
				int LA100_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case TILDE:
				{
				int LA100_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA100_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case GEN:
				{
				int LA100_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case URI:
				{
				int LA100_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case HASH:
				{
				int LA100_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (true) ) {
					alt100=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA100_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt100=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA100_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt100=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA100_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt100=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA100_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt100=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA100_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt100=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA100_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt100=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 100, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 100, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(100);}

			switch (alt100) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:458:9: {...}? cp_expression
					{
					dbg.location(458,9);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeatureValue", "isCssPreprocessorSource()");
					}dbg.location(458,38);
					pushFollow(FOLLOW_cp_expression_in_mediaFeatureValue1730);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:460:9: expression
					{
					dbg.location(460,9);
					pushFollow(FOLLOW_expression_in_mediaFeatureValue1750);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(100);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(462, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeatureValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeatureValue"



	// $ANTLR start "mediaFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:464:1: mediaFeature : ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void mediaFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "mediaFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(464, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:2: ( IDENT | GEN |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt102=3;
			try { dbg.enterDecision(102, decisionCanBacktrack[102]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA102_1 = input.LA(2);
				if ( (LA102_1==DOT) ) {
					alt102=3;
				}
				else if ( (LA102_1==COLON||LA102_1==COMMENT||LA102_1==NL||LA102_1==RPAREN||LA102_1==WS) ) {
					alt102=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 102, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt102=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt102=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 102, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(102);}

			switch (alt102) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:4: IDENT
					{
					dbg.location(465,4);
					match(input,IDENT,FOLLOW_IDENT_in_mediaFeature1770); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:12: GEN
					{
					dbg.location(465,12);
					match(input,GEN,FOLLOW_GEN_in_mediaFeature1774); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:18: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(465,18);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "mediaFeature", "isCssPreprocessorSource()");
					}dbg.location(465,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:47: ( cp_variable | sass_interpolation_expression_var )
					int alt101=2;
					try { dbg.enterSubRule(101);
					try { dbg.enterDecision(101, decisionCanBacktrack[101]);

					int LA101_0 = input.LA(1);
					if ( (LA101_0==AT_IDENT||(LA101_0 >= BOTTOMCENTER_SYM && LA101_0 <= BOTTOMRIGHT_SYM)||LA101_0==CHARSET_SYM||LA101_0==COUNTER_STYLE_SYM||LA101_0==FONT_FACE_SYM||LA101_0==IDENT||LA101_0==IMPORT_SYM||(LA101_0 >= LEFTBOTTOM_SYM && LA101_0 <= LEFTTOP_SYM)||LA101_0==MEDIA_SYM||LA101_0==MOZ_DOCUMENT_SYM||LA101_0==NAMESPACE_SYM||LA101_0==PAGE_SYM||(LA101_0 >= RIGHTBOTTOM_SYM && LA101_0 <= RIGHTTOP_SYM)||(LA101_0 >= SASS_AT_ROOT && LA101_0 <= SASS_DEBUG)||(LA101_0 >= SASS_EACH && LA101_0 <= SASS_ELSE)||LA101_0==SASS_EXTEND||LA101_0==SASS_FOR||LA101_0==SASS_FUNCTION||(LA101_0 >= SASS_IF && LA101_0 <= SASS_MIXIN)||LA101_0==SASS_RETURN||(LA101_0 >= SASS_VAR && LA101_0 <= SASS_WHILE)||(LA101_0 >= TOPCENTER_SYM && LA101_0 <= TOPRIGHT_SYM)||LA101_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt101=1;
					}
					else if ( (LA101_0==HASH_SYMBOL) ) {
						alt101=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 101, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(101);}

					switch (alt101) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:49: cp_variable
							{
							dbg.location(465,49);
							pushFollow(FOLLOW_cp_variable_in_mediaFeature1782);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:465:63: sass_interpolation_expression_var
							{
							dbg.location(465,63);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_mediaFeature1786);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(101);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(466, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "mediaFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "mediaFeature"



	// $ANTLR start "body"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:468:2: body : ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ ;
	public final void body() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "body");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(468, 1);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:469:5: ( ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			{
			dbg.location(470,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:470:5: ( ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? ) | ( SEMI ( ws )? ) )+
			int cnt107=0;
			try { dbg.enterSubRule(107);

			loop107:
			while (true) {
				int alt107=3;
				try { dbg.enterDecision(107, decisionCanBacktrack[107]);

				int LA107_0 = input.LA(1);
				if ( ((LA107_0 >= AT_IDENT && LA107_0 <= AT_SIGN)||(LA107_0 >= BOTTOMCENTER_SYM && LA107_0 <= BOTTOMRIGHT_SYM)||(LA107_0 >= CHARSET_SYM && LA107_0 <= COLON)||LA107_0==COUNTER_STYLE_SYM||(LA107_0 >= DCOLON && LA107_0 <= DOT)||LA107_0==FONT_FACE_SYM||(LA107_0 >= GEN && LA107_0 <= GREATER)||(LA107_0 >= HASH && LA107_0 <= HASH_SYMBOL)||LA107_0==IDENT||LA107_0==IMPORT_SYM||(LA107_0 >= LBRACKET && LA107_0 <= LEFTTOP_SYM)||LA107_0==LESS_AND||(LA107_0 >= MEDIA_SYM && LA107_0 <= MOZ_DOCUMENT_SYM)||LA107_0==NAMESPACE_SYM||LA107_0==PAGE_SYM||(LA107_0 >= PIPE && LA107_0 <= PLUS)||(LA107_0 >= RIGHTBOTTOM_SYM && LA107_0 <= RIGHTTOP_SYM)||(LA107_0 >= SASS_AT_ROOT && LA107_0 <= SASS_DEBUG)||(LA107_0 >= SASS_EACH && LA107_0 <= SASS_ELSE)||(LA107_0 >= SASS_EXTEND && LA107_0 <= SASS_FOR)||LA107_0==SASS_FUNCTION||(LA107_0 >= SASS_IF && LA107_0 <= SASS_MIXIN)||LA107_0==SASS_RETURN||(LA107_0 >= SASS_VAR && LA107_0 <= SASS_WHILE)||LA107_0==STAR||LA107_0==SUPPORTS_SYM||LA107_0==TILDE||(LA107_0 >= TOPCENTER_SYM && LA107_0 <= TOPRIGHT_SYM)||LA107_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt107=1;
				}
				else if ( (LA107_0==SEMI) ) {
					alt107=2;
				}

				} finally {dbg.exitDecision(107);}

				switch (alt107) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					{
					dbg.location(471,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:10: ( bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:12: bodyItem ( ( ( ws )? SEMI )=> ( ws )? SEMI )? ( ws )?
					{
					dbg.location(471,12);
					pushFollow(FOLLOW_bodyItem_in_body1820);
					bodyItem();
					state._fsp--;
					if (state.failed) return;dbg.location(471,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?
					int alt104=2;
					try { dbg.enterSubRule(104);
					try { dbg.enterDecision(104, decisionCanBacktrack[104]);

					try {
						isCyclicDecision = true;
						alt104 = dfa104.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(104);}

					switch (alt104) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:22: ( ( ws )? SEMI )=> ( ws )? SEMI
							{
							dbg.location(471,34);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:34: ( ws )?
							int alt103=2;
							try { dbg.enterSubRule(103);
							try { dbg.enterDecision(103, decisionCanBacktrack[103]);

							int LA103_0 = input.LA(1);
							if ( (LA103_0==COMMENT||LA103_0==NL||LA103_0==WS) ) {
								alt103=1;
							}
							} finally {dbg.exitDecision(103);}

							switch (alt103) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:34: ws
									{
									dbg.location(471,34);
									pushFollow(FOLLOW_ws_in_body1830);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(103);}
							dbg.location(471,38);
							match(input,SEMI,FOLLOW_SEMI_in_body1833); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(104);}
					dbg.location(471,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:45: ( ws )?
					int alt105=2;
					try { dbg.enterSubRule(105);
					try { dbg.enterDecision(105, decisionCanBacktrack[105]);

					int LA105_0 = input.LA(1);
					if ( (LA105_0==COMMENT||LA105_0==NL||LA105_0==WS) ) {
						alt105=1;
					}
					} finally {dbg.exitDecision(105);}

					switch (alt105) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:45: ws
							{
							dbg.location(471,45);
							pushFollow(FOLLOW_ws_in_body1837);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(105);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:10: ( SEMI ( ws )? )
					{
					dbg.location(473,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:10: ( SEMI ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:12: SEMI ( ws )?
					{
					dbg.location(473,12);
					match(input,SEMI,FOLLOW_SEMI_in_body1864); if (state.failed) return;dbg.location(473,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:17: ( ws )?
					int alt106=2;
					try { dbg.enterSubRule(106);
					try { dbg.enterDecision(106, decisionCanBacktrack[106]);

					int LA106_0 = input.LA(1);
					if ( (LA106_0==COMMENT||LA106_0==NL||LA106_0==WS) ) {
						alt106=1;
					}
					} finally {dbg.exitDecision(106);}

					switch (alt106) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:473:17: ws
							{
							dbg.location(473,17);
							pushFollow(FOLLOW_ws_in_body1866);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(106);}

					}

					}
					break;

				default :
					if ( cnt107 >= 1 ) break loop107;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(107, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt107++;
			}
			} finally {dbg.exitSubRule(107);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(475, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "body");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "body"



	// $ANTLR start "bodyItem"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:477:1: bodyItem : ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration );
	public final void bodyItem() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "bodyItem");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(477, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:478:5: ( ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration | ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call | ( cp_mixin_call )=>{...}? cp_mixin_call | rule | ( cp_variable ( ws )? COLON )=> cp_variable_declaration | ( sass_map )=> sass_map | at_rule |{...}? importItem |{...}? sass_debug |{...}? sass_control |{...}? sass_function_declaration )
			int alt108=11;
			try { dbg.enterDecision(108, decisionCanBacktrack[108]);

			switch ( input.LA(1) ) {
			case LESS_AND:
				{
				int LA108_1 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt108=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=3;
				}
				else if ( (true) ) {
					alt108=4;
				}

				}
				break;
			case DOT:
				{
				int LA108_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt108=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=3;
				}
				else if ( (true) ) {
					alt108=4;
				}

				}
				break;
			case HASH:
				{
				int LA108_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred16_Css3())) ) {
					alt108=1;
				}
				else if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=3;
				}
				else if ( (true) ) {
					alt108=4;
				}

				}
				break;
			case SASS_MIXIN:
				{
				int LA108_4 = input.LA(2);
				if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred16_Css3())) ) {
					alt108=1;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
				{
				int LA108_5 = input.LA(2);
				if ( ((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=2;
				}
				else if ( (((synpred18_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=3;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (true) ) {
					alt108=7;
				}

				}
				break;
			case SASS_INCLUDE:
				{
				int LA108_6 = input.LA(2);
				if ( (((synpred17_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=2;
				}
				else if ( ((synpred18_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=3;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_AT_ROOT:
				{
				int LA108_7 = input.LA(2);
				if ( (true) ) {
					alt108=4;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case COLON:
			case DCOLON:
			case DIMENSION:
			case GEN:
			case GREATER:
			case HASH_SYMBOL:
			case LBRACKET:
			case MINUS:
			case PIPE:
			case PLUS:
			case SASS_EXTEND_ONLY_SELECTOR:
			case STAR:
			case TILDE:
				{
				alt108=4;
				}
				break;
			case IDENT:
				{
				int LA108_14 = input.LA(2);
				if ( (true) ) {
					alt108=4;
				}
				else if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MEDIA_SYM:
				{
				int LA108_20 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (true) ) {
					alt108=7;
				}

				}
				break;
			case SASS_VAR:
				{
				int LA108_21 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PAGE_SYM:
				{
				int LA108_22 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (true) ) {
					alt108=7;
				}

				}
				break;
			case COUNTER_STYLE_SYM:
				{
				int LA108_23 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (true) ) {
					alt108=7;
				}

				}
				break;
			case FONT_FACE_SYM:
				{
				int LA108_24 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (true) ) {
					alt108=7;
				}

				}
				break;
			case MOZ_DOCUMENT_SYM:
				{
				int LA108_25 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (true) ) {
					alt108=7;
				}

				}
				break;
			case SUPPORTS_SYM:
				{
				alt108=7;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA108_27 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (true) ) {
					alt108=7;
				}

				}
				break;
			case IMPORT_SYM:
				{
				int LA108_28 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt108=8;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_DEBUG:
			case SASS_WARN:
				{
				int LA108_29 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt108=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_IF:
				{
				int LA108_30 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt108=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FOR:
				{
				int LA108_31 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt108=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_EACH:
				{
				int LA108_32 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt108=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_WHILE:
				{
				int LA108_33 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt108=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_FUNCTION:
				{
				int LA108_34 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt108=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case NAMESPACE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_CONTENT:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_RETURN:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
				{
				int LA108_35 = input.LA(2);
				if ( ((synpred19_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt108=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred20_Css3())) ) {
					alt108=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 108, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 108, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(108);}

			switch (alt108) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )=> cp_mixin_declaration
					{
					dbg.location(479,107);
					pushFollow(FOLLOW_cp_mixin_declaration_in_bodyItem1946);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:11: ( cp_mixin_call ( ws )? SEMI )=>{...}? cp_mixin_call
					{
					dbg.location(481,38);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isLessSource()");
					}dbg.location(481,56);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1979);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:11: ( cp_mixin_call )=>{...}? cp_mixin_call
					{
					dbg.location(482,29);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(482,47);
					pushFollow(FOLLOW_cp_mixin_call_in_bodyItem1998);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:483:8: rule
					{
					dbg.location(483,8);
					pushFollow(FOLLOW_rule_in_bodyItem2007);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:11: ( cp_variable ( ws )? COLON )=> cp_variable_declaration
					{
					dbg.location(484,37);
					pushFollow(FOLLOW_cp_variable_declaration_in_bodyItem2029);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:11: ( sass_map )=> sass_map
					{
					dbg.location(485,24);
					pushFollow(FOLLOW_sass_map_in_bodyItem2046);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:486:11: at_rule
					{
					dbg.location(486,11);
					pushFollow(FOLLOW_at_rule_in_bodyItem2058);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:488:11: {...}? importItem
					{
					dbg.location(488,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isCssPreprocessorSource()");
					}dbg.location(488,40);
					pushFollow(FOLLOW_importItem_in_bodyItem2081);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:489:11: {...}? sass_debug
					{
					dbg.location(489,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(489,29);
					pushFollow(FOLLOW_sass_debug_in_bodyItem2095);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:490:11: {...}? sass_control
					{
					dbg.location(490,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(490,29);
					pushFollow(FOLLOW_sass_control_in_bodyItem2109);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:491:11: {...}? sass_function_declaration
					{
					dbg.location(491,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "bodyItem", "isScssSource()");
					}dbg.location(491,29);
					pushFollow(FOLLOW_sass_function_declaration_in_bodyItem2123);
					sass_function_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(NL));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(492, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "bodyItem");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "bodyItem"



	// $ANTLR start "supportsAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:497:1: supportsAtRule : SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE ;
	public final void supportsAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(497, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:498:2: ( SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:2: SUPPORTS_SYM ( ws )? supportsCondition ( ws )? LBRACE ( ws )? syncToFollow ( mediaBody )? RBRACE
			{
			dbg.location(499,2);
			match(input,SUPPORTS_SYM,FOLLOW_SUPPORTS_SYM_in_supportsAtRule2143); if (state.failed) return;dbg.location(499,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:15: ( ws )?
			int alt109=2;
			try { dbg.enterSubRule(109);
			try { dbg.enterDecision(109, decisionCanBacktrack[109]);

			int LA109_0 = input.LA(1);
			if ( (LA109_0==COMMENT||LA109_0==NL||LA109_0==WS) ) {
				alt109=1;
			}
			} finally {dbg.exitDecision(109);}

			switch (alt109) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:15: ws
					{
					dbg.location(499,15);
					pushFollow(FOLLOW_ws_in_supportsAtRule2145);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(109);}
			dbg.location(499,19);
			pushFollow(FOLLOW_supportsCondition_in_supportsAtRule2148);
			supportsCondition();
			state._fsp--;
			if (state.failed) return;dbg.location(499,37);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:37: ( ws )?
			int alt110=2;
			try { dbg.enterSubRule(110);
			try { dbg.enterDecision(110, decisionCanBacktrack[110]);

			int LA110_0 = input.LA(1);
			if ( (LA110_0==COMMENT||LA110_0==NL||LA110_0==WS) ) {
				alt110=1;
			}
			} finally {dbg.exitDecision(110);}

			switch (alt110) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:37: ws
					{
					dbg.location(499,37);
					pushFollow(FOLLOW_ws_in_supportsAtRule2150);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(110);}
			dbg.location(499,41);
			match(input,LBRACE,FOLLOW_LBRACE_in_supportsAtRule2153); if (state.failed) return;dbg.location(499,48);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:48: ( ws )?
			int alt111=2;
			try { dbg.enterSubRule(111);
			try { dbg.enterDecision(111, decisionCanBacktrack[111]);

			int LA111_0 = input.LA(1);
			if ( (LA111_0==COMMENT||LA111_0==NL||LA111_0==WS) ) {
				alt111=1;
			}
			} finally {dbg.exitDecision(111);}

			switch (alt111) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:48: ws
					{
					dbg.location(499,48);
					pushFollow(FOLLOW_ws_in_supportsAtRule2155);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(111);}
			dbg.location(499,52);
			pushFollow(FOLLOW_syncToFollow_in_supportsAtRule2158);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(499,65);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:65: ( mediaBody )?
			int alt112=2;
			try { dbg.enterSubRule(112);
			try { dbg.enterDecision(112, decisionCanBacktrack[112]);

			int LA112_0 = input.LA(1);
			if ( ((LA112_0 >= AT_IDENT && LA112_0 <= AT_SIGN)||(LA112_0 >= BOTTOMCENTER_SYM && LA112_0 <= BOTTOMRIGHT_SYM)||(LA112_0 >= CHARSET_SYM && LA112_0 <= COLON)||LA112_0==COUNTER_STYLE_SYM||(LA112_0 >= DCOLON && LA112_0 <= DOT)||LA112_0==FONT_FACE_SYM||(LA112_0 >= GEN && LA112_0 <= GREATER)||(LA112_0 >= HASH && LA112_0 <= HASH_SYMBOL)||LA112_0==IDENT||LA112_0==IMPORT_SYM||(LA112_0 >= LBRACKET && LA112_0 <= LEFTTOP_SYM)||LA112_0==LESS_AND||(LA112_0 >= MEDIA_SYM && LA112_0 <= MOZ_DOCUMENT_SYM)||LA112_0==NAMESPACE_SYM||LA112_0==PAGE_SYM||(LA112_0 >= PIPE && LA112_0 <= PLUS)||(LA112_0 >= RIGHTBOTTOM_SYM && LA112_0 <= RIGHTTOP_SYM)||(LA112_0 >= SASS_AT_ROOT && LA112_0 <= SASS_DEBUG)||(LA112_0 >= SASS_EACH && LA112_0 <= SASS_ELSE)||(LA112_0 >= SASS_EXTEND && LA112_0 <= SASS_FOR)||LA112_0==SASS_FUNCTION||(LA112_0 >= SASS_IF && LA112_0 <= SASS_MIXIN)||LA112_0==SASS_RETURN||(LA112_0 >= SASS_VAR && LA112_0 <= SEMI)||LA112_0==STAR||LA112_0==SUPPORTS_SYM||LA112_0==TILDE||(LA112_0 >= TOPCENTER_SYM && LA112_0 <= TOPRIGHT_SYM)||LA112_0==VARIABLE||LA112_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt112=1;
			}
			} finally {dbg.exitDecision(112);}

			switch (alt112) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:499:65: mediaBody
					{
					dbg.location(499,65);
					pushFollow(FOLLOW_mediaBody_in_supportsAtRule2160);
					mediaBody();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(112);}
			dbg.location(499,76);
			match(input,RBRACE,FOLLOW_RBRACE_in_supportsAtRule2163); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(500, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsAtRule"



	// $ANTLR start "supportsCondition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:503:1: supportsCondition : ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? );
	public final void supportsCondition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsCondition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(503, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:504:2: ( NOT ws supportsInParens | supportsInParens ( ws supportsWithOperator )? )
			int alt114=2;
			try { dbg.enterDecision(114, decisionCanBacktrack[114]);

			int LA114_0 = input.LA(1);
			if ( (LA114_0==NOT) ) {
				alt114=1;
			}
			else if ( (LA114_0==LPAREN) ) {
				alt114=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 114, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(114);}

			switch (alt114) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:505:2: NOT ws supportsInParens
					{
					dbg.location(505,2);
					match(input,NOT,FOLLOW_NOT_in_supportsCondition2176); if (state.failed) return;dbg.location(505,6);
					pushFollow(FOLLOW_ws_in_supportsCondition2178);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(505,9);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2180);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:506:4: supportsInParens ( ws supportsWithOperator )?
					{
					dbg.location(506,4);
					pushFollow(FOLLOW_supportsInParens_in_supportsCondition2185);
					supportsInParens();
					state._fsp--;
					if (state.failed) return;dbg.location(506,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:506:21: ( ws supportsWithOperator )?
					int alt113=2;
					try { dbg.enterSubRule(113);
					try { dbg.enterDecision(113, decisionCanBacktrack[113]);

					try {
						isCyclicDecision = true;
						alt113 = dfa113.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(113);}

					switch (alt113) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:506:22: ws supportsWithOperator
							{
							dbg.location(506,22);
							pushFollow(FOLLOW_ws_in_supportsCondition2188);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(506,25);
							pushFollow(FOLLOW_supportsWithOperator_in_supportsCondition2190);
							supportsWithOperator();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(113);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(507, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsCondition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsCondition"



	// $ANTLR start "supportsWithOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:509:1: supportsWithOperator : ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* );
	public final void supportsWithOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsWithOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(509, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:510:9: ( supportsConjunction ( ws supportsConjunction )* | supportsDisjunction ( ws supportsDisjunction )* )
			int alt117=2;
			try { dbg.enterDecision(117, decisionCanBacktrack[117]);

			int LA117_0 = input.LA(1);
			if ( (LA117_0==IDENT) ) {
				int LA117_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt117=1;
				}
				else if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt117=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 117, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 117, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(117);}

			switch (alt117) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:9: supportsConjunction ( ws supportsConjunction )*
					{
					dbg.location(511,9);
					pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2218);
					supportsConjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(511,29);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:29: ( ws supportsConjunction )*
					try { dbg.enterSubRule(115);

					loop115:
					while (true) {
						int alt115=2;
						try { dbg.enterDecision(115, decisionCanBacktrack[115]);

						try {
							isCyclicDecision = true;
							alt115 = dfa115.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(115);}

						switch (alt115) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:511:30: ws supportsConjunction
							{
							dbg.location(511,30);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2221);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(511,33);
							pushFollow(FOLLOW_supportsConjunction_in_supportsWithOperator2223);
							supportsConjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop115;
						}
					}
					} finally {dbg.exitSubRule(115);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:11: supportsDisjunction ( ws supportsDisjunction )*
					{
					dbg.location(512,11);
					pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2237);
					supportsDisjunction();
					state._fsp--;
					if (state.failed) return;dbg.location(512,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:31: ( ws supportsDisjunction )*
					try { dbg.enterSubRule(116);

					loop116:
					while (true) {
						int alt116=2;
						try { dbg.enterDecision(116, decisionCanBacktrack[116]);

						try {
							isCyclicDecision = true;
							alt116 = dfa116.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(116);}

						switch (alt116) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:512:32: ws supportsDisjunction
							{
							dbg.location(512,32);
							pushFollow(FOLLOW_ws_in_supportsWithOperator2240);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(512,35);
							pushFollow(FOLLOW_supportsDisjunction_in_supportsWithOperator2242);
							supportsDisjunction();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop116;
						}
					}
					} finally {dbg.exitSubRule(116);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(513, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsWithOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsWithOperator"



	// $ANTLR start "supportsConjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:515:1: supportsConjunction : ( key_and ws supportsInParens ) ;
	public final void supportsConjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsConjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(515, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:516:9: ( ( key_and ws supportsInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:516:11: ( key_and ws supportsInParens )
			{
			dbg.location(516,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:516:11: ( key_and ws supportsInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:516:12: key_and ws supportsInParens
			{
			dbg.location(516,12);
			pushFollow(FOLLOW_key_and_in_supportsConjunction2270);
			key_and();
			state._fsp--;
			if (state.failed) return;dbg.location(516,20);
			pushFollow(FOLLOW_ws_in_supportsConjunction2272);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(516,23);
			pushFollow(FOLLOW_supportsInParens_in_supportsConjunction2274);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(517, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsConjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsConjunction"



	// $ANTLR start "supportsDisjunction"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:519:1: supportsDisjunction : ( key_or ws supportsInParens ) ;
	public final void supportsDisjunction() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDisjunction");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(519, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:9: ( ( key_or ws supportsInParens ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:11: ( key_or ws supportsInParens )
			{
			dbg.location(520,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:11: ( key_or ws supportsInParens )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:520:12: key_or ws supportsInParens
			{
			dbg.location(520,12);
			pushFollow(FOLLOW_key_or_in_supportsDisjunction2301);
			key_or();
			state._fsp--;
			if (state.failed) return;dbg.location(520,19);
			pushFollow(FOLLOW_ws_in_supportsDisjunction2303);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(520,22);
			pushFollow(FOLLOW_supportsInParens_in_supportsDisjunction2305);
			supportsInParens();
			state._fsp--;
			if (state.failed) return;
			}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(521, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDisjunction");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDisjunction"



	// $ANTLR start "supportsInParens"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:523:1: supportsInParens : LPAREN ( ws )? ( supportsCondition | supportsFeature ) ( ws )? RPAREN ;
	public final void supportsInParens() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsInParens");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(523, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:524:2: ( LPAREN ( ws )? ( supportsCondition | supportsFeature ) ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:2: LPAREN ( ws )? ( supportsCondition | supportsFeature ) ( ws )? RPAREN
			{
			dbg.location(525,2);
			match(input,LPAREN,FOLLOW_LPAREN_in_supportsInParens2325); if (state.failed) return;dbg.location(525,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ( ws )?
			int alt118=2;
			try { dbg.enterSubRule(118);
			try { dbg.enterDecision(118, decisionCanBacktrack[118]);

			int LA118_0 = input.LA(1);
			if ( (LA118_0==COMMENT||LA118_0==NL||LA118_0==WS) ) {
				alt118=1;
			}
			} finally {dbg.exitDecision(118);}

			switch (alt118) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:9: ws
					{
					dbg.location(525,9);
					pushFollow(FOLLOW_ws_in_supportsInParens2327);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(118);}
			dbg.location(525,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:13: ( supportsCondition | supportsFeature )
			int alt119=2;
			try { dbg.enterSubRule(119);
			try { dbg.enterDecision(119, decisionCanBacktrack[119]);

			int LA119_0 = input.LA(1);
			if ( (LA119_0==LPAREN||LA119_0==NOT) ) {
				alt119=1;
			}
			else if ( ((LA119_0 >= AT_IDENT && LA119_0 <= AT_SIGN)||(LA119_0 >= BOTTOMCENTER_SYM && LA119_0 <= BOTTOMRIGHT_SYM)||(LA119_0 >= CHARSET_SYM && LA119_0 <= COLON)||LA119_0==COUNTER_STYLE_SYM||(LA119_0 >= DCOLON && LA119_0 <= DOT)||LA119_0==FONT_FACE_SYM||(LA119_0 >= GEN && LA119_0 <= GREATER)||(LA119_0 >= HASH && LA119_0 <= HASH_SYMBOL)||LA119_0==IDENT||LA119_0==IMPORT_SYM||(LA119_0 >= LBRACKET && LA119_0 <= LEFTTOP_SYM)||LA119_0==LESS_AND||(LA119_0 >= MEDIA_SYM && LA119_0 <= MOZ_DOCUMENT_SYM)||LA119_0==NAMESPACE_SYM||LA119_0==PAGE_SYM||(LA119_0 >= PIPE && LA119_0 <= PLUS)||(LA119_0 >= RIGHTBOTTOM_SYM && LA119_0 <= RIGHTTOP_SYM)||(LA119_0 >= SASS_AT_ROOT && LA119_0 <= SASS_DEBUG)||(LA119_0 >= SASS_EACH && LA119_0 <= SASS_ELSE)||(LA119_0 >= SASS_ERROR && LA119_0 <= SASS_FOR)||LA119_0==SASS_FUNCTION||(LA119_0 >= SASS_IF && LA119_0 <= SASS_MIXIN)||LA119_0==SASS_RETURN||(LA119_0 >= SASS_VAR && LA119_0 <= SASS_WHILE)||LA119_0==STAR||LA119_0==SUPPORTS_SYM||LA119_0==TILDE||(LA119_0 >= TOPCENTER_SYM && LA119_0 <= TOPRIGHT_SYM)||LA119_0==VARIABLE||LA119_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt119=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 119, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(119);}

			switch (alt119) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:14: supportsCondition
					{
					dbg.location(525,14);
					pushFollow(FOLLOW_supportsCondition_in_supportsInParens2331);
					supportsCondition();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:34: supportsFeature
					{
					dbg.location(525,34);
					pushFollow(FOLLOW_supportsFeature_in_supportsInParens2335);
					supportsFeature();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(119);}
			dbg.location(525,51);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:51: ( ws )?
			int alt120=2;
			try { dbg.enterSubRule(120);
			try { dbg.enterDecision(120, decisionCanBacktrack[120]);

			int LA120_0 = input.LA(1);
			if ( (LA120_0==COMMENT||LA120_0==NL||LA120_0==WS) ) {
				alt120=1;
			}
			} finally {dbg.exitDecision(120);}

			switch (alt120) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:525:51: ws
					{
					dbg.location(525,51);
					pushFollow(FOLLOW_ws_in_supportsInParens2338);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(120);}
			dbg.location(525,55);
			match(input,RPAREN,FOLLOW_RPAREN_in_supportsInParens2341); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(526, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsInParens");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsInParens"



	// $ANTLR start "supportsFeature"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:528:1: supportsFeature : supportsDecl ;
	public final void supportsFeature() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsFeature");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(528, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:529:2: ( supportsDecl )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:530:2: supportsDecl
			{
			dbg.location(530,2);
			pushFollow(FOLLOW_supportsDecl_in_supportsFeature2354);
			supportsDecl();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(531, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsFeature");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsFeature"



	// $ANTLR start "supportsDecl"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:533:1: supportsDecl : declaration ;
	public final void supportsDecl() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "supportsDecl");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(533, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:534:2: ( declaration )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:535:2: declaration
			{
			dbg.location(535,2);
			pushFollow(FOLLOW_declaration_in_supportsDecl2367);
			declaration();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(536, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "supportsDecl");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "supportsDecl"



	// $ANTLR start "at_rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:538:1: at_rule : ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule );
	public final void at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(538, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:539:5: ( media | page | counterStyle | fontFace | supportsAtRule | vendorAtRule )
			int alt121=6;
			try { dbg.enterDecision(121, decisionCanBacktrack[121]);

			switch ( input.LA(1) ) {
			case MEDIA_SYM:
				{
				alt121=1;
				}
				break;
			case PAGE_SYM:
				{
				alt121=2;
				}
				break;
			case COUNTER_STYLE_SYM:
				{
				alt121=3;
				}
				break;
			case FONT_FACE_SYM:
				{
				alt121=4;
				}
				break;
			case SUPPORTS_SYM:
				{
				alt121=5;
				}
				break;
			case AT_IDENT:
			case MOZ_DOCUMENT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt121=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 121, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(121);}

			switch (alt121) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:540:5: media
					{
					dbg.location(540,5);
					pushFollow(FOLLOW_media_in_at_rule2385);
					media();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:541:7: page
					{
					dbg.location(541,7);
					pushFollow(FOLLOW_page_in_at_rule2393);
					page();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:542:7: counterStyle
					{
					dbg.location(542,7);
					pushFollow(FOLLOW_counterStyle_in_at_rule2401);
					counterStyle();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:543:7: fontFace
					{
					dbg.location(543,7);
					pushFollow(FOLLOW_fontFace_in_at_rule2409);
					fontFace();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:544:7: supportsAtRule
					{
					dbg.location(544,7);
					pushFollow(FOLLOW_supportsAtRule_in_at_rule2417);
					supportsAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:545:7: vendorAtRule
					{
					dbg.location(545,7);
					pushFollow(FOLLOW_vendorAtRule_in_at_rule2425);
					vendorAtRule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(546, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "at_rule"



	// $ANTLR start "vendorAtRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:548:1: vendorAtRule : ( moz_document | webkitKeyframes | generic_at_rule );
	public final void vendorAtRule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "vendorAtRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(548, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:3: ( moz_document | webkitKeyframes | generic_at_rule )
			int alt122=3;
			try { dbg.enterDecision(122, decisionCanBacktrack[122]);

			switch ( input.LA(1) ) {
			case MOZ_DOCUMENT_SYM:
				{
				alt122=1;
				}
				break;
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt122=2;
				}
				break;
			case AT_IDENT:
				{
				alt122=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 122, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(122);}

			switch (alt122) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:3: moz_document
					{
					dbg.location(549,3);
					pushFollow(FOLLOW_moz_document_in_vendorAtRule2438);
					moz_document();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:18: webkitKeyframes
					{
					dbg.location(549,18);
					pushFollow(FOLLOW_webkitKeyframes_in_vendorAtRule2442);
					webkitKeyframes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:549:36: generic_at_rule
					{
					dbg.location(549,36);
					pushFollow(FOLLOW_generic_at_rule_in_vendorAtRule2446);
					generic_at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(549, 50);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "vendorAtRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "vendorAtRule"



	// $ANTLR start "atRuleId"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:551:1: atRuleId : ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) );
	public final void atRuleId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "atRuleId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(551, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:552:2: ( IDENT | STRING |{...}? ( cp_variable | sass_interpolation_expression_var ) )
			int alt124=3;
			try { dbg.enterDecision(124, decisionCanBacktrack[124]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA124_1 = input.LA(2);
				if ( (LA124_1==DOT) ) {
					alt124=3;
				}
				else if ( (LA124_1==COMMENT||LA124_1==LBRACE||LA124_1==NL||LA124_1==WS) ) {
					alt124=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 124, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				alt124=2;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case HASH_SYMBOL:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt124=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 124, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(124);}

			switch (alt124) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:2: IDENT
					{
					dbg.location(553,2);
					match(input,IDENT,FOLLOW_IDENT_in_atRuleId2456); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:10: STRING
					{
					dbg.location(553,10);
					match(input,STRING,FOLLOW_STRING_in_atRuleId2460); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:19: {...}? ( cp_variable | sass_interpolation_expression_var )
					{
					dbg.location(553,19);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "atRuleId", "isCssPreprocessorSource()");
					}dbg.location(553,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:48: ( cp_variable | sass_interpolation_expression_var )
					int alt123=2;
					try { dbg.enterSubRule(123);
					try { dbg.enterDecision(123, decisionCanBacktrack[123]);

					int LA123_0 = input.LA(1);
					if ( (LA123_0==AT_IDENT||(LA123_0 >= BOTTOMCENTER_SYM && LA123_0 <= BOTTOMRIGHT_SYM)||LA123_0==CHARSET_SYM||LA123_0==COUNTER_STYLE_SYM||LA123_0==FONT_FACE_SYM||LA123_0==IDENT||LA123_0==IMPORT_SYM||(LA123_0 >= LEFTBOTTOM_SYM && LA123_0 <= LEFTTOP_SYM)||LA123_0==MEDIA_SYM||LA123_0==MOZ_DOCUMENT_SYM||LA123_0==NAMESPACE_SYM||LA123_0==PAGE_SYM||(LA123_0 >= RIGHTBOTTOM_SYM && LA123_0 <= RIGHTTOP_SYM)||(LA123_0 >= SASS_AT_ROOT && LA123_0 <= SASS_DEBUG)||(LA123_0 >= SASS_EACH && LA123_0 <= SASS_ELSE)||LA123_0==SASS_EXTEND||LA123_0==SASS_FOR||LA123_0==SASS_FUNCTION||(LA123_0 >= SASS_IF && LA123_0 <= SASS_MIXIN)||LA123_0==SASS_RETURN||(LA123_0 >= SASS_VAR && LA123_0 <= SASS_WHILE)||(LA123_0 >= TOPCENTER_SYM && LA123_0 <= TOPRIGHT_SYM)||LA123_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt123=1;
					}
					else if ( (LA123_0==HASH_SYMBOL) ) {
						alt123=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 123, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(123);}

					switch (alt123) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:50: cp_variable
							{
							dbg.location(553,50);
							pushFollow(FOLLOW_cp_variable_in_atRuleId2468);
							cp_variable();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:553:64: sass_interpolation_expression_var
							{
							dbg.location(553,64);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_atRuleId2472);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(123);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(554, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "atRuleId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "atRuleId"



	// $ANTLR start "generic_at_rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:556:1: generic_at_rule : AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE ;
	public final void generic_at_rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "generic_at_rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(556, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:5: ( AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:7: AT_IDENT ( ws )? ( atRuleId ( ws )? )? LBRACE syncTo_RBRACE RBRACE
			{
			dbg.location(557,7);
			match(input,AT_IDENT,FOLLOW_AT_IDENT_in_generic_at_rule2488); if (state.failed) return;dbg.location(557,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:16: ( ws )?
			int alt125=2;
			try { dbg.enterSubRule(125);
			try { dbg.enterDecision(125, decisionCanBacktrack[125]);

			int LA125_0 = input.LA(1);
			if ( (LA125_0==COMMENT||LA125_0==NL||LA125_0==WS) ) {
				alt125=1;
			}
			} finally {dbg.exitDecision(125);}

			switch (alt125) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:16: ws
					{
					dbg.location(557,16);
					pushFollow(FOLLOW_ws_in_generic_at_rule2490);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(125);}
			dbg.location(557,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:20: ( atRuleId ( ws )? )?
			int alt127=2;
			try { dbg.enterSubRule(127);
			try { dbg.enterDecision(127, decisionCanBacktrack[127]);

			int LA127_0 = input.LA(1);
			if ( (LA127_0==AT_IDENT||(LA127_0 >= BOTTOMCENTER_SYM && LA127_0 <= BOTTOMRIGHT_SYM)||LA127_0==CHARSET_SYM||LA127_0==COUNTER_STYLE_SYM||LA127_0==FONT_FACE_SYM||LA127_0==HASH_SYMBOL||LA127_0==IDENT||LA127_0==IMPORT_SYM||(LA127_0 >= LEFTBOTTOM_SYM && LA127_0 <= LEFTTOP_SYM)||LA127_0==MEDIA_SYM||LA127_0==MOZ_DOCUMENT_SYM||LA127_0==NAMESPACE_SYM||LA127_0==PAGE_SYM||(LA127_0 >= RIGHTBOTTOM_SYM && LA127_0 <= RIGHTTOP_SYM)||(LA127_0 >= SASS_AT_ROOT && LA127_0 <= SASS_DEBUG)||(LA127_0 >= SASS_EACH && LA127_0 <= SASS_ELSE)||LA127_0==SASS_EXTEND||LA127_0==SASS_FOR||LA127_0==SASS_FUNCTION||(LA127_0 >= SASS_IF && LA127_0 <= SASS_MIXIN)||LA127_0==SASS_RETURN||(LA127_0 >= SASS_VAR && LA127_0 <= SASS_WHILE)||LA127_0==STRING||(LA127_0 >= TOPCENTER_SYM && LA127_0 <= TOPRIGHT_SYM)||LA127_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt127=1;
			}
			} finally {dbg.exitDecision(127);}

			switch (alt127) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:22: atRuleId ( ws )?
					{
					dbg.location(557,22);
					pushFollow(FOLLOW_atRuleId_in_generic_at_rule2495);
					atRuleId();
					state._fsp--;
					if (state.failed) return;dbg.location(557,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:31: ( ws )?
					int alt126=2;
					try { dbg.enterSubRule(126);
					try { dbg.enterDecision(126, decisionCanBacktrack[126]);

					int LA126_0 = input.LA(1);
					if ( (LA126_0==COMMENT||LA126_0==NL||LA126_0==WS) ) {
						alt126=1;
					}
					} finally {dbg.exitDecision(126);}

					switch (alt126) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:557:31: ws
							{
							dbg.location(557,31);
							pushFollow(FOLLOW_ws_in_generic_at_rule2497);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(126);}

					}
					break;

			}
			} finally {dbg.exitSubRule(127);}
			dbg.location(558,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_generic_at_rule2511); if (state.failed) return;dbg.location(559,10);
			pushFollow(FOLLOW_syncTo_RBRACE_in_generic_at_rule2522);
			syncTo_RBRACE();
			state._fsp--;
			if (state.failed) return;dbg.location(560,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_generic_at_rule2532); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(561, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "generic_at_rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "generic_at_rule"



	// $ANTLR start "moz_document"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:562:1: moz_document : MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE ;
	public final void moz_document() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(562, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:563:2: ( MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:2: MOZ_DOCUMENT_SYM ( ws )? ( moz_document_function ( ws )? ) ( COMMA ( ws )? moz_document_function ( ws )? )* LBRACE ( ws )? ( body )? RBRACE
			{
			dbg.location(564,2);
			match(input,MOZ_DOCUMENT_SYM,FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document2543); if (state.failed) return;dbg.location(564,19);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:19: ( ws )?
			int alt128=2;
			try { dbg.enterSubRule(128);
			try { dbg.enterDecision(128, decisionCanBacktrack[128]);

			int LA128_0 = input.LA(1);
			if ( (LA128_0==COMMENT||LA128_0==NL||LA128_0==WS) ) {
				alt128=1;
			}
			} finally {dbg.exitDecision(128);}

			switch (alt128) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:19: ws
					{
					dbg.location(564,19);
					pushFollow(FOLLOW_ws_in_moz_document2545);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(128);}
			dbg.location(564,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:23: ( moz_document_function ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:25: moz_document_function ( ws )?
			{
			dbg.location(564,25);
			pushFollow(FOLLOW_moz_document_function_in_moz_document2550);
			moz_document_function();
			state._fsp--;
			if (state.failed) return;dbg.location(564,47);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:47: ( ws )?
			int alt129=2;
			try { dbg.enterSubRule(129);
			try { dbg.enterDecision(129, decisionCanBacktrack[129]);

			int LA129_0 = input.LA(1);
			if ( (LA129_0==COMMENT||LA129_0==NL||LA129_0==WS) ) {
				alt129=1;
			}
			} finally {dbg.exitDecision(129);}

			switch (alt129) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:47: ws
					{
					dbg.location(564,47);
					pushFollow(FOLLOW_ws_in_moz_document2552);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(129);}

			}
			dbg.location(564,52);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:52: ( COMMA ( ws )? moz_document_function ( ws )? )*
			try { dbg.enterSubRule(132);

			loop132:
			while (true) {
				int alt132=2;
				try { dbg.enterDecision(132, decisionCanBacktrack[132]);

				int LA132_0 = input.LA(1);
				if ( (LA132_0==COMMA) ) {
					alt132=1;
				}

				} finally {dbg.exitDecision(132);}

				switch (alt132) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:54: COMMA ( ws )? moz_document_function ( ws )?
					{
					dbg.location(564,54);
					match(input,COMMA,FOLLOW_COMMA_in_moz_document2558); if (state.failed) return;dbg.location(564,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:60: ( ws )?
					int alt130=2;
					try { dbg.enterSubRule(130);
					try { dbg.enterDecision(130, decisionCanBacktrack[130]);

					int LA130_0 = input.LA(1);
					if ( (LA130_0==COMMENT||LA130_0==NL||LA130_0==WS) ) {
						alt130=1;
					}
					} finally {dbg.exitDecision(130);}

					switch (alt130) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:60: ws
							{
							dbg.location(564,60);
							pushFollow(FOLLOW_ws_in_moz_document2560);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(130);}
					dbg.location(564,64);
					pushFollow(FOLLOW_moz_document_function_in_moz_document2563);
					moz_document_function();
					state._fsp--;
					if (state.failed) return;dbg.location(564,86);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:86: ( ws )?
					int alt131=2;
					try { dbg.enterSubRule(131);
					try { dbg.enterDecision(131, decisionCanBacktrack[131]);

					int LA131_0 = input.LA(1);
					if ( (LA131_0==COMMENT||LA131_0==NL||LA131_0==WS) ) {
						alt131=1;
					}
					} finally {dbg.exitDecision(131);}

					switch (alt131) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:564:86: ws
							{
							dbg.location(564,86);
							pushFollow(FOLLOW_ws_in_moz_document2565);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(131);}

					}
					break;

				default :
					break loop132;
				}
			}
			} finally {dbg.exitSubRule(132);}
			dbg.location(565,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_moz_document2572); if (state.failed) return;dbg.location(565,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:9: ( ws )?
			int alt133=2;
			try { dbg.enterSubRule(133);
			try { dbg.enterDecision(133, decisionCanBacktrack[133]);

			int LA133_0 = input.LA(1);
			if ( (LA133_0==COMMENT||LA133_0==NL||LA133_0==WS) ) {
				alt133=1;
			}
			} finally {dbg.exitDecision(133);}

			switch (alt133) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:565:9: ws
					{
					dbg.location(565,9);
					pushFollow(FOLLOW_ws_in_moz_document2574);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(133);}
			dbg.location(566,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:3: ( body )?
			int alt134=2;
			try { dbg.enterSubRule(134);
			try { dbg.enterDecision(134, decisionCanBacktrack[134]);

			int LA134_0 = input.LA(1);
			if ( ((LA134_0 >= AT_IDENT && LA134_0 <= AT_SIGN)||(LA134_0 >= BOTTOMCENTER_SYM && LA134_0 <= BOTTOMRIGHT_SYM)||(LA134_0 >= CHARSET_SYM && LA134_0 <= COLON)||LA134_0==COUNTER_STYLE_SYM||(LA134_0 >= DCOLON && LA134_0 <= DOT)||LA134_0==FONT_FACE_SYM||(LA134_0 >= GEN && LA134_0 <= GREATER)||(LA134_0 >= HASH && LA134_0 <= HASH_SYMBOL)||LA134_0==IDENT||LA134_0==IMPORT_SYM||(LA134_0 >= LBRACKET && LA134_0 <= LEFTTOP_SYM)||LA134_0==LESS_AND||(LA134_0 >= MEDIA_SYM && LA134_0 <= MOZ_DOCUMENT_SYM)||LA134_0==NAMESPACE_SYM||LA134_0==PAGE_SYM||(LA134_0 >= PIPE && LA134_0 <= PLUS)||(LA134_0 >= RIGHTBOTTOM_SYM && LA134_0 <= RIGHTTOP_SYM)||(LA134_0 >= SASS_AT_ROOT && LA134_0 <= SASS_DEBUG)||(LA134_0 >= SASS_EACH && LA134_0 <= SASS_ELSE)||(LA134_0 >= SASS_EXTEND && LA134_0 <= SASS_FOR)||LA134_0==SASS_FUNCTION||(LA134_0 >= SASS_IF && LA134_0 <= SASS_MIXIN)||LA134_0==SASS_RETURN||(LA134_0 >= SASS_VAR && LA134_0 <= SEMI)||LA134_0==STAR||LA134_0==SUPPORTS_SYM||LA134_0==TILDE||(LA134_0 >= TOPCENTER_SYM && LA134_0 <= TOPRIGHT_SYM)||LA134_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt134=1;
			}
			} finally {dbg.exitDecision(134);}

			switch (alt134) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:566:3: body
					{
					dbg.location(566,3);
					pushFollow(FOLLOW_body_in_moz_document2579);
					body();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(134);}
			dbg.location(567,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_moz_document2584); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(568, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document"



	// $ANTLR start "moz_document_function"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:570:1: moz_document_function : ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP );
	public final void moz_document_function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "moz_document_function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(570, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:571:2: ( URI | MOZ_URL_PREFIX | MOZ_DOMAIN | MOZ_REGEXP )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(571,2);
			if ( (input.LA(1) >= MOZ_DOMAIN && input.LA(1) <= MOZ_URL_PREFIX)||input.LA(1)==URI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(573, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "moz_document_function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "moz_document_function"



	// $ANTLR start "webkitKeyframes"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:576:1: webkitKeyframes : WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE ;
	public final void webkitKeyframes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(576, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:577:2: ( WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:2: WEBKIT_KEYFRAMES_SYM ( ws )? atRuleId ( ws )? LBRACE ( ws )? ( webkitKeyframesBlock ( ws )? )* RBRACE
			{
			dbg.location(578,2);
			match(input,WEBKIT_KEYFRAMES_SYM,FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes2621); if (state.failed) return;dbg.location(578,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:23: ( ws )?
			int alt135=2;
			try { dbg.enterSubRule(135);
			try { dbg.enterDecision(135, decisionCanBacktrack[135]);

			int LA135_0 = input.LA(1);
			if ( (LA135_0==COMMENT||LA135_0==NL||LA135_0==WS) ) {
				alt135=1;
			}
			} finally {dbg.exitDecision(135);}

			switch (alt135) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:23: ws
					{
					dbg.location(578,23);
					pushFollow(FOLLOW_ws_in_webkitKeyframes2623);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(135);}
			dbg.location(578,27);
			pushFollow(FOLLOW_atRuleId_in_webkitKeyframes2626);
			atRuleId();
			state._fsp--;
			if (state.failed) return;dbg.location(578,36);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:36: ( ws )?
			int alt136=2;
			try { dbg.enterSubRule(136);
			try { dbg.enterDecision(136, decisionCanBacktrack[136]);

			int LA136_0 = input.LA(1);
			if ( (LA136_0==COMMENT||LA136_0==NL||LA136_0==WS) ) {
				alt136=1;
			}
			} finally {dbg.exitDecision(136);}

			switch (alt136) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:578:36: ws
					{
					dbg.location(578,36);
					pushFollow(FOLLOW_ws_in_webkitKeyframes2628);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(136);}
			dbg.location(579,2);
			match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframes2632); if (state.failed) return;dbg.location(579,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ( ws )?
			int alt137=2;
			try { dbg.enterSubRule(137);
			try { dbg.enterDecision(137, decisionCanBacktrack[137]);

			int LA137_0 = input.LA(1);
			if ( (LA137_0==COMMENT||LA137_0==NL||LA137_0==WS) ) {
				alt137=1;
			}
			} finally {dbg.exitDecision(137);}

			switch (alt137) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:579:9: ws
					{
					dbg.location(579,9);
					pushFollow(FOLLOW_ws_in_webkitKeyframes2634);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(137);}
			dbg.location(580,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:3: ( webkitKeyframesBlock ( ws )? )*
			try { dbg.enterSubRule(139);

			loop139:
			while (true) {
				int alt139=2;
				try { dbg.enterDecision(139, decisionCanBacktrack[139]);

				int LA139_0 = input.LA(1);
				if ( (LA139_0==IDENT||LA139_0==PERCENTAGE||LA139_0==SASS_CONTENT) ) {
					alt139=1;
				}

				} finally {dbg.exitDecision(139);}

				switch (alt139) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:5: webkitKeyframesBlock ( ws )?
					{
					dbg.location(580,5);
					pushFollow(FOLLOW_webkitKeyframesBlock_in_webkitKeyframes2641);
					webkitKeyframesBlock();
					state._fsp--;
					if (state.failed) return;dbg.location(580,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:26: ( ws )?
					int alt138=2;
					try { dbg.enterSubRule(138);
					try { dbg.enterDecision(138, decisionCanBacktrack[138]);

					int LA138_0 = input.LA(1);
					if ( (LA138_0==COMMENT||LA138_0==NL||LA138_0==WS) ) {
						alt138=1;
					}
					} finally {dbg.exitDecision(138);}

					switch (alt138) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:580:26: ws
							{
							dbg.location(580,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframes2643);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(138);}

					}
					break;

				default :
					break loop139;
				}
			}
			} finally {dbg.exitSubRule(139);}
			dbg.location(581,2);
			match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframes2650); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(582, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframes"



	// $ANTLR start "webkitKeyframesBlock"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:584:1: webkitKeyframesBlock : ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? );
	public final void webkitKeyframesBlock() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframesBlock");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(584, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:585:2: ( webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE |{...}?{...}? sass_content ( SEMI )? )
			int alt144=2;
			try { dbg.enterDecision(144, decisionCanBacktrack[144]);

			int LA144_0 = input.LA(1);
			if ( (LA144_0==IDENT||LA144_0==PERCENTAGE) ) {
				alt144=1;
			}
			else if ( (LA144_0==SASS_CONTENT) ) {
				alt144=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 144, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(144);}

			switch (alt144) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:586:2: webkitKeyframeSelectors ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(586,2);
					pushFollow(FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock2662);
					webkitKeyframeSelectors();
					state._fsp--;
					if (state.failed) return;dbg.location(586,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:586:26: ( ws )?
					int alt140=2;
					try { dbg.enterSubRule(140);
					try { dbg.enterDecision(140, decisionCanBacktrack[140]);

					int LA140_0 = input.LA(1);
					if ( (LA140_0==COMMENT||LA140_0==NL||LA140_0==WS) ) {
						alt140=1;
					}
					} finally {dbg.exitDecision(140);}

					switch (alt140) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:586:26: ws
							{
							dbg.location(586,26);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock2664);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(140);}
					dbg.location(587,2);
					match(input,LBRACE,FOLLOW_LBRACE_in_webkitKeyframesBlock2668); if (state.failed) return;dbg.location(587,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:587:10: ( ws )?
					int alt141=2;
					try { dbg.enterSubRule(141);
					try { dbg.enterDecision(141, decisionCanBacktrack[141]);

					int LA141_0 = input.LA(1);
					if ( (LA141_0==COMMENT||LA141_0==NL||LA141_0==WS) ) {
						alt141=1;
					}
					} finally {dbg.exitDecision(141);}

					switch (alt141) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:587:10: ws
							{
							dbg.location(587,10);
							pushFollow(FOLLOW_ws_in_webkitKeyframesBlock2671);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(141);}
					dbg.location(587,14);
					pushFollow(FOLLOW_syncToFollow_in_webkitKeyframesBlock2674);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(588,3);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:3: ( declarations )?
					int alt142=2;
					try { dbg.enterSubRule(142);
					try { dbg.enterDecision(142, decisionCanBacktrack[142]);

					int LA142_0 = input.LA(1);
					if ( ((LA142_0 >= AT_IDENT && LA142_0 <= AT_SIGN)||(LA142_0 >= BOTTOMCENTER_SYM && LA142_0 <= BOTTOMRIGHT_SYM)||(LA142_0 >= CHARSET_SYM && LA142_0 <= COLON)||LA142_0==COUNTER_STYLE_SYM||(LA142_0 >= DCOLON && LA142_0 <= DOT)||LA142_0==FONT_FACE_SYM||(LA142_0 >= GEN && LA142_0 <= GREATER)||(LA142_0 >= HASH && LA142_0 <= HASH_SYMBOL)||LA142_0==IDENT||LA142_0==IMPORT_SYM||(LA142_0 >= LBRACKET && LA142_0 <= LEFTTOP_SYM)||LA142_0==LESS_AND||(LA142_0 >= MEDIA_SYM && LA142_0 <= MOZ_DOCUMENT_SYM)||LA142_0==NAMESPACE_SYM||LA142_0==PAGE_SYM||(LA142_0 >= PIPE && LA142_0 <= PLUS)||(LA142_0 >= RIGHTBOTTOM_SYM && LA142_0 <= RIGHTTOP_SYM)||(LA142_0 >= SASS_AT_ROOT && LA142_0 <= SASS_DEBUG)||(LA142_0 >= SASS_EACH && LA142_0 <= SASS_ELSE)||(LA142_0 >= SASS_ERROR && LA142_0 <= SASS_FOR)||LA142_0==SASS_FUNCTION||(LA142_0 >= SASS_IF && LA142_0 <= SASS_MIXIN)||LA142_0==SASS_RETURN||(LA142_0 >= SASS_VAR && LA142_0 <= SEMI)||LA142_0==STAR||LA142_0==SUPPORTS_SYM||LA142_0==TILDE||(LA142_0 >= TOPCENTER_SYM && LA142_0 <= TOPRIGHT_SYM)||LA142_0==VARIABLE||LA142_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt142=1;
					}
					} finally {dbg.exitDecision(142);}

					switch (alt142) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:588:3: declarations
							{
							dbg.location(588,3);
							pushFollow(FOLLOW_declarations_in_webkitKeyframesBlock2678);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(142);}
					dbg.location(589,2);
					match(input,RBRACE,FOLLOW_RBRACE_in_webkitKeyframesBlock2682); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:590:11: {...}?{...}? sass_content ( SEMI )?
					{
					dbg.location(590,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(590,30);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframesBlock", "isScssSource()");
					}dbg.location(590,48);
					pushFollow(FOLLOW_sass_content_in_webkitKeyframesBlock2699);
					sass_content();
					state._fsp--;
					if (state.failed) return;dbg.location(590,61);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:590:61: ( SEMI )?
					int alt143=2;
					try { dbg.enterSubRule(143);
					try { dbg.enterDecision(143, decisionCanBacktrack[143]);

					int LA143_0 = input.LA(1);
					if ( (LA143_0==SEMI) ) {
						alt143=1;
					}
					} finally {dbg.exitDecision(143);}

					switch (alt143) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:590:61: SEMI
							{
							dbg.location(590,61);
							match(input,SEMI,FOLLOW_SEMI_in_webkitKeyframesBlock2701); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(143);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(591, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframesBlock");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframesBlock"



	// $ANTLR start "webkitKeyframeSelectors"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:593:1: webkitKeyframeSelectors : ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* ;
	public final void webkitKeyframeSelectors() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "webkitKeyframeSelectors");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(593, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:594:2: ( ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE ) ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			{
			dbg.location(595,2);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:2: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
			int alt145=3;
			try { dbg.enterSubRule(145);
			try { dbg.enterDecision(145, decisionCanBacktrack[145]);

			int LA145_0 = input.LA(1);
			if ( (LA145_0==IDENT) ) {
				int LA145_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
					alt145=1;
				}
				else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
					alt145=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 145, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA145_0==PERCENTAGE) ) {
				alt145=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 145, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(145);}

			switch (alt145) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:4: {...}? IDENT
					{
					dbg.location(595,4);
					if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
					}dbg.location(595,31);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors2718); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:39: {...}? IDENT
					{
					dbg.location(595,39);
					if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
					}dbg.location(595,64);
					match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors2724); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:72: PERCENTAGE
					{
					dbg.location(595,72);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors2728); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(145);}
			dbg.location(595,85);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*
			try { dbg.enterSubRule(149);

			loop149:
			while (true) {
				int alt149=2;
				try { dbg.enterDecision(149, decisionCanBacktrack[149]);

				try {
					isCyclicDecision = true;
					alt149 = dfa149.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(149);}

				switch (alt149) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:87: ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					{
					dbg.location(595,87);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:87: ( ws )?
					int alt146=2;
					try { dbg.enterSubRule(146);
					try { dbg.enterDecision(146, decisionCanBacktrack[146]);

					int LA146_0 = input.LA(1);
					if ( (LA146_0==COMMENT||LA146_0==NL||LA146_0==WS) ) {
						alt146=1;
					}
					} finally {dbg.exitDecision(146);}

					switch (alt146) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:87: ws
							{
							dbg.location(595,87);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors2734);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(146);}
					dbg.location(595,91);
					match(input,COMMA,FOLLOW_COMMA_in_webkitKeyframeSelectors2737); if (state.failed) return;dbg.location(595,97);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:97: ( ws )?
					int alt147=2;
					try { dbg.enterSubRule(147);
					try { dbg.enterDecision(147, decisionCanBacktrack[147]);

					int LA147_0 = input.LA(1);
					if ( (LA147_0==COMMENT||LA147_0==NL||LA147_0==WS) ) {
						alt147=1;
					}
					} finally {dbg.exitDecision(147);}

					switch (alt147) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:97: ws
							{
							dbg.location(595,97);
							pushFollow(FOLLOW_ws_in_webkitKeyframeSelectors2739);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(147);}
					dbg.location(595,101);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:101: ({...}? IDENT |{...}? IDENT | PERCENTAGE )
					int alt148=3;
					try { dbg.enterSubRule(148);
					try { dbg.enterDecision(148, decisionCanBacktrack[148]);

					int LA148_0 = input.LA(1);
					if ( (LA148_0==IDENT) ) {
						int LA148_1 = input.LA(2);
						if ( (evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
							alt148=1;
						}
						else if ( (evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
							alt148=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 148, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA148_0==PERCENTAGE) ) {
						alt148=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 148, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(148);}

					switch (alt148) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:103: {...}? IDENT
							{
							dbg.location(595,103);
							if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"from\")");
							}dbg.location(595,130);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors2746); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:138: {...}? IDENT
							{
							dbg.location(595,138);
							if ( !(evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "webkitKeyframeSelectors", "tokenNameEquals(\"to\")");
							}dbg.location(595,163);
							match(input,IDENT,FOLLOW_IDENT_in_webkitKeyframeSelectors2752); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:595:171: PERCENTAGE
							{
							dbg.location(595,171);
							match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors2756); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(148);}

					}
					break;

				default :
					break loop149;
				}
			}
			} finally {dbg.exitSubRule(149);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(596, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "webkitKeyframeSelectors");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "webkitKeyframeSelectors"



	// $ANTLR start "page"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:598:1: page : PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE ;
	public final void page() throws RecognitionException {

		    boolean semiRequired = false;

		try { dbg.enterRule(getGrammarFileName(), "page");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(598, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:5: ( PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:7: PAGE_SYM ( ws )? ( IDENT ( ws )? )? ( pseudoPage ( ws )? )? LBRACE ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )* ( SEMI )? ( ws )? RBRACE
			{
			dbg.location(602,7);
			match(input,PAGE_SYM,FOLLOW_PAGE_SYM_in_page2780); if (state.failed) return;dbg.location(602,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:16: ( ws )?
			int alt150=2;
			try { dbg.enterSubRule(150);
			try { dbg.enterDecision(150, decisionCanBacktrack[150]);

			int LA150_0 = input.LA(1);
			if ( (LA150_0==COMMENT||LA150_0==NL||LA150_0==WS) ) {
				alt150=1;
			}
			} finally {dbg.exitDecision(150);}

			switch (alt150) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:16: ws
					{
					dbg.location(602,16);
					pushFollow(FOLLOW_ws_in_page2782);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(150);}
			dbg.location(602,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:20: ( IDENT ( ws )? )?
			int alt152=2;
			try { dbg.enterSubRule(152);
			try { dbg.enterDecision(152, decisionCanBacktrack[152]);

			int LA152_0 = input.LA(1);
			if ( (LA152_0==IDENT) ) {
				alt152=1;
			}
			} finally {dbg.exitDecision(152);}

			switch (alt152) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:22: IDENT ( ws )?
					{
					dbg.location(602,22);
					match(input,IDENT,FOLLOW_IDENT_in_page2787); if (state.failed) return;dbg.location(602,28);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:28: ( ws )?
					int alt151=2;
					try { dbg.enterSubRule(151);
					try { dbg.enterDecision(151, decisionCanBacktrack[151]);

					int LA151_0 = input.LA(1);
					if ( (LA151_0==COMMENT||LA151_0==NL||LA151_0==WS) ) {
						alt151=1;
					}
					} finally {dbg.exitDecision(151);}

					switch (alt151) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:28: ws
							{
							dbg.location(602,28);
							pushFollow(FOLLOW_ws_in_page2789);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(151);}

					}
					break;

			}
			} finally {dbg.exitSubRule(152);}
			dbg.location(602,35);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:35: ( pseudoPage ( ws )? )?
			int alt154=2;
			try { dbg.enterSubRule(154);
			try { dbg.enterDecision(154, decisionCanBacktrack[154]);

			int LA154_0 = input.LA(1);
			if ( (LA154_0==COLON) ) {
				alt154=1;
			}
			} finally {dbg.exitDecision(154);}

			switch (alt154) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:36: pseudoPage ( ws )?
					{
					dbg.location(602,36);
					pushFollow(FOLLOW_pseudoPage_in_page2796);
					pseudoPage();
					state._fsp--;
					if (state.failed) return;dbg.location(602,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:47: ( ws )?
					int alt153=2;
					try { dbg.enterSubRule(153);
					try { dbg.enterDecision(153, decisionCanBacktrack[153]);

					int LA153_0 = input.LA(1);
					if ( (LA153_0==COMMENT||LA153_0==NL||LA153_0==WS) ) {
						alt153=1;
					}
					} finally {dbg.exitDecision(153);}

					switch (alt153) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:602:47: ws
							{
							dbg.location(602,47);
							pushFollow(FOLLOW_ws_in_page2798);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(153);}

					}
					break;

			}
			} finally {dbg.exitSubRule(154);}
			dbg.location(603,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_page2811); if (state.failed) return;dbg.location(606,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*
			try { dbg.enterSubRule(161);

			loop161:
			while (true) {
				int alt161=2;
				try { dbg.enterDecision(161, decisionCanBacktrack[161]);

				try {
					isCyclicDecision = true;
					alt161 = dfa161.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(161);}

				switch (alt161) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:15: ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin )
					{
					dbg.location(606,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:15: ( ws )?
					int alt155=2;
					try { dbg.enterSubRule(155);
					try { dbg.enterDecision(155, decisionCanBacktrack[155]);

					int LA155_0 = input.LA(1);
					if ( (LA155_0==COMMENT||LA155_0==NL||LA155_0==WS) ) {
						alt155=1;
					}
					} finally {dbg.exitDecision(155);}

					switch (alt155) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:15: ws
							{
							dbg.location(606,15);
							pushFollow(FOLLOW_ws_in_page2853);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(155);}
					dbg.location(606,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:19: ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? )
					int alt159=2;
					try { dbg.enterSubRule(159);
					try { dbg.enterDecision(159, decisionCanBacktrack[159]);

					int LA159_0 = input.LA(1);
					if ( (LA159_0==SEMI) ) {
						int LA159_1 = input.LA(2);
						if ( (evalPredicate(semiRequired,"semiRequired")) ) {
							alt159=1;
						}
						else if ( (true) ) {
							alt159=2;
						}

					}
					else if ( ((LA159_0 >= AT_IDENT && LA159_0 <= AT_SIGN)||(LA159_0 >= BOTTOMCENTER_SYM && LA159_0 <= BOTTOMRIGHT_SYM)||LA159_0==CHARSET_SYM||LA159_0==COUNTER_STYLE_SYM||LA159_0==FONT_FACE_SYM||LA159_0==GEN||LA159_0==HASH_SYMBOL||LA159_0==IDENT||LA159_0==IMPORT_SYM||(LA159_0 >= LEFTBOTTOM_SYM && LA159_0 <= LEFTTOP_SYM)||(LA159_0 >= MEDIA_SYM && LA159_0 <= MOZ_DOCUMENT_SYM)||LA159_0==NAMESPACE_SYM||LA159_0==PAGE_SYM||(LA159_0 >= RIGHTBOTTOM_SYM && LA159_0 <= RIGHTTOP_SYM)||(LA159_0 >= SASS_AT_ROOT && LA159_0 <= SASS_DEBUG)||(LA159_0 >= SASS_EACH && LA159_0 <= SASS_ELSE)||LA159_0==SASS_EXTEND||LA159_0==SASS_FOR||LA159_0==SASS_FUNCTION||(LA159_0 >= SASS_IF && LA159_0 <= SASS_MIXIN)||LA159_0==SASS_RETURN||(LA159_0 >= SASS_VAR && LA159_0 <= SASS_WHILE)||LA159_0==STAR||(LA159_0 >= TOPCENTER_SYM && LA159_0 <= TOPRIGHT_SYM)||LA159_0==VARIABLE||LA159_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt159=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 159, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(159);}

					switch (alt159) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:20: {...}? ( SEMI ( ws )? )
							{
							dbg.location(606,20);
							if ( !(evalPredicate(semiRequired,"semiRequired")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "page", "semiRequired");
							}dbg.location(606,36);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:36: ( SEMI ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:37: SEMI ( ws )?
							{
							dbg.location(606,37);
							match(input,SEMI,FOLLOW_SEMI_in_page2860); if (state.failed) return;dbg.location(606,42);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:42: ( ws )?
							int alt156=2;
							try { dbg.enterSubRule(156);
							try { dbg.enterDecision(156, decisionCanBacktrack[156]);

							int LA156_0 = input.LA(1);
							if ( (LA156_0==COMMENT||LA156_0==NL||LA156_0==WS) ) {
								alt156=1;
							}
							} finally {dbg.exitDecision(156);}

							switch (alt156) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:42: ws
									{
									dbg.location(606,42);
									pushFollow(FOLLOW_ws_in_page2862);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(156);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:49: ( SEMI ( ws )? )?
							{
							dbg.location(606,49);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:49: ( SEMI ( ws )? )?
							int alt158=2;
							try { dbg.enterSubRule(158);
							try { dbg.enterDecision(158, decisionCanBacktrack[158]);

							int LA158_0 = input.LA(1);
							if ( (LA158_0==SEMI) ) {
								alt158=1;
							}
							} finally {dbg.exitDecision(158);}

							switch (alt158) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:50: SEMI ( ws )?
									{
									dbg.location(606,50);
									match(input,SEMI,FOLLOW_SEMI_in_page2869); if (state.failed) return;dbg.location(606,55);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:55: ( ws )?
									int alt157=2;
									try { dbg.enterSubRule(157);
									try { dbg.enterDecision(157, decisionCanBacktrack[157]);

									int LA157_0 = input.LA(1);
									if ( (LA157_0==COMMENT||LA157_0==NL||LA157_0==WS) ) {
										alt157=1;
									}
									} finally {dbg.exitDecision(157);}

									switch (alt157) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:55: ws
											{
											dbg.location(606,55);
											pushFollow(FOLLOW_ws_in_page2871);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(157);}

									}
									break;

							}
							} finally {dbg.exitSubRule(158);}

							}
							break;

					}
					} finally {dbg.exitSubRule(159);}
					dbg.location(606,62);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:62: ( propertyDeclaration | margin )
					int alt160=2;
					try { dbg.enterSubRule(160);
					try { dbg.enterDecision(160, decisionCanBacktrack[160]);

					try {
						isCyclicDecision = true;
						alt160 = dfa160.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(160);}

					switch (alt160) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:63: propertyDeclaration
							{
							dbg.location(606,63);
							pushFollow(FOLLOW_propertyDeclaration_in_page2878);
							propertyDeclaration();
							state._fsp--;
							if (state.failed) return;dbg.location(606,82);
							if ( state.backtracking==0 ) {semiRequired=true;}
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:606:103: margin
							{
							dbg.location(606,103);
							pushFollow(FOLLOW_margin_in_page2881);
							margin();
							state._fsp--;
							if (state.failed) return;dbg.location(606,109);
							if ( state.backtracking==0 ) {semiRequired=false;}
							}
							break;

					}
					} finally {dbg.exitSubRule(160);}

					}
					break;

				default :
					break loop161;
				}
			}
			} finally {dbg.exitSubRule(161);}
			dbg.location(607,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:607:13: ( SEMI )?
			int alt162=2;
			try { dbg.enterSubRule(162);
			try { dbg.enterDecision(162, decisionCanBacktrack[162]);

			int LA162_0 = input.LA(1);
			if ( (LA162_0==SEMI) ) {
				alt162=1;
			}
			} finally {dbg.exitDecision(162);}

			switch (alt162) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:607:13: SEMI
					{
					dbg.location(607,13);
					match(input,SEMI,FOLLOW_SEMI_in_page2899); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(162);}
			dbg.location(608,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:13: ( ws )?
			int alt163=2;
			try { dbg.enterSubRule(163);
			try { dbg.enterDecision(163, decisionCanBacktrack[163]);

			int LA163_0 = input.LA(1);
			if ( (LA163_0==COMMENT||LA163_0==NL||LA163_0==WS) ) {
				alt163=1;
			}
			} finally {dbg.exitDecision(163);}

			switch (alt163) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:608:13: ws
					{
					dbg.location(608,13);
					pushFollow(FOLLOW_ws_in_page2914);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(163);}
			dbg.location(609,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_page2925); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(610, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "page");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "page"



	// $ANTLR start "counterStyle"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:612:1: counterStyle : COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void counterStyle() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "counterStyle");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(612, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:613:5: ( COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:613:7: COUNTER_STYLE_SYM ( ws )? IDENT ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(613,7);
			match(input,COUNTER_STYLE_SYM,FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2942); if (state.failed) return;dbg.location(613,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:613:25: ( ws )?
			int alt164=2;
			try { dbg.enterSubRule(164);
			try { dbg.enterDecision(164, decisionCanBacktrack[164]);

			int LA164_0 = input.LA(1);
			if ( (LA164_0==COMMENT||LA164_0==NL||LA164_0==WS) ) {
				alt164=1;
			}
			} finally {dbg.exitDecision(164);}

			switch (alt164) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:613:25: ws
					{
					dbg.location(613,25);
					pushFollow(FOLLOW_ws_in_counterStyle2944);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(164);}
			dbg.location(613,29);
			match(input,IDENT,FOLLOW_IDENT_in_counterStyle2947); if (state.failed) return;dbg.location(613,35);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:613:35: ( ws )?
			int alt165=2;
			try { dbg.enterSubRule(165);
			try { dbg.enterDecision(165, decisionCanBacktrack[165]);

			int LA165_0 = input.LA(1);
			if ( (LA165_0==COMMENT||LA165_0==NL||LA165_0==WS) ) {
				alt165=1;
			}
			} finally {dbg.exitDecision(165);}

			switch (alt165) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:613:35: ws
					{
					dbg.location(613,35);
					pushFollow(FOLLOW_ws_in_counterStyle2949);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(165);}
			dbg.location(614,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_counterStyle2960); if (state.failed) return;dbg.location(614,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:614:16: ( ws )?
			int alt166=2;
			try { dbg.enterSubRule(166);
			try { dbg.enterDecision(166, decisionCanBacktrack[166]);

			int LA166_0 = input.LA(1);
			if ( (LA166_0==COMMENT||LA166_0==NL||LA166_0==WS) ) {
				alt166=1;
			}
			} finally {dbg.exitDecision(166);}

			switch (alt166) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:614:16: ws
					{
					dbg.location(614,16);
					pushFollow(FOLLOW_ws_in_counterStyle2962);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(166);}
			dbg.location(614,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_counterStyle2965);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(615,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:615:3: ( declarations )?
			int alt167=2;
			try { dbg.enterSubRule(167);
			try { dbg.enterDecision(167, decisionCanBacktrack[167]);

			int LA167_0 = input.LA(1);
			if ( ((LA167_0 >= AT_IDENT && LA167_0 <= AT_SIGN)||(LA167_0 >= BOTTOMCENTER_SYM && LA167_0 <= BOTTOMRIGHT_SYM)||(LA167_0 >= CHARSET_SYM && LA167_0 <= COLON)||LA167_0==COUNTER_STYLE_SYM||(LA167_0 >= DCOLON && LA167_0 <= DOT)||LA167_0==FONT_FACE_SYM||(LA167_0 >= GEN && LA167_0 <= GREATER)||(LA167_0 >= HASH && LA167_0 <= HASH_SYMBOL)||LA167_0==IDENT||LA167_0==IMPORT_SYM||(LA167_0 >= LBRACKET && LA167_0 <= LEFTTOP_SYM)||LA167_0==LESS_AND||(LA167_0 >= MEDIA_SYM && LA167_0 <= MOZ_DOCUMENT_SYM)||LA167_0==NAMESPACE_SYM||LA167_0==PAGE_SYM||(LA167_0 >= PIPE && LA167_0 <= PLUS)||(LA167_0 >= RIGHTBOTTOM_SYM && LA167_0 <= RIGHTTOP_SYM)||(LA167_0 >= SASS_AT_ROOT && LA167_0 <= SASS_DEBUG)||(LA167_0 >= SASS_EACH && LA167_0 <= SASS_ELSE)||(LA167_0 >= SASS_ERROR && LA167_0 <= SASS_FOR)||LA167_0==SASS_FUNCTION||(LA167_0 >= SASS_IF && LA167_0 <= SASS_MIXIN)||LA167_0==SASS_RETURN||(LA167_0 >= SASS_VAR && LA167_0 <= SEMI)||LA167_0==STAR||LA167_0==SUPPORTS_SYM||LA167_0==TILDE||(LA167_0 >= TOPCENTER_SYM && LA167_0 <= TOPRIGHT_SYM)||LA167_0==VARIABLE||LA167_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt167=1;
			}
			} finally {dbg.exitDecision(167);}

			switch (alt167) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:615:3: declarations
					{
					dbg.location(615,3);
					pushFollow(FOLLOW_declarations_in_counterStyle2969);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(167);}
			dbg.location(616,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_counterStyle2980); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(617, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "counterStyle");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "counterStyle"



	// $ANTLR start "fontFace"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:619:1: fontFace : FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void fontFace() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fontFace");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(619, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:5: ( FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:7: FONT_FACE_SYM ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(620,7);
			match(input,FONT_FACE_SYM,FOLLOW_FONT_FACE_SYM_in_fontFace2997); if (state.failed) return;dbg.location(620,21);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:21: ( ws )?
			int alt168=2;
			try { dbg.enterSubRule(168);
			try { dbg.enterDecision(168, decisionCanBacktrack[168]);

			int LA168_0 = input.LA(1);
			if ( (LA168_0==COMMENT||LA168_0==NL||LA168_0==WS) ) {
				alt168=1;
			}
			} finally {dbg.exitDecision(168);}

			switch (alt168) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:620:21: ws
					{
					dbg.location(620,21);
					pushFollow(FOLLOW_ws_in_fontFace2999);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(168);}
			dbg.location(621,9);
			match(input,LBRACE,FOLLOW_LBRACE_in_fontFace3010); if (state.failed) return;dbg.location(621,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:16: ( ws )?
			int alt169=2;
			try { dbg.enterSubRule(169);
			try { dbg.enterDecision(169, decisionCanBacktrack[169]);

			int LA169_0 = input.LA(1);
			if ( (LA169_0==COMMENT||LA169_0==NL||LA169_0==WS) ) {
				alt169=1;
			}
			} finally {dbg.exitDecision(169);}

			switch (alt169) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:621:16: ws
					{
					dbg.location(621,16);
					pushFollow(FOLLOW_ws_in_fontFace3012);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(169);}
			dbg.location(621,20);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_fontFace3015);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(622,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:622:3: ( declarations )?
			int alt170=2;
			try { dbg.enterSubRule(170);
			try { dbg.enterDecision(170, decisionCanBacktrack[170]);

			int LA170_0 = input.LA(1);
			if ( ((LA170_0 >= AT_IDENT && LA170_0 <= AT_SIGN)||(LA170_0 >= BOTTOMCENTER_SYM && LA170_0 <= BOTTOMRIGHT_SYM)||(LA170_0 >= CHARSET_SYM && LA170_0 <= COLON)||LA170_0==COUNTER_STYLE_SYM||(LA170_0 >= DCOLON && LA170_0 <= DOT)||LA170_0==FONT_FACE_SYM||(LA170_0 >= GEN && LA170_0 <= GREATER)||(LA170_0 >= HASH && LA170_0 <= HASH_SYMBOL)||LA170_0==IDENT||LA170_0==IMPORT_SYM||(LA170_0 >= LBRACKET && LA170_0 <= LEFTTOP_SYM)||LA170_0==LESS_AND||(LA170_0 >= MEDIA_SYM && LA170_0 <= MOZ_DOCUMENT_SYM)||LA170_0==NAMESPACE_SYM||LA170_0==PAGE_SYM||(LA170_0 >= PIPE && LA170_0 <= PLUS)||(LA170_0 >= RIGHTBOTTOM_SYM && LA170_0 <= RIGHTTOP_SYM)||(LA170_0 >= SASS_AT_ROOT && LA170_0 <= SASS_DEBUG)||(LA170_0 >= SASS_EACH && LA170_0 <= SASS_ELSE)||(LA170_0 >= SASS_ERROR && LA170_0 <= SASS_FOR)||LA170_0==SASS_FUNCTION||(LA170_0 >= SASS_IF && LA170_0 <= SASS_MIXIN)||LA170_0==SASS_RETURN||(LA170_0 >= SASS_VAR && LA170_0 <= SEMI)||LA170_0==STAR||LA170_0==SUPPORTS_SYM||LA170_0==TILDE||(LA170_0 >= TOPCENTER_SYM && LA170_0 <= TOPRIGHT_SYM)||LA170_0==VARIABLE||LA170_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt170=1;
			}
			} finally {dbg.exitDecision(170);}

			switch (alt170) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:622:3: declarations
					{
					dbg.location(622,3);
					pushFollow(FOLLOW_declarations_in_fontFace3019);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(170);}
			dbg.location(623,9);
			match(input,RBRACE,FOLLOW_RBRACE_in_fontFace3030); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(624, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fontFace");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fontFace"



	// $ANTLR start "margin"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:626:1: margin : margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE ;
	public final void margin() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(626, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:2: ( margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:4: margin_sym ( ws )? LBRACE ( ws )? syncToDeclarationsRule ( declarations )? RBRACE
			{
			dbg.location(627,4);
			pushFollow(FOLLOW_margin_sym_in_margin3044);
			margin_sym();
			state._fsp--;
			if (state.failed) return;dbg.location(627,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:15: ( ws )?
			int alt171=2;
			try { dbg.enterSubRule(171);
			try { dbg.enterDecision(171, decisionCanBacktrack[171]);

			int LA171_0 = input.LA(1);
			if ( (LA171_0==COMMENT||LA171_0==NL||LA171_0==WS) ) {
				alt171=1;
			}
			} finally {dbg.exitDecision(171);}

			switch (alt171) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:15: ws
					{
					dbg.location(627,15);
					pushFollow(FOLLOW_ws_in_margin3046);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(171);}
			dbg.location(627,19);
			match(input,LBRACE,FOLLOW_LBRACE_in_margin3049); if (state.failed) return;dbg.location(627,26);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:26: ( ws )?
			int alt172=2;
			try { dbg.enterSubRule(172);
			try { dbg.enterDecision(172, decisionCanBacktrack[172]);

			int LA172_0 = input.LA(1);
			if ( (LA172_0==COMMENT||LA172_0==NL||LA172_0==WS) ) {
				alt172=1;
			}
			} finally {dbg.exitDecision(172);}

			switch (alt172) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:26: ws
					{
					dbg.location(627,26);
					pushFollow(FOLLOW_ws_in_margin3051);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(172);}
			dbg.location(627,30);
			pushFollow(FOLLOW_syncToDeclarationsRule_in_margin3054);
			syncToDeclarationsRule();
			state._fsp--;
			if (state.failed) return;dbg.location(627,53);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:53: ( declarations )?
			int alt173=2;
			try { dbg.enterSubRule(173);
			try { dbg.enterDecision(173, decisionCanBacktrack[173]);

			int LA173_0 = input.LA(1);
			if ( ((LA173_0 >= AT_IDENT && LA173_0 <= AT_SIGN)||(LA173_0 >= BOTTOMCENTER_SYM && LA173_0 <= BOTTOMRIGHT_SYM)||(LA173_0 >= CHARSET_SYM && LA173_0 <= COLON)||LA173_0==COUNTER_STYLE_SYM||(LA173_0 >= DCOLON && LA173_0 <= DOT)||LA173_0==FONT_FACE_SYM||(LA173_0 >= GEN && LA173_0 <= GREATER)||(LA173_0 >= HASH && LA173_0 <= HASH_SYMBOL)||LA173_0==IDENT||LA173_0==IMPORT_SYM||(LA173_0 >= LBRACKET && LA173_0 <= LEFTTOP_SYM)||LA173_0==LESS_AND||(LA173_0 >= MEDIA_SYM && LA173_0 <= MOZ_DOCUMENT_SYM)||LA173_0==NAMESPACE_SYM||LA173_0==PAGE_SYM||(LA173_0 >= PIPE && LA173_0 <= PLUS)||(LA173_0 >= RIGHTBOTTOM_SYM && LA173_0 <= RIGHTTOP_SYM)||(LA173_0 >= SASS_AT_ROOT && LA173_0 <= SASS_DEBUG)||(LA173_0 >= SASS_EACH && LA173_0 <= SASS_ELSE)||(LA173_0 >= SASS_ERROR && LA173_0 <= SASS_FOR)||LA173_0==SASS_FUNCTION||(LA173_0 >= SASS_IF && LA173_0 <= SASS_MIXIN)||LA173_0==SASS_RETURN||(LA173_0 >= SASS_VAR && LA173_0 <= SEMI)||LA173_0==STAR||LA173_0==SUPPORTS_SYM||LA173_0==TILDE||(LA173_0 >= TOPCENTER_SYM && LA173_0 <= TOPRIGHT_SYM)||LA173_0==VARIABLE||LA173_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt173=1;
			}
			} finally {dbg.exitDecision(173);}

			switch (alt173) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:627:53: declarations
					{
					dbg.location(627,53);
					pushFollow(FOLLOW_declarations_in_margin3056);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(173);}
			dbg.location(627,67);
			match(input,RBRACE,FOLLOW_RBRACE_in_margin3059); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(628, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin"



	// $ANTLR start "margin_sym"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:630:1: margin_sym : ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM );
	public final void margin_sym() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "margin_sym");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(630, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:631:2: ( TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(631,2);
			if ( (input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM) ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(648, 7);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "margin_sym");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "margin_sym"



	// $ANTLR start "pseudoPage"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:650:1: pseudoPage : COLON IDENT ;
	public final void pseudoPage() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudoPage");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(650, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:651:5: ( COLON IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:651:7: COLON IDENT
			{
			dbg.location(651,7);
			match(input,COLON,FOLLOW_COLON_in_pseudoPage3268); if (state.failed) return;dbg.location(651,13);
			match(input,IDENT,FOLLOW_IDENT_in_pseudoPage3270); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(652, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudoPage");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudoPage"



	// $ANTLR start "operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:654:1: operator : ( SOLIDUS | COMMA );
	public final void operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(654, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:655:5: ( SOLIDUS | COMMA )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(655,5);
			if ( input.LA(1)==COMMA||input.LA(1)==SOLIDUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(657, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "operator"



	// $ANTLR start "unaryOperator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:659:1: unaryOperator : ( MINUS | PLUS );
	public final void unaryOperator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "unaryOperator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(659, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:660:5: ( MINUS | PLUS )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(660,5);
			if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(662, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "unaryOperator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "unaryOperator"



	// $ANTLR start "property"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:664:1: property : ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable );
	public final void property() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "property");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(664, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:665:5: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | VARIABLE | IDENT | GEN |{...}? cp_variable )
			int alt174=6;
			try { dbg.enterDecision(174, decisionCanBacktrack[174]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				switch ( input.LA(2) ) {
				case DOT:
					{
					alt174=6;
					}
					break;
				case HASH_SYMBOL:
					{
					alt174=1;
					}
					break;
				case AT_SIGN:
					{
					alt174=2;
					}
					break;
				case COLON:
				case COMMENT:
				case NL:
				case WS:
					{
					alt174=4;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 174, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH_SYMBOL:
				{
				alt174=1;
				}
				break;
			case AT_SIGN:
				{
				alt174=2;
				}
				break;
			case VARIABLE:
				{
				alt174=3;
				}
				break;
			case MINUS:
				{
				int LA174_5 = input.LA(2);
				if ( (LA174_5==HASH_SYMBOL) ) {
					alt174=1;
				}
				else if ( (LA174_5==AT_SIGN) ) {
					alt174=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 174, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				alt174=5;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt174=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 174, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(174);}

			switch (alt174) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:669:5: {...}? sass_selector_interpolation_exp
					{
					dbg.location(669,5);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isScssSource()");
					}dbg.location(669,23);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_property3354);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:670:7: {...}? less_selector_interpolation_exp
					{
					dbg.location(670,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isLessSource()");
					}dbg.location(670,25);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_property3364);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:671:7: VARIABLE
					{
					dbg.location(671,7);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_property3372); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:672:7: IDENT
					{
					dbg.location(672,7);
					match(input,IDENT,FOLLOW_IDENT_in_property3380); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:673:7: GEN
					{
					dbg.location(673,7);
					match(input,GEN,FOLLOW_GEN_in_property3388); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:674:7: {...}? cp_variable
					{
					dbg.location(674,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "property", "isCssPreprocessorSource()");
					}dbg.location(674,36);
					pushFollow(FOLLOW_cp_variable_in_property3398);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(COLON));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(676, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "property");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "property"



	// $ANTLR start "sass_map"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:681:1: sass_map : sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* ;
	public final void sass_map() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(681, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:682:5: ( sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:5: sass_map_name COLON ( ws )? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			{
			dbg.location(683,5);
			pushFollow(FOLLOW_sass_map_name_in_sass_map3425);
			sass_map_name();
			state._fsp--;
			if (state.failed) return;dbg.location(683,19);
			match(input,COLON,FOLLOW_COLON_in_sass_map3427); if (state.failed) return;dbg.location(683,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:25: ( ws )?
			int alt175=2;
			try { dbg.enterSubRule(175);
			try { dbg.enterDecision(175, decisionCanBacktrack[175]);

			int LA175_0 = input.LA(1);
			if ( (LA175_0==COMMENT||LA175_0==NL||LA175_0==WS) ) {
				alt175=1;
			}
			} finally {dbg.exitDecision(175);}

			switch (alt175) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:25: ws
					{
					dbg.location(683,25);
					pushFollow(FOLLOW_ws_in_sass_map3429);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(175);}
			dbg.location(683,29);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_map3432); if (state.failed) return;dbg.location(683,36);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:36: ( ws )?
			int alt176=2;
			try { dbg.enterSubRule(176);
			try { dbg.enterDecision(176, decisionCanBacktrack[176]);

			int LA176_0 = input.LA(1);
			if ( (LA176_0==COMMENT||LA176_0==NL||LA176_0==WS) ) {
				alt176=1;
			}
			} finally {dbg.exitDecision(176);}

			switch (alt176) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:683:36: ws
					{
					dbg.location(683,36);
					pushFollow(FOLLOW_ws_in_sass_map3434);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(176);}
			dbg.location(683,40);
			pushFollow(FOLLOW_syncToFollow_in_sass_map3437);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(685,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:9: ( sass_map_pairs )?
			int alt177=2;
			try { dbg.enterSubRule(177);
			try { dbg.enterDecision(177, decisionCanBacktrack[177]);

			int LA177_0 = input.LA(1);
			if ( ((LA177_0 >= AT_IDENT && LA177_0 <= AT_SIGN)||(LA177_0 >= BOTTOMCENTER_SYM && LA177_0 <= BOTTOMRIGHT_SYM)||LA177_0==CHARSET_SYM||LA177_0==COMMA||LA177_0==COUNTER_STYLE_SYM||LA177_0==FONT_FACE_SYM||LA177_0==GEN||LA177_0==HASH_SYMBOL||LA177_0==IDENT||LA177_0==IMPORT_SYM||(LA177_0 >= LEFTBOTTOM_SYM && LA177_0 <= LEFTTOP_SYM)||(LA177_0 >= MEDIA_SYM && LA177_0 <= MOZ_DOCUMENT_SYM)||LA177_0==NAMESPACE_SYM||LA177_0==NUMBER||LA177_0==PAGE_SYM||(LA177_0 >= RIGHTBOTTOM_SYM && LA177_0 <= RIGHTTOP_SYM)||(LA177_0 >= SASS_AT_ROOT && LA177_0 <= SASS_DEBUG)||(LA177_0 >= SASS_EACH && LA177_0 <= SASS_ELSE)||LA177_0==SASS_EXTEND||LA177_0==SASS_FOR||LA177_0==SASS_FUNCTION||(LA177_0 >= SASS_IF && LA177_0 <= SASS_MIXIN)||LA177_0==SASS_RETURN||(LA177_0 >= SASS_VAR && LA177_0 <= SASS_WHILE)||LA177_0==STRING||(LA177_0 >= TOPCENTER_SYM && LA177_0 <= TOPRIGHT_SYM)||LA177_0==VARIABLE||LA177_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt177=1;
			}
			} finally {dbg.exitDecision(177);}

			switch (alt177) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:685:9: sass_map_pairs
					{
					dbg.location(685,9);
					pushFollow(FOLLOW_sass_map_pairs_in_sass_map3456);
					sass_map_pairs();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(177);}
			dbg.location(686,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_map3463); if (state.failed) return;dbg.location(686,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
			try { dbg.enterSubRule(180);

			loop180:
			while (true) {
				int alt180=3;
				try { dbg.enterDecision(180, decisionCanBacktrack[180]);

				try {
					isCyclicDecision = true;
					alt180 = dfa180.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(180);}

				switch (alt180) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:13: ( ( ws )? SASS_DEFAULT )
					{
					dbg.location(686,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:13: ( ( ws )? SASS_DEFAULT )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:14: ( ws )? SASS_DEFAULT
					{
					dbg.location(686,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:14: ( ws )?
					int alt178=2;
					try { dbg.enterSubRule(178);
					try { dbg.enterDecision(178, decisionCanBacktrack[178]);

					int LA178_0 = input.LA(1);
					if ( (LA178_0==COMMENT||LA178_0==NL||LA178_0==WS) ) {
						alt178=1;
					}
					} finally {dbg.exitDecision(178);}

					switch (alt178) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:14: ws
							{
							dbg.location(686,14);
							pushFollow(FOLLOW_ws_in_sass_map3467);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(178);}
					dbg.location(686,18);
					match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_sass_map3470); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:34: ( ( ws )? SASS_GLOBAL )
					{
					dbg.location(686,34);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:34: ( ( ws )? SASS_GLOBAL )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:35: ( ws )? SASS_GLOBAL
					{
					dbg.location(686,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:35: ( ws )?
					int alt179=2;
					try { dbg.enterSubRule(179);
					try { dbg.enterDecision(179, decisionCanBacktrack[179]);

					int LA179_0 = input.LA(1);
					if ( (LA179_0==COMMENT||LA179_0==NL||LA179_0==WS) ) {
						alt179=1;
					}
					} finally {dbg.exitDecision(179);}

					switch (alt179) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:686:35: ws
							{
							dbg.location(686,35);
							pushFollow(FOLLOW_ws_in_sass_map3476);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(179);}
					dbg.location(686,39);
					match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_sass_map3479); if (state.failed) return;
					}

					}
					break;

				default :
					break loop180;
				}
			}
			} finally {dbg.exitSubRule(180);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(687, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map"



	// $ANTLR start "sass_map_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:689:1: sass_map_name : cp_variable ;
	public final void sass_map_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(689, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:690:5: ( cp_variable )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:691:5: cp_variable
			{
			dbg.location(691,5);
			pushFollow(FOLLOW_cp_variable_in_sass_map_name3503);
			cp_variable();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(692, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_name"



	// $ANTLR start "sass_map_pairs"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:694:1: sass_map_pairs : ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ ;
	public final void sass_map_pairs() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pairs");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(694, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:695:5: ( ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			{
			dbg.location(696,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:696:5: ( ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? ) | ( COMMA ( ws )? ) )+
			int cnt185=0;
			try { dbg.enterSubRule(185);

			loop185:
			while (true) {
				int alt185=3;
				try { dbg.enterDecision(185, decisionCanBacktrack[185]);

				int LA185_0 = input.LA(1);
				if ( ((LA185_0 >= AT_IDENT && LA185_0 <= AT_SIGN)||(LA185_0 >= BOTTOMCENTER_SYM && LA185_0 <= BOTTOMRIGHT_SYM)||LA185_0==CHARSET_SYM||LA185_0==COUNTER_STYLE_SYM||LA185_0==FONT_FACE_SYM||LA185_0==GEN||LA185_0==HASH_SYMBOL||LA185_0==IDENT||LA185_0==IMPORT_SYM||(LA185_0 >= LEFTBOTTOM_SYM && LA185_0 <= LEFTTOP_SYM)||(LA185_0 >= MEDIA_SYM && LA185_0 <= MOZ_DOCUMENT_SYM)||LA185_0==NAMESPACE_SYM||LA185_0==NUMBER||LA185_0==PAGE_SYM||(LA185_0 >= RIGHTBOTTOM_SYM && LA185_0 <= RIGHTTOP_SYM)||(LA185_0 >= SASS_AT_ROOT && LA185_0 <= SASS_DEBUG)||(LA185_0 >= SASS_EACH && LA185_0 <= SASS_ELSE)||LA185_0==SASS_EXTEND||LA185_0==SASS_FOR||LA185_0==SASS_FUNCTION||(LA185_0 >= SASS_IF && LA185_0 <= SASS_MIXIN)||LA185_0==SASS_RETURN||(LA185_0 >= SASS_VAR && LA185_0 <= SASS_WHILE)||LA185_0==STRING||(LA185_0 >= TOPCENTER_SYM && LA185_0 <= TOPRIGHT_SYM)||LA185_0==VARIABLE||LA185_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt185=1;
				}
				else if ( (LA185_0==COMMA) ) {
					alt185=2;
				}

				} finally {dbg.exitDecision(185);}

				switch (alt185) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					{
					dbg.location(697,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:10: ( sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:12: sass_map_pair ( ( ( ws )? COMMA )=> ( ws )? COMMA )? ( ws )?
					{
					dbg.location(697,12);
					pushFollow(FOLLOW_sass_map_pair_in_sass_map_pairs3537);
					sass_map_pair();
					state._fsp--;
					if (state.failed) return;dbg.location(697,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?
					int alt182=2;
					try { dbg.enterSubRule(182);
					try { dbg.enterDecision(182, decisionCanBacktrack[182]);

					try {
						isCyclicDecision = true;
						alt182 = dfa182.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(182);}

					switch (alt182) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:27: ( ( ws )? COMMA )=> ( ws )? COMMA
							{
							dbg.location(697,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:40: ( ws )?
							int alt181=2;
							try { dbg.enterSubRule(181);
							try { dbg.enterDecision(181, decisionCanBacktrack[181]);

							int LA181_0 = input.LA(1);
							if ( (LA181_0==COMMENT||LA181_0==NL||LA181_0==WS) ) {
								alt181=1;
							}
							} finally {dbg.exitDecision(181);}

							switch (alt181) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:40: ws
									{
									dbg.location(697,40);
									pushFollow(FOLLOW_ws_in_sass_map_pairs3547);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(181);}
							dbg.location(697,44);
							match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs3550); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(182);}
					dbg.location(697,52);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:52: ( ws )?
					int alt183=2;
					try { dbg.enterSubRule(183);
					try { dbg.enterDecision(183, decisionCanBacktrack[183]);

					int LA183_0 = input.LA(1);
					if ( (LA183_0==COMMENT||LA183_0==NL||LA183_0==WS) ) {
						alt183=1;
					}
					} finally {dbg.exitDecision(183);}

					switch (alt183) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:52: ws
							{
							dbg.location(697,52);
							pushFollow(FOLLOW_ws_in_sass_map_pairs3554);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(183);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:10: ( COMMA ( ws )? )
					{
					dbg.location(699,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:10: ( COMMA ( ws )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:12: COMMA ( ws )?
					{
					dbg.location(699,12);
					match(input,COMMA,FOLLOW_COMMA_in_sass_map_pairs3581); if (state.failed) return;dbg.location(699,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:18: ( ws )?
					int alt184=2;
					try { dbg.enterSubRule(184);
					try { dbg.enterDecision(184, decisionCanBacktrack[184]);

					int LA184_0 = input.LA(1);
					if ( (LA184_0==COMMENT||LA184_0==NL||LA184_0==WS) ) {
						alt184=1;
					}
					} finally {dbg.exitDecision(184);}

					switch (alt184) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:699:18: ws
							{
							dbg.location(699,18);
							pushFollow(FOLLOW_ws_in_sass_map_pairs3583);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(184);}

					}

					}
					break;

				default :
					if ( cnt185 >= 1 ) break loop185;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(185, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt185++;
			}
			} finally {dbg.exitSubRule(185);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(701, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pairs");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pairs"



	// $ANTLR start "sass_map_pair"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:703:1: sass_map_pair : ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? ;
	public final void sass_map_pair() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_map_pair");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(703, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:704:5: ( ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map ) ( ws )? COLON ( ws )? cp_expression ( ( ws )? prio )?
			{
			dbg.location(705,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:9: ( NUMBER | ( STRING ( ( ws )? STRING )* ) | ( ( function )=> function ) | property | sass_map )
			int alt188=5;
			try { dbg.enterSubRule(188);
			try { dbg.enterDecision(188, decisionCanBacktrack[188]);

			switch ( input.LA(1) ) {
			case NUMBER:
				{
				alt188=1;
				}
				break;
			case STRING:
				{
				alt188=2;
				}
				break;
			case IDENT:
				{
				int LA188_3 = input.LA(2);
				if ( (synpred22_Css3()) ) {
					alt188=3;
				}
				else if ( (true) ) {
					alt188=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt188=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 188, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
			case GEN:
			case HASH_SYMBOL:
			case MINUS:
			case VARIABLE:
				{
				alt188=4;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA188_9 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt188=4;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt188=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 188, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA188_10 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt188=4;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt188=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 188, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 188, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(188);}

			switch (alt188) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:10: NUMBER
					{
					dbg.location(705,10);
					match(input,NUMBER,FOLLOW_NUMBER_in_sass_map_pair3619); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:17: ( STRING ( ( ws )? STRING )* )
					{
					dbg.location(705,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:17: ( STRING ( ( ws )? STRING )* )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:18: STRING ( ( ws )? STRING )*
					{
					dbg.location(705,18);
					match(input,STRING,FOLLOW_STRING_in_sass_map_pair3622); if (state.failed) return;dbg.location(705,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:25: ( ( ws )? STRING )*
					try { dbg.enterSubRule(187);

					loop187:
					while (true) {
						int alt187=2;
						try { dbg.enterDecision(187, decisionCanBacktrack[187]);

						try {
							isCyclicDecision = true;
							alt187 = dfa187.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(187);}

						switch (alt187) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:26: ( ws )? STRING
							{
							dbg.location(705,26);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:26: ( ws )?
							int alt186=2;
							try { dbg.enterSubRule(186);
							try { dbg.enterDecision(186, decisionCanBacktrack[186]);

							int LA186_0 = input.LA(1);
							if ( (LA186_0==COMMENT||LA186_0==NL||LA186_0==WS) ) {
								alt186=1;
							}
							} finally {dbg.exitDecision(186);}

							switch (alt186) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:26: ws
									{
									dbg.location(705,26);
									pushFollow(FOLLOW_ws_in_sass_map_pair3625);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(186);}
							dbg.location(705,30);
							match(input,STRING,FOLLOW_STRING_in_sass_map_pair3628); if (state.failed) return;
							}
							break;

						default :
							break loop187;
						}
					}
					} finally {dbg.exitSubRule(187);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:40: ( ( function )=> function )
					{
					dbg.location(705,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:40: ( ( function )=> function )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:41: ( function )=> function
					{
					dbg.location(705,53);
					pushFollow(FOLLOW_function_in_sass_map_pair3638);
					function();
					state._fsp--;
					if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:63: property
					{
					dbg.location(705,63);
					pushFollow(FOLLOW_property_in_sass_map_pair3641);
					property();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:72: sass_map
					{
					dbg.location(705,72);
					pushFollow(FOLLOW_sass_map_in_sass_map_pair3643);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(188);}
			dbg.location(705,82);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:82: ( ws )?
			int alt189=2;
			try { dbg.enterSubRule(189);
			try { dbg.enterDecision(189, decisionCanBacktrack[189]);

			int LA189_0 = input.LA(1);
			if ( (LA189_0==COMMENT||LA189_0==NL||LA189_0==WS) ) {
				alt189=1;
			}
			} finally {dbg.exitDecision(189);}

			switch (alt189) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:82: ws
					{
					dbg.location(705,82);
					pushFollow(FOLLOW_ws_in_sass_map_pair3646);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(189);}
			dbg.location(705,86);
			match(input,COLON,FOLLOW_COLON_in_sass_map_pair3649); if (state.failed) return;dbg.location(705,92);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:92: ( ws )?
			int alt190=2;
			try { dbg.enterSubRule(190);
			try { dbg.enterDecision(190, decisionCanBacktrack[190]);

			int LA190_0 = input.LA(1);
			if ( (LA190_0==COMMENT||LA190_0==NL||LA190_0==WS) ) {
				alt190=1;
			}
			} finally {dbg.exitDecision(190);}

			switch (alt190) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:92: ws
					{
					dbg.location(705,92);
					pushFollow(FOLLOW_ws_in_sass_map_pair3651);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(190);}
			dbg.location(705,96);
			pushFollow(FOLLOW_cp_expression_in_sass_map_pair3654);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(705,110);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:110: ( ( ws )? prio )?
			int alt192=2;
			try { dbg.enterSubRule(192);
			try { dbg.enterDecision(192, decisionCanBacktrack[192]);

			try {
				isCyclicDecision = true;
				alt192 = dfa192.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(192);}

			switch (alt192) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:111: ( ws )? prio
					{
					dbg.location(705,111);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:111: ( ws )?
					int alt191=2;
					try { dbg.enterSubRule(191);
					try { dbg.enterDecision(191, decisionCanBacktrack[191]);

					int LA191_0 = input.LA(1);
					if ( (LA191_0==COMMENT||LA191_0==NL||LA191_0==WS) ) {
						alt191=1;
					}
					} finally {dbg.exitDecision(191);}

					switch (alt191) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:111: ws
							{
							dbg.location(705,111);
							pushFollow(FOLLOW_ws_in_sass_map_pair3657);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(191);}
					dbg.location(705,115);
					pushFollow(FOLLOW_prio_in_sass_map_pair3660);
					prio();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(192);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(706, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_map_pair");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_map_pair"



	// $ANTLR start "rule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:708:1: rule : ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void rule() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "rule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(708, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:709:5: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:710:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(710,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:710:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
			int alt198=3;
			try { dbg.enterSubRule(198);
			try { dbg.enterDecision(198, decisionCanBacktrack[198]);

			try {
				isCyclicDecision = true;
				alt198 = dfa198.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(198);}

			switch (alt198) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					{
					dbg.location(711,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:13: ( SASS_AT_ROOT ( ws selectorsGroup )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:14: SASS_AT_ROOT ( ws selectorsGroup )?
					{
					dbg.location(711,14);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule3702); if (state.failed) return;dbg.location(711,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:27: ( ws selectorsGroup )?
					int alt193=2;
					try { dbg.enterSubRule(193);
					try { dbg.enterDecision(193, decisionCanBacktrack[193]);

					try {
						isCyclicDecision = true;
						alt193 = dfa193.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(193);}

					switch (alt193) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:711:28: ws selectorsGroup
							{
							dbg.location(711,28);
							pushFollow(FOLLOW_ws_in_rule3705);
							ws();
							state._fsp--;
							if (state.failed) return;dbg.location(711,31);
							pushFollow(FOLLOW_selectorsGroup_in_rule3707);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(193);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					{
					dbg.location(712,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:15: ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:16: SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
					{
					dbg.location(712,16);
					match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_rule3728); if (state.failed) return;dbg.location(712,29);
					pushFollow(FOLLOW_ws_in_rule3730);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(712,32);
					match(input,LPAREN,FOLLOW_LPAREN_in_rule3732); if (state.failed) return;dbg.location(712,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:39: ( ws )?
					int alt194=2;
					try { dbg.enterSubRule(194);
					try { dbg.enterDecision(194, decisionCanBacktrack[194]);

					int LA194_0 = input.LA(1);
					if ( (LA194_0==COMMENT||LA194_0==NL||LA194_0==WS) ) {
						alt194=1;
					}
					} finally {dbg.exitDecision(194);}

					switch (alt194) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:39: ws
							{
							dbg.location(712,39);
							pushFollow(FOLLOW_ws_in_rule3734);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(194);}
					dbg.location(712,43);
					if ( !(evalPredicate(tokenNameEquals("without") || tokenNameEquals("with"),"tokenNameEquals(\"without\") || tokenNameEquals(\"with\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "rule", "tokenNameEquals(\"without\") || tokenNameEquals(\"with\")");
					}dbg.location(712,100);
					match(input,IDENT,FOLLOW_IDENT_in_rule3739); if (state.failed) return;dbg.location(712,128);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:128: ( ws )?
					int alt195=2;
					try { dbg.enterSubRule(195);
					try { dbg.enterDecision(195, decisionCanBacktrack[195]);

					int LA195_0 = input.LA(1);
					if ( (LA195_0==COMMENT||LA195_0==NL||LA195_0==WS) ) {
						alt195=1;
					}
					} finally {dbg.exitDecision(195);}

					switch (alt195) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:128: ws
							{
							dbg.location(712,128);
							pushFollow(FOLLOW_ws_in_rule3743);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(195);}
					dbg.location(712,132);
					match(input,COLON,FOLLOW_COLON_in_rule3746); if (state.failed) return;dbg.location(712,138);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:138: ( ws )?
					int alt196=2;
					try { dbg.enterSubRule(196);
					try { dbg.enterDecision(196, decisionCanBacktrack[196]);

					int LA196_0 = input.LA(1);
					if ( (LA196_0==COMMENT||LA196_0==NL||LA196_0==WS) ) {
						alt196=1;
					}
					} finally {dbg.exitDecision(196);}

					switch (alt196) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:138: ws
							{
							dbg.location(712,138);
							pushFollow(FOLLOW_ws_in_rule3748);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(196);}
					dbg.location(712,142);
					match(input,IDENT,FOLLOW_IDENT_in_rule3751); if (state.failed) return;dbg.location(712,148);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:148: ( ws )?
					int alt197=2;
					try { dbg.enterSubRule(197);
					try { dbg.enterDecision(197, decisionCanBacktrack[197]);

					int LA197_0 = input.LA(1);
					if ( (LA197_0==COMMENT||LA197_0==NL||LA197_0==WS) ) {
						alt197=1;
					}
					} finally {dbg.exitDecision(197);}

					switch (alt197) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:712:148: ws
							{
							dbg.location(712,148);
							pushFollow(FOLLOW_ws_in_rule3753);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(197);}
					dbg.location(712,152);
					match(input,RPAREN,FOLLOW_RPAREN_in_rule3756); if (state.failed) return;
					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:713:15: selectorsGroup
					{
					dbg.location(713,15);
					pushFollow(FOLLOW_selectorsGroup_in_rule3774);
					selectorsGroup();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(198);}
			dbg.location(714,11);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:714:11: ( ws )?
			int alt199=2;
			try { dbg.enterSubRule(199);
			try { dbg.enterDecision(199, decisionCanBacktrack[199]);

			int LA199_0 = input.LA(1);
			if ( (LA199_0==COMMENT||LA199_0==NL||LA199_0==WS) ) {
				alt199=1;
			}
			} finally {dbg.exitDecision(199);}

			switch (alt199) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:714:11: ws
					{
					dbg.location(714,11);
					pushFollow(FOLLOW_ws_in_rule3786);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(199);}
			dbg.location(715,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_rule3793); if (state.failed) return;dbg.location(715,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:12: ( ws )?
			int alt200=2;
			try { dbg.enterSubRule(200);
			try { dbg.enterDecision(200, decisionCanBacktrack[200]);

			int LA200_0 = input.LA(1);
			if ( (LA200_0==COMMENT||LA200_0==NL||LA200_0==WS) ) {
				alt200=1;
			}
			} finally {dbg.exitDecision(200);}

			switch (alt200) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:715:12: ws
					{
					dbg.location(715,12);
					pushFollow(FOLLOW_ws_in_rule3795);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(200);}
			dbg.location(715,16);
			pushFollow(FOLLOW_syncToFollow_in_rule3798);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(716,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:9: ( declarations )?
			int alt201=2;
			try { dbg.enterSubRule(201);
			try { dbg.enterDecision(201, decisionCanBacktrack[201]);

			int LA201_0 = input.LA(1);
			if ( ((LA201_0 >= AT_IDENT && LA201_0 <= AT_SIGN)||(LA201_0 >= BOTTOMCENTER_SYM && LA201_0 <= BOTTOMRIGHT_SYM)||(LA201_0 >= CHARSET_SYM && LA201_0 <= COLON)||LA201_0==COUNTER_STYLE_SYM||(LA201_0 >= DCOLON && LA201_0 <= DOT)||LA201_0==FONT_FACE_SYM||(LA201_0 >= GEN && LA201_0 <= GREATER)||(LA201_0 >= HASH && LA201_0 <= HASH_SYMBOL)||LA201_0==IDENT||LA201_0==IMPORT_SYM||(LA201_0 >= LBRACKET && LA201_0 <= LEFTTOP_SYM)||LA201_0==LESS_AND||(LA201_0 >= MEDIA_SYM && LA201_0 <= MOZ_DOCUMENT_SYM)||LA201_0==NAMESPACE_SYM||LA201_0==PAGE_SYM||(LA201_0 >= PIPE && LA201_0 <= PLUS)||(LA201_0 >= RIGHTBOTTOM_SYM && LA201_0 <= RIGHTTOP_SYM)||(LA201_0 >= SASS_AT_ROOT && LA201_0 <= SASS_DEBUG)||(LA201_0 >= SASS_EACH && LA201_0 <= SASS_ELSE)||(LA201_0 >= SASS_ERROR && LA201_0 <= SASS_FOR)||LA201_0==SASS_FUNCTION||(LA201_0 >= SASS_IF && LA201_0 <= SASS_MIXIN)||LA201_0==SASS_RETURN||(LA201_0 >= SASS_VAR && LA201_0 <= SEMI)||LA201_0==STAR||LA201_0==SUPPORTS_SYM||LA201_0==TILDE||(LA201_0 >= TOPCENTER_SYM && LA201_0 <= TOPRIGHT_SYM)||LA201_0==VARIABLE||LA201_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt201=1;
			}
			} finally {dbg.exitDecision(201);}

			switch (alt201) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:716:9: declarations
					{
					dbg.location(716,9);
					pushFollow(FOLLOW_declarations_in_rule3808);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(201);}
			dbg.location(717,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_rule3815); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RBRACE));
			        input.consume(); //consume the RBRACE as well
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(718, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "rule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "rule"



	// $ANTLR start "declarations"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:725:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );
	public final void declarations() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declarations");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(725, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:726:5: ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ )
			int alt215=2;
			try { dbg.enterDecision(215, decisionCanBacktrack[215]);

			try {
				isCyclicDecision = true;
				alt215 = dfa215.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(215);}

			switch (alt215) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:8: ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					{
					dbg.location(727,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:8: ( SEMI ( ws )? )*
					try { dbg.enterSubRule(203);

					loop203:
					while (true) {
						int alt203=2;
						try { dbg.enterDecision(203, decisionCanBacktrack[203]);

						int LA203_0 = input.LA(1);
						if ( (LA203_0==SEMI) ) {
							alt203=1;
						}

						} finally {dbg.exitDecision(203);}

						switch (alt203) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:9: SEMI ( ws )?
							{
							dbg.location(727,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations3849); if (state.failed) return;dbg.location(727,14);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:14: ( ws )?
							int alt202=2;
							try { dbg.enterSubRule(202);
							try { dbg.enterDecision(202, decisionCanBacktrack[202]);

							int LA202_0 = input.LA(1);
							if ( (LA202_0==COMMENT||LA202_0==NL||LA202_0==WS) ) {
								alt202=1;
							}
							} finally {dbg.exitDecision(202);}

							switch (alt202) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:14: ws
									{
									dbg.location(727,14);
									pushFollow(FOLLOW_ws_in_declarations3851);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(202);}

							}
							break;

						default :
							break loop203;
						}
					}
					} finally {dbg.exitSubRule(203);}
					dbg.location(727,21);
					pushFollow(FOLLOW_declaration_in_declarations3857);
					declaration();
					state._fsp--;
					if (state.failed) return;dbg.location(727,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*
					try { dbg.enterSubRule(208);

					loop208:
					while (true) {
						int alt208=2;
						try { dbg.enterDecision(208, decisionCanBacktrack[208]);

						try {
							isCyclicDecision = true;
							alt208 = dfa208.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(208);}

						switch (alt208) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration
							{
							dbg.location(727,34);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )
							int alt207=2;
							try { dbg.enterSubRule(207);
							try { dbg.enterDecision(207, decisionCanBacktrack[207]);

							try {
								isCyclicDecision = true;
								alt207 = dfa207.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(207);}

							switch (alt207) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:35: ( ( ws )? ( SEMI ( ws )? )+ )
									{
									dbg.location(727,35);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:35: ( ( ws )? ( SEMI ( ws )? )+ )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:36: ( ws )? ( SEMI ( ws )? )+
									{
									dbg.location(727,36);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:36: ( ws )?
									int alt204=2;
									try { dbg.enterSubRule(204);
									try { dbg.enterDecision(204, decisionCanBacktrack[204]);

									int LA204_0 = input.LA(1);
									if ( (LA204_0==COMMENT||LA204_0==NL||LA204_0==WS) ) {
										alt204=1;
									}
									} finally {dbg.exitDecision(204);}

									switch (alt204) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:36: ws
											{
											dbg.location(727,36);
											pushFollow(FOLLOW_ws_in_declarations3862);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(204);}
									dbg.location(727,40);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:40: ( SEMI ( ws )? )+
									int cnt206=0;
									try { dbg.enterSubRule(206);

									loop206:
									while (true) {
										int alt206=2;
										try { dbg.enterDecision(206, decisionCanBacktrack[206]);

										int LA206_0 = input.LA(1);
										if ( (LA206_0==SEMI) ) {
											alt206=1;
										}

										} finally {dbg.exitDecision(206);}

										switch (alt206) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:41: SEMI ( ws )?
											{
											dbg.location(727,41);
											match(input,SEMI,FOLLOW_SEMI_in_declarations3866); if (state.failed) return;dbg.location(727,46);
											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:46: ( ws )?
											int alt205=2;
											try { dbg.enterSubRule(205);
											try { dbg.enterDecision(205, decisionCanBacktrack[205]);

											int LA205_0 = input.LA(1);
											if ( (LA205_0==COMMENT||LA205_0==NL||LA205_0==WS) ) {
												alt205=1;
											}
											} finally {dbg.exitDecision(205);}

											switch (alt205) {
												case 1 :
													dbg.enterAlt(1);

													// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:46: ws
													{
													dbg.location(727,46);
													pushFollow(FOLLOW_ws_in_declarations3868);
													ws();
													state._fsp--;
													if (state.failed) return;
													}
													break;

											}
											} finally {dbg.exitSubRule(205);}

											}
											break;

										default :
											if ( cnt206 >= 1 ) break loop206;
											if (state.backtracking>0) {state.failed=true; return;}
											EarlyExitException eee = new EarlyExitException(206, input);
											dbg.recognitionException(eee);

											throw eee;
										}
										cnt206++;
									}
									} finally {dbg.exitSubRule(206);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:53: ws
									{
									dbg.location(727,53);
									pushFollow(FOLLOW_ws_in_declarations3874);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(207);}
							dbg.location(727,57);
							pushFollow(FOLLOW_declaration_in_declarations3877);
							declaration();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop208;
						}
					}
					} finally {dbg.exitSubRule(208);}
					dbg.location(727,71);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?
					int alt212=3;
					try { dbg.enterSubRule(212);
					try { dbg.enterDecision(212, decisionCanBacktrack[212]);

					try {
						isCyclicDecision = true;
						alt212 = dfa212.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(212);}

					switch (alt212) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:72: ( ( ws )? ( SEMI ( ws )? )+ )
							{
							dbg.location(727,72);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:72: ( ( ws )? ( SEMI ( ws )? )+ )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:73: ( ws )? ( SEMI ( ws )? )+
							{
							dbg.location(727,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:73: ( ws )?
							int alt209=2;
							try { dbg.enterSubRule(209);
							try { dbg.enterDecision(209, decisionCanBacktrack[209]);

							int LA209_0 = input.LA(1);
							if ( (LA209_0==COMMENT||LA209_0==NL||LA209_0==WS) ) {
								alt209=1;
							}
							} finally {dbg.exitDecision(209);}

							switch (alt209) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:73: ws
									{
									dbg.location(727,73);
									pushFollow(FOLLOW_ws_in_declarations3883);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(209);}
							dbg.location(727,77);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:77: ( SEMI ( ws )? )+
							int cnt211=0;
							try { dbg.enterSubRule(211);

							loop211:
							while (true) {
								int alt211=2;
								try { dbg.enterDecision(211, decisionCanBacktrack[211]);

								int LA211_0 = input.LA(1);
								if ( (LA211_0==SEMI) ) {
									alt211=1;
								}

								} finally {dbg.exitDecision(211);}

								switch (alt211) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:78: SEMI ( ws )?
									{
									dbg.location(727,78);
									match(input,SEMI,FOLLOW_SEMI_in_declarations3887); if (state.failed) return;dbg.location(727,83);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:83: ( ws )?
									int alt210=2;
									try { dbg.enterSubRule(210);
									try { dbg.enterDecision(210, decisionCanBacktrack[210]);

									int LA210_0 = input.LA(1);
									if ( (LA210_0==COMMENT||LA210_0==NL||LA210_0==WS) ) {
										alt210=1;
									}
									} finally {dbg.exitDecision(210);}

									switch (alt210) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:83: ws
											{
											dbg.location(727,83);
											pushFollow(FOLLOW_ws_in_declarations3889);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(210);}

									}
									break;

								default :
									if ( cnt211 >= 1 ) break loop211;
									if (state.backtracking>0) {state.failed=true; return;}
									EarlyExitException eee = new EarlyExitException(211, input);
									dbg.recognitionException(eee);

									throw eee;
								}
								cnt211++;
							}
							} finally {dbg.exitSubRule(211);}

							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:727:90: ws
							{
							dbg.location(727,90);
							pushFollow(FOLLOW_ws_in_declarations3895);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(212);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:8: ( SEMI ( ws )? )+
					{
					dbg.location(728,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:8: ( SEMI ( ws )? )+
					int cnt214=0;
					try { dbg.enterSubRule(214);

					loop214:
					while (true) {
						int alt214=2;
						try { dbg.enterDecision(214, decisionCanBacktrack[214]);

						int LA214_0 = input.LA(1);
						if ( (LA214_0==SEMI) ) {
							alt214=1;
						}

						} finally {dbg.exitDecision(214);}

						switch (alt214) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:9: SEMI ( ws )?
							{
							dbg.location(728,9);
							match(input,SEMI,FOLLOW_SEMI_in_declarations3907); if (state.failed) return;dbg.location(728,14);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:14: ( ws )?
							int alt213=2;
							try { dbg.enterSubRule(213);
							try { dbg.enterDecision(213, decisionCanBacktrack[213]);

							int LA213_0 = input.LA(1);
							if ( (LA213_0==COMMENT||LA213_0==NL||LA213_0==WS) ) {
								alt213=1;
							}
							} finally {dbg.exitDecision(213);}

							switch (alt213) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:728:14: ws
									{
									dbg.location(728,14);
									pushFollow(FOLLOW_ws_in_declarations3909);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(213);}

							}
							break;

						default :
							if ( cnt214 >= 1 ) break loop214;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(214, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt214++;
					}
					} finally {dbg.exitSubRule(214);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(729, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declarations");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declarations"



	// $ANTLR start "declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:731:1: declaration : ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN );
	public final void declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(731, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:732:5: ( ( cp_variable_declaration )=> cp_variable_declaration | ( sass_map )=> sass_map | ( sass_nested_properties )=> sass_nested_properties | ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule | ( propertyDeclaration )=> propertyDeclaration | ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration | ( cp_mixin_declaration )=> cp_mixin_declaration | ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )? | ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )? |{...}? at_rule |{...}? sass_control |{...}? sass_extend |{...}? sass_debug |{...}? sass_content |{...}? sass_function_return |{...}? sass_error |{...}? importItem | GEN )
			int alt220=18;
			try { dbg.enterDecision(220, decisionCanBacktrack[220]);

			int LA220_0 = input.LA(1);
			if ( (LA220_0==SASS_AT_ROOT) ) {
				int LA220_1 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_VAR) ) {
				int LA220_2 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred25_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred27_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==IDENT) ) {
				int LA220_3 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (synpred25_Css3()) ) {
					alt220=3;
				}
				else if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( (synpred27_Css3()) ) {
					alt220=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==MINUS) ) {
				int LA220_4 = input.LA(2);
				if ( (((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( ((synpred26_Css3()&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt220=4;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))||evalPredicate(isScssSource(),"isScssSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==HASH_SYMBOL) ) {
				int LA220_5 = input.LA(2);
				if ( ((synpred25_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=3;
				}
				else if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( ((synpred27_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=5;
				}
				else if ( ((evalPredicate(isScssSource(),"isScssSource()")&&synpred28_Css3())) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==AT_SIGN) ) {
				int LA220_6 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( ((synpred26_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred28_Css3())) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==VARIABLE) ) {
				int LA220_7 = input.LA(2);
				if ( (synpred25_Css3()) ) {
					alt220=3;
				}
				else if ( (synpred27_Css3()) ) {
					alt220=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==GEN) ) {
				int LA220_8 = input.LA(2);
				if ( (synpred25_Css3()) ) {
					alt220=3;
				}
				else if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( (synpred27_Css3()) ) {
					alt220=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt220=6;
				}
				else if ( (true) ) {
					alt220=18;
				}

			}
			else if ( (LA220_0==SASS_MIXIN) ) {
				int LA220_9 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( ((synpred29_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==GREATER||LA220_0==PLUS||LA220_0==TILDE) && (synpred26_Css3())) {
				alt220=4;
			}
			else if ( (LA220_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred26_Css3())) {
				alt220=4;
			}
			else if ( (LA220_0==LESS_AND) ) {
				int LA220_12 = input.LA(2);
				if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred29_Css3())) ) {
					alt220=7;
				}
				else if ( ((synpred30_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred31_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==HASH) ) {
				int LA220_13 = input.LA(2);
				if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred29_Css3())) ) {
					alt220=7;
				}
				else if ( ((synpred30_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred31_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==DOT) ) {
				int LA220_14 = input.LA(2);
				if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred29_Css3())) ) {
					alt220=7;
				}
				else if ( ((synpred30_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred31_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==DIMENSION) && (synpred26_Css3())) {
				alt220=4;
			}
			else if ( (LA220_0==LBRACKET) && (synpred26_Css3())) {
				alt220=4;
			}
			else if ( (LA220_0==COLON||LA220_0==DCOLON) && (synpred26_Css3())) {
				alt220=4;
			}
			else if ( (LA220_0==STAR) ) {
				int LA220_18 = input.LA(2);
				if ( (synpred26_Css3()) ) {
					alt220=4;
				}
				else if ( (synpred27_Css3()) ) {
					alt220=5;
				}
				else if ( (synpred28_Css3()) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==PIPE) && (synpred26_Css3())) {
				alt220=4;
			}
			else if ( (LA220_0==AT_IDENT) ) {
				int LA220_20 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( ((synpred30_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=8;
				}
				else if ( (((evalPredicate(isLessSource(),"isLessSource()")&&synpred31_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=9;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt220=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_INCLUDE) ) {
				int LA220_21 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( ((synpred30_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=8;
				}
				else if ( ((synpred31_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt220=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==MEDIA_SYM) ) {
				int LA220_22 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt220=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==PAGE_SYM) ) {
				int LA220_23 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt220=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==COUNTER_STYLE_SYM) ) {
				int LA220_24 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt220=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==FONT_FACE_SYM) ) {
				int LA220_25 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt220=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==MOZ_DOCUMENT_SYM) ) {
				int LA220_26 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt220=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SUPPORTS_SYM) ) {
				alt220=10;
			}
			else if ( (LA220_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA220_28 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt220=10;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_IF) ) {
				int LA220_29 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_FOR) ) {
				int LA220_30 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_EACH) ) {
				int LA220_31 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 31, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_WHILE) ) {
				int LA220_32 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_EXTEND) ) {
				int LA220_33 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 33, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_DEBUG||LA220_0==SASS_WARN) ) {
				int LA220_34 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 34, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_CONTENT) ) {
				int LA220_35 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=14;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 35, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_RETURN) ) {
				int LA220_36 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=15;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 36, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==IMPORT_SYM) ) {
				int LA220_37 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt220=17;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 37, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA220_0==SASS_ERROR) ) {
				alt220=16;
			}
			else if ( ((LA220_0 >= BOTTOMCENTER_SYM && LA220_0 <= BOTTOMRIGHT_SYM)||LA220_0==CHARSET_SYM||(LA220_0 >= LEFTBOTTOM_SYM && LA220_0 <= LEFTTOP_SYM)||LA220_0==NAMESPACE_SYM||(LA220_0 >= RIGHTBOTTOM_SYM && LA220_0 <= RIGHTTOP_SYM)||LA220_0==SASS_ELSE||LA220_0==SASS_FUNCTION||(LA220_0 >= TOPCENTER_SYM && LA220_0 <= TOPRIGHT_SYM)) ) {
				int LA220_39 = input.LA(2);
				if ( ((synpred23_Css3()&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt220=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred24_Css3())) ) {
					alt220=2;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred25_Css3())) ) {
					alt220=3;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred27_Css3())) ) {
					alt220=5;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred28_Css3())) ) {
					alt220=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 220, 39, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 220, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(220);}

			switch (alt220) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:733:5: ( cp_variable_declaration )=> cp_variable_declaration
					{
					dbg.location(733,32);
					pushFollow(FOLLOW_cp_variable_declaration_in_declaration3938);
					cp_variable_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:7: ( sass_map )=> sass_map
					{
					dbg.location(734,20);
					pushFollow(FOLLOW_sass_map_in_declaration3951);
					sass_map();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:7: ( sass_nested_properties )=> sass_nested_properties
					{
					dbg.location(735,33);
					pushFollow(FOLLOW_sass_nested_properties_in_declaration3963);
					sass_nested_properties();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )=> rule
					{
					dbg.location(736,145);
					pushFollow(FOLLOW_rule_in_declaration4026);
					rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:7: ( propertyDeclaration )=> propertyDeclaration
					{
					dbg.location(737,30);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration4038);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )=> propertyDeclaration
					{
					dbg.location(739,67);
					pushFollow(FOLLOW_propertyDeclaration_in_declaration4077);
					propertyDeclaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:740:7: ( cp_mixin_declaration )=> cp_mixin_declaration
					{
					dbg.location(740,31);
					pushFollow(FOLLOW_cp_mixin_declaration_in_declaration4089);
					cp_mixin_declaration();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:7: ( cp_mixin_call )=> cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(741,25);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration4102);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(741,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:39: ( ( ws )? IMPORTANT_SYM )?
					int alt217=2;
					try { dbg.enterSubRule(217);
					try { dbg.enterDecision(217, decisionCanBacktrack[217]);

					try {
						isCyclicDecision = true;
						alt217 = dfa217.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(217);}

					switch (alt217) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:40: ( ws )? IMPORTANT_SYM
							{
							dbg.location(741,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:40: ( ws )?
							int alt216=2;
							try { dbg.enterSubRule(216);
							try { dbg.enterDecision(216, decisionCanBacktrack[216]);

							int LA216_0 = input.LA(1);
							if ( (LA216_0==COMMENT||LA216_0==NL||LA216_0==WS) ) {
								alt216=1;
							}
							} finally {dbg.exitDecision(216);}

							switch (alt216) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:40: ws
									{
									dbg.location(741,40);
									pushFollow(FOLLOW_ws_in_declaration4105);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(216);}
							dbg.location(741,44);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration4108); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(217);}

					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:7: ( cp_mixin_call )=>{...}? cp_mixin_call ( ( ws )? IMPORTANT_SYM )?
					{
					dbg.location(742,25);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(742,43);
					pushFollow(FOLLOW_cp_mixin_call_in_declaration4125);
					cp_mixin_call();
					state._fsp--;
					if (state.failed) return;dbg.location(742,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:57: ( ( ws )? IMPORTANT_SYM )?
					int alt219=2;
					try { dbg.enterSubRule(219);
					try { dbg.enterDecision(219, decisionCanBacktrack[219]);

					try {
						isCyclicDecision = true;
						alt219 = dfa219.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(219);}

					switch (alt219) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:58: ( ws )? IMPORTANT_SYM
							{
							dbg.location(742,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:58: ( ws )?
							int alt218=2;
							try { dbg.enterSubRule(218);
							try { dbg.enterDecision(218, decisionCanBacktrack[218]);

							int LA218_0 = input.LA(1);
							if ( (LA218_0==COMMENT||LA218_0==NL||LA218_0==WS) ) {
								alt218=1;
							}
							} finally {dbg.exitDecision(218);}

							switch (alt218) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:58: ws
									{
									dbg.location(742,58);
									pushFollow(FOLLOW_ws_in_declaration4128);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(218);}
							dbg.location(742,62);
							match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_declaration4131); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(219);}

					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:743:7: {...}? at_rule
					{
					dbg.location(743,7);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isCssPreprocessorSource()");
					}dbg.location(743,36);
					pushFollow(FOLLOW_at_rule_in_declaration4147);
					at_rule();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:744:7: {...}? sass_control
					{
					dbg.location(744,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(744,25);
					pushFollow(FOLLOW_sass_control_in_declaration4157);
					sass_control();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:745:7: {...}? sass_extend
					{
					dbg.location(745,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(745,25);
					pushFollow(FOLLOW_sass_extend_in_declaration4167);
					sass_extend();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:746:7: {...}? sass_debug
					{
					dbg.location(746,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(746,25);
					pushFollow(FOLLOW_sass_debug_in_declaration4177);
					sass_debug();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:747:7: {...}? sass_content
					{
					dbg.location(747,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(747,25);
					pushFollow(FOLLOW_sass_content_in_declaration4187);
					sass_content();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:748:7: {...}? sass_function_return
					{
					dbg.location(748,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(748,25);
					pushFollow(FOLLOW_sass_function_return_in_declaration4197);
					sass_function_return();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:749:7: {...}? sass_error
					{
					dbg.location(749,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(749,25);
					pushFollow(FOLLOW_sass_error_in_declaration4207);
					sass_error();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:750:7: {...}? importItem
					{
					dbg.location(750,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "declaration", "isScssSource()");
					}dbg.location(750,25);
					pushFollow(FOLLOW_importItem_in_declaration4217);
					importItem();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:751:7: GEN
					{
					dbg.location(751,7);
					match(input,GEN,FOLLOW_GEN_in_declaration4225); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(SEMI));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(752, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "declaration"



	// $ANTLR start "selectorsGroup"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:758:1: selectorsGroup : selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? ;
	public final void selectorsGroup() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selectorsGroup");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(758, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:759:5: ( selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:9: selector ( ( ws )? COMMA ( ws )? selector )* ({...}? COMMA )?
			{
			dbg.location(760,9);
			pushFollow(FOLLOW_selector_in_selectorsGroup4259);
			selector();
			state._fsp--;
			if (state.failed) return;dbg.location(760,18);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:18: ( ( ws )? COMMA ( ws )? selector )*
			try { dbg.enterSubRule(223);

			loop223:
			while (true) {
				int alt223=2;
				try { dbg.enterDecision(223, decisionCanBacktrack[223]);

				try {
					isCyclicDecision = true;
					alt223 = dfa223.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(223);}

				switch (alt223) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:19: ( ws )? COMMA ( ws )? selector
					{
					dbg.location(760,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:19: ( ws )?
					int alt221=2;
					try { dbg.enterSubRule(221);
					try { dbg.enterDecision(221, decisionCanBacktrack[221]);

					int LA221_0 = input.LA(1);
					if ( (LA221_0==COMMENT||LA221_0==NL||LA221_0==WS) ) {
						alt221=1;
					}
					} finally {dbg.exitDecision(221);}

					switch (alt221) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:19: ws
							{
							dbg.location(760,19);
							pushFollow(FOLLOW_ws_in_selectorsGroup4262);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(221);}
					dbg.location(760,23);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup4265); if (state.failed) return;dbg.location(760,29);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:29: ( ws )?
					int alt222=2;
					try { dbg.enterSubRule(222);
					try { dbg.enterDecision(222, decisionCanBacktrack[222]);

					int LA222_0 = input.LA(1);
					if ( (LA222_0==COMMENT||LA222_0==NL||LA222_0==WS) ) {
						alt222=1;
					}
					} finally {dbg.exitDecision(222);}

					switch (alt222) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:29: ws
							{
							dbg.location(760,29);
							pushFollow(FOLLOW_ws_in_selectorsGroup4267);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(222);}
					dbg.location(760,33);
					pushFollow(FOLLOW_selector_in_selectorsGroup4270);
					selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop223;
				}
			}
			} finally {dbg.exitSubRule(223);}
			dbg.location(760,44);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:44: ({...}? COMMA )?
			int alt224=2;
			try { dbg.enterSubRule(224);
			try { dbg.enterDecision(224, decisionCanBacktrack[224]);

			int LA224_0 = input.LA(1);
			if ( (LA224_0==COMMA) ) {
				alt224=1;
			}
			} finally {dbg.exitDecision(224);}

			switch (alt224) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:760:45: {...}? COMMA
					{
					dbg.location(760,45);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selectorsGroup", "isCssPreprocessorSource()");
					}dbg.location(760,74);
					match(input,COMMA,FOLLOW_COMMA_in_selectorsGroup4277); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(224);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(761, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selectorsGroup");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selectorsGroup"



	// $ANTLR start "selector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:763:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );
	public final void selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(763, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:5: ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator )
			int alt231=2;
			try { dbg.enterDecision(231, decisionCanBacktrack[231]);

			try {
				isCyclicDecision = true;
				alt231 = dfa231.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(231);}

			switch (alt231) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:8: ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					{
					dbg.location(764,8);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:8: ( combinator ( ws )? )?
					int alt226=2;
					try { dbg.enterSubRule(226);
					try { dbg.enterDecision(226, decisionCanBacktrack[226]);

					int LA226_0 = input.LA(1);
					if ( (LA226_0==GREATER||LA226_0==PLUS||LA226_0==TILDE) ) {
						alt226=1;
					}
					} finally {dbg.exitDecision(226);}

					switch (alt226) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:9: combinator ( ws )?
							{
							dbg.location(764,9);
							pushFollow(FOLLOW_combinator_in_selector4298);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(764,20);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:20: ( ws )?
							int alt225=2;
							try { dbg.enterSubRule(225);
							try { dbg.enterDecision(225, decisionCanBacktrack[225]);

							int LA225_0 = input.LA(1);
							if ( (LA225_0==COMMENT||LA225_0==NL||LA225_0==WS) ) {
								alt225=1;
							}
							} finally {dbg.exitDecision(225);}

							switch (alt225) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:20: ws
									{
									dbg.location(764,20);
									pushFollow(FOLLOW_ws_in_selector4300);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(225);}

							}
							break;

					}
					} finally {dbg.exitSubRule(226);}
					dbg.location(764,26);
					pushFollow(FOLLOW_simpleSelectorSequence_in_selector4305);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;dbg.location(764,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*
					try { dbg.enterSubRule(230);

					loop230:
					while (true) {
						int alt230=2;
						try { dbg.enterDecision(230, decisionCanBacktrack[230]);

						try {
							isCyclicDecision = true;
							alt230 = dfa230.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(230);}

						switch (alt230) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:51: ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence
							{
							dbg.location(764,51);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:51: ( ( ( ws )? combinator ( ws )? ) | ws )
							int alt229=2;
							try { dbg.enterSubRule(229);
							try { dbg.enterDecision(229, decisionCanBacktrack[229]);

							try {
								isCyclicDecision = true;
								alt229 = dfa229.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(229);}

							switch (alt229) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:52: ( ( ws )? combinator ( ws )? )
									{
									dbg.location(764,52);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:52: ( ( ws )? combinator ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:53: ( ws )? combinator ( ws )?
									{
									dbg.location(764,53);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:53: ( ws )?
									int alt227=2;
									try { dbg.enterSubRule(227);
									try { dbg.enterDecision(227, decisionCanBacktrack[227]);

									int LA227_0 = input.LA(1);
									if ( (LA227_0==COMMENT||LA227_0==NL||LA227_0==WS) ) {
										alt227=1;
									}
									} finally {dbg.exitDecision(227);}

									switch (alt227) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:53: ws
											{
											dbg.location(764,53);
											pushFollow(FOLLOW_ws_in_selector4311);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(227);}
									dbg.location(764,57);
									pushFollow(FOLLOW_combinator_in_selector4314);
									combinator();
									state._fsp--;
									if (state.failed) return;dbg.location(764,68);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:68: ( ws )?
									int alt228=2;
									try { dbg.enterSubRule(228);
									try { dbg.enterDecision(228, decisionCanBacktrack[228]);

									int LA228_0 = input.LA(1);
									if ( (LA228_0==COMMENT||LA228_0==NL||LA228_0==WS) ) {
										alt228=1;
									}
									} finally {dbg.exitDecision(228);}

									switch (alt228) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:68: ws
											{
											dbg.location(764,68);
											pushFollow(FOLLOW_ws_in_selector4316);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(228);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:764:73: ws
									{
									dbg.location(764,73);
									pushFollow(FOLLOW_ws_in_selector4320);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(229);}
							dbg.location(764,77);
							pushFollow(FOLLOW_simpleSelectorSequence_in_selector4323);
							simpleSelectorSequence();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop230;
						}
					}
					} finally {dbg.exitSubRule(230);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:765:10: {...}? combinator
					{
					dbg.location(765,10);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "selector", "isScssSource()");
					}dbg.location(765,28);
					pushFollow(FOLLOW_combinator_in_selector4338);
					combinator();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(766, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "selector"



	// $ANTLR start "combinator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:768:1: combinator : ( PLUS | GREATER | TILDE );
	public final void combinator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "combinator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(768, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:769:5: ( PLUS | GREATER | TILDE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(769,5);
			if ( input.LA(1)==GREATER||input.LA(1)==PLUS||input.LA(1)==TILDE ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(771, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "combinator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "combinator"



	// $ANTLR start "simpleSelectorSequence"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:773:1: simpleSelectorSequence : ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* );
	public final void simpleSelectorSequence() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "simpleSelectorSequence");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(773, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:774:2: ( ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )* | ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )* )
			int alt240=2;
			try { dbg.enterDecision(240, decisionCanBacktrack[240]);

			int LA240_0 = input.LA(1);
			if ( (LA240_0==AT_SIGN||LA240_0==COLON||(LA240_0 >= DCOLON && LA240_0 <= DOT)||(LA240_0 >= HASH && LA240_0 <= HASH_SYMBOL)||LA240_0==LBRACKET||LA240_0==MINUS||LA240_0==SASS_EXTEND_ONLY_SELECTOR) ) {
				alt240=1;
			}
			else if ( (LA240_0==LESS_AND) ) {
				int LA240_2 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")||evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt240=1;
				}
				else if ( (synpred33_Css3()) ) {
					alt240=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 240, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA240_0==IDENT) ) {
				int LA240_3 = input.LA(2);
				if ( (LA240_3==HASH_SYMBOL) ) {
					int LA240_7 = input.LA(3);
					if ( (LA240_7==LBRACE) ) {
						alt240=1;
					}
					else if ( (LA240_7==NAME) && (synpred33_Css3())) {
						alt240=2;
					}
					else if ( (LA240_7==IDENT||LA240_7==MINUS) && (synpred33_Css3())) {
						alt240=2;
					}
					else if ( (LA240_7==AT_SIGN) && (synpred33_Css3())) {
						alt240=2;
					}

				}
				else if ( (LA240_3==AT_SIGN) ) {
					alt240=1;
				}
				else if ( (LA240_3==PIPE) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==COMMENT||LA240_3==NL||LA240_3==WS) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==SASS_EXTEND_ONLY_SELECTOR) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==LESS_AND) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==HASH) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==DOT) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==DIMENSION) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==LBRACKET) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==COLON||LA240_3==DCOLON) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==GREATER||LA240_3==PLUS||LA240_3==TILDE) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==COMMA) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==LBRACE) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==RPAREN) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==SEMI) && (synpred33_Css3())) {
					alt240=2;
				}
				else if ( (LA240_3==RBRACE) && (synpred33_Css3())) {
					alt240=2;
				}

			}
			else if ( (LA240_0==STAR) && (synpred33_Css3())) {
				alt240=2;
			}
			else if ( (LA240_0==PIPE) && (synpred33_Css3())) {
				alt240=2;
			}
			else if ( (LA240_0==GEN) && (synpred33_Css3())) {
				alt240=2;
			}

			} finally {dbg.exitDecision(240);}

			switch (alt240) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					{
					dbg.location(775,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:9: ( elementSubsequent |{...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
					int alt232=3;
					try { dbg.enterSubRule(232);
					try { dbg.enterDecision(232, decisionCanBacktrack[232]);

					switch ( input.LA(1) ) {
					case COLON:
					case DCOLON:
					case DIMENSION:
					case DOT:
					case HASH:
					case LBRACKET:
					case LESS_AND:
					case SASS_EXTEND_ONLY_SELECTOR:
						{
						alt232=1;
						}
						break;
					case HASH_SYMBOL:
						{
						int LA232_2 = input.LA(2);
						if ( (LA232_2==LBRACE) ) {
							alt232=2;
						}
						else if ( (LA232_2==AT_SIGN||LA232_2==IDENT||LA232_2==MINUS||LA232_2==NAME) ) {
							alt232=1;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 232, 2, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENT:
					case MINUS:
						{
						int LA232_3 = input.LA(2);
						if ( (LA232_3==HASH_SYMBOL) ) {
							alt232=2;
						}
						else if ( (LA232_3==AT_SIGN) ) {
							alt232=3;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 232, 3, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case AT_SIGN:
						{
						alt232=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 232, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(232);}

					switch (alt232) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:10: elementSubsequent
							{
							dbg.location(775,10);
							pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence4390);
							elementSubsequent();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:775:30: {...}? sass_selector_interpolation_exp
							{
							dbg.location(775,30);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
							}dbg.location(775,48);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence4396);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:11: {...}? less_selector_interpolation_exp
							{
							dbg.location(776,11);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
							}dbg.location(776,29);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence4410);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(232);}
					dbg.location(776,64);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:64: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) ) )*
					try { dbg.enterSubRule(236);

					loop236:
					while (true) {
						int alt236=2;
						try { dbg.enterDecision(236, decisionCanBacktrack[236]);

						int LA236_0 = input.LA(1);
						if ( (LA236_0==COMMENT||LA236_0==NL||LA236_0==WS) ) {
							int LA236_1 = input.LA(2);
							if ( (synpred32_Css3()) ) {
								alt236=1;
							}

						}
						else if ( (LA236_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred32_Css3())) {
							alt236=1;
						}
						else if ( (LA236_0==LESS_AND) && (synpred32_Css3())) {
							alt236=1;
						}
						else if ( (LA236_0==HASH) && (synpred32_Css3())) {
							alt236=1;
						}
						else if ( (LA236_0==HASH_SYMBOL) && (synpred32_Css3())) {
							alt236=1;
						}
						else if ( (LA236_0==DOT) && (synpred32_Css3())) {
							alt236=1;
						}
						else if ( (LA236_0==DIMENSION) && (synpred32_Css3())) {
							alt236=1;
						}
						else if ( (LA236_0==LBRACKET) && (synpred32_Css3())) {
							alt236=1;
						}
						else if ( (LA236_0==COLON||LA236_0==DCOLON) && (synpred32_Css3())) {
							alt236=1;
						}

						} finally {dbg.exitDecision(236);}

						switch (alt236) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:65: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							{
							dbg.location(776,79);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )
							int alt235=2;
							try { dbg.enterSubRule(235);
							try { dbg.enterDecision(235, decisionCanBacktrack[235]);

							try {
								isCyclicDecision = true;
								alt235 = dfa235.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(235);}

							switch (alt235) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:80: ( ( ws )? elementSubsequent )
									{
									dbg.location(776,80);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:80: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:81: ( ws )? elementSubsequent
									{
									dbg.location(776,81);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:81: ( ws )?
									int alt233=2;
									try { dbg.enterSubRule(233);
									try { dbg.enterDecision(233, decisionCanBacktrack[233]);

									int LA233_0 = input.LA(1);
									if ( (LA233_0==COMMENT||LA233_0==NL||LA233_0==WS) ) {
										alt233=1;
									}
									} finally {dbg.exitDecision(233);}

									switch (alt233) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:81: ws
											{
											dbg.location(776,81);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence4425);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(233);}
									dbg.location(776,85);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence4428);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									{
									dbg.location(776,105);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:105: ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:106: ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									{
									dbg.location(776,106);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence4433);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(776,109);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:109: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp )
									int alt234=2;
									try { dbg.enterSubRule(234);
									try { dbg.enterDecision(234, decisionCanBacktrack[234]);

									switch ( input.LA(1) ) {
									case IDENT:
									case MINUS:
										{
										int LA234_1 = input.LA(2);
										if ( (LA234_1==HASH_SYMBOL) ) {
											alt234=1;
										}
										else if ( (LA234_1==AT_SIGN) ) {
											alt234=2;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return;}
											int nvaeMark = input.mark();
											try {
												input.consume();
												NoViableAltException nvae =
													new NoViableAltException("", 234, 1, input);
												dbg.recognitionException(nvae);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case HASH_SYMBOL:
										{
										alt234=1;
										}
										break;
									case AT_SIGN:
										{
										alt234=2;
										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return;}
										NoViableAltException nvae =
											new NoViableAltException("", 234, 0, input);
										dbg.recognitionException(nvae);
										throw nvae;
									}
									} finally {dbg.exitDecision(234);}

									switch (alt234) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:110: {...}? sass_selector_interpolation_exp
											{
											dbg.location(776,110);
											if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
											}dbg.location(776,128);
											pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence4438);
											sass_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;
										case 2 :
											dbg.enterAlt(2);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:162: {...}? less_selector_interpolation_exp
											{
											dbg.location(776,162);
											if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
												if (state.backtracking>0) {state.failed=true; return;}
												throw new FailedPredicateException(input, "simpleSelectorSequence", "isLessSource()");
											}dbg.location(776,180);
											pushFollow(FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence4444);
											less_selector_interpolation_exp();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(234);}

									}

									}
									break;

							}
							} finally {dbg.exitSubRule(235);}

							}
							break;

						default :
							break loop236;
						}
					}
					} finally {dbg.exitSubRule(236);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:4: ( typeSelector )=> typeSelector ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					{
					dbg.location(777,20);
					pushFollow(FOLLOW_typeSelector_in_simpleSelectorSequence4458);
					typeSelector();
					state._fsp--;
					if (state.failed) return;dbg.location(777,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:33: ( ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp ) )*
					try { dbg.enterSubRule(239);

					loop239:
					while (true) {
						int alt239=2;
						try { dbg.enterDecision(239, decisionCanBacktrack[239]);

						int LA239_0 = input.LA(1);
						if ( (LA239_0==COMMENT||LA239_0==NL||LA239_0==WS) ) {
							int LA239_1 = input.LA(2);
							if ( (synpred34_Css3()) ) {
								alt239=1;
							}

						}
						else if ( (LA239_0==SASS_EXTEND_ONLY_SELECTOR) && (synpred34_Css3())) {
							alt239=1;
						}
						else if ( (LA239_0==LESS_AND) && (synpred34_Css3())) {
							alt239=1;
						}
						else if ( (LA239_0==HASH) && (synpred34_Css3())) {
							alt239=1;
						}
						else if ( (LA239_0==HASH_SYMBOL) && (synpred34_Css3())) {
							alt239=1;
						}
						else if ( (LA239_0==DOT) && (synpred34_Css3())) {
							alt239=1;
						}
						else if ( (LA239_0==DIMENSION) && (synpred34_Css3())) {
							alt239=1;
						}
						else if ( (LA239_0==LBRACKET) && (synpred34_Css3())) {
							alt239=1;
						}
						else if ( (LA239_0==COLON||LA239_0==DCOLON) && (synpred34_Css3())) {
							alt239=1;
						}

						} finally {dbg.exitDecision(239);}

						switch (alt239) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:34: ( ( ws )? esPred )=> ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							{
							dbg.location(777,48);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )
							int alt238=2;
							try { dbg.enterSubRule(238);
							try { dbg.enterDecision(238, decisionCanBacktrack[238]);

							try {
								isCyclicDecision = true;
								alt238 = dfa238.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(238);}

							switch (alt238) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:49: ( ( ws )? elementSubsequent )
									{
									dbg.location(777,49);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:49: ( ( ws )? elementSubsequent )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:50: ( ws )? elementSubsequent
									{
									dbg.location(777,50);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:50: ( ws )?
									int alt237=2;
									try { dbg.enterSubRule(237);
									try { dbg.enterDecision(237, decisionCanBacktrack[237]);

									int LA237_0 = input.LA(1);
									if ( (LA237_0==COMMENT||LA237_0==NL||LA237_0==WS) ) {
										alt237=1;
									}
									} finally {dbg.exitDecision(237);}

									switch (alt237) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:50: ws
											{
											dbg.location(777,50);
											pushFollow(FOLLOW_ws_in_simpleSelectorSequence4470);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(237);}
									dbg.location(777,54);
									pushFollow(FOLLOW_elementSubsequent_in_simpleSelectorSequence4473);
									elementSubsequent();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:75: {...}? ws sass_selector_interpolation_exp
									{
									dbg.location(777,75);
									if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
										if (state.backtracking>0) {state.failed=true; return;}
										throw new FailedPredicateException(input, "simpleSelectorSequence", "isScssSource()");
									}dbg.location(777,93);
									pushFollow(FOLLOW_ws_in_simpleSelectorSequence4480);
									ws();
									state._fsp--;
									if (state.failed) return;dbg.location(777,96);
									pushFollow(FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence4482);
									sass_selector_interpolation_exp();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(238);}

							}
							break;

						default :
							break loop239;
						}
					}
					} finally {dbg.exitSubRule(239);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			            reportError(rce);
			            consumeUntil(input, BitSet.of(LBRACE));
			        
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(778, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "simpleSelectorSequence");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "simpleSelectorSequence"



	// $ANTLR start "esPred"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:785:1: esPred : ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND );
	public final void esPred() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "esPred");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(785, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:5: ( HASH_SYMBOL | HASH | DOT | LBRACKET | COLON | DCOLON | SASS_EXTEND_ONLY_SELECTOR |{...}? LESS_AND )
			int alt241=8;
			try { dbg.enterDecision(241, decisionCanBacktrack[241]);

			switch ( input.LA(1) ) {
			case HASH_SYMBOL:
				{
				alt241=1;
				}
				break;
			case HASH:
				{
				alt241=2;
				}
				break;
			case DOT:
				{
				alt241=3;
				}
				break;
			case LBRACKET:
				{
				alt241=4;
				}
				break;
			case COLON:
				{
				alt241=5;
				}
				break;
			case DCOLON:
				{
				alt241=6;
				}
				break;
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt241=7;
				}
				break;
			case LESS_AND:
				{
				alt241=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 241, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(241);}

			switch (alt241) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:7: HASH_SYMBOL
					{
					dbg.location(786,7);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_esPred4507); if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:21: HASH
					{
					dbg.location(786,21);
					match(input,HASH,FOLLOW_HASH_in_esPred4511); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:28: DOT
					{
					dbg.location(786,28);
					match(input,DOT,FOLLOW_DOT_in_esPred4515); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:34: LBRACKET
					{
					dbg.location(786,34);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_esPred4519); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:45: COLON
					{
					dbg.location(786,45);
					match(input,COLON,FOLLOW_COLON_in_esPred4523); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:53: DCOLON
					{
					dbg.location(786,53);
					match(input,DCOLON,FOLLOW_DCOLON_in_esPred4527); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:62: SASS_EXTEND_ONLY_SELECTOR
					{
					dbg.location(786,62);
					match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred4531); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:786:90: {...}? LESS_AND
					{
					dbg.location(786,90);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "esPred", "isCssPreprocessorSource()");
					}dbg.location(786,119);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_esPred4537); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(787, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "esPred");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "esPred"



	// $ANTLR start "typeSelector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:789:1: typeSelector options {k=2; } : ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName ;
	public final void typeSelector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "typeSelector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(789, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:3: ( ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )? elementName
			{
			dbg.location(791,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:6: ( ( ( IDENT | STAR )? PIPE )=> namespacePrefix )?
			int alt242=2;
			try { dbg.enterSubRule(242);
			try { dbg.enterDecision(242, decisionCanBacktrack[242]);

			int LA242_0 = input.LA(1);
			if ( (LA242_0==IDENT) ) {
				int LA242_1 = input.LA(2);
				if ( (LA242_1==PIPE) && (synpred35_Css3())) {
					alt242=1;
				}
			}
			else if ( (LA242_0==STAR) ) {
				int LA242_2 = input.LA(2);
				if ( (LA242_2==PIPE) && (synpred35_Css3())) {
					alt242=1;
				}
			}
			else if ( (LA242_0==PIPE) && (synpred35_Css3())) {
				alt242=1;
			}
			} finally {dbg.exitDecision(242);}

			switch (alt242) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:7: ( ( IDENT | STAR )? PIPE )=> namespacePrefix
					{
					dbg.location(791,31);
					pushFollow(FOLLOW_namespacePrefix_in_typeSelector4579);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(242);}
			dbg.location(791,49);
			pushFollow(FOLLOW_elementName_in_typeSelector4583);
			elementName();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(792, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "typeSelector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "typeSelector"



	// $ANTLR start "namespacePrefix"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:794:1: namespacePrefix : ( namespacePrefixName | STAR )? PIPE ;
	public final void namespacePrefix() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "namespacePrefix");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(794, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:795:3: ( ( namespacePrefixName | STAR )? PIPE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:795:5: ( namespacePrefixName | STAR )? PIPE
			{
			dbg.location(795,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:795:5: ( namespacePrefixName | STAR )?
			int alt243=3;
			try { dbg.enterSubRule(243);
			try { dbg.enterDecision(243, decisionCanBacktrack[243]);

			int LA243_0 = input.LA(1);
			if ( (LA243_0==IDENT) ) {
				alt243=1;
			}
			else if ( (LA243_0==STAR) ) {
				alt243=2;
			}
			} finally {dbg.exitDecision(243);}

			switch (alt243) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:795:7: namespacePrefixName
					{
					dbg.location(795,7);
					pushFollow(FOLLOW_namespacePrefixName_in_namespacePrefix4598);
					namespacePrefixName();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:795:29: STAR
					{
					dbg.location(795,29);
					match(input,STAR,FOLLOW_STAR_in_namespacePrefix4602); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(243);}
			dbg.location(795,36);
			match(input,PIPE,FOLLOW_PIPE_in_namespacePrefix4606); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(796, 2);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "namespacePrefix");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "namespacePrefix"



	// $ANTLR start "elementSubsequent"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:799:1: elementSubsequent : ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) ;
	public final void elementSubsequent() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementSubsequent");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(799, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:800:5: ( ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			{
			dbg.location(801,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:801:5: ({...}? sass_extend_only_selector |{...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )* |{...}? LESS_AND less_selector_interpolation_exp | cssId | cssClass | slAttribute | pseudo )
			int alt245=7;
			try { dbg.enterSubRule(245);
			try { dbg.enterDecision(245, decisionCanBacktrack[245]);

			switch ( input.LA(1) ) {
			case SASS_EXTEND_ONLY_SELECTOR:
				{
				alt245=1;
				}
				break;
			case LESS_AND:
				{
				switch ( input.LA(2) ) {
				case IDENT:
					{
					int LA245_7 = input.LA(3);
					if ( ((LA245_7 >= COLON && LA245_7 <= COMMENT)||(LA245_7 >= DCOLON && LA245_7 <= DOT)||LA245_7==GREATER||(LA245_7 >= HASH && LA245_7 <= HASH_SYMBOL)||LA245_7==IDENT||(LA245_7 >= LBRACE && LA245_7 <= LBRACKET)||LA245_7==LESS_AND||LA245_7==NL||LA245_7==NUMBER||LA245_7==PLUS||LA245_7==RBRACE||LA245_7==RPAREN||LA245_7==SASS_EXTEND_ONLY_SELECTOR||LA245_7==SEMI||LA245_7==TILDE||LA245_7==WS) ) {
						alt245=2;
					}
					else if ( (LA245_7==AT_SIGN) ) {
						alt245=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 245, 7, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case COLON:
				case COMMA:
				case COMMENT:
				case DCOLON:
				case DIMENSION:
				case DOT:
				case GREATER:
				case HASH:
				case HASH_SYMBOL:
				case LBRACE:
				case LBRACKET:
				case LESS_AND:
				case NL:
				case NUMBER:
				case PLUS:
				case RBRACE:
				case RPAREN:
				case SASS_EXTEND_ONLY_SELECTOR:
				case SEMI:
				case TILDE:
				case WS:
					{
					alt245=2;
					}
					break;
				case AT_SIGN:
				case MINUS:
					{
					alt245=3;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 245, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case HASH:
			case HASH_SYMBOL:
				{
				alt245=4;
				}
				break;
			case DIMENSION:
			case DOT:
				{
				alt245=5;
				}
				break;
			case LBRACKET:
				{
				alt245=6;
				}
				break;
			case COLON:
			case DCOLON:
				{
				alt245=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 245, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(245);}

			switch (alt245) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:802:9: {...}? sass_extend_only_selector
					{
					dbg.location(802,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
					}dbg.location(802,27);
					pushFollow(FOLLOW_sass_extend_only_selector_in_elementSubsequent4638);
					sass_extend_only_selector();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:11: {...}? LESS_AND ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					{
					dbg.location(803,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isCssPreprocessorSource()");
					}dbg.location(803,40);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent4652); if (state.failed) return;dbg.location(803,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:49: ( IDENT | NUMBER |{...}? sass_interpolation_expression_var )*
					try { dbg.enterSubRule(244);

					loop244:
					while (true) {
						int alt244=4;
						try { dbg.enterDecision(244, decisionCanBacktrack[244]);

						switch ( input.LA(1) ) {
						case HASH_SYMBOL:
							{
							int LA244_2 = input.LA(2);
							if ( (LA244_2==LBRACE) ) {
								alt244=3;
							}

							}
							break;
						case IDENT:
							{
							alt244=1;
							}
							break;
						case NUMBER:
							{
							alt244=2;
							}
							break;
						}
						} finally {dbg.exitDecision(244);}

						switch (alt244) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:50: IDENT
							{
							dbg.location(803,50);
							match(input,IDENT,FOLLOW_IDENT_in_elementSubsequent4655); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:58: NUMBER
							{
							dbg.location(803,58);
							match(input,NUMBER,FOLLOW_NUMBER_in_elementSubsequent4659); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:803:67: {...}? sass_interpolation_expression_var
							{
							dbg.location(803,67);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "elementSubsequent", "isScssSource()");
							}dbg.location(803,85);
							pushFollow(FOLLOW_sass_interpolation_expression_var_in_elementSubsequent4665);
							sass_interpolation_expression_var();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop244;
						}
					}
					} finally {dbg.exitSubRule(244);}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:804:11: {...}? LESS_AND less_selector_interpolation_exp
					{
					dbg.location(804,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "elementSubsequent", "isLessSource()");
					}dbg.location(804,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_elementSubsequent4681); if (state.failed) return;dbg.location(804,38);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_elementSubsequent4683);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:805:8: cssId
					{
					dbg.location(805,8);
					pushFollow(FOLLOW_cssId_in_elementSubsequent4692);
					cssId();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:806:8: cssClass
					{
					dbg.location(806,8);
					pushFollow(FOLLOW_cssClass_in_elementSubsequent4701);
					cssClass();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:807:11: slAttribute
					{
					dbg.location(807,11);
					pushFollow(FOLLOW_slAttribute_in_elementSubsequent4713);
					slAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:808:11: pseudo
					{
					dbg.location(808,11);
					pushFollow(FOLLOW_pseudo_in_elementSubsequent4725);
					pseudo();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(245);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(810, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementSubsequent");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementSubsequent"



	// $ANTLR start "cssId"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:813:1: cssId : ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) );
	public final void cssId() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssId");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(813, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:814:5: ( HASH ({...}? sass_selector_interpolation_exp )? | ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) ) )
			int alt248=2;
			try { dbg.enterDecision(248, decisionCanBacktrack[248]);

			int LA248_0 = input.LA(1);
			if ( (LA248_0==HASH) ) {
				alt248=1;
			}
			else if ( (LA248_0==HASH_SYMBOL) ) {
				alt248=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 248, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(248);}

			switch (alt248) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:814:7: HASH ({...}? sass_selector_interpolation_exp )?
					{
					dbg.location(814,7);
					match(input,HASH,FOLLOW_HASH_in_cssId4749); if (state.failed) return;dbg.location(814,12);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:814:12: ({...}? sass_selector_interpolation_exp )?
					int alt246=2;
					try { dbg.enterSubRule(246);
					try { dbg.enterDecision(246, decisionCanBacktrack[246]);

					int LA246_0 = input.LA(1);
					if ( (LA246_0==IDENT||LA246_0==MINUS) ) {
						alt246=1;
					}
					else if ( (LA246_0==HASH_SYMBOL) ) {
						int LA246_2 = input.LA(2);
						if ( (LA246_2==LBRACE) ) {
							alt246=1;
						}
					}
					} finally {dbg.exitDecision(246);}

					switch (alt246) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:814:13: {...}? sass_selector_interpolation_exp
							{
							dbg.location(814,13);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isScssSource()");
							}dbg.location(814,31);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssId4754);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(246);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:816:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					{
					dbg.location(816,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:816:9: ( HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:816:11: HASH_SYMBOL ( NAME |{...}? less_selector_interpolation_exp )
					{
					dbg.location(816,11);
					match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_cssId4776); if (state.failed) return;dbg.location(817,13);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:817:13: ( NAME |{...}? less_selector_interpolation_exp )
					int alt247=2;
					try { dbg.enterSubRule(247);
					try { dbg.enterDecision(247, decisionCanBacktrack[247]);

					int LA247_0 = input.LA(1);
					if ( (LA247_0==NAME) ) {
						alt247=1;
					}
					else if ( (LA247_0==AT_SIGN||LA247_0==IDENT||LA247_0==MINUS) ) {
						alt247=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 247, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(247);}

					switch (alt247) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:817:15: NAME
							{
							dbg.location(817,15);
							match(input,NAME,FOLLOW_NAME_in_cssId4792); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:818:17: {...}? less_selector_interpolation_exp
							{
							dbg.location(818,17);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssId", "isLessSource()");
							}dbg.location(818,35);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssId4812);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(247);}

					}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(821, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssId");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssId"



	// $ANTLR start "cssClass"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:827:1: cssClass : ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION );
	public final void cssClass() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cssClass");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(827, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:5: ( ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) ) |{...}? DIMENSION )
			int alt250=2;
			try { dbg.enterDecision(250, decisionCanBacktrack[250]);

			int LA250_0 = input.LA(1);
			if ( (LA250_0==DOT) ) {
				alt250=1;
			}
			else if ( (LA250_0==DIMENSION) ) {
				alt250=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 250, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(250);}

			switch (alt250) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					{
					dbg.location(828,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:7: ( DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN ) )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:828:8: DOT ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					{
					dbg.location(828,8);
					match(input,DOT,FOLLOW_DOT_in_cssClass4864); if (state.failed) return;dbg.location(829,9);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:829:9: ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp | IDENT | NOT | GEN )
					int alt249=5;
					try { dbg.enterSubRule(249);
					try { dbg.enterDecision(249, decisionCanBacktrack[249]);

					switch ( input.LA(1) ) {
					case IDENT:
						{
						switch ( input.LA(2) ) {
						case HASH_SYMBOL:
							{
							int LA249_7 = input.LA(3);
							if ( (LA249_7==LBRACE) ) {
								alt249=1;
							}
							else if ( (LA249_7==AT_SIGN||LA249_7==IDENT||LA249_7==MINUS||LA249_7==NAME) ) {
								alt249=3;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 249, 7, input);
									dbg.recognitionException(nvae);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

							}
							break;
						case AT_SIGN:
							{
							alt249=2;
							}
							break;
						case COLON:
						case COMMA:
						case COMMENT:
						case DCOLON:
						case DIMENSION:
						case DOT:
						case GREATER:
						case HASH:
						case LBRACE:
						case LBRACKET:
						case LESS_AND:
						case NL:
						case PLUS:
						case RBRACE:
						case RPAREN:
						case SASS_EXTEND_ONLY_SELECTOR:
						case SEMI:
						case TILDE:
						case WS:
							{
							alt249=3;
							}
							break;
						default:
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 249, 1, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}
						}
						break;
					case HASH_SYMBOL:
						{
						alt249=1;
						}
						break;
					case AT_SIGN:
						{
						alt249=2;
						}
						break;
					case MINUS:
						{
						int LA249_4 = input.LA(2);
						if ( (LA249_4==HASH_SYMBOL) ) {
							alt249=1;
						}
						else if ( (LA249_4==AT_SIGN) ) {
							alt249=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 249, 4, input);
								dbg.recognitionException(nvae);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case NOT:
						{
						alt249=4;
						}
						break;
					case GEN:
						{
						alt249=5;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 249, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(249);}

					switch (alt249) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:830:14: {...}? sass_selector_interpolation_exp
							{
							dbg.location(830,14);
							if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isScssSource()");
							}dbg.location(830,33);
							pushFollow(FOLLOW_sass_selector_interpolation_exp_in_cssClass4892);
							sass_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:831:15: {...}? less_selector_interpolation_exp
							{
							dbg.location(831,15);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "cssClass", "isLessSource()");
							}dbg.location(831,33);
							pushFollow(FOLLOW_less_selector_interpolation_exp_in_cssClass4910);
							less_selector_interpolation_exp();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:832:15: IDENT
							{
							dbg.location(832,15);
							match(input,IDENT,FOLLOW_IDENT_in_cssClass4926); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:833:15: NOT
							{
							dbg.location(833,15);
							match(input,NOT,FOLLOW_NOT_in_cssClass4942); if (state.failed) return;
							}
							break;
						case 5 :
							dbg.enterAlt(5);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:834:15: GEN
							{
							dbg.location(834,15);
							match(input,GEN,FOLLOW_GEN_in_cssClass4958); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(249);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:836:11: {...}? DIMENSION
					{
					dbg.location(836,11);
					if ( !(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cssClass", "tokenNameStartsWith(\".\")");
					}dbg.location(836,39);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_cssClass4982); if (state.failed) return;
					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(WS, IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(837, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cssClass");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cssClass"



	// $ANTLR start "elementName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:844:1: elementName : ( IDENT | GEN | LESS_AND | STAR );
	public final void elementName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "elementName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(844, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:845:5: ( IDENT | GEN | LESS_AND | STAR )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(845,5);
			if ( input.LA(1)==GEN||input.LA(1)==IDENT||input.LA(1)==LESS_AND||input.LA(1)==STAR ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(846, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "elementName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "elementName"



	// $ANTLR start "slAttribute"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:848:1: slAttribute : LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET ;
	public final void slAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(848, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:5: ( LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:849:7: LBRACKET ( namespacePrefix )? ( ws )? slAttributeName ( ws )? ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )? RBRACKET
			{
			dbg.location(849,7);
			match(input,LBRACKET,FOLLOW_LBRACKET_in_slAttribute5038); if (state.failed) return;dbg.location(850,6);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:6: ( namespacePrefix )?
			int alt251=2;
			try { dbg.enterSubRule(251);
			try { dbg.enterDecision(251, decisionCanBacktrack[251]);

			int LA251_0 = input.LA(1);
			if ( (LA251_0==IDENT) ) {
				int LA251_1 = input.LA(2);
				if ( (LA251_1==PIPE) ) {
					alt251=1;
				}
			}
			else if ( (LA251_0==PIPE||LA251_0==STAR) ) {
				alt251=1;
			}
			} finally {dbg.exitDecision(251);}

			switch (alt251) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:6: namespacePrefix
					{
					dbg.location(850,6);
					pushFollow(FOLLOW_namespacePrefix_in_slAttribute5045);
					namespacePrefix();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(251);}
			dbg.location(850,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:23: ( ws )?
			int alt252=2;
			try { dbg.enterSubRule(252);
			try { dbg.enterDecision(252, decisionCanBacktrack[252]);

			int LA252_0 = input.LA(1);
			if ( (LA252_0==COMMENT||LA252_0==NL||LA252_0==WS) ) {
				alt252=1;
			}
			} finally {dbg.exitDecision(252);}

			switch (alt252) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:850:23: ws
					{
					dbg.location(850,23);
					pushFollow(FOLLOW_ws_in_slAttribute5048);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(252);}
			dbg.location(851,9);
			pushFollow(FOLLOW_slAttributeName_in_slAttribute5059);
			slAttributeName();
			state._fsp--;
			if (state.failed) return;dbg.location(851,25);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:25: ( ws )?
			int alt253=2;
			try { dbg.enterSubRule(253);
			try { dbg.enterDecision(253, decisionCanBacktrack[253]);

			int LA253_0 = input.LA(1);
			if ( (LA253_0==COMMENT||LA253_0==NL||LA253_0==WS) ) {
				alt253=1;
			}
			} finally {dbg.exitDecision(253);}

			switch (alt253) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:851:25: ws
					{
					dbg.location(851,25);
					pushFollow(FOLLOW_ws_in_slAttribute5061);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(253);}
			dbg.location(853,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:853:13: ( ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )? )?
			int alt256=2;
			try { dbg.enterSubRule(256);
			try { dbg.enterDecision(256, decisionCanBacktrack[256]);

			int LA256_0 = input.LA(1);
			if ( (LA256_0==BEGINS||LA256_0==CONTAINS||LA256_0==DASHMATCH||LA256_0==ENDS||LA256_0==INCLUDES||LA256_0==OPEQ) ) {
				alt256=1;
			}
			} finally {dbg.exitDecision(256);}

			switch (alt256) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:854:17: ( OPEQ | INCLUDES | DASHMATCH | BEGINS | ENDS | CONTAINS ) ( ws )? slAttributeValue ( ws )?
					{
					dbg.location(854,17);
					if ( input.LA(1)==BEGINS||input.LA(1)==CONTAINS||input.LA(1)==DASHMATCH||input.LA(1)==ENDS||input.LA(1)==INCLUDES||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(862,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:862:17: ( ws )?
					int alt254=2;
					try { dbg.enterSubRule(254);
					try { dbg.enterDecision(254, decisionCanBacktrack[254]);

					int LA254_0 = input.LA(1);
					if ( (LA254_0==COMMENT||LA254_0==NL||LA254_0==WS) ) {
						alt254=1;
					}
					} finally {dbg.exitDecision(254);}

					switch (alt254) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:862:17: ws
							{
							dbg.location(862,17);
							pushFollow(FOLLOW_ws_in_slAttribute5275);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(254);}
					dbg.location(863,17);
					pushFollow(FOLLOW_slAttributeValue_in_slAttribute5294);
					slAttributeValue();
					state._fsp--;
					if (state.failed) return;dbg.location(864,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:17: ( ws )?
					int alt255=2;
					try { dbg.enterSubRule(255);
					try { dbg.enterDecision(255, decisionCanBacktrack[255]);

					int LA255_0 = input.LA(1);
					if ( (LA255_0==COMMENT||LA255_0==NL||LA255_0==WS) ) {
						alt255=1;
					}
					} finally {dbg.exitDecision(255);}

					switch (alt255) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:864:17: ws
							{
							dbg.location(864,17);
							pushFollow(FOLLOW_ws_in_slAttribute5312);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(255);}

					}
					break;

			}
			} finally {dbg.exitSubRule(256);}
			dbg.location(867,7);
			match(input,RBRACKET,FOLLOW_RBRACKET_in_slAttribute5337); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(IDENT, LBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(868, 0);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttribute"



	// $ANTLR start "slAttributeName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:875:1: slAttributeName : IDENT ;
	public final void slAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(875, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:876:2: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:876:4: IDENT
			{
			dbg.location(876,4);
			match(input,IDENT,FOLLOW_IDENT_in_slAttributeName5353); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(877, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeName"



	// $ANTLR start "slAttributeValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:879:1: slAttributeValue : ( IDENT | STRING ) ;
	public final void slAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "slAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(879, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:880:2: ( ( IDENT | STRING ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(880,2);
			if ( input.LA(1)==IDENT||input.LA(1)==STRING ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(885, 8);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "slAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "slAttributeValue"



	// $ANTLR start "pseudo"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:887:1: pseudo : ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) ;
	public final void pseudo() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "pseudo");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(887, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:888:5: ( ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:888:7: ( COLON | DCOLON ) ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			{
			dbg.location(888,7);
			if ( input.LA(1)==COLON||input.LA(1)==DCOLON ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(889,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:889:14: ( ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? ) |{...}? sass_interpolation_expression_var | ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) |{...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN ) | ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN ) )
			int alt273=5;
			try { dbg.enterSubRule(273);
			try { dbg.enterDecision(273, decisionCanBacktrack[273]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA273_1 = input.LA(2);
				if ( (!(evalPredicate(((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(tokenNameEquals("is") || tokenNameEquals("where"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\")")),""))) ) {
					alt273=1;
				}
				else if ( (evalPredicate(tokenNameEquals("is") || tokenNameEquals("where"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\")")) ) {
					alt273=4;
				}
				else if ( ((evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt273=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 273, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				alt273=2;
				}
				break;
			case NOT:
				{
				alt273=3;
				}
				break;
			case GEN:
				{
				alt273=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 273, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(273);}

			switch (alt273) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					{
					dbg.location(890,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:890:17: ( ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:891:21: ( IDENT | GEN ) ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					{
					dbg.location(891,21);
					if ( input.LA(1)==GEN||input.LA(1)==IDENT ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(892,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:892:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?
					int alt261=2;
					try { dbg.enterSubRule(261);
					try { dbg.enterDecision(261, decisionCanBacktrack[261]);

					try {
						isCyclicDecision = true;
						alt261 = dfa261.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(261);}

					switch (alt261) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:25: ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN
							{
							dbg.location(893,25);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:25: ( ws )?
							int alt257=2;
							try { dbg.enterSubRule(257);
							try { dbg.enterDecision(257, decisionCanBacktrack[257]);

							int LA257_0 = input.LA(1);
							if ( (LA257_0==COMMENT||LA257_0==NL||LA257_0==WS) ) {
								alt257=1;
							}
							} finally {dbg.exitDecision(257);}

							switch (alt257) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:25: ws
									{
									dbg.location(893,25);
									pushFollow(FOLLOW_ws_in_pseudo5545);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(257);}
							dbg.location(893,29);
							match(input,LPAREN,FOLLOW_LPAREN_in_pseudo5548); if (state.failed) return;dbg.location(893,36);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:36: ( ws )?
							int alt258=2;
							try { dbg.enterSubRule(258);
							try { dbg.enterDecision(258, decisionCanBacktrack[258]);

							int LA258_0 = input.LA(1);
							if ( (LA258_0==COMMENT||LA258_0==NL||LA258_0==WS) ) {
								alt258=1;
							}
							} finally {dbg.exitDecision(258);}

							switch (alt258) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:36: ws
									{
									dbg.location(893,36);
									pushFollow(FOLLOW_ws_in_pseudo5550);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(258);}
							dbg.location(893,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:40: ( ( expression ( ws )? ) | STAR )?
							int alt260=3;
							try { dbg.enterSubRule(260);
							try { dbg.enterDecision(260, decisionCanBacktrack[260]);

							int LA260_0 = input.LA(1);
							if ( ((LA260_0 >= ANGLE && LA260_0 <= AT_SIGN)||(LA260_0 >= BOTTOMCENTER_SYM && LA260_0 <= BOTTOMRIGHT_SYM)||LA260_0==CHARSET_SYM||LA260_0==COUNTER_STYLE_SYM||LA260_0==DIMENSION||LA260_0==EMS||LA260_0==EXS||(LA260_0 >= FONT_FACE_SYM && LA260_0 <= FREQ)||LA260_0==GEN||(LA260_0 >= HASH && LA260_0 <= HASH_SYMBOL)||LA260_0==IDENT||LA260_0==IMPORT_SYM||(LA260_0 >= LBRACKET && LA260_0 <= LENGTH)||(LA260_0 >= LESS_AND && LA260_0 <= LESS_JS_STRING)||(LA260_0 >= MEDIA_SYM && LA260_0 <= MOZ_DOCUMENT_SYM)||LA260_0==NAMESPACE_SYM||LA260_0==NUMBER||(LA260_0 >= PAGE_SYM && LA260_0 <= PERCENTAGE_SYMBOL)||LA260_0==PLUS||(LA260_0 >= REM && LA260_0 <= RIGHTTOP_SYM)||(LA260_0 >= SASS_AT_ROOT && LA260_0 <= SASS_DEBUG)||(LA260_0 >= SASS_EACH && LA260_0 <= SASS_ELSE)||LA260_0==SASS_EXTEND||LA260_0==SASS_FOR||LA260_0==SASS_FUNCTION||(LA260_0 >= SASS_IF && LA260_0 <= SASS_MIXIN)||LA260_0==SASS_RETURN||(LA260_0 >= SASS_VAR && LA260_0 <= SASS_WHILE)||LA260_0==STRING||(LA260_0 >= TILDE && LA260_0 <= TOPRIGHT_SYM)||(LA260_0 >= URANGE && LA260_0 <= URI)||LA260_0==VARIABLE||LA260_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt260=1;
							}
							else if ( (LA260_0==STAR) ) {
								alt260=2;
							}
							} finally {dbg.exitDecision(260);}

							switch (alt260) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:42: ( expression ( ws )? )
									{
									dbg.location(893,42);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:42: ( expression ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:43: expression ( ws )?
									{
									dbg.location(893,43);
									pushFollow(FOLLOW_expression_in_pseudo5556);
									expression();
									state._fsp--;
									if (state.failed) return;dbg.location(893,54);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:54: ( ws )?
									int alt259=2;
									try { dbg.enterSubRule(259);
									try { dbg.enterDecision(259, decisionCanBacktrack[259]);

									int LA259_0 = input.LA(1);
									if ( (LA259_0==COMMENT||LA259_0==NL||LA259_0==WS) ) {
										alt259=1;
									}
									} finally {dbg.exitDecision(259);}

									switch (alt259) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:54: ws
											{
											dbg.location(893,54);
											pushFollow(FOLLOW_ws_in_pseudo5558);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(259);}

									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:893:61: STAR
									{
									dbg.location(893,61);
									match(input,STAR,FOLLOW_STAR_in_pseudo5564); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(260);}
							dbg.location(893,69);
							match(input,RPAREN,FOLLOW_RPAREN_in_pseudo5569); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(261);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:896:19: {...}? sass_interpolation_expression_var
					{
					dbg.location(896,19);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isScssSource()");
					}dbg.location(896,37);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_pseudo5632);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(897,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:19: ( NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:21: NOT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(897,21);
					match(input,NOT,FOLLOW_NOT_in_pseudo5654); if (state.failed) return;dbg.location(897,25);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:25: ( ws )?
					int alt262=2;
					try { dbg.enterSubRule(262);
					try { dbg.enterDecision(262, decisionCanBacktrack[262]);

					int LA262_0 = input.LA(1);
					if ( (LA262_0==COMMENT||LA262_0==NL||LA262_0==WS) ) {
						alt262=1;
					}
					} finally {dbg.exitDecision(262);}

					switch (alt262) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:25: ws
							{
							dbg.location(897,25);
							pushFollow(FOLLOW_ws_in_pseudo5656);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(262);}
					dbg.location(897,29);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo5659); if (state.failed) return;dbg.location(897,36);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:36: ( ws )?
					int alt263=2;
					try { dbg.enterSubRule(263);
					try { dbg.enterDecision(263, decisionCanBacktrack[263]);

					int LA263_0 = input.LA(1);
					if ( (LA263_0==COMMENT||LA263_0==NL||LA263_0==WS) ) {
						alt263=1;
					}
					} finally {dbg.exitDecision(263);}

					switch (alt263) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:36: ws
							{
							dbg.location(897,36);
							pushFollow(FOLLOW_ws_in_pseudo5661);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(263);}
					dbg.location(897,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:40: ( selectorsGroup ( ws )? )?
					int alt265=2;
					try { dbg.enterSubRule(265);
					try { dbg.enterDecision(265, decisionCanBacktrack[265]);

					int LA265_0 = input.LA(1);
					if ( (LA265_0==AT_SIGN||LA265_0==COLON||(LA265_0 >= DCOLON && LA265_0 <= DOT)||(LA265_0 >= GEN && LA265_0 <= GREATER)||(LA265_0 >= HASH && LA265_0 <= HASH_SYMBOL)||LA265_0==IDENT||LA265_0==LBRACKET||LA265_0==LESS_AND||LA265_0==MINUS||(LA265_0 >= PIPE && LA265_0 <= PLUS)||LA265_0==SASS_EXTEND_ONLY_SELECTOR||LA265_0==STAR||LA265_0==TILDE) ) {
						alt265=1;
					}
					} finally {dbg.exitDecision(265);}

					switch (alt265) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:42: selectorsGroup ( ws )?
							{
							dbg.location(897,42);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo5666);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(897,57);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:57: ( ws )?
							int alt264=2;
							try { dbg.enterSubRule(264);
							try { dbg.enterDecision(264, decisionCanBacktrack[264]);

							int LA264_0 = input.LA(1);
							if ( (LA264_0==COMMENT||LA264_0==NL||LA264_0==WS) ) {
								alt264=1;
							}
							} finally {dbg.exitDecision(264);}

							switch (alt264) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:897:57: ws
									{
									dbg.location(897,57);
									pushFollow(FOLLOW_ws_in_pseudo5668);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(264);}

							}
							break;

					}
					} finally {dbg.exitSubRule(265);}
					dbg.location(897,63);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo5673); if (state.failed) return;
					}

					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:19: {...}? ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					{
					dbg.location(898,19);
					if ( !(evalPredicate(tokenNameEquals("is") || tokenNameEquals("where"),"tokenNameEquals(\"is\") || tokenNameEquals(\"where\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"is\") || tokenNameEquals(\"where\")");
					}dbg.location(898,72);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:72: ( IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:74: IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup ( ws )? )? RPAREN
					{
					dbg.location(898,74);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo5699); if (state.failed) return;dbg.location(898,80);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:80: ( ws )?
					int alt266=2;
					try { dbg.enterSubRule(266);
					try { dbg.enterDecision(266, decisionCanBacktrack[266]);

					int LA266_0 = input.LA(1);
					if ( (LA266_0==COMMENT||LA266_0==NL||LA266_0==WS) ) {
						alt266=1;
					}
					} finally {dbg.exitDecision(266);}

					switch (alt266) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:80: ws
							{
							dbg.location(898,80);
							pushFollow(FOLLOW_ws_in_pseudo5701);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(266);}
					dbg.location(898,84);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo5704); if (state.failed) return;dbg.location(898,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:91: ( ws )?
					int alt267=2;
					try { dbg.enterSubRule(267);
					try { dbg.enterDecision(267, decisionCanBacktrack[267]);

					int LA267_0 = input.LA(1);
					if ( (LA267_0==COMMENT||LA267_0==NL||LA267_0==WS) ) {
						alt267=1;
					}
					} finally {dbg.exitDecision(267);}

					switch (alt267) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:91: ws
							{
							dbg.location(898,91);
							pushFollow(FOLLOW_ws_in_pseudo5706);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(267);}
					dbg.location(898,95);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:95: ( selectorsGroup ( ws )? )?
					int alt269=2;
					try { dbg.enterSubRule(269);
					try { dbg.enterDecision(269, decisionCanBacktrack[269]);

					int LA269_0 = input.LA(1);
					if ( (LA269_0==AT_SIGN||LA269_0==COLON||(LA269_0 >= DCOLON && LA269_0 <= DOT)||(LA269_0 >= GEN && LA269_0 <= GREATER)||(LA269_0 >= HASH && LA269_0 <= HASH_SYMBOL)||LA269_0==IDENT||LA269_0==LBRACKET||LA269_0==LESS_AND||LA269_0==MINUS||(LA269_0 >= PIPE && LA269_0 <= PLUS)||LA269_0==SASS_EXTEND_ONLY_SELECTOR||LA269_0==STAR||LA269_0==TILDE) ) {
						alt269=1;
					}
					} finally {dbg.exitDecision(269);}

					switch (alt269) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:97: selectorsGroup ( ws )?
							{
							dbg.location(898,97);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo5711);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;dbg.location(898,112);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:112: ( ws )?
							int alt268=2;
							try { dbg.enterSubRule(268);
							try { dbg.enterDecision(268, decisionCanBacktrack[268]);

							int LA268_0 = input.LA(1);
							if ( (LA268_0==COMMENT||LA268_0==NL||LA268_0==WS) ) {
								alt268=1;
							}
							} finally {dbg.exitDecision(268);}

							switch (alt268) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:898:112: ws
									{
									dbg.location(898,112);
									pushFollow(FOLLOW_ws_in_pseudo5713);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(268);}

							}
							break;

					}
					} finally {dbg.exitSubRule(269);}
					dbg.location(898,118);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo5718); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					{
					dbg.location(899,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:19: ({...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:20: {...}?{...}? IDENT ( ws )? LPAREN ( ws )? ( selectorsGroup )? RPAREN
					{
					dbg.location(899,20);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "isLessSource()");
					}dbg.location(899,38);
					if ( !(evalPredicate(tokenNameEquals("extend"),"tokenNameEquals(\"extend\")")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "pseudo", "tokenNameEquals(\"extend\")");
					}dbg.location(899,67);
					match(input,IDENT,FOLLOW_IDENT_in_pseudo5745); if (state.failed) return;dbg.location(899,73);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:73: ( ws )?
					int alt270=2;
					try { dbg.enterSubRule(270);
					try { dbg.enterDecision(270, decisionCanBacktrack[270]);

					int LA270_0 = input.LA(1);
					if ( (LA270_0==COMMENT||LA270_0==NL||LA270_0==WS) ) {
						alt270=1;
					}
					} finally {dbg.exitDecision(270);}

					switch (alt270) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:73: ws
							{
							dbg.location(899,73);
							pushFollow(FOLLOW_ws_in_pseudo5747);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(270);}
					dbg.location(899,77);
					match(input,LPAREN,FOLLOW_LPAREN_in_pseudo5750); if (state.failed) return;dbg.location(899,84);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:84: ( ws )?
					int alt271=2;
					try { dbg.enterSubRule(271);
					try { dbg.enterDecision(271, decisionCanBacktrack[271]);

					int LA271_0 = input.LA(1);
					if ( (LA271_0==COMMENT||LA271_0==NL||LA271_0==WS) ) {
						alt271=1;
					}
					} finally {dbg.exitDecision(271);}

					switch (alt271) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:84: ws
							{
							dbg.location(899,84);
							pushFollow(FOLLOW_ws_in_pseudo5752);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(271);}
					dbg.location(899,88);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:88: ( selectorsGroup )?
					int alt272=2;
					try { dbg.enterSubRule(272);
					try { dbg.enterDecision(272, decisionCanBacktrack[272]);

					int LA272_0 = input.LA(1);
					if ( (LA272_0==AT_SIGN||LA272_0==COLON||(LA272_0 >= DCOLON && LA272_0 <= DOT)||(LA272_0 >= GEN && LA272_0 <= GREATER)||(LA272_0 >= HASH && LA272_0 <= HASH_SYMBOL)||LA272_0==IDENT||LA272_0==LBRACKET||LA272_0==LESS_AND||LA272_0==MINUS||(LA272_0 >= PIPE && LA272_0 <= PLUS)||LA272_0==SASS_EXTEND_ONLY_SELECTOR||LA272_0==STAR||LA272_0==TILDE) ) {
						alt272=1;
					}
					} finally {dbg.exitDecision(272);}

					switch (alt272) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:899:88: selectorsGroup
							{
							dbg.location(899,88);
							pushFollow(FOLLOW_selectorsGroup_in_pseudo5755);
							selectorsGroup();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(272);}
					dbg.location(899,104);
					match(input,RPAREN,FOLLOW_RPAREN_in_pseudo5758); if (state.failed) return;
					}

					}
					break;

			}
			} finally {dbg.exitSubRule(273);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(901, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "pseudo");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "pseudo"



	// $ANTLR start "propertyDeclaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:903:1: propertyDeclaration : ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? );
	public final void propertyDeclaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyDeclaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(903, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:904:5: ({...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue | ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )? )
			int alt282=2;
			try { dbg.enterDecision(282, decisionCanBacktrack[282]);

			switch ( input.LA(1) ) {
			case STAR:
				{
				int LA282_1 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt282=1;
				}
				else if ( (true) ) {
					alt282=2;
				}

				}
				break;
			case IDENT:
				{
				int LA282_2 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt282=1;
				}
				else if ( (true) ) {
					alt282=2;
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA282_3 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt282=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt282=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 282, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA282_4 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt282=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt282=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 282, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA282_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt282=1;
				}
				else if ( (true) ) {
					alt282=2;
				}

				}
				break;
			case MINUS:
				{
				int LA282_6 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&(evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")))) ) {
					alt282=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt282=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 282, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA282_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt282=1;
				}
				else if ( (true) ) {
					alt282=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA282_8 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt282=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt282=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 282, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA282_9 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt282=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt282=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 282, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 282, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(282);}

			switch (alt282) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:1: {...}? ( STAR )? property ( ws )? COLON ( ws )? cp_propertyValue
					{
					dbg.location(905,1);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "propertyDeclaration", "isCssPreprocessorSource()");
					}dbg.location(905,30);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:30: ( STAR )?
					int alt274=2;
					try { dbg.enterSubRule(274);
					try { dbg.enterDecision(274, decisionCanBacktrack[274]);

					int LA274_0 = input.LA(1);
					if ( (LA274_0==STAR) ) {
						alt274=1;
					}
					} finally {dbg.exitDecision(274);}

					switch (alt274) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:30: STAR
							{
							dbg.location(905,30);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration5794); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(274);}
					dbg.location(905,36);
					pushFollow(FOLLOW_property_in_propertyDeclaration5797);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(905,45);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:45: ( ws )?
					int alt275=2;
					try { dbg.enterSubRule(275);
					try { dbg.enterDecision(275, decisionCanBacktrack[275]);

					int LA275_0 = input.LA(1);
					if ( (LA275_0==COMMENT||LA275_0==NL||LA275_0==WS) ) {
						alt275=1;
					}
					} finally {dbg.exitDecision(275);}

					switch (alt275) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:45: ws
							{
							dbg.location(905,45);
							pushFollow(FOLLOW_ws_in_propertyDeclaration5799);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(275);}
					dbg.location(905,49);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration5802); if (state.failed) return;dbg.location(905,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:55: ( ws )?
					int alt276=2;
					try { dbg.enterSubRule(276);
					try { dbg.enterDecision(276, decisionCanBacktrack[276]);

					int LA276_0 = input.LA(1);
					if ( (LA276_0==COMMENT||LA276_0==NL||LA276_0==WS) ) {
						alt276=1;
					}
					} finally {dbg.exitDecision(276);}

					switch (alt276) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:905:55: ws
							{
							dbg.location(905,55);
							pushFollow(FOLLOW_ws_in_propertyDeclaration5804);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(276);}
					dbg.location(905,59);
					pushFollow(FOLLOW_cp_propertyValue_in_propertyDeclaration5807);
					cp_propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:7: ( STAR )? property ( ws )? COLON ( ws )? propertyValue ( ( ws )? prio )?
					{
					dbg.location(906,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:7: ( STAR )?
					int alt277=2;
					try { dbg.enterSubRule(277);
					try { dbg.enterDecision(277, decisionCanBacktrack[277]);

					int LA277_0 = input.LA(1);
					if ( (LA277_0==STAR) ) {
						alt277=1;
					}
					} finally {dbg.exitDecision(277);}

					switch (alt277) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:7: STAR
							{
							dbg.location(906,7);
							match(input,STAR,FOLLOW_STAR_in_propertyDeclaration5816); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(277);}
					dbg.location(906,13);
					pushFollow(FOLLOW_property_in_propertyDeclaration5819);
					property();
					state._fsp--;
					if (state.failed) return;dbg.location(906,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:22: ( ws )?
					int alt278=2;
					try { dbg.enterSubRule(278);
					try { dbg.enterDecision(278, decisionCanBacktrack[278]);

					int LA278_0 = input.LA(1);
					if ( (LA278_0==COMMENT||LA278_0==NL||LA278_0==WS) ) {
						alt278=1;
					}
					} finally {dbg.exitDecision(278);}

					switch (alt278) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:22: ws
							{
							dbg.location(906,22);
							pushFollow(FOLLOW_ws_in_propertyDeclaration5821);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(278);}
					dbg.location(906,26);
					match(input,COLON,FOLLOW_COLON_in_propertyDeclaration5824); if (state.failed) return;dbg.location(906,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:32: ( ws )?
					int alt279=2;
					try { dbg.enterSubRule(279);
					try { dbg.enterDecision(279, decisionCanBacktrack[279]);

					int LA279_0 = input.LA(1);
					if ( (LA279_0==COMMENT||LA279_0==NL||LA279_0==WS) ) {
						alt279=1;
					}
					} finally {dbg.exitDecision(279);}

					switch (alt279) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:32: ws
							{
							dbg.location(906,32);
							pushFollow(FOLLOW_ws_in_propertyDeclaration5826);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(279);}
					dbg.location(906,36);
					pushFollow(FOLLOW_propertyValue_in_propertyDeclaration5829);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(906,50);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:50: ( ( ws )? prio )?
					int alt281=2;
					try { dbg.enterSubRule(281);
					try { dbg.enterDecision(281, decisionCanBacktrack[281]);

					try {
						isCyclicDecision = true;
						alt281 = dfa281.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(281);}

					switch (alt281) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:51: ( ws )? prio
							{
							dbg.location(906,51);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:51: ( ws )?
							int alt280=2;
							try { dbg.enterSubRule(280);
							try { dbg.enterDecision(280, decisionCanBacktrack[280]);

							int LA280_0 = input.LA(1);
							if ( (LA280_0==COMMENT||LA280_0==NL||LA280_0==WS) ) {
								alt280=1;
							}
							} finally {dbg.exitDecision(280);}

							switch (alt280) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:906:51: ws
									{
									dbg.location(906,51);
									pushFollow(FOLLOW_ws_in_propertyDeclaration5832);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(280);}
							dbg.location(906,55);
							pushFollow(FOLLOW_prio_in_propertyDeclaration5835);
							prio();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(281);}

					}
					break;

			}
		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        //recovery: if an mismatched token occures inside a declaration is found,
			        //then skip all tokens until an end of the rule is found represented by right curly brace
			        consumeUntil(input, BitSet.of(SEMI, RBRACE));
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(908, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyDeclaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyDeclaration"



	// $ANTLR start "cp_propertyValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:917:1: cp_propertyValue : ({...}? cp_expression_list | propertyValue );
	public final void cp_propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(917, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:918:5: ({...}? cp_expression_list | propertyValue )
			int alt283=2;
			try { dbg.enterDecision(283, decisionCanBacktrack[283]);

			switch ( input.LA(1) ) {
			case IMPORTANT_SYM:
			case LBRACE:
			case LPAREN:
			case NOT:
				{
				alt283=1;
				}
				break;
			case MINUS:
			case PLUS:
				{
				int LA283_3 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case IDENT:
				{
				int LA283_4 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case VARIABLE:
				{
				int LA283_5 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case LBRACKET:
				{
				int LA283_6 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case NUMBER:
				{
				int LA283_7 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case URANGE:
				{
				int LA283_8 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA283_9 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case LENGTH:
				{
				int LA283_10 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case EMS:
				{
				int LA283_11 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case REM:
				{
				int LA283_12 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case EXS:
				{
				int LA283_13 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case ANGLE:
				{
				int LA283_14 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case TIME:
				{
				int LA283_15 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case FREQ:
				{
				int LA283_16 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case RESOLUTION:
				{
				int LA283_17 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case DIMENSION:
				{
				int LA283_18 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case STRING:
				{
				int LA283_19 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case TILDE:
				{
				int LA283_20 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA283_21 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case GEN:
				{
				int LA283_22 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case URI:
				{
				int LA283_23 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case HASH:
				{
				int LA283_24 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (true) ) {
					alt283=2;
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA283_25 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt283=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt283=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 283, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA283_26 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt283=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt283=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 283, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA283_27 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt283=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt283=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 283, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA283_28 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt283=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt283=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 283, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA283_29 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt283=1;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt283=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 283, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA283_30 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt283=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 283, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 283, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(283);}

			switch (alt283) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:919:5: {...}? cp_expression_list
					{
					dbg.location(919,5);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_propertyValue", "isCssPreprocessorSource()");
					}dbg.location(919,34);
					pushFollow(FOLLOW_cp_expression_list_in_cp_propertyValue5875);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:920:7: propertyValue
					{
					dbg.location(920,7);
					pushFollow(FOLLOW_propertyValue_in_cp_propertyValue5883);
					propertyValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(921, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_propertyValue"



	// $ANTLR start "propertyValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:923:1: propertyValue : expression ;
	public final void propertyValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "propertyValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(923, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:924:2: ( expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:925:9: expression
			{
			dbg.location(925,9);
			pushFollow(FOLLOW_expression_in_propertyValue5905);
			expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(926, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "propertyValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "propertyValue"



	// $ANTLR start "expressionPredicate"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:929:1: expressionPredicate options {k=1; } : (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) ;
	public final void expressionPredicate() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expressionPredicate");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(929, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:931:5: ( (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+ ( SEMI | RBRACE )
			{
			dbg.location(932,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:932:5: (~ ( AT_IDENT | STAR | SOLIDUS | LBRACE | SEMI | RBRACE | SASS_VAR ) )+
			int cnt284=0;
			try { dbg.enterSubRule(284);

			loop284:
			while (true) {
				int alt284=2;
				try { dbg.enterDecision(284, decisionCanBacktrack[284]);

				int LA284_0 = input.LA(1);
				if ( ((LA284_0 >= A && LA284_0 <= ANGLE)||(LA284_0 >= AT_SIGN && LA284_0 <= L)||(LA284_0 >= LBRACKET && LA284_0 <= R)||(LA284_0 >= RBRACKET && LA284_0 <= SASS_USE)||(LA284_0 >= SASS_WARN && LA284_0 <= SASS_WHILE)||(LA284_0 >= STRING && LA284_0 <= Z)) ) {
					alt284=1;
				}

				} finally {dbg.exitDecision(284);}

				switch (alt284) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(932,5);
					if ( (input.LA(1) >= A && input.LA(1) <= ANGLE)||(input.LA(1) >= AT_SIGN && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_USE)||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= STRING && input.LA(1) <= Z) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt284 >= 1 ) break loop284;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(284, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt284++;
			}
			} finally {dbg.exitSubRule(284);}
			dbg.location(932,76);
			if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(933, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expressionPredicate");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expressionPredicate"



	// $ANTLR start "syncToDeclarationsRule"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:937:1: syncToDeclarationsRule :;
	public final void syncToDeclarationsRule() throws RecognitionException {

		        //why sync to DOT? - LESS allows class rules nested
		        syncToSet(BitSet.of(IDENT, RBRACE, STAR, DOT));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToDeclarationsRule");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(937, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:942:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:943:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(943, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToDeclarationsRule");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToDeclarationsRule"



	// $ANTLR start "syncTo_RBRACE"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:945:1: syncTo_RBRACE :;
	public final void syncTo_RBRACE() throws RecognitionException {

		        syncToRBRACE(1); //initial nest == 1
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_RBRACE");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(945, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:949:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:950:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(950, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_RBRACE");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_RBRACE"



	// $ANTLR start "syncTo_SEMI"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:952:1: syncTo_SEMI : SEMI ;
	public final void syncTo_SEMI() throws RecognitionException {

		        syncToSet(BitSet.of(SEMI));
		    
		try { dbg.enterRule(getGrammarFileName(), "syncTo_SEMI");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(952, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:956:6: ( SEMI )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:957:13: SEMI
			{
			dbg.location(957,13);
			match(input,SEMI,FOLLOW_SEMI_in_syncTo_SEMI6075); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(958, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncTo_SEMI");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncTo_SEMI"



	// $ANTLR start "syncToFollow"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:961:1: syncToFollow :;
	public final void syncToFollow() throws RecognitionException {

		        syncToSet();
		    
		try { dbg.enterRule(getGrammarFileName(), "syncToFollow");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(961, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:965:6: ()
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:966:6: 
			{
			}

		}
		finally {
			// do for sure before leaving
		}
		dbg.location(966, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "syncToFollow");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "syncToFollow"



	// $ANTLR start "prio"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:968:1: prio : IMPORTANT_SYM ;
	public final void prio() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "prio");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(968, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:5: ( IMPORTANT_SYM )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:969:7: IMPORTANT_SYM
			{
			dbg.location(969,7);
			match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_prio6120); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(970, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "prio");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "prio"



	// $ANTLR start "expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:972:1: expression : term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* ;
	public final void expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(972, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:5: ( term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:7: term ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			{
			dbg.location(973,7);
			pushFollow(FOLLOW_term_in_expression6137);
			term();
			state._fsp--;
			if (state.failed) return;dbg.location(973,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*
			try { dbg.enterSubRule(288);

			loop288:
			while (true) {
				int alt288=2;
				try { dbg.enterDecision(288, decisionCanBacktrack[288]);

				try {
					isCyclicDecision = true;
					alt288 = dfa288.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(288);}

				switch (alt288) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term
					{
					dbg.location(973,66);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:66: ( ws | ( ( ws )? operator ( ws )? ) |)
					int alt287=3;
					try { dbg.enterSubRule(287);
					try { dbg.enterDecision(287, decisionCanBacktrack[287]);

					try {
						isCyclicDecision = true;
						alt287 = dfa287.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(287);}

					switch (alt287) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:68: ws
							{
							dbg.location(973,68);
							pushFollow(FOLLOW_ws_in_expression6169);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:73: ( ( ws )? operator ( ws )? )
							{
							dbg.location(973,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:73: ( ( ws )? operator ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:74: ( ws )? operator ( ws )?
							{
							dbg.location(973,74);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:74: ( ws )?
							int alt285=2;
							try { dbg.enterSubRule(285);
							try { dbg.enterDecision(285, decisionCanBacktrack[285]);

							int LA285_0 = input.LA(1);
							if ( (LA285_0==COMMENT||LA285_0==NL||LA285_0==WS) ) {
								alt285=1;
							}
							} finally {dbg.exitDecision(285);}

							switch (alt285) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:74: ws
									{
									dbg.location(973,74);
									pushFollow(FOLLOW_ws_in_expression6174);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(285);}
							dbg.location(973,78);
							pushFollow(FOLLOW_operator_in_expression6177);
							operator();
							state._fsp--;
							if (state.failed) return;dbg.location(973,87);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:87: ( ws )?
							int alt286=2;
							try { dbg.enterSubRule(286);
							try { dbg.enterDecision(286, decisionCanBacktrack[286]);

							int LA286_0 = input.LA(1);
							if ( (LA286_0==COMMENT||LA286_0==NL||LA286_0==WS) ) {
								alt286=1;
							}
							} finally {dbg.exitDecision(286);}

							switch (alt286) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:87: ws
									{
									dbg.location(973,87);
									pushFollow(FOLLOW_ws_in_expression6179);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(286);}

							}

							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:107: 
							{
							}
							break;

					}
					} finally {dbg.exitSubRule(287);}
					dbg.location(973,109);
					pushFollow(FOLLOW_term_in_expression6188);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop288;
				}
			}
			} finally {dbg.exitSubRule(288);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(974, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "expression"



	// $ANTLR start "term"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:976:1: term : ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) ;
	public final void term() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "term");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(976, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:977:5: ( ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:978:5: ( unaryOperator ( ws )? )? ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			{
			dbg.location(978,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:978:5: ( unaryOperator ( ws )? )?
			int alt290=2;
			try { dbg.enterSubRule(290);
			try { dbg.enterDecision(290, decisionCanBacktrack[290]);

			int LA290_0 = input.LA(1);
			if ( (LA290_0==MINUS||LA290_0==PLUS) ) {
				alt290=1;
			}
			} finally {dbg.exitDecision(290);}

			switch (alt290) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:978:7: unaryOperator ( ws )?
					{
					dbg.location(978,7);
					pushFollow(FOLLOW_unaryOperator_in_term6213);
					unaryOperator();
					state._fsp--;
					if (state.failed) return;dbg.location(978,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:978:21: ( ws )?
					int alt289=2;
					try { dbg.enterSubRule(289);
					try { dbg.enterDecision(289, decisionCanBacktrack[289]);

					int LA289_0 = input.LA(1);
					if ( (LA289_0==COMMENT||LA289_0==NL||LA289_0==WS) ) {
						alt289=1;
					}
					} finally {dbg.exitDecision(289);}

					switch (alt289) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:978:21: ws
							{
							dbg.location(978,21);
							pushFollow(FOLLOW_ws_in_term6215);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(289);}

					}
					break;

			}
			} finally {dbg.exitSubRule(290);}
			dbg.location(979,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:979:5: ( ( functionName ( ws )? LPAREN )=> function | VARIABLE |{...}? IDENT | ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET ) | NUMBER | URANGE | PERCENTAGE | LENGTH | EMS | REM | EXS | ANGLE | TIME | FREQ | RESOLUTION | DIMENSION | STRING | TILDE ( STRING | LESS_JS_STRING ) | LESS_JS_STRING | GEN | URI | hexColor |{...}? cp_variable |{...}? LESS_AND |{...}? sass_interpolation_expression_var |{...}? less_selector_interpolation |{...}? cp_term_symbol )
			int alt294=27;
			try { dbg.enterSubRule(294);
			try { dbg.enterDecision(294, decisionCanBacktrack[294]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA294_1 = input.LA(2);
				if ( (synpred37_Css3()) ) {
					alt294=1;
				}
				else if ( (evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
					alt294=3;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt294=23;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 294, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				alt294=2;
				}
				break;
			case LBRACKET:
				{
				alt294=4;
				}
				break;
			case NUMBER:
				{
				alt294=5;
				}
				break;
			case URANGE:
				{
				alt294=6;
				}
				break;
			case PERCENTAGE:
				{
				alt294=7;
				}
				break;
			case LENGTH:
				{
				alt294=8;
				}
				break;
			case EMS:
				{
				alt294=9;
				}
				break;
			case REM:
				{
				alt294=10;
				}
				break;
			case EXS:
				{
				alt294=11;
				}
				break;
			case ANGLE:
				{
				alt294=12;
				}
				break;
			case TIME:
				{
				alt294=13;
				}
				break;
			case FREQ:
				{
				alt294=14;
				}
				break;
			case RESOLUTION:
				{
				alt294=15;
				}
				break;
			case DIMENSION:
				{
				alt294=16;
				}
				break;
			case STRING:
				{
				alt294=17;
				}
				break;
			case TILDE:
				{
				alt294=18;
				}
				break;
			case LESS_JS_STRING:
				{
				alt294=19;
				}
				break;
			case GEN:
				{
				alt294=20;
				}
				break;
			case URI:
				{
				alt294=21;
				}
				break;
			case HASH:
				{
				alt294=22;
				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_VAR:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				alt294=23;
				}
				break;
			case LESS_AND:
				{
				alt294=24;
				}
				break;
			case HASH_SYMBOL:
				{
				alt294=25;
				}
				break;
			case AT_SIGN:
				{
				alt294=26;
				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				alt294=27;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 294, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(294);}

			switch (alt294) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:980:9: ( functionName ( ws )? LPAREN )=> function
					{
					dbg.location(980,36);
					pushFollow(FOLLOW_function_in_term6244);
					function();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:981:11: VARIABLE
					{
					dbg.location(981,11);
					match(input,VARIABLE,FOLLOW_VARIABLE_in_term6257); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:982:11: {...}? IDENT
					{
					dbg.location(982,11);
					if ( !(evalPredicate(! (isScssSource() && tokenNameEquals2(".")),"! (isScssSource() && tokenNameEquals2(\".\"))")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "! (isScssSource() && tokenNameEquals2(\".\"))");
					}dbg.location(982,58);
					match(input,IDENT,FOLLOW_IDENT_in_term6271); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					{
					dbg.location(983,11);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:11: ( LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:12: LBRACKET ( WS )? IDENT ( WS IDENT )* ( WS )? RBRACKET
					{
					dbg.location(983,12);
					match(input,LBRACKET,FOLLOW_LBRACKET_in_term6284); if (state.failed) return;dbg.location(983,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:21: ( WS )?
					int alt291=2;
					try { dbg.enterSubRule(291);
					try { dbg.enterDecision(291, decisionCanBacktrack[291]);

					int LA291_0 = input.LA(1);
					if ( (LA291_0==WS) ) {
						alt291=1;
					}
					} finally {dbg.exitDecision(291);}

					switch (alt291) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:21: WS
							{
							dbg.location(983,21);
							match(input,WS,FOLLOW_WS_in_term6286); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(291);}
					dbg.location(983,25);
					match(input,IDENT,FOLLOW_IDENT_in_term6289); if (state.failed) return;dbg.location(983,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:31: ( WS IDENT )*
					try { dbg.enterSubRule(292);

					loop292:
					while (true) {
						int alt292=2;
						try { dbg.enterDecision(292, decisionCanBacktrack[292]);

						int LA292_0 = input.LA(1);
						if ( (LA292_0==WS) ) {
							int LA292_1 = input.LA(2);
							if ( (LA292_1==IDENT) ) {
								alt292=1;
							}

						}

						} finally {dbg.exitDecision(292);}

						switch (alt292) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:32: WS IDENT
							{
							dbg.location(983,32);
							match(input,WS,FOLLOW_WS_in_term6292); if (state.failed) return;dbg.location(983,35);
							match(input,IDENT,FOLLOW_IDENT_in_term6294); if (state.failed) return;
							}
							break;

						default :
							break loop292;
						}
					}
					} finally {dbg.exitSubRule(292);}
					dbg.location(983,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:43: ( WS )?
					int alt293=2;
					try { dbg.enterSubRule(293);
					try { dbg.enterDecision(293, decisionCanBacktrack[293]);

					int LA293_0 = input.LA(1);
					if ( (LA293_0==WS) ) {
						alt293=1;
					}
					} finally {dbg.exitDecision(293);}

					switch (alt293) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:983:43: WS
							{
							dbg.location(983,43);
							match(input,WS,FOLLOW_WS_in_term6298); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(293);}
					dbg.location(983,47);
					match(input,RBRACKET,FOLLOW_RBRACKET_in_term6301); if (state.failed) return;
					}

					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:984:11: NUMBER
					{
					dbg.location(984,11);
					match(input,NUMBER,FOLLOW_NUMBER_in_term6314); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:985:11: URANGE
					{
					dbg.location(985,11);
					match(input,URANGE,FOLLOW_URANGE_in_term6326); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:986:11: PERCENTAGE
					{
					dbg.location(986,11);
					match(input,PERCENTAGE,FOLLOW_PERCENTAGE_in_term6338); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:987:11: LENGTH
					{
					dbg.location(987,11);
					match(input,LENGTH,FOLLOW_LENGTH_in_term6350); if (state.failed) return;
					}
					break;
				case 9 :
					dbg.enterAlt(9);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:988:11: EMS
					{
					dbg.location(988,11);
					match(input,EMS,FOLLOW_EMS_in_term6362); if (state.failed) return;
					}
					break;
				case 10 :
					dbg.enterAlt(10);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:989:11: REM
					{
					dbg.location(989,11);
					match(input,REM,FOLLOW_REM_in_term6374); if (state.failed) return;
					}
					break;
				case 11 :
					dbg.enterAlt(11);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:990:11: EXS
					{
					dbg.location(990,11);
					match(input,EXS,FOLLOW_EXS_in_term6386); if (state.failed) return;
					}
					break;
				case 12 :
					dbg.enterAlt(12);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:991:11: ANGLE
					{
					dbg.location(991,11);
					match(input,ANGLE,FOLLOW_ANGLE_in_term6398); if (state.failed) return;
					}
					break;
				case 13 :
					dbg.enterAlt(13);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:992:11: TIME
					{
					dbg.location(992,11);
					match(input,TIME,FOLLOW_TIME_in_term6410); if (state.failed) return;
					}
					break;
				case 14 :
					dbg.enterAlt(14);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:993:11: FREQ
					{
					dbg.location(993,11);
					match(input,FREQ,FOLLOW_FREQ_in_term6422); if (state.failed) return;
					}
					break;
				case 15 :
					dbg.enterAlt(15);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:994:11: RESOLUTION
					{
					dbg.location(994,11);
					match(input,RESOLUTION,FOLLOW_RESOLUTION_in_term6434); if (state.failed) return;
					}
					break;
				case 16 :
					dbg.enterAlt(16);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:995:11: DIMENSION
					{
					dbg.location(995,11);
					match(input,DIMENSION,FOLLOW_DIMENSION_in_term6446); if (state.failed) return;
					}
					break;
				case 17 :
					dbg.enterAlt(17);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:996:11: STRING
					{
					dbg.location(996,11);
					match(input,STRING,FOLLOW_STRING_in_term6463); if (state.failed) return;
					}
					break;
				case 18 :
					dbg.enterAlt(18);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:997:11: TILDE ( STRING | LESS_JS_STRING )
					{
					dbg.location(997,11);
					match(input,TILDE,FOLLOW_TILDE_in_term6475); if (state.failed) return;dbg.location(997,17);
					if ( input.LA(1)==LESS_JS_STRING||input.LA(1)==STRING ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 19 :
					dbg.enterAlt(19);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:998:11: LESS_JS_STRING
					{
					dbg.location(998,11);
					match(input,LESS_JS_STRING,FOLLOW_LESS_JS_STRING_in_term6498); if (state.failed) return;
					}
					break;
				case 20 :
					dbg.enterAlt(20);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:999:11: GEN
					{
					dbg.location(999,11);
					match(input,GEN,FOLLOW_GEN_in_term6513); if (state.failed) return;
					}
					break;
				case 21 :
					dbg.enterAlt(21);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1000:11: URI
					{
					dbg.location(1000,11);
					match(input,URI,FOLLOW_URI_in_term6525); if (state.failed) return;
					}
					break;
				case 22 :
					dbg.enterAlt(22);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1001:11: hexColor
					{
					dbg.location(1001,11);
					pushFollow(FOLLOW_hexColor_in_term6537);
					hexColor();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 23 :
					dbg.enterAlt(23);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1002:11: {...}? cp_variable
					{
					dbg.location(1002,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1002,40);
					pushFollow(FOLLOW_cp_variable_in_term6551);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 24 :
					dbg.enterAlt(24);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1003:11: {...}? LESS_AND
					{
					dbg.location(1003,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1003,29);
					match(input,LESS_AND,FOLLOW_LESS_AND_in_term6565); if (state.failed) return;
					}
					break;
				case 25 :
					dbg.enterAlt(25);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1004:11: {...}? sass_interpolation_expression_var
					{
					dbg.location(1004,11);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isScssSource()");
					}dbg.location(1004,29);
					pushFollow(FOLLOW_sass_interpolation_expression_var_in_term6579);
					sass_interpolation_expression_var();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 26 :
					dbg.enterAlt(26);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1005:11: {...}? less_selector_interpolation
					{
					dbg.location(1005,11);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isLessSource()");
					}dbg.location(1005,29);
					pushFollow(FOLLOW_less_selector_interpolation_in_term6593);
					less_selector_interpolation();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 27 :
					dbg.enterAlt(27);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1006:11: {...}? cp_term_symbol
					{
					dbg.location(1006,11);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "term", "isCssPreprocessorSource()");
					}dbg.location(1006,40);
					pushFollow(FOLLOW_cp_term_symbol_in_term6607);
					cp_term_symbol();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(294);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1008, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "term");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "term"



	// $ANTLR start "cp_term_symbol"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1013:1: cp_term_symbol : PERCENTAGE_SYMBOL ;
	public final void cp_term_symbol() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_term_symbol");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1013, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1014:5: ( PERCENTAGE_SYMBOL )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1014:7: PERCENTAGE_SYMBOL
			{
			dbg.location(1014,7);
			match(input,PERCENTAGE_SYMBOL,FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol6634); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1015, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_term_symbol");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_term_symbol"



	// $ANTLR start "function"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1017:1: function : functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN ;
	public final void function() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "function");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1017, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:2: ( functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:5: functionName ( ws )? LPAREN ( ws )? ( fnAttributes |) RPAREN
			{
			dbg.location(1018,5);
			pushFollow(FOLLOW_functionName_in_function6650);
			functionName();
			state._fsp--;
			if (state.failed) return;dbg.location(1018,18);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:18: ( ws )?
			int alt295=2;
			try { dbg.enterSubRule(295);
			try { dbg.enterDecision(295, decisionCanBacktrack[295]);

			int LA295_0 = input.LA(1);
			if ( (LA295_0==COMMENT||LA295_0==NL||LA295_0==WS) ) {
				alt295=1;
			}
			} finally {dbg.exitDecision(295);}

			switch (alt295) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1018:18: ws
					{
					dbg.location(1018,18);
					pushFollow(FOLLOW_ws_in_function6652);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(295);}
			dbg.location(1019,3);
			match(input,LPAREN,FOLLOW_LPAREN_in_function6657); if (state.failed) return;dbg.location(1019,10);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1019:10: ( ws )?
			int alt296=2;
			try { dbg.enterSubRule(296);
			try { dbg.enterDecision(296, decisionCanBacktrack[296]);

			int LA296_0 = input.LA(1);
			if ( (LA296_0==COMMENT||LA296_0==NL||LA296_0==WS) ) {
				alt296=1;
			}
			} finally {dbg.exitDecision(296);}

			switch (alt296) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1019:10: ws
					{
					dbg.location(1019,10);
					pushFollow(FOLLOW_ws_in_function6659);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(296);}
			dbg.location(1020,3);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1020:3: ( fnAttributes |)
			int alt297=2;
			try { dbg.enterSubRule(297);
			try { dbg.enterDecision(297, decisionCanBacktrack[297]);

			int LA297_0 = input.LA(1);
			if ( ((LA297_0 >= ANGLE && LA297_0 <= AT_SIGN)||(LA297_0 >= BOTTOMCENTER_SYM && LA297_0 <= BOTTOMRIGHT_SYM)||LA297_0==CHARSET_SYM||LA297_0==COUNTER_STYLE_SYM||LA297_0==DIMENSION||LA297_0==EMS||LA297_0==EXS||(LA297_0 >= FONT_FACE_SYM && LA297_0 <= FREQ)||LA297_0==GEN||(LA297_0 >= HASH && LA297_0 <= HASH_SYMBOL)||(LA297_0 >= IDENT && LA297_0 <= IMPORT_SYM)||(LA297_0 >= LBRACE && LA297_0 <= LENGTH)||(LA297_0 >= LESS_AND && LA297_0 <= LESS_JS_STRING)||LA297_0==LPAREN||(LA297_0 >= MEDIA_SYM && LA297_0 <= MOZ_DOCUMENT_SYM)||LA297_0==NAMESPACE_SYM||(LA297_0 >= NOT && LA297_0 <= NUMBER)||(LA297_0 >= PAGE_SYM && LA297_0 <= PERCENTAGE_SYMBOL)||LA297_0==PLUS||(LA297_0 >= REM && LA297_0 <= RIGHTTOP_SYM)||(LA297_0 >= SASS_AT_ROOT && LA297_0 <= SASS_DEBUG)||(LA297_0 >= SASS_EACH && LA297_0 <= SASS_ELSE)||LA297_0==SASS_EXTEND||LA297_0==SASS_FOR||LA297_0==SASS_FUNCTION||(LA297_0 >= SASS_IF && LA297_0 <= SASS_MIXIN)||LA297_0==SASS_RETURN||(LA297_0 >= SASS_VAR && LA297_0 <= SASS_WHILE)||LA297_0==STRING||(LA297_0 >= TILDE && LA297_0 <= TOPRIGHT_SYM)||(LA297_0 >= URANGE && LA297_0 <= URI)||LA297_0==VARIABLE||LA297_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt297=1;
			}
			else if ( (LA297_0==RPAREN) ) {
				alt297=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 297, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(297);}

			switch (alt297) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1021:21: fnAttributes
					{
					dbg.location(1021,21);
					pushFollow(FOLLOW_fnAttributes_in_function6686);
					fnAttributes();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1023:3: 
					{
					}
					break;

			}
			} finally {dbg.exitSubRule(297);}
			dbg.location(1024,3);
			match(input,RPAREN,FOLLOW_RPAREN_in_function6717); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        consumeUntil(input, BitSet.of(RPAREN, SEMI, RBRACE));

		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1025, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "function");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "function"



	// $ANTLR start "functionName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1031:1: functionName : ( IDENT COLON )? IDENT ( DOT IDENT )* ;
	public final void functionName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "functionName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1031, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1035:2: ( ( IDENT COLON )? IDENT ( DOT IDENT )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:9: ( IDENT COLON )? IDENT ( DOT IDENT )*
			{
			dbg.location(1036,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:9: ( IDENT COLON )?
			int alt298=2;
			try { dbg.enterSubRule(298);
			try { dbg.enterDecision(298, decisionCanBacktrack[298]);

			int LA298_0 = input.LA(1);
			if ( (LA298_0==IDENT) ) {
				int LA298_1 = input.LA(2);
				if ( (LA298_1==COLON) ) {
					alt298=1;
				}
			}
			} finally {dbg.exitDecision(298);}

			switch (alt298) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:10: IDENT COLON
					{
					dbg.location(1036,10);
					match(input,IDENT,FOLLOW_IDENT_in_functionName6769); if (state.failed) return;dbg.location(1036,16);
					match(input,COLON,FOLLOW_COLON_in_functionName6771); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(298);}
			dbg.location(1036,24);
			match(input,IDENT,FOLLOW_IDENT_in_functionName6775); if (state.failed) return;dbg.location(1036,30);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:30: ( DOT IDENT )*
			try { dbg.enterSubRule(299);

			loop299:
			while (true) {
				int alt299=2;
				try { dbg.enterDecision(299, decisionCanBacktrack[299]);

				int LA299_0 = input.LA(1);
				if ( (LA299_0==DOT) ) {
					alt299=1;
				}

				} finally {dbg.exitDecision(299);}

				switch (alt299) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1036:31: DOT IDENT
					{
					dbg.location(1036,31);
					match(input,DOT,FOLLOW_DOT_in_functionName6778); if (state.failed) return;dbg.location(1036,35);
					match(input,IDENT,FOLLOW_IDENT_in_functionName6780); if (state.failed) return;
					}
					break;

				default :
					break loop299;
				}
			}
			} finally {dbg.exitSubRule(299);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1037, 5);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "functionName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "functionName"



	// $ANTLR start "fnAttributes"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1039:1: fnAttributes : fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? ;
	public final void fnAttributes() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributes");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1039, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1040:5: ( fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:5: fnAttribute ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )* ( ws )?
			{
			dbg.location(1041,5);
			pushFollow(FOLLOW_fnAttribute_in_fnAttributes6804);
			fnAttribute();
			state._fsp--;
			if (state.failed) return;dbg.location(1041,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*
			try { dbg.enterSubRule(303);

			loop303:
			while (true) {
				int alt303=2;
				try { dbg.enterDecision(303, decisionCanBacktrack[303]);

				try {
					isCyclicDecision = true;
					alt303 = dfa303.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(303);}

				switch (alt303) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:18: ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute
					{
					dbg.location(1041,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:18: ( ws )?
					int alt300=2;
					try { dbg.enterSubRule(300);
					try { dbg.enterDecision(300, decisionCanBacktrack[300]);

					int LA300_0 = input.LA(1);
					if ( (LA300_0==COMMENT||LA300_0==NL||LA300_0==WS) ) {
						alt300=1;
					}
					} finally {dbg.exitDecision(300);}

					switch (alt300) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:18: ws
							{
							dbg.location(1041,18);
							pushFollow(FOLLOW_ws_in_fnAttributes6807);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(300);}
					dbg.location(1041,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:22: ( COMMA |{...}? SEMI )
					int alt301=2;
					try { dbg.enterSubRule(301);
					try { dbg.enterDecision(301, decisionCanBacktrack[301]);

					int LA301_0 = input.LA(1);
					if ( (LA301_0==COMMA) ) {
						alt301=1;
					}
					else if ( (LA301_0==SEMI) ) {
						alt301=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 301, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(301);}

					switch (alt301) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:23: COMMA
							{
							dbg.location(1041,23);
							match(input,COMMA,FOLLOW_COMMA_in_fnAttributes6811); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:31: {...}? SEMI
							{
							dbg.location(1041,31);
							if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "fnAttributes", "isLessSource()");
							}dbg.location(1041,49);
							match(input,SEMI,FOLLOW_SEMI_in_fnAttributes6817); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(301);}
					dbg.location(1041,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:55: ( ws )?
					int alt302=2;
					try { dbg.enterSubRule(302);
					try { dbg.enterDecision(302, decisionCanBacktrack[302]);

					int LA302_0 = input.LA(1);
					if ( (LA302_0==COMMENT||LA302_0==NL||LA302_0==WS) ) {
						alt302=1;
					}
					} finally {dbg.exitDecision(302);}

					switch (alt302) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:55: ws
							{
							dbg.location(1041,55);
							pushFollow(FOLLOW_ws_in_fnAttributes6820);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(302);}
					dbg.location(1041,59);
					pushFollow(FOLLOW_fnAttribute_in_fnAttributes6823);
					fnAttribute();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop303;
				}
			}
			} finally {dbg.exitSubRule(303);}
			dbg.location(1041,73);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:73: ( ws )?
			int alt304=2;
			try { dbg.enterSubRule(304);
			try { dbg.enterDecision(304, decisionCanBacktrack[304]);

			int LA304_0 = input.LA(1);
			if ( (LA304_0==COMMENT||LA304_0==NL||LA304_0==WS) ) {
				alt304=1;
			}
			} finally {dbg.exitDecision(304);}

			switch (alt304) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1041:73: ws
					{
					dbg.location(1041,73);
					pushFollow(FOLLOW_ws_in_fnAttributes6827);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(304);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1042, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributes");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributes"



	// $ANTLR start "fnAttribute"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1044:1: fnAttribute : ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression );
	public final void fnAttribute() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttribute");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1044, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1045:2: ( ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue | ( cp_expression )=> cp_expression | expression )
			int alt307=3;
			try { dbg.enterDecision(307, decisionCanBacktrack[307]);

			int LA307_0 = input.LA(1);
			if ( (LA307_0==IDENT) ) {
				int LA307_1 = input.LA(2);
				if ( (synpred38_Css3()) ) {
					alt307=1;
				}
				else if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==AT_IDENT||(LA307_0 >= BOTTOMCENTER_SYM && LA307_0 <= BOTTOMRIGHT_SYM)||LA307_0==CHARSET_SYM||LA307_0==COUNTER_STYLE_SYM||LA307_0==FONT_FACE_SYM||LA307_0==IMPORT_SYM||(LA307_0 >= LEFTBOTTOM_SYM && LA307_0 <= LEFTTOP_SYM)||LA307_0==MEDIA_SYM||LA307_0==MOZ_DOCUMENT_SYM||LA307_0==NAMESPACE_SYM||LA307_0==PAGE_SYM||(LA307_0 >= RIGHTBOTTOM_SYM && LA307_0 <= RIGHTTOP_SYM)||(LA307_0 >= SASS_AT_ROOT && LA307_0 <= SASS_DEBUG)||(LA307_0 >= SASS_EACH && LA307_0 <= SASS_ELSE)||LA307_0==SASS_EXTEND||LA307_0==SASS_FOR||LA307_0==SASS_FUNCTION||(LA307_0 >= SASS_IF && LA307_0 <= SASS_MIXIN)||LA307_0==SASS_RETURN||(LA307_0 >= SASS_WARN && LA307_0 <= SASS_WHILE)||(LA307_0 >= TOPCENTER_SYM && LA307_0 <= TOPRIGHT_SYM)||LA307_0==WEBKIT_KEYFRAMES_SYM) ) {
				int LA307_2 = input.LA(2);
				if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt307=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred39_Css3())) ) {
					alt307=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt307=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 307, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA307_0==SASS_VAR) ) {
				int LA307_3 = input.LA(2);
				if ( (((synpred38_Css3()&&evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"))&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt307=1;
				}
				else if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred39_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt307=2;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt307=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 307, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA307_0==LBRACE) && (synpred39_Css3())) {
				alt307=2;
			}
			else if ( (LA307_0==NOT) && (synpred39_Css3())) {
				alt307=2;
			}
			else if ( (LA307_0==MINUS||LA307_0==PLUS) ) {
				int LA307_6 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==VARIABLE) ) {
				int LA307_7 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==LBRACKET) ) {
				int LA307_8 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==NUMBER) ) {
				int LA307_9 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==URANGE) ) {
				int LA307_10 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==PERCENTAGE) ) {
				int LA307_11 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==LENGTH) ) {
				int LA307_12 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==EMS) ) {
				int LA307_13 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==REM) ) {
				int LA307_14 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==EXS) ) {
				int LA307_15 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==ANGLE) ) {
				int LA307_16 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==TIME) ) {
				int LA307_17 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==FREQ) ) {
				int LA307_18 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==RESOLUTION) ) {
				int LA307_19 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==DIMENSION) ) {
				int LA307_20 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==STRING) ) {
				int LA307_21 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==TILDE) ) {
				int LA307_22 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==LESS_JS_STRING) ) {
				int LA307_23 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==GEN) ) {
				int LA307_24 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==URI) ) {
				int LA307_25 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==HASH) ) {
				int LA307_26 = input.LA(2);
				if ( (synpred39_Css3()) ) {
					alt307=2;
				}
				else if ( (true) ) {
					alt307=3;
				}

			}
			else if ( (LA307_0==LESS_AND) ) {
				int LA307_27 = input.LA(2);
				if ( ((synpred39_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt307=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt307=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 307, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA307_0==HASH_SYMBOL) ) {
				int LA307_28 = input.LA(2);
				if ( ((synpred39_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt307=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt307=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 307, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA307_0==AT_SIGN) ) {
				int LA307_29 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred39_Css3())) ) {
					alt307=2;
				}
				else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt307=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 307, 29, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA307_0==PERCENTAGE_SYMBOL) ) {
				int LA307_30 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred39_Css3())) ) {
					alt307=2;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt307=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 307, 30, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA307_0==IMPORTANT_SYM) && (synpred39_Css3())) {
				alt307=2;
			}
			else if ( (LA307_0==LPAREN) && (synpred39_Css3())) {
				alt307=2;
			}

			} finally {dbg.exitDecision(307);}

			switch (alt307) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )=> fnAttributeName ( ws )? ( OPEQ | COLON ) ( ws )? fnAttributeValue
					{
					dbg.location(1046,46);
					pushFollow(FOLLOW_fnAttributeName_in_fnAttribute6864);
					fnAttributeName();
					state._fsp--;
					if (state.failed) return;dbg.location(1046,62);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:62: ( ws )?
					int alt305=2;
					try { dbg.enterSubRule(305);
					try { dbg.enterDecision(305, decisionCanBacktrack[305]);

					int LA305_0 = input.LA(1);
					if ( (LA305_0==COMMENT||LA305_0==NL||LA305_0==WS) ) {
						alt305=1;
					}
					} finally {dbg.exitDecision(305);}

					switch (alt305) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:62: ws
							{
							dbg.location(1046,62);
							pushFollow(FOLLOW_ws_in_fnAttribute6866);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(305);}
					dbg.location(1046,66);
					if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1046,79);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:79: ( ws )?
					int alt306=2;
					try { dbg.enterSubRule(306);
					try { dbg.enterDecision(306, decisionCanBacktrack[306]);

					int LA306_0 = input.LA(1);
					if ( (LA306_0==COMMENT||LA306_0==NL||LA306_0==WS) ) {
						alt306=1;
					}
					} finally {dbg.exitDecision(306);}

					switch (alt306) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:79: ws
							{
							dbg.location(1046,79);
							pushFollow(FOLLOW_ws_in_fnAttribute6875);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(306);}
					dbg.location(1046,83);
					pushFollow(FOLLOW_fnAttributeValue_in_fnAttribute6878);
					fnAttributeValue();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:11: ( cp_expression )=> cp_expression
					{
					dbg.location(1047,29);
					pushFollow(FOLLOW_cp_expression_in_fnAttribute6895);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1048:11: expression
					{
					dbg.location(1048,11);
					pushFollow(FOLLOW_expression_in_fnAttribute6907);
					expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1049, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttribute");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttribute"



	// $ANTLR start "fnAttributeName"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1051:1: fnAttributeName : ( IDENT ( DOT IDENT )* |{...}? cp_variable );
	public final void fnAttributeName() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeName");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1051, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1052:2: ( IDENT ( DOT IDENT )* |{...}? cp_variable )
			int alt309=2;
			try { dbg.enterDecision(309, decisionCanBacktrack[309]);

			int LA309_0 = input.LA(1);
			if ( (LA309_0==IDENT) ) {
				int LA309_1 = input.LA(2);
				if ( (LA309_1==DOT) ) {
					int LA309_3 = input.LA(3);
					if ( (LA309_3==SASS_VAR) ) {
						alt309=2;
					}
					else if ( (LA309_3==IDENT) ) {
						alt309=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 309, 3, input);
							dbg.recognitionException(nvae);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA309_1==COLON||LA309_1==COMMENT||LA309_1==NL||LA309_1==OPEQ||LA309_1==WS) ) {
					alt309=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 309, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA309_0==AT_IDENT||(LA309_0 >= BOTTOMCENTER_SYM && LA309_0 <= BOTTOMRIGHT_SYM)||LA309_0==CHARSET_SYM||LA309_0==COUNTER_STYLE_SYM||LA309_0==FONT_FACE_SYM||LA309_0==IMPORT_SYM||(LA309_0 >= LEFTBOTTOM_SYM && LA309_0 <= LEFTTOP_SYM)||LA309_0==MEDIA_SYM||LA309_0==MOZ_DOCUMENT_SYM||LA309_0==NAMESPACE_SYM||LA309_0==PAGE_SYM||(LA309_0 >= RIGHTBOTTOM_SYM && LA309_0 <= RIGHTTOP_SYM)||(LA309_0 >= SASS_AT_ROOT && LA309_0 <= SASS_DEBUG)||(LA309_0 >= SASS_EACH && LA309_0 <= SASS_ELSE)||LA309_0==SASS_EXTEND||LA309_0==SASS_FOR||LA309_0==SASS_FUNCTION||(LA309_0 >= SASS_IF && LA309_0 <= SASS_MIXIN)||LA309_0==SASS_RETURN||(LA309_0 >= SASS_VAR && LA309_0 <= SASS_WHILE)||(LA309_0 >= TOPCENTER_SYM && LA309_0 <= TOPRIGHT_SYM)||LA309_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt309=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 309, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(309);}

			switch (alt309) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:13: IDENT ( DOT IDENT )*
					{
					dbg.location(1053,13);
					match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName6930); if (state.failed) return;dbg.location(1053,19);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:19: ( DOT IDENT )*
					try { dbg.enterSubRule(308);

					loop308:
					while (true) {
						int alt308=2;
						try { dbg.enterDecision(308, decisionCanBacktrack[308]);

						int LA308_0 = input.LA(1);
						if ( (LA308_0==DOT) ) {
							alt308=1;
						}

						} finally {dbg.exitDecision(308);}

						switch (alt308) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1053:20: DOT IDENT
							{
							dbg.location(1053,20);
							match(input,DOT,FOLLOW_DOT_in_fnAttributeName6933); if (state.failed) return;dbg.location(1053,24);
							match(input,IDENT,FOLLOW_IDENT_in_fnAttributeName6935); if (state.failed) return;
							}
							break;

						default :
							break loop308;
						}
					}
					} finally {dbg.exitSubRule(308);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1054:15: {...}? cp_variable
					{
					dbg.location(1054,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeName", "isCssPreprocessorSource()");
					}dbg.location(1054,44);
					pushFollow(FOLLOW_cp_variable_in_fnAttributeName6955);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1055, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeName");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeName"



	// $ANTLR start "fnAttributeValue"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1057:1: fnAttributeValue : ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression );
	public final void fnAttributeValue() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "fnAttributeValue");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1057, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1058:2: ( term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )* |{...}? cp_math_expression )
			int alt314=2;
			try { dbg.enterDecision(314, decisionCanBacktrack[314]);

			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA314_1 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA314_2 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARIABLE:
				{
				int LA314_3 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LBRACKET:
				{
				int LA314_4 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 4, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case NUMBER:
				{
				int LA314_5 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 5, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URANGE:
				{
				int LA314_6 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 6, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE:
				{
				int LA314_7 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 7, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LENGTH:
				{
				int LA314_8 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 8, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EMS:
				{
				int LA314_9 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 9, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REM:
				{
				int LA314_10 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 10, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case EXS:
				{
				int LA314_11 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 11, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ANGLE:
				{
				int LA314_12 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 12, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TIME:
				{
				int LA314_13 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 13, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case FREQ:
				{
				int LA314_14 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 14, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case RESOLUTION:
				{
				int LA314_15 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 15, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DIMENSION:
				{
				int LA314_16 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 16, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case STRING:
				{
				int LA314_17 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 17, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case TILDE:
				{
				int LA314_18 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 18, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_JS_STRING:
				{
				int LA314_19 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 19, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case GEN:
				{
				int LA314_20 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 20, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case URI:
				{
				int LA314_21 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 21, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH:
				{
				int LA314_22 = input.LA(2);
				if ( (!(evalPredicate(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()"),""))) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 22, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA314_23 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt314=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 23, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA314_24 = input.LA(2);
				if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt314=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 24, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case LESS_AND:
				{
				int LA314_25 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt314=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 25, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYMBOL:
				{
				int LA314_26 = input.LA(2);
				if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt314=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 26, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AT_SIGN:
				{
				int LA314_27 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt314=1;
				}
				else if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 27, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PERCENTAGE_SYMBOL:
				{
				int LA314_28 = input.LA(2);
				if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=1;
				}
				else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
					alt314=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 314, 28, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IMPORTANT_SYM:
			case LPAREN:
				{
				alt314=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 314, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(314);}

			switch (alt314) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:13: term ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					{
					dbg.location(1059,13);
					pushFollow(FOLLOW_term_in_fnAttributeValue6978);
					term();
					state._fsp--;
					if (state.failed) return;dbg.location(1059,18);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*
					try { dbg.enterSubRule(313);

					loop313:
					while (true) {
						int alt313=2;
						try { dbg.enterDecision(313, decisionCanBacktrack[313]);

						try {
							isCyclicDecision = true;
							alt313 = dfa313.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(313);}

						switch (alt313) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
							{
							dbg.location(1059,71);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
							int alt312=3;
							try { dbg.enterSubRule(312);
							try { dbg.enterDecision(312, decisionCanBacktrack[312]);

							try {
								isCyclicDecision = true;
								alt312 = dfa312.predict(input);
							}
							catch (NoViableAltException nvae) {
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(312);}

							switch (alt312) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:73: ws
									{
									dbg.location(1059,73);
									pushFollow(FOLLOW_ws_in_fnAttributeValue7010);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:78: ( ( ws )? SOLIDUS ( ws )? )
									{
									dbg.location(1059,78);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:78: ( ( ws )? SOLIDUS ( ws )? )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:79: ( ws )? SOLIDUS ( ws )?
									{
									dbg.location(1059,79);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:79: ( ws )?
									int alt310=2;
									try { dbg.enterSubRule(310);
									try { dbg.enterDecision(310, decisionCanBacktrack[310]);

									int LA310_0 = input.LA(1);
									if ( (LA310_0==COMMENT||LA310_0==NL||LA310_0==WS) ) {
										alt310=1;
									}
									} finally {dbg.exitDecision(310);}

									switch (alt310) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:79: ws
											{
											dbg.location(1059,79);
											pushFollow(FOLLOW_ws_in_fnAttributeValue7015);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(310);}
									dbg.location(1059,83);
									match(input,SOLIDUS,FOLLOW_SOLIDUS_in_fnAttributeValue7018); if (state.failed) return;dbg.location(1059,91);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:91: ( ws )?
									int alt311=2;
									try { dbg.enterSubRule(311);
									try { dbg.enterDecision(311, decisionCanBacktrack[311]);

									int LA311_0 = input.LA(1);
									if ( (LA311_0==COMMENT||LA311_0==NL||LA311_0==WS) ) {
										alt311=1;
									}
									} finally {dbg.exitDecision(311);}

									switch (alt311) {
										case 1 :
											dbg.enterAlt(1);

											// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:91: ws
											{
											dbg.location(1059,91);
											pushFollow(FOLLOW_ws_in_fnAttributeValue7020);
											ws();
											state._fsp--;
											if (state.failed) return;
											}
											break;

									}
									} finally {dbg.exitSubRule(311);}

									}

									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:111: 
									{
									}
									break;

							}
							} finally {dbg.exitSubRule(312);}
							dbg.location(1059,113);
							pushFollow(FOLLOW_term_in_fnAttributeValue7029);
							term();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop313;
						}
					}
					} finally {dbg.exitSubRule(313);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1060:15: {...}? cp_math_expression
					{
					dbg.location(1060,15);
					if ( !(evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "fnAttributeValue", "isCssPreprocessorSource()");
					}dbg.location(1060,44);
					pushFollow(FOLLOW_cp_math_expression_in_fnAttributeValue7050);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1061, 1);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "fnAttributeValue");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "fnAttributeValue"



	// $ANTLR start "hexColor"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1063:1: hexColor : HASH ;
	public final void hexColor() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "hexColor");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1063, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:5: ( HASH )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1064:7: HASH
			{
			dbg.location(1064,7);
			match(input,HASH,FOLLOW_HASH_in_hexColor7064); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1065, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "hexColor");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "hexColor"



	// $ANTLR start "ws"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1067:1: ws : ( WS | NL | COMMENT )+ ;
	public final void ws() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "ws");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1067, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:5: ( ( WS | NL | COMMENT )+ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:7: ( WS | NL | COMMENT )+
			{
			dbg.location(1068,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1068:7: ( WS | NL | COMMENT )+
			int cnt315=0;
			try { dbg.enterSubRule(315);

			loop315:
			while (true) {
				int alt315=2;
				try { dbg.enterDecision(315, decisionCanBacktrack[315]);

				int LA315_0 = input.LA(1);
				if ( (LA315_0==COMMENT||LA315_0==NL||LA315_0==WS) ) {
					alt315=1;
				}

				} finally {dbg.exitDecision(315);}

				switch (alt315) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1068,7);
					if ( input.LA(1)==COMMENT||input.LA(1)==NL||input.LA(1)==WS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

				default :
					if ( cnt315 >= 1 ) break loop315;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(315, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt315++;
			}
			} finally {dbg.exitSubRule(315);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1069, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "ws");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "ws"



	// $ANTLR start "cp_variable_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1074:1: cp_variable_declaration : ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* );
	public final void cp_variable_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1074, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1075:5: ({...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list |{...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )* )
			int alt323=2;
			try { dbg.enterDecision(323, decisionCanBacktrack[323]);

			switch ( input.LA(1) ) {
			case AT_IDENT:
			case BOTTOMCENTER_SYM:
			case BOTTOMLEFTCORNER_SYM:
			case BOTTOMLEFT_SYM:
			case BOTTOMRIGHTCORNER_SYM:
			case BOTTOMRIGHT_SYM:
			case CHARSET_SYM:
			case COUNTER_STYLE_SYM:
			case FONT_FACE_SYM:
			case IMPORT_SYM:
			case LEFTBOTTOM_SYM:
			case LEFTMIDDLE_SYM:
			case LEFTTOP_SYM:
			case MEDIA_SYM:
			case MOZ_DOCUMENT_SYM:
			case NAMESPACE_SYM:
			case PAGE_SYM:
			case RIGHTBOTTOM_SYM:
			case RIGHTMIDDLE_SYM:
			case RIGHTTOP_SYM:
			case SASS_AT_ROOT:
			case SASS_CONTENT:
			case SASS_DEBUG:
			case SASS_EACH:
			case SASS_ELSE:
			case SASS_EXTEND:
			case SASS_FOR:
			case SASS_FUNCTION:
			case SASS_IF:
			case SASS_INCLUDE:
			case SASS_MIXIN:
			case SASS_RETURN:
			case SASS_WARN:
			case SASS_WHILE:
			case TOPCENTER_SYM:
			case TOPLEFTCORNER_SYM:
			case TOPLEFT_SYM:
			case TOPRIGHTCORNER_SYM:
			case TOPRIGHT_SYM:
			case WEBKIT_KEYFRAMES_SYM:
				{
				int LA323_1 = input.LA(2);
				if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
					alt323=1;
				}
				else if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt323=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 323, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SASS_VAR:
				{
				int LA323_2 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt323=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt323=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 323, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case IDENT:
				{
				int LA323_3 = input.LA(2);
				if ( ((evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt323=1;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt323=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 323, 3, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 323, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(323);}

			switch (alt323) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list
					{
					dbg.location(1076,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isLessSource()");
					}dbg.location(1076,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration7124);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1076,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:39: ( ws )?
					int alt316=2;
					try { dbg.enterSubRule(316);
					try { dbg.enterDecision(316, decisionCanBacktrack[316]);

					int LA316_0 = input.LA(1);
					if ( (LA316_0==COMMENT||LA316_0==NL||LA316_0==WS) ) {
						alt316=1;
					}
					} finally {dbg.exitDecision(316);}

					switch (alt316) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:39: ws
							{
							dbg.location(1076,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration7126);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(316);}
					dbg.location(1076,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration7129); if (state.failed) return;dbg.location(1076,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:49: ( ws )?
					int alt317=2;
					try { dbg.enterSubRule(317);
					try { dbg.enterDecision(317, decisionCanBacktrack[317]);

					int LA317_0 = input.LA(1);
					if ( (LA317_0==COMMENT||LA317_0==NL||LA317_0==WS) ) {
						alt317=1;
					}
					} finally {dbg.exitDecision(317);}

					switch (alt317) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1076:49: ws
							{
							dbg.location(1076,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration7131);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(317);}
					dbg.location(1076,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration7134);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:9: {...}? cp_variable ( ws )? COLON ( ws )? cp_expression_list ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					{
					dbg.location(1078,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable_declaration", "isScssSource()");
					}dbg.location(1078,27);
					pushFollow(FOLLOW_cp_variable_in_cp_variable_declaration7156);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1078,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:39: ( ws )?
					int alt318=2;
					try { dbg.enterSubRule(318);
					try { dbg.enterDecision(318, decisionCanBacktrack[318]);

					int LA318_0 = input.LA(1);
					if ( (LA318_0==COMMENT||LA318_0==NL||LA318_0==WS) ) {
						alt318=1;
					}
					} finally {dbg.exitDecision(318);}

					switch (alt318) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:39: ws
							{
							dbg.location(1078,39);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration7158);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(318);}
					dbg.location(1078,43);
					match(input,COLON,FOLLOW_COLON_in_cp_variable_declaration7161); if (state.failed) return;dbg.location(1078,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:49: ( ws )?
					int alt319=2;
					try { dbg.enterSubRule(319);
					try { dbg.enterDecision(319, decisionCanBacktrack[319]);

					int LA319_0 = input.LA(1);
					if ( (LA319_0==COMMENT||LA319_0==NL||LA319_0==WS) ) {
						alt319=1;
					}
					} finally {dbg.exitDecision(319);}

					switch (alt319) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:49: ws
							{
							dbg.location(1078,49);
							pushFollow(FOLLOW_ws_in_cp_variable_declaration7163);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(319);}
					dbg.location(1078,53);
					pushFollow(FOLLOW_cp_expression_list_in_cp_variable_declaration7166);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1078,72);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*
					try { dbg.enterSubRule(322);

					loop322:
					while (true) {
						int alt322=3;
						try { dbg.enterDecision(322, decisionCanBacktrack[322]);

						try {
							isCyclicDecision = true;
							alt322 = dfa322.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(322);}

						switch (alt322) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:73: ( ( ws )? SASS_DEFAULT )
							{
							dbg.location(1078,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:73: ( ( ws )? SASS_DEFAULT )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:74: ( ws )? SASS_DEFAULT
							{
							dbg.location(1078,74);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:74: ( ws )?
							int alt320=2;
							try { dbg.enterSubRule(320);
							try { dbg.enterDecision(320, decisionCanBacktrack[320]);

							int LA320_0 = input.LA(1);
							if ( (LA320_0==COMMENT||LA320_0==NL||LA320_0==WS) ) {
								alt320=1;
							}
							} finally {dbg.exitDecision(320);}

							switch (alt320) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:74: ws
									{
									dbg.location(1078,74);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration7170);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(320);}
							dbg.location(1078,78);
							match(input,SASS_DEFAULT,FOLLOW_SASS_DEFAULT_in_cp_variable_declaration7173); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:94: ( ( ws )? SASS_GLOBAL )
							{
							dbg.location(1078,94);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:94: ( ( ws )? SASS_GLOBAL )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:95: ( ws )? SASS_GLOBAL
							{
							dbg.location(1078,95);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:95: ( ws )?
							int alt321=2;
							try { dbg.enterSubRule(321);
							try { dbg.enterDecision(321, decisionCanBacktrack[321]);

							int LA321_0 = input.LA(1);
							if ( (LA321_0==COMMENT||LA321_0==NL||LA321_0==WS) ) {
								alt321=1;
							}
							} finally {dbg.exitDecision(321);}

							switch (alt321) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1078:95: ws
									{
									dbg.location(1078,95);
									pushFollow(FOLLOW_ws_in_cp_variable_declaration7179);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(321);}
							dbg.location(1078,99);
							match(input,SASS_GLOBAL,FOLLOW_SASS_GLOBAL_in_cp_variable_declaration7182); if (state.failed) return;
							}

							}
							break;

						default :
							break loop322;
						}
					}
					} finally {dbg.exitSubRule(322);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1079, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable_declaration"



	// $ANTLR start "cp_variable"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1082:1: cp_variable : ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) );
	public final void cp_variable() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_variable");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1082, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1083:5: ({...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT ) |{...}? ( SASS_VAR | IDENT DOT SASS_VAR ) )
			int alt325=2;
			try { dbg.enterDecision(325, decisionCanBacktrack[325]);

			int LA325_0 = input.LA(1);
			if ( (LA325_0==AT_IDENT||(LA325_0 >= BOTTOMCENTER_SYM && LA325_0 <= BOTTOMRIGHT_SYM)||LA325_0==CHARSET_SYM||LA325_0==COUNTER_STYLE_SYM||LA325_0==FONT_FACE_SYM||LA325_0==IMPORT_SYM||(LA325_0 >= LEFTBOTTOM_SYM && LA325_0 <= LEFTTOP_SYM)||LA325_0==MEDIA_SYM||LA325_0==MOZ_DOCUMENT_SYM||LA325_0==NAMESPACE_SYM||LA325_0==PAGE_SYM||(LA325_0 >= RIGHTBOTTOM_SYM && LA325_0 <= RIGHTTOP_SYM)||(LA325_0 >= SASS_AT_ROOT && LA325_0 <= SASS_DEBUG)||(LA325_0 >= SASS_EACH && LA325_0 <= SASS_ELSE)||LA325_0==SASS_EXTEND||LA325_0==SASS_FOR||LA325_0==SASS_FUNCTION||(LA325_0 >= SASS_IF && LA325_0 <= SASS_MIXIN)||LA325_0==SASS_RETURN||(LA325_0 >= SASS_WARN && LA325_0 <= SASS_WHILE)||(LA325_0 >= TOPCENTER_SYM && LA325_0 <= TOPRIGHT_SYM)||LA325_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt325=1;
			}
			else if ( (LA325_0==IDENT||LA325_0==SASS_VAR) ) {
				alt325=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 325, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(325);}

			switch (alt325) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1085:9: {...}? ( AT_IDENT | IMPORT_SYM | PAGE_SYM | MEDIA_SYM | NAMESPACE_SYM | CHARSET_SYM | COUNTER_STYLE_SYM | FONT_FACE_SYM | TOPLEFTCORNER_SYM | TOPLEFT_SYM | TOPCENTER_SYM | TOPRIGHT_SYM | TOPRIGHTCORNER_SYM | BOTTOMLEFTCORNER_SYM | BOTTOMLEFT_SYM | BOTTOMCENTER_SYM | BOTTOMRIGHT_SYM | BOTTOMRIGHTCORNER_SYM | LEFTTOP_SYM | LEFTMIDDLE_SYM | LEFTBOTTOM_SYM | RIGHTTOP_SYM | RIGHTMIDDLE_SYM | RIGHTBOTTOM_SYM | MOZ_DOCUMENT_SYM | WEBKIT_KEYFRAMES_SYM | SASS_CONTENT | SASS_MIXIN | SASS_INCLUDE | SASS_EXTEND | SASS_DEBUG | SASS_WARN | SASS_IF | SASS_ELSE | SASS_FOR | SASS_FUNCTION | SASS_RETURN | SASS_EACH | SASS_WHILE | SASS_AT_ROOT )
					{
					dbg.location(1085,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isLessSource()");
					}dbg.location(1085,27);
					if ( input.LA(1)==AT_IDENT||(input.LA(1) >= BOTTOMCENTER_SYM && input.LA(1) <= BOTTOMRIGHT_SYM)||input.LA(1)==CHARSET_SYM||input.LA(1)==COUNTER_STYLE_SYM||input.LA(1)==FONT_FACE_SYM||input.LA(1)==IMPORT_SYM||(input.LA(1) >= LEFTBOTTOM_SYM && input.LA(1) <= LEFTTOP_SYM)||input.LA(1)==MEDIA_SYM||input.LA(1)==MOZ_DOCUMENT_SYM||input.LA(1)==NAMESPACE_SYM||input.LA(1)==PAGE_SYM||(input.LA(1) >= RIGHTBOTTOM_SYM && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= SASS_AT_ROOT && input.LA(1) <= SASS_DEBUG)||(input.LA(1) >= SASS_EACH && input.LA(1) <= SASS_ELSE)||input.LA(1)==SASS_EXTEND||input.LA(1)==SASS_FOR||input.LA(1)==SASS_FUNCTION||(input.LA(1) >= SASS_IF && input.LA(1) <= SASS_MIXIN)||input.LA(1)==SASS_RETURN||(input.LA(1) >= SASS_WARN && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= TOPCENTER_SYM && input.LA(1) <= TOPRIGHT_SYM)||input.LA(1)==WEBKIT_KEYFRAMES_SYM ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1087:9: {...}? ( SASS_VAR | IDENT DOT SASS_VAR )
					{
					dbg.location(1087,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_variable", "isScssSource()");
					}dbg.location(1087,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1087:27: ( SASS_VAR | IDENT DOT SASS_VAR )
					int alt324=2;
					try { dbg.enterSubRule(324);
					try { dbg.enterDecision(324, decisionCanBacktrack[324]);

					int LA324_0 = input.LA(1);
					if ( (LA324_0==SASS_VAR) ) {
						alt324=1;
					}
					else if ( (LA324_0==IDENT) ) {
						alt324=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 324, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(324);}

					switch (alt324) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1087:29: SASS_VAR
							{
							dbg.location(1087,29);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable7406); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1087:40: IDENT DOT SASS_VAR
							{
							dbg.location(1087,40);
							match(input,IDENT,FOLLOW_IDENT_in_cp_variable7410); if (state.failed) return;dbg.location(1087,46);
							match(input,DOT,FOLLOW_DOT_in_cp_variable7412); if (state.failed) return;dbg.location(1087,50);
							match(input,SASS_VAR,FOLLOW_SASS_VAR_in_cp_variable7414); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(324);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1088, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_variable");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_variable"



	// $ANTLR start "cp_expression_list"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1091:1: cp_expression_list : ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* ;
	public final void cp_expression_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1091, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1092:5: ( ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1093:5: ( cp_expression )=> cp_expression ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			{
			dbg.location(1093,24);
			pushFollow(FOLLOW_cp_expression_in_cp_expression_list7444);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1094,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*
			try { dbg.enterSubRule(328);

			loop328:
			while (true) {
				int alt328=2;
				try { dbg.enterDecision(328, decisionCanBacktrack[328]);

				try {
					isCyclicDecision = true;
					alt328 = dfa328.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(328);}

				switch (alt328) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:6: ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression
					{
					dbg.location(1094,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:37: ( ws )?
					int alt326=2;
					try { dbg.enterSubRule(326);
					try { dbg.enterDecision(326, decisionCanBacktrack[326]);

					int LA326_0 = input.LA(1);
					if ( (LA326_0==COMMENT||LA326_0==NL||LA326_0==WS) ) {
						alt326=1;
					}
					} finally {dbg.exitDecision(326);}

					switch (alt326) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:37: ws
							{
							dbg.location(1094,37);
							pushFollow(FOLLOW_ws_in_cp_expression_list7463);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(326);}
					dbg.location(1094,41);
					match(input,COMMA,FOLLOW_COMMA_in_cp_expression_list7466); if (state.failed) return;dbg.location(1094,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:47: ( ws )?
					int alt327=2;
					try { dbg.enterSubRule(327);
					try { dbg.enterDecision(327, decisionCanBacktrack[327]);

					int LA327_0 = input.LA(1);
					if ( (LA327_0==COMMENT||LA327_0==NL||LA327_0==WS) ) {
						alt327=1;
					}
					} finally {dbg.exitDecision(327);}

					switch (alt327) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:47: ws
							{
							dbg.location(1094,47);
							pushFollow(FOLLOW_ws_in_cp_expression_list7468);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(327);}
					dbg.location(1094,51);
					pushFollow(FOLLOW_cp_expression_in_cp_expression_list7471);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop328;
				}
			}
			} finally {dbg.exitSubRule(328);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1095, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_list"



	// $ANTLR start "cp_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1107:1: cp_expression : ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN );
	public final void cp_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1107, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1108:5: ({...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ) | ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* ) |{...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN )
			int alt337=3;
			try { dbg.enterDecision(337, decisionCanBacktrack[337]);

			int LA337_0 = input.LA(1);
			if ( (LA337_0==LBRACE) ) {
				alt337=1;
			}
			else if ( (LA337_0==NOT) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==MINUS||LA337_0==PLUS) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==IDENT) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==VARIABLE) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==LBRACKET) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==NUMBER) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==URANGE) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==PERCENTAGE) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==LENGTH) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==EMS) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==REM) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==EXS) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==ANGLE) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==TIME) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==FREQ) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==RESOLUTION) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==DIMENSION) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==STRING) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==TILDE) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==LESS_JS_STRING) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==GEN) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==URI) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==HASH) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==AT_IDENT||(LA337_0 >= BOTTOMCENTER_SYM && LA337_0 <= BOTTOMRIGHT_SYM)||LA337_0==CHARSET_SYM||LA337_0==COUNTER_STYLE_SYM||LA337_0==FONT_FACE_SYM||LA337_0==IMPORT_SYM||(LA337_0 >= LEFTBOTTOM_SYM && LA337_0 <= LEFTTOP_SYM)||LA337_0==MEDIA_SYM||LA337_0==MOZ_DOCUMENT_SYM||LA337_0==NAMESPACE_SYM||LA337_0==PAGE_SYM||(LA337_0 >= RIGHTBOTTOM_SYM && LA337_0 <= RIGHTTOP_SYM)||(LA337_0 >= SASS_AT_ROOT && LA337_0 <= SASS_DEBUG)||(LA337_0 >= SASS_EACH && LA337_0 <= SASS_ELSE)||LA337_0==SASS_EXTEND||LA337_0==SASS_FOR||LA337_0==SASS_FUNCTION||(LA337_0 >= SASS_IF && LA337_0 <= SASS_MIXIN)||LA337_0==SASS_RETURN||(LA337_0 >= SASS_WARN && LA337_0 <= SASS_WHILE)||(LA337_0 >= TOPCENTER_SYM && LA337_0 <= TOPRIGHT_SYM)||LA337_0==WEBKIT_KEYFRAMES_SYM) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==SASS_VAR) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==LESS_AND) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==HASH_SYMBOL) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==AT_SIGN) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==PERCENTAGE_SYMBOL) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==IMPORTANT_SYM) && (synpred43_Css3())) {
				alt337=2;
			}
			else if ( (LA337_0==LPAREN) ) {
				int LA337_32 = input.LA(2);
				if ( (synpred43_Css3()) ) {
					alt337=2;
				}
				else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {
					alt337=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 337, 32, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 337, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(337);}

			switch (alt337) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:5: {...}? ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					{
					dbg.location(1109,5);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isLessSource()");
					}dbg.location(1109,23);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:23: ( LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:24: LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
					{
					dbg.location(1109,24);
					match(input,LBRACE,FOLLOW_LBRACE_in_cp_expression7507); if (state.failed) return;dbg.location(1109,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:31: ( ws )?
					int alt329=2;
					try { dbg.enterSubRule(329);
					try { dbg.enterDecision(329, decisionCanBacktrack[329]);

					int LA329_0 = input.LA(1);
					if ( (LA329_0==COMMENT||LA329_0==NL||LA329_0==WS) ) {
						alt329=1;
					}
					} finally {dbg.exitDecision(329);}

					switch (alt329) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:31: ws
							{
							dbg.location(1109,31);
							pushFollow(FOLLOW_ws_in_cp_expression7509);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(329);}
					dbg.location(1109,35);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression7512);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1109,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:48: ( declarations )?
					int alt330=2;
					try { dbg.enterSubRule(330);
					try { dbg.enterDecision(330, decisionCanBacktrack[330]);

					int LA330_0 = input.LA(1);
					if ( ((LA330_0 >= AT_IDENT && LA330_0 <= AT_SIGN)||(LA330_0 >= BOTTOMCENTER_SYM && LA330_0 <= BOTTOMRIGHT_SYM)||(LA330_0 >= CHARSET_SYM && LA330_0 <= COLON)||LA330_0==COUNTER_STYLE_SYM||(LA330_0 >= DCOLON && LA330_0 <= DOT)||LA330_0==FONT_FACE_SYM||(LA330_0 >= GEN && LA330_0 <= GREATER)||(LA330_0 >= HASH && LA330_0 <= HASH_SYMBOL)||LA330_0==IDENT||LA330_0==IMPORT_SYM||(LA330_0 >= LBRACKET && LA330_0 <= LEFTTOP_SYM)||LA330_0==LESS_AND||(LA330_0 >= MEDIA_SYM && LA330_0 <= MOZ_DOCUMENT_SYM)||LA330_0==NAMESPACE_SYM||LA330_0==PAGE_SYM||(LA330_0 >= PIPE && LA330_0 <= PLUS)||(LA330_0 >= RIGHTBOTTOM_SYM && LA330_0 <= RIGHTTOP_SYM)||(LA330_0 >= SASS_AT_ROOT && LA330_0 <= SASS_DEBUG)||(LA330_0 >= SASS_EACH && LA330_0 <= SASS_ELSE)||(LA330_0 >= SASS_ERROR && LA330_0 <= SASS_FOR)||LA330_0==SASS_FUNCTION||(LA330_0 >= SASS_IF && LA330_0 <= SASS_MIXIN)||LA330_0==SASS_RETURN||(LA330_0 >= SASS_VAR && LA330_0 <= SEMI)||LA330_0==STAR||LA330_0==SUPPORTS_SYM||LA330_0==TILDE||(LA330_0 >= TOPCENTER_SYM && LA330_0 <= TOPRIGHT_SYM)||LA330_0==VARIABLE||LA330_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt330=1;
					}
					} finally {dbg.exitDecision(330);}

					switch (alt330) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1109:48: declarations
							{
							dbg.location(1109,48);
							pushFollow(FOLLOW_declarations_in_cp_expression7514);
							declarations();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(330);}
					dbg.location(1109,62);
					match(input,RBRACE,FOLLOW_RBRACE_in_cp_expression7517); if (state.failed) return;
					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:7: ( cp_expression_atom )=> ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					{
					dbg.location(1110,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:31: ( cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )* )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:32: cp_expression_atom ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					{
					dbg.location(1110,32);
					pushFollow(FOLLOW_cp_expression_atom_in_cp_expression7533);
					cp_expression_atom();
					state._fsp--;
					if (state.failed) return;dbg.location(1111,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1111:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*
					try { dbg.enterSubRule(334);

					loop334:
					while (true) {
						int alt334=3;
						try { dbg.enterDecision(334, decisionCanBacktrack[334]);

						try {
							isCyclicDecision = true;
							alt334 = dfa334.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(334);}

						switch (alt334) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:9: ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom
							{
							dbg.location(1112,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:39: ( ( ws )? cp_expression_operator ( ws )? )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:40: ( ws )? cp_expression_operator ( ws )?
							{
							dbg.location(1112,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:40: ( ws )?
							int alt331=2;
							try { dbg.enterSubRule(331);
							try { dbg.enterDecision(331, decisionCanBacktrack[331]);

							int LA331_0 = input.LA(1);
							if ( (LA331_0==COMMENT||LA331_0==NL||LA331_0==WS) ) {
								alt331=1;
							}
							} finally {dbg.exitDecision(331);}

							switch (alt331) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:40: ws
									{
									dbg.location(1112,40);
									pushFollow(FOLLOW_ws_in_cp_expression7557);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(331);}
							dbg.location(1112,44);
							pushFollow(FOLLOW_cp_expression_operator_in_cp_expression7560);
							cp_expression_operator();
							state._fsp--;
							if (state.failed) return;dbg.location(1112,67);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:67: ( ws )?
							int alt332=2;
							try { dbg.enterSubRule(332);
							try { dbg.enterDecision(332, decisionCanBacktrack[332]);

							int LA332_0 = input.LA(1);
							if ( (LA332_0==COMMENT||LA332_0==NL||LA332_0==WS) ) {
								alt332=1;
							}
							} finally {dbg.exitDecision(332);}

							switch (alt332) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:67: ws
									{
									dbg.location(1112,67);
									pushFollow(FOLLOW_ws_in_cp_expression7562);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(332);}

							}
							dbg.location(1112,72);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression7566);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:11: ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom
							{
							dbg.location(1113,37);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:37: ( ws )?
							int alt333=2;
							try { dbg.enterSubRule(333);
							try { dbg.enterDecision(333, decisionCanBacktrack[333]);

							int LA333_0 = input.LA(1);
							if ( (LA333_0==COMMENT||LA333_0==NL||LA333_0==WS) ) {
								alt333=1;
							}
							} finally {dbg.exitDecision(333);}

							switch (alt333) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:37: ws
									{
									dbg.location(1113,37);
									pushFollow(FOLLOW_ws_in_cp_expression7585);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(333);}
							dbg.location(1113,41);
							pushFollow(FOLLOW_cp_expression_atom_in_cp_expression7588);
							cp_expression_atom();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop334;
						}
					}
					} finally {dbg.exitSubRule(334);}

					}

					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:7: {...}? LPAREN ( ws )? syncToFollow ( sass_map_pairs )? RPAREN
					{
					dbg.location(1115,7);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_expression", "isScssSource()");
					}dbg.location(1115,25);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression7606); if (state.failed) return;dbg.location(1115,32);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:32: ( ws )?
					int alt335=2;
					try { dbg.enterSubRule(335);
					try { dbg.enterDecision(335, decisionCanBacktrack[335]);

					int LA335_0 = input.LA(1);
					if ( (LA335_0==COMMENT||LA335_0==NL||LA335_0==WS) ) {
						alt335=1;
					}
					} finally {dbg.exitDecision(335);}

					switch (alt335) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:32: ws
							{
							dbg.location(1115,32);
							pushFollow(FOLLOW_ws_in_cp_expression7608);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(335);}
					dbg.location(1115,36);
					pushFollow(FOLLOW_syncToFollow_in_cp_expression7611);
					syncToFollow();
					state._fsp--;
					if (state.failed) return;dbg.location(1115,49);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:49: ( sass_map_pairs )?
					int alt336=2;
					try { dbg.enterSubRule(336);
					try { dbg.enterDecision(336, decisionCanBacktrack[336]);

					int LA336_0 = input.LA(1);
					if ( ((LA336_0 >= AT_IDENT && LA336_0 <= AT_SIGN)||(LA336_0 >= BOTTOMCENTER_SYM && LA336_0 <= BOTTOMRIGHT_SYM)||LA336_0==CHARSET_SYM||LA336_0==COMMA||LA336_0==COUNTER_STYLE_SYM||LA336_0==FONT_FACE_SYM||LA336_0==GEN||LA336_0==HASH_SYMBOL||LA336_0==IDENT||LA336_0==IMPORT_SYM||(LA336_0 >= LEFTBOTTOM_SYM && LA336_0 <= LEFTTOP_SYM)||(LA336_0 >= MEDIA_SYM && LA336_0 <= MOZ_DOCUMENT_SYM)||LA336_0==NAMESPACE_SYM||LA336_0==NUMBER||LA336_0==PAGE_SYM||(LA336_0 >= RIGHTBOTTOM_SYM && LA336_0 <= RIGHTTOP_SYM)||(LA336_0 >= SASS_AT_ROOT && LA336_0 <= SASS_DEBUG)||(LA336_0 >= SASS_EACH && LA336_0 <= SASS_ELSE)||LA336_0==SASS_EXTEND||LA336_0==SASS_FOR||LA336_0==SASS_FUNCTION||(LA336_0 >= SASS_IF && LA336_0 <= SASS_MIXIN)||LA336_0==SASS_RETURN||(LA336_0 >= SASS_VAR && LA336_0 <= SASS_WHILE)||LA336_0==STRING||(LA336_0 >= TOPCENTER_SYM && LA336_0 <= TOPRIGHT_SYM)||LA336_0==VARIABLE||LA336_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt336=1;
					}
					} finally {dbg.exitDecision(336);}

					switch (alt336) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1115:49: sass_map_pairs
							{
							dbg.location(1115,49);
							pushFollow(FOLLOW_sass_map_pairs_in_cp_expression7613);
							sass_map_pairs();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(336);}
					dbg.location(1115,65);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression7616); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1116, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression"



	// $ANTLR start "cp_expression_operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1118:1: cp_expression_operator : ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ );
	public final void cp_expression_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1118, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1119:5: ( key_or | key_and | CP_EQ | CP_NOT_EQ | LESS | LESS_OR_EQ | GREATER | GREATER_OR_EQ )
			int alt338=8;
			try { dbg.enterDecision(338, decisionCanBacktrack[338]);

			switch ( input.LA(1) ) {
			case IDENT:
				{
				int LA338_1 = input.LA(2);
				if ( (evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
					alt338=1;
				}
				else if ( (evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
					alt338=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 338, 1, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CP_EQ:
				{
				alt338=3;
				}
				break;
			case CP_NOT_EQ:
				{
				alt338=4;
				}
				break;
			case LESS:
				{
				alt338=5;
				}
				break;
			case LESS_OR_EQ:
				{
				alt338=6;
				}
				break;
			case GREATER:
				{
				alt338=7;
				}
				break;
			case GREATER_OR_EQ:
				{
				alt338=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 338, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(338);}

			switch (alt338) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:5: key_or
					{
					dbg.location(1120,5);
					pushFollow(FOLLOW_key_or_in_cp_expression_operator7637);
					key_or();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:14: key_and
					{
					dbg.location(1120,14);
					pushFollow(FOLLOW_key_and_in_cp_expression_operator7641);
					key_and();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:25: CP_EQ
					{
					dbg.location(1120,25);
					match(input,CP_EQ,FOLLOW_CP_EQ_in_cp_expression_operator7646); if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:33: CP_NOT_EQ
					{
					dbg.location(1120,33);
					match(input,CP_NOT_EQ,FOLLOW_CP_NOT_EQ_in_cp_expression_operator7650); if (state.failed) return;
					}
					break;
				case 5 :
					dbg.enterAlt(5);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:45: LESS
					{
					dbg.location(1120,45);
					match(input,LESS,FOLLOW_LESS_in_cp_expression_operator7654); if (state.failed) return;
					}
					break;
				case 6 :
					dbg.enterAlt(6);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:52: LESS_OR_EQ
					{
					dbg.location(1120,52);
					match(input,LESS_OR_EQ,FOLLOW_LESS_OR_EQ_in_cp_expression_operator7658); if (state.failed) return;
					}
					break;
				case 7 :
					dbg.enterAlt(7);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:65: GREATER
					{
					dbg.location(1120,65);
					match(input,GREATER,FOLLOW_GREATER_in_cp_expression_operator7662); if (state.failed) return;
					}
					break;
				case 8 :
					dbg.enterAlt(8);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1120:75: GREATER_OR_EQ
					{
					dbg.location(1120,75);
					match(input,GREATER_OR_EQ,FOLLOW_GREATER_OR_EQ_in_cp_expression_operator7666); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1121, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_operator"



	// $ANTLR start "cp_expression_atom"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1123:1: cp_expression_atom : ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) ;
	public final void cp_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1123, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1124:5: ( ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:9: ( NOT ( ws )? )? ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			{
			dbg.location(1125,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:9: ( NOT ( ws )? )?
			int alt340=2;
			try { dbg.enterSubRule(340);
			try { dbg.enterDecision(340, decisionCanBacktrack[340]);

			int LA340_0 = input.LA(1);
			if ( (LA340_0==NOT) ) {
				alt340=1;
			}
			} finally {dbg.exitDecision(340);}

			switch (alt340) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:10: NOT ( ws )?
					{
					dbg.location(1125,10);
					match(input,NOT,FOLLOW_NOT_in_cp_expression_atom7692); if (state.failed) return;dbg.location(1125,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:14: ( ws )?
					int alt339=2;
					try { dbg.enterSubRule(339);
					try { dbg.enterDecision(339, decisionCanBacktrack[339]);

					int LA339_0 = input.LA(1);
					if ( (LA339_0==COMMENT||LA339_0==NL||LA339_0==WS) ) {
						alt339=1;
					}
					} finally {dbg.exitDecision(339);}

					switch (alt339) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1125:14: ws
							{
							dbg.location(1125,14);
							pushFollow(FOLLOW_ws_in_cp_expression_atom7694);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(339);}

					}
					break;

			}
			} finally {dbg.exitSubRule(340);}
			dbg.location(1126,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1126:9: ( ( cp_math_expression )=> cp_math_expression | LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN )
			int alt344=2;
			try { dbg.enterSubRule(344);
			try { dbg.enterDecision(344, decisionCanBacktrack[344]);

			int LA344_0 = input.LA(1);
			if ( (LA344_0==MINUS||LA344_0==PLUS) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==IDENT) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==VARIABLE) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==LBRACKET) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==NUMBER) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==URANGE) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==PERCENTAGE) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==LENGTH) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==EMS) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==REM) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==EXS) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==ANGLE) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==TIME) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==FREQ) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==RESOLUTION) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==DIMENSION) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==STRING) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==TILDE) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==LESS_JS_STRING) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==GEN) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==URI) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==HASH) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==AT_IDENT||(LA344_0 >= BOTTOMCENTER_SYM && LA344_0 <= BOTTOMRIGHT_SYM)||LA344_0==CHARSET_SYM||LA344_0==COUNTER_STYLE_SYM||LA344_0==FONT_FACE_SYM||LA344_0==IMPORT_SYM||(LA344_0 >= LEFTBOTTOM_SYM && LA344_0 <= LEFTTOP_SYM)||LA344_0==MEDIA_SYM||LA344_0==MOZ_DOCUMENT_SYM||LA344_0==NAMESPACE_SYM||LA344_0==PAGE_SYM||(LA344_0 >= RIGHTBOTTOM_SYM && LA344_0 <= RIGHTTOP_SYM)||(LA344_0 >= SASS_AT_ROOT && LA344_0 <= SASS_DEBUG)||(LA344_0 >= SASS_EACH && LA344_0 <= SASS_ELSE)||LA344_0==SASS_EXTEND||LA344_0==SASS_FOR||LA344_0==SASS_FUNCTION||(LA344_0 >= SASS_IF && LA344_0 <= SASS_MIXIN)||LA344_0==SASS_RETURN||(LA344_0 >= SASS_WARN && LA344_0 <= SASS_WHILE)||(LA344_0 >= TOPCENTER_SYM && LA344_0 <= TOPRIGHT_SYM)||LA344_0==WEBKIT_KEYFRAMES_SYM) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==SASS_VAR) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==LESS_AND) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==HASH_SYMBOL) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==AT_SIGN) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==PERCENTAGE_SYMBOL) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==IMPORTANT_SYM) && (synpred46_Css3())) {
				alt344=1;
			}
			else if ( (LA344_0==LPAREN) ) {
				int LA344_30 = input.LA(2);
				if ( (synpred46_Css3()) ) {
					alt344=1;
				}
				else if ( (true) ) {
					alt344=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 344, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(344);}

			switch (alt344) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:13: ( cp_math_expression )=> cp_math_expression
					{
					dbg.location(1127,35);
					pushFollow(FOLLOW_cp_math_expression_in_cp_expression_atom7725);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:15: LPAREN ( ws )? ( cp_expression_list ( ws )? )? RPAREN
					{
					dbg.location(1128,15);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_expression_atom7741); if (state.failed) return;dbg.location(1128,22);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:22: ( ws )?
					int alt341=2;
					try { dbg.enterSubRule(341);
					try { dbg.enterDecision(341, decisionCanBacktrack[341]);

					int LA341_0 = input.LA(1);
					if ( (LA341_0==COMMENT||LA341_0==NL||LA341_0==WS) ) {
						alt341=1;
					}
					} finally {dbg.exitDecision(341);}

					switch (alt341) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:22: ws
							{
							dbg.location(1128,22);
							pushFollow(FOLLOW_ws_in_cp_expression_atom7743);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(341);}
					dbg.location(1128,26);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:26: ( cp_expression_list ( ws )? )?
					int alt343=2;
					try { dbg.enterSubRule(343);
					try { dbg.enterDecision(343, decisionCanBacktrack[343]);

					int LA343_0 = input.LA(1);
					if ( ((LA343_0 >= ANGLE && LA343_0 <= AT_SIGN)||(LA343_0 >= BOTTOMCENTER_SYM && LA343_0 <= BOTTOMRIGHT_SYM)||LA343_0==CHARSET_SYM||LA343_0==COUNTER_STYLE_SYM||LA343_0==DIMENSION||LA343_0==EMS||LA343_0==EXS||(LA343_0 >= FONT_FACE_SYM && LA343_0 <= FREQ)||LA343_0==GEN||(LA343_0 >= HASH && LA343_0 <= HASH_SYMBOL)||(LA343_0 >= IDENT && LA343_0 <= IMPORT_SYM)||(LA343_0 >= LBRACE && LA343_0 <= LENGTH)||(LA343_0 >= LESS_AND && LA343_0 <= LESS_JS_STRING)||LA343_0==LPAREN||(LA343_0 >= MEDIA_SYM && LA343_0 <= MOZ_DOCUMENT_SYM)||LA343_0==NAMESPACE_SYM||(LA343_0 >= NOT && LA343_0 <= NUMBER)||(LA343_0 >= PAGE_SYM && LA343_0 <= PERCENTAGE_SYMBOL)||LA343_0==PLUS||(LA343_0 >= REM && LA343_0 <= RIGHTTOP_SYM)||(LA343_0 >= SASS_AT_ROOT && LA343_0 <= SASS_DEBUG)||(LA343_0 >= SASS_EACH && LA343_0 <= SASS_ELSE)||LA343_0==SASS_EXTEND||LA343_0==SASS_FOR||LA343_0==SASS_FUNCTION||(LA343_0 >= SASS_IF && LA343_0 <= SASS_MIXIN)||LA343_0==SASS_RETURN||(LA343_0 >= SASS_VAR && LA343_0 <= SASS_WHILE)||LA343_0==STRING||(LA343_0 >= TILDE && LA343_0 <= TOPRIGHT_SYM)||(LA343_0 >= URANGE && LA343_0 <= URI)||LA343_0==VARIABLE||LA343_0==WEBKIT_KEYFRAMES_SYM) ) {
						alt343=1;
					}
					} finally {dbg.exitDecision(343);}

					switch (alt343) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:27: cp_expression_list ( ws )?
							{
							dbg.location(1128,27);
							pushFollow(FOLLOW_cp_expression_list_in_cp_expression_atom7747);
							cp_expression_list();
							state._fsp--;
							if (state.failed) return;dbg.location(1128,46);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:46: ( ws )?
							int alt342=2;
							try { dbg.enterSubRule(342);
							try { dbg.enterDecision(342, decisionCanBacktrack[342]);

							int LA342_0 = input.LA(1);
							if ( (LA342_0==COMMENT||LA342_0==NL||LA342_0==WS) ) {
								alt342=1;
							}
							} finally {dbg.exitDecision(342);}

							switch (alt342) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1128:46: ws
									{
									dbg.location(1128,46);
									pushFollow(FOLLOW_ws_in_cp_expression_atom7749);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(342);}

							}
							break;

					}
					} finally {dbg.exitSubRule(343);}
					dbg.location(1128,52);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_expression_atom7754); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(344);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1130, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_expression_atom"



	// $ANTLR start "cp_math_expressions"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1133:1: cp_math_expressions : cp_math_expression ( ws cp_math_expression )* ;
	public final void cp_math_expressions() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expressions");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1133, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1134:5: ( cp_math_expression ( ws cp_math_expression )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1135:5: cp_math_expression ( ws cp_math_expression )*
			{
			dbg.location(1135,5);
			pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions7786);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1136,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:5: ( ws cp_math_expression )*
			try { dbg.enterSubRule(345);

			loop345:
			while (true) {
				int alt345=2;
				try { dbg.enterDecision(345, decisionCanBacktrack[345]);

				int LA345_0 = input.LA(1);
				if ( (LA345_0==COMMENT||LA345_0==NL||LA345_0==WS) ) {
					alt345=1;
				}

				} finally {dbg.exitDecision(345);}

				switch (alt345) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1136:6: ws cp_math_expression
					{
					dbg.location(1136,6);
					pushFollow(FOLLOW_ws_in_cp_math_expressions7793);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1136,9);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expressions7795);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop345;
				}
			}
			} finally {dbg.exitSubRule(345);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1137, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expressions");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expressions"



	// $ANTLR start "cp_math_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1151:1: cp_math_expression : cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* ;
	public final void cp_math_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1151, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:5: ( cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1152:10: cp_math_expression_atom ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			{
			dbg.location(1152,10);
			pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression7829);
			cp_math_expression_atom();
			state._fsp--;
			if (state.failed) return;dbg.location(1153,10);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1153:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*
			try { dbg.enterSubRule(348);

			loop348:
			while (true) {
				int alt348=2;
				try { dbg.enterDecision(348, decisionCanBacktrack[348]);

				try {
					isCyclicDecision = true;
					alt348 = dfa348.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(348);}

				switch (alt348) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom
					{
					dbg.location(1154,48);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:48: ( ws )?
					int alt346=2;
					try { dbg.enterSubRule(346);
					try { dbg.enterDecision(346, decisionCanBacktrack[346]);

					int LA346_0 = input.LA(1);
					if ( (LA346_0==COMMENT||LA346_0==NL||LA346_0==WS) ) {
						alt346=1;
					}
					} finally {dbg.exitDecision(346);}

					switch (alt346) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:48: ws
							{
							dbg.location(1154,48);
							pushFollow(FOLLOW_ws_in_cp_math_expression7871);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(346);}
					dbg.location(1154,52);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1154,78);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:78: ( ws )?
					int alt347=2;
					try { dbg.enterSubRule(347);
					try { dbg.enterDecision(347, decisionCanBacktrack[347]);

					int LA347_0 = input.LA(1);
					if ( (LA347_0==COMMENT||LA347_0==NL||LA347_0==WS) ) {
						alt347=1;
					}
					} finally {dbg.exitDecision(347);}

					switch (alt347) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:78: ws
							{
							dbg.location(1154,78);
							pushFollow(FOLLOW_ws_in_cp_math_expression7884);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(347);}
					dbg.location(1154,82);
					pushFollow(FOLLOW_cp_math_expression_atom_in_cp_math_expression7887);
					cp_math_expression_atom();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop348;
				}
			}
			} finally {dbg.exitSubRule(348);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1156, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression"



	// $ANTLR start "cp_math_expression_atom"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1158:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );
	public final void cp_math_expression_atom() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_math_expression_atom");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1158, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1159:5: ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN )
			int alt353=3;
			try { dbg.enterDecision(353, decisionCanBacktrack[353]);

			try {
				isCyclicDecision = true;
				alt353 = dfa353.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(353);}

			switch (alt353) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1160:5: term
					{
					dbg.location(1160,5);
					pushFollow(FOLLOW_term_in_cp_math_expression_atom7920);
					term();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1161:7: IMPORTANT_SYM
					{
					dbg.location(1161,7);
					match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom7928); if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:7: ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN
					{
					dbg.location(1162,7);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:7: ( unaryOperator ( ws )? )?
					int alt350=2;
					try { dbg.enterSubRule(350);
					try { dbg.enterDecision(350, decisionCanBacktrack[350]);

					int LA350_0 = input.LA(1);
					if ( (LA350_0==MINUS||LA350_0==PLUS) ) {
						alt350=1;
					}
					} finally {dbg.exitDecision(350);}

					switch (alt350) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:9: unaryOperator ( ws )?
							{
							dbg.location(1162,9);
							pushFollow(FOLLOW_unaryOperator_in_cp_math_expression_atom7939);
							unaryOperator();
							state._fsp--;
							if (state.failed) return;dbg.location(1162,23);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:23: ( ws )?
							int alt349=2;
							try { dbg.enterSubRule(349);
							try { dbg.enterDecision(349, decisionCanBacktrack[349]);

							int LA349_0 = input.LA(1);
							if ( (LA349_0==COMMENT||LA349_0==NL||LA349_0==WS) ) {
								alt349=1;
							}
							} finally {dbg.exitDecision(349);}

							switch (alt349) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:23: ws
									{
									dbg.location(1162,23);
									pushFollow(FOLLOW_ws_in_cp_math_expression_atom7941);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(349);}

							}
							break;

					}
					} finally {dbg.exitSubRule(350);}
					dbg.location(1162,30);
					match(input,LPAREN,FOLLOW_LPAREN_in_cp_math_expression_atom7947); if (state.failed) return;dbg.location(1162,37);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:37: ( ws )?
					int alt351=2;
					try { dbg.enterSubRule(351);
					try { dbg.enterDecision(351, decisionCanBacktrack[351]);

					int LA351_0 = input.LA(1);
					if ( (LA351_0==COMMENT||LA351_0==NL||LA351_0==WS) ) {
						alt351=1;
					}
					} finally {dbg.exitDecision(351);}

					switch (alt351) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:37: ws
							{
							dbg.location(1162,37);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom7949);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(351);}
					dbg.location(1162,41);
					pushFollow(FOLLOW_cp_math_expression_in_cp_math_expression_atom7952);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1162,60);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:60: ( ws )?
					int alt352=2;
					try { dbg.enterSubRule(352);
					try { dbg.enterDecision(352, decisionCanBacktrack[352]);

					int LA352_0 = input.LA(1);
					if ( (LA352_0==COMMENT||LA352_0==NL||LA352_0==WS) ) {
						alt352=1;
					}
					} finally {dbg.exitDecision(352);}

					switch (alt352) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1162:60: ws
							{
							dbg.location(1162,60);
							pushFollow(FOLLOW_ws_in_cp_math_expression_atom7954);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(352);}
					dbg.location(1162,64);
					match(input,RPAREN,FOLLOW_RPAREN_in_cp_math_expression_atom7957); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1163, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_math_expression_atom");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_math_expression_atom"



	// $ANTLR start "cp_mixin_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1171:1: cp_mixin_declaration : ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block ;
	public final void cp_mixin_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1171, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1172:5: ( ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? ) ( ws )? cp_mixin_block
			{
			dbg.location(1173,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1173:5: ({...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )? |{...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )? )
			int alt365=2;
			try { dbg.enterSubRule(365);
			try { dbg.enterDecision(365, decisionCanBacktrack[365]);

			int LA365_0 = input.LA(1);
			if ( (LA365_0==DOT||LA365_0==HASH||LA365_0==LESS_AND) ) {
				alt365=1;
			}
			else if ( (LA365_0==SASS_MIXIN) ) {
				alt365=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 365, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(365);}

			switch (alt365) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:9: {...}? ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) ) ( ( ws )? less_mixin_guarded )?
					{
					dbg.location(1174,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isLessSource()");
					}dbg.location(1174,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:27: ( LESS_AND | ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ) )
					int alt358=2;
					try { dbg.enterSubRule(358);
					try { dbg.enterDecision(358, decisionCanBacktrack[358]);

					int LA358_0 = input.LA(1);
					if ( (LA358_0==LESS_AND) ) {
						alt358=1;
					}
					else if ( (LA358_0==DOT||LA358_0==HASH) ) {
						alt358=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 358, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(358);}

					switch (alt358) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:28: LESS_AND
							{
							dbg.location(1174,28);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_declaration7997); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							{
							dbg.location(1174,39);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:39: ( ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:40: ( ( DOT cp_mixin_name ) | HASH ) ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1174,40);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:40: ( ( DOT cp_mixin_name ) | HASH )
							int alt354=2;
							try { dbg.enterSubRule(354);
							try { dbg.enterDecision(354, decisionCanBacktrack[354]);

							int LA354_0 = input.LA(1);
							if ( (LA354_0==DOT) ) {
								alt354=1;
							}
							else if ( (LA354_0==HASH) ) {
								alt354=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 354, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}

							} finally {dbg.exitDecision(354);}

							switch (alt354) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:41: ( DOT cp_mixin_name )
									{
									dbg.location(1174,41);
									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:41: ( DOT cp_mixin_name )
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:42: DOT cp_mixin_name
									{
									dbg.location(1174,42);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_declaration8004); if (state.failed) return;dbg.location(1174,46);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration8006);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}

									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:63: HASH
									{
									dbg.location(1174,63);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_declaration8011); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(354);}
							dbg.location(1174,69);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:69: ( ws )?
							int alt355=2;
							try { dbg.enterSubRule(355);
							try { dbg.enterDecision(355, decisionCanBacktrack[355]);

							int LA355_0 = input.LA(1);
							if ( (LA355_0==COMMENT||LA355_0==NL||LA355_0==WS) ) {
								alt355=1;
							}
							} finally {dbg.exitDecision(355);}

							switch (alt355) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:69: ws
									{
									dbg.location(1174,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration8014);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(355);}
							dbg.location(1174,73);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration8017); if (state.failed) return;dbg.location(1174,80);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:80: ( ws )?
							int alt356=2;
							try { dbg.enterSubRule(356);
							try { dbg.enterDecision(356, decisionCanBacktrack[356]);

							int LA356_0 = input.LA(1);
							if ( (LA356_0==COMMENT||LA356_0==NL||LA356_0==WS) ) {
								alt356=1;
							}
							} finally {dbg.exitDecision(356);}

							switch (alt356) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:80: ws
									{
									dbg.location(1174,80);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration8019);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(356);}
							dbg.location(1174,84);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:84: ( cp_args_list )?
							int alt357=2;
							try { dbg.enterSubRule(357);
							try { dbg.enterDecision(357, decisionCanBacktrack[357]);

							int LA357_0 = input.LA(1);
							if ( (LA357_0==AT_IDENT||(LA357_0 >= BOTTOMCENTER_SYM && LA357_0 <= BOTTOMRIGHT_SYM)||LA357_0==CHARSET_SYM||(LA357_0 >= COUNTER_STYLE_SYM && LA357_0 <= CP_DOTS)||LA357_0==FONT_FACE_SYM||LA357_0==IDENT||LA357_0==IMPORT_SYM||(LA357_0 >= LEFTBOTTOM_SYM && LA357_0 <= LEFTTOP_SYM)||LA357_0==LESS_REST||LA357_0==MEDIA_SYM||LA357_0==MOZ_DOCUMENT_SYM||LA357_0==NAMESPACE_SYM||LA357_0==PAGE_SYM||(LA357_0 >= RIGHTBOTTOM_SYM && LA357_0 <= RIGHTTOP_SYM)||(LA357_0 >= SASS_AT_ROOT && LA357_0 <= SASS_DEBUG)||(LA357_0 >= SASS_EACH && LA357_0 <= SASS_ELSE)||LA357_0==SASS_EXTEND||LA357_0==SASS_FOR||LA357_0==SASS_FUNCTION||(LA357_0 >= SASS_IF && LA357_0 <= SASS_MIXIN)||LA357_0==SASS_RETURN||(LA357_0 >= SASS_VAR && LA357_0 <= SASS_WHILE)||(LA357_0 >= TOPCENTER_SYM && LA357_0 <= TOPRIGHT_SYM)||LA357_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt357=1;
							}
							} finally {dbg.exitDecision(357);}

							switch (alt357) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:84: cp_args_list
									{
									dbg.location(1174,84);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration8022);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(357);}
							dbg.location(1174,98);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration8025); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(358);}
					dbg.location(1174,107);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:107: ( ( ws )? less_mixin_guarded )?
					int alt360=2;
					try { dbg.enterSubRule(360);
					try { dbg.enterDecision(360, decisionCanBacktrack[360]);

					try {
						isCyclicDecision = true;
						alt360 = dfa360.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(360);}

					switch (alt360) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:108: ( ws )? less_mixin_guarded
							{
							dbg.location(1174,108);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:108: ( ws )?
							int alt359=2;
							try { dbg.enterSubRule(359);
							try { dbg.enterDecision(359, decisionCanBacktrack[359]);

							int LA359_0 = input.LA(1);
							if ( (LA359_0==COMMENT||LA359_0==NL||LA359_0==WS) ) {
								alt359=1;
							}
							} finally {dbg.exitDecision(359);}

							switch (alt359) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1174:108: ws
									{
									dbg.location(1174,108);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration8030);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(359);}
							dbg.location(1174,112);
							pushFollow(FOLLOW_less_mixin_guarded_in_cp_mixin_declaration8033);
							less_mixin_guarded();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(360);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:9: {...}? SASS_MIXIN ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					{
					dbg.location(1176,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_declaration", "isScssSource()");
					}dbg.location(1176,27);
					match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_cp_mixin_declaration8057); if (state.failed) return;dbg.location(1176,38);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration8059);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1176,41);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_declaration8061);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1176,55);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?
					int alt364=2;
					try { dbg.enterSubRule(364);
					try { dbg.enterDecision(364, decisionCanBacktrack[364]);

					try {
						isCyclicDecision = true;
						alt364 = dfa364.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(364);}

					switch (alt364) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:56: ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN
							{
							dbg.location(1176,56);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:56: ( ws )?
							int alt361=2;
							try { dbg.enterSubRule(361);
							try { dbg.enterDecision(361, decisionCanBacktrack[361]);

							int LA361_0 = input.LA(1);
							if ( (LA361_0==COMMENT||LA361_0==NL||LA361_0==WS) ) {
								alt361=1;
							}
							} finally {dbg.exitDecision(361);}

							switch (alt361) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:56: ws
									{
									dbg.location(1176,56);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration8064);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(361);}
							dbg.location(1176,60);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_declaration8067); if (state.failed) return;dbg.location(1176,67);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:67: ( ws )?
							int alt362=2;
							try { dbg.enterSubRule(362);
							try { dbg.enterDecision(362, decisionCanBacktrack[362]);

							int LA362_0 = input.LA(1);
							if ( (LA362_0==COMMENT||LA362_0==NL||LA362_0==WS) ) {
								alt362=1;
							}
							} finally {dbg.exitDecision(362);}

							switch (alt362) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:67: ws
									{
									dbg.location(1176,67);
									pushFollow(FOLLOW_ws_in_cp_mixin_declaration8069);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(362);}
							dbg.location(1176,71);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:71: ( cp_args_list )?
							int alt363=2;
							try { dbg.enterSubRule(363);
							try { dbg.enterDecision(363, decisionCanBacktrack[363]);

							int LA363_0 = input.LA(1);
							if ( (LA363_0==AT_IDENT||(LA363_0 >= BOTTOMCENTER_SYM && LA363_0 <= BOTTOMRIGHT_SYM)||LA363_0==CHARSET_SYM||(LA363_0 >= COUNTER_STYLE_SYM && LA363_0 <= CP_DOTS)||LA363_0==FONT_FACE_SYM||LA363_0==IDENT||LA363_0==IMPORT_SYM||(LA363_0 >= LEFTBOTTOM_SYM && LA363_0 <= LEFTTOP_SYM)||LA363_0==LESS_REST||LA363_0==MEDIA_SYM||LA363_0==MOZ_DOCUMENT_SYM||LA363_0==NAMESPACE_SYM||LA363_0==PAGE_SYM||(LA363_0 >= RIGHTBOTTOM_SYM && LA363_0 <= RIGHTTOP_SYM)||(LA363_0 >= SASS_AT_ROOT && LA363_0 <= SASS_DEBUG)||(LA363_0 >= SASS_EACH && LA363_0 <= SASS_ELSE)||LA363_0==SASS_EXTEND||LA363_0==SASS_FOR||LA363_0==SASS_FUNCTION||(LA363_0 >= SASS_IF && LA363_0 <= SASS_MIXIN)||LA363_0==SASS_RETURN||(LA363_0 >= SASS_VAR && LA363_0 <= SASS_WHILE)||(LA363_0 >= TOPCENTER_SYM && LA363_0 <= TOPRIGHT_SYM)||LA363_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt363=1;
							}
							} finally {dbg.exitDecision(363);}

							switch (alt363) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1176:71: cp_args_list
									{
									dbg.location(1176,71);
									pushFollow(FOLLOW_cp_args_list_in_cp_mixin_declaration8072);
									cp_args_list();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(363);}
							dbg.location(1176,85);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_declaration8075); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(364);}

					}
					break;

			}
			} finally {dbg.exitSubRule(365);}
			dbg.location(1178,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1178:5: ( ws )?
			int alt366=2;
			try { dbg.enterSubRule(366);
			try { dbg.enterDecision(366, decisionCanBacktrack[366]);

			int LA366_0 = input.LA(1);
			if ( (LA366_0==COMMENT||LA366_0==NL||LA366_0==WS) ) {
				alt366=1;
			}
			} finally {dbg.exitDecision(366);}

			switch (alt366) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1178:5: ws
					{
					dbg.location(1178,5);
					pushFollow(FOLLOW_ws_in_cp_mixin_declaration8089);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(366);}
			dbg.location(1178,9);
			pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_declaration8092);
			cp_mixin_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1179, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_declaration"



	// $ANTLR start "cp_mixin_call"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1183:1: cp_mixin_call : ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) ;
	public final void cp_mixin_call() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1183, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1184:5: ( ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? ) )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			{
			dbg.location(1185,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1185:5: ({...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )? |{...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )? )
			int alt382=2;
			try { dbg.enterSubRule(382);
			try { dbg.enterDecision(382, decisionCanBacktrack[382]);

			int LA382_0 = input.LA(1);
			if ( (LA382_0==AT_IDENT||LA382_0==DOT||LA382_0==HASH||LA382_0==LESS_AND) ) {
				alt382=1;
			}
			else if ( (LA382_0==SASS_INCLUDE) ) {
				alt382=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 382, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(382);}

			switch (alt382) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:9: {...}? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )* ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					{
					dbg.location(1186,9);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isLessSource()");
					}dbg.location(1186,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:27: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
					int alt367=4;
					try { dbg.enterSubRule(367);
					try { dbg.enterDecision(367, decisionCanBacktrack[367]);

					switch ( input.LA(1) ) {
					case DOT:
						{
						alt367=1;
						}
						break;
					case HASH:
						{
						alt367=2;
						}
						break;
					case AT_IDENT:
						{
						alt367=3;
						}
						break;
					case LESS_AND:
						{
						alt367=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 367, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(367);}

					switch (alt367) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:28: DOT cp_mixin_name
							{
							dbg.location(1186,28);
							match(input,DOT,FOLLOW_DOT_in_cp_mixin_call8128); if (state.failed) return;dbg.location(1186,32);
							pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call8130);
							cp_mixin_name();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:48: HASH
							{
							dbg.location(1186,48);
							match(input,HASH,FOLLOW_HASH_in_cp_mixin_call8134); if (state.failed) return;
							}
							break;
						case 3 :
							dbg.enterAlt(3);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:55: AT_IDENT
							{
							dbg.location(1186,55);
							match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call8138); if (state.failed) return;
							}
							break;
						case 4 :
							dbg.enterAlt(4);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:66: LESS_AND
							{
							dbg.location(1186,66);
							match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call8142); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(367);}
					dbg.location(1186,76);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:76: ( ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND ) )*
					try { dbg.enterSubRule(371);

					loop371:
					while (true) {
						int alt371=2;
						try { dbg.enterDecision(371, decisionCanBacktrack[371]);

						int LA371_0 = input.LA(1);
						if ( (LA371_0==COMMENT||LA371_0==NL||LA371_0==WS) ) {
							int LA371_2 = input.LA(2);
							if ( (synpred48_Css3()) ) {
								alt371=1;
							}

						}
						else if ( (LA371_0==GREATER||LA371_0==PLUS||LA371_0==TILDE) ) {
							int LA371_14 = input.LA(2);
							if ( (synpred48_Css3()) ) {
								alt371=1;
							}

						}

						} finally {dbg.exitDecision(371);}

						switch (alt371) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:77: ( ( ws )? combinator ( ws )? )=> ( ws )? combinator ( ws )? ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							{
							dbg.location(1186,101);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:101: ( ws )?
							int alt368=2;
							try { dbg.enterSubRule(368);
							try { dbg.enterDecision(368, decisionCanBacktrack[368]);

							int LA368_0 = input.LA(1);
							if ( (LA368_0==COMMENT||LA368_0==NL||LA368_0==WS) ) {
								alt368=1;
							}
							} finally {dbg.exitDecision(368);}

							switch (alt368) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:101: ws
									{
									dbg.location(1186,101);
									pushFollow(FOLLOW_ws_in_cp_mixin_call8158);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(368);}
							dbg.location(1186,105);
							pushFollow(FOLLOW_combinator_in_cp_mixin_call8161);
							combinator();
							state._fsp--;
							if (state.failed) return;dbg.location(1186,116);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:116: ( ws )?
							int alt369=2;
							try { dbg.enterSubRule(369);
							try { dbg.enterDecision(369, decisionCanBacktrack[369]);

							int LA369_0 = input.LA(1);
							if ( (LA369_0==COMMENT||LA369_0==NL||LA369_0==WS) ) {
								alt369=1;
							}
							} finally {dbg.exitDecision(369);}

							switch (alt369) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:116: ws
									{
									dbg.location(1186,116);
									pushFollow(FOLLOW_ws_in_cp_mixin_call8163);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(369);}
							dbg.location(1186,120);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:120: ( DOT cp_mixin_name | HASH | AT_IDENT | LESS_AND )
							int alt370=4;
							try { dbg.enterSubRule(370);
							try { dbg.enterDecision(370, decisionCanBacktrack[370]);

							switch ( input.LA(1) ) {
							case DOT:
								{
								alt370=1;
								}
								break;
							case HASH:
								{
								alt370=2;
								}
								break;
							case AT_IDENT:
								{
								alt370=3;
								}
								break;
							case LESS_AND:
								{
								alt370=4;
								}
								break;
							default:
								if (state.backtracking>0) {state.failed=true; return;}
								NoViableAltException nvae =
									new NoViableAltException("", 370, 0, input);
								dbg.recognitionException(nvae);
								throw nvae;
							}
							} finally {dbg.exitDecision(370);}

							switch (alt370) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:121: DOT cp_mixin_name
									{
									dbg.location(1186,121);
									match(input,DOT,FOLLOW_DOT_in_cp_mixin_call8167); if (state.failed) return;dbg.location(1186,125);
									pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call8169);
									cp_mixin_name();
									state._fsp--;
									if (state.failed) return;
									}
									break;
								case 2 :
									dbg.enterAlt(2);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:141: HASH
									{
									dbg.location(1186,141);
									match(input,HASH,FOLLOW_HASH_in_cp_mixin_call8173); if (state.failed) return;
									}
									break;
								case 3 :
									dbg.enterAlt(3);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:148: AT_IDENT
									{
									dbg.location(1186,148);
									match(input,AT_IDENT,FOLLOW_AT_IDENT_in_cp_mixin_call8177); if (state.failed) return;
									}
									break;
								case 4 :
									dbg.enterAlt(4);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:159: LESS_AND
									{
									dbg.location(1186,159);
									match(input,LESS_AND,FOLLOW_LESS_AND_in_cp_mixin_call8181); if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(370);}

							}
							break;

						default :
							break loop371;
						}
					}
					} finally {dbg.exitSubRule(371);}
					dbg.location(1186,171);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:171: ( ( pseudo )=> pseudo | ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN ) )?
					int alt375=3;
					try { dbg.enterSubRule(375);
					try { dbg.enterDecision(375, decisionCanBacktrack[375]);

					int LA375_0 = input.LA(1);
					if ( (LA375_0==COLON||LA375_0==DCOLON) ) {
						int LA375_1 = input.LA(2);
						if ( (synpred49_Css3()) ) {
							alt375=1;
						}
					}
					else if ( (LA375_0==COMMENT||LA375_0==NL||LA375_0==WS) ) {
						int LA375_2 = input.LA(2);
						if ( (synpred50_Css3()) ) {
							alt375=2;
						}
					}
					else if ( (LA375_0==LPAREN) && (synpred50_Css3())) {
						alt375=2;
					}
					} finally {dbg.exitDecision(375);}

					switch (alt375) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:172: ( pseudo )=> pseudo
							{
							dbg.location(1186,182);
							pushFollow(FOLLOW_pseudo_in_cp_mixin_call8191);
							pseudo();
							state._fsp--;
							if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:191: ( ( ws )? LPAREN )=> ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							{
							dbg.location(1186,205);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:205: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:206: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1186,206);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:206: ( ws )?
							int alt372=2;
							try { dbg.enterSubRule(372);
							try { dbg.enterDecision(372, decisionCanBacktrack[372]);

							int LA372_0 = input.LA(1);
							if ( (LA372_0==COMMENT||LA372_0==NL||LA372_0==WS) ) {
								alt372=1;
							}
							} finally {dbg.exitDecision(372);}

							switch (alt372) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:206: ws
									{
									dbg.location(1186,206);
									pushFollow(FOLLOW_ws_in_cp_mixin_call8203);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(372);}
							dbg.location(1186,210);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call8206); if (state.failed) return;dbg.location(1186,217);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:217: ( ws )?
							int alt373=2;
							try { dbg.enterSubRule(373);
							try { dbg.enterDecision(373, decisionCanBacktrack[373]);

							int LA373_0 = input.LA(1);
							if ( (LA373_0==COMMENT||LA373_0==NL||LA373_0==WS) ) {
								alt373=1;
							}
							} finally {dbg.exitDecision(373);}

							switch (alt373) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:217: ws
									{
									dbg.location(1186,217);
									pushFollow(FOLLOW_ws_in_cp_mixin_call8208);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(373);}
							dbg.location(1186,221);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:221: ( cp_mixin_call_args )?
							int alt374=2;
							try { dbg.enterSubRule(374);
							try { dbg.enterDecision(374, decisionCanBacktrack[374]);

							int LA374_0 = input.LA(1);
							if ( ((LA374_0 >= ANGLE && LA374_0 <= AT_SIGN)||(LA374_0 >= BOTTOMCENTER_SYM && LA374_0 <= BOTTOMRIGHT_SYM)||LA374_0==CHARSET_SYM||LA374_0==COUNTER_STYLE_SYM||LA374_0==DIMENSION||LA374_0==EMS||LA374_0==EXS||(LA374_0 >= FONT_FACE_SYM && LA374_0 <= FREQ)||LA374_0==GEN||(LA374_0 >= HASH && LA374_0 <= HASH_SYMBOL)||(LA374_0 >= IDENT && LA374_0 <= IMPORT_SYM)||(LA374_0 >= LBRACE && LA374_0 <= LENGTH)||(LA374_0 >= LESS_AND && LA374_0 <= LESS_JS_STRING)||LA374_0==LPAREN||(LA374_0 >= MEDIA_SYM && LA374_0 <= MOZ_DOCUMENT_SYM)||LA374_0==NAMESPACE_SYM||(LA374_0 >= NOT && LA374_0 <= NUMBER)||(LA374_0 >= PAGE_SYM && LA374_0 <= PERCENTAGE_SYMBOL)||LA374_0==PLUS||(LA374_0 >= REM && LA374_0 <= RIGHTTOP_SYM)||(LA374_0 >= SASS_AT_ROOT && LA374_0 <= SASS_DEBUG)||(LA374_0 >= SASS_EACH && LA374_0 <= SASS_ELSE)||LA374_0==SASS_EXTEND||LA374_0==SASS_FOR||LA374_0==SASS_FUNCTION||(LA374_0 >= SASS_IF && LA374_0 <= SASS_MIXIN)||LA374_0==SASS_RETURN||(LA374_0 >= SASS_VAR && LA374_0 <= SASS_WHILE)||LA374_0==STRING||(LA374_0 >= TILDE && LA374_0 <= TOPRIGHT_SYM)||(LA374_0 >= URANGE && LA374_0 <= URI)||LA374_0==VARIABLE||LA374_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt374=1;
							}
							} finally {dbg.exitDecision(374);}

							switch (alt374) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:221: cp_mixin_call_args
									{
									dbg.location(1186,221);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call8211);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(374);}
							dbg.location(1186,241);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call8214); if (state.failed) return;
							}

							}
							break;

					}
					} finally {dbg.exitSubRule(375);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:9: {...}? SASS_INCLUDE ws cp_mixin_name ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )? ( ( ws )? cp_mixin_block )?
					{
					dbg.location(1188,9);
					if ( !(evalPredicate(isScssSource(),"isScssSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_mixin_call", "isScssSource()");
					}dbg.location(1188,27);
					match(input,SASS_INCLUDE,FOLLOW_SASS_INCLUDE_in_cp_mixin_call8239); if (state.failed) return;dbg.location(1188,40);
					pushFollow(FOLLOW_ws_in_cp_mixin_call8241);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1188,43);
					pushFollow(FOLLOW_cp_mixin_name_in_cp_mixin_call8243);
					cp_mixin_name();
					state._fsp--;
					if (state.failed) return;dbg.location(1188,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?
					int alt379=2;
					try { dbg.enterSubRule(379);
					try { dbg.enterDecision(379, decisionCanBacktrack[379]);

					try {
						isCyclicDecision = true;
						alt379 = dfa379.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(379);}

					switch (alt379) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:58: ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN
							{
							dbg.location(1188,58);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:58: ( ws )?
							int alt376=2;
							try { dbg.enterSubRule(376);
							try { dbg.enterDecision(376, decisionCanBacktrack[376]);

							int LA376_0 = input.LA(1);
							if ( (LA376_0==COMMENT||LA376_0==NL||LA376_0==WS) ) {
								alt376=1;
							}
							} finally {dbg.exitDecision(376);}

							switch (alt376) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:58: ws
									{
									dbg.location(1188,58);
									pushFollow(FOLLOW_ws_in_cp_mixin_call8246);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(376);}
							dbg.location(1188,62);
							match(input,LPAREN,FOLLOW_LPAREN_in_cp_mixin_call8249); if (state.failed) return;dbg.location(1188,69);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:69: ( ws )?
							int alt377=2;
							try { dbg.enterSubRule(377);
							try { dbg.enterDecision(377, decisionCanBacktrack[377]);

							int LA377_0 = input.LA(1);
							if ( (LA377_0==COMMENT||LA377_0==NL||LA377_0==WS) ) {
								alt377=1;
							}
							} finally {dbg.exitDecision(377);}

							switch (alt377) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:69: ws
									{
									dbg.location(1188,69);
									pushFollow(FOLLOW_ws_in_cp_mixin_call8251);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(377);}
							dbg.location(1188,73);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:73: ( cp_mixin_call_args )?
							int alt378=2;
							try { dbg.enterSubRule(378);
							try { dbg.enterDecision(378, decisionCanBacktrack[378]);

							int LA378_0 = input.LA(1);
							if ( ((LA378_0 >= ANGLE && LA378_0 <= AT_SIGN)||(LA378_0 >= BOTTOMCENTER_SYM && LA378_0 <= BOTTOMRIGHT_SYM)||LA378_0==CHARSET_SYM||LA378_0==COUNTER_STYLE_SYM||LA378_0==DIMENSION||LA378_0==EMS||LA378_0==EXS||(LA378_0 >= FONT_FACE_SYM && LA378_0 <= FREQ)||LA378_0==GEN||(LA378_0 >= HASH && LA378_0 <= HASH_SYMBOL)||(LA378_0 >= IDENT && LA378_0 <= IMPORT_SYM)||(LA378_0 >= LBRACE && LA378_0 <= LENGTH)||(LA378_0 >= LESS_AND && LA378_0 <= LESS_JS_STRING)||LA378_0==LPAREN||(LA378_0 >= MEDIA_SYM && LA378_0 <= MOZ_DOCUMENT_SYM)||LA378_0==NAMESPACE_SYM||(LA378_0 >= NOT && LA378_0 <= NUMBER)||(LA378_0 >= PAGE_SYM && LA378_0 <= PERCENTAGE_SYMBOL)||LA378_0==PLUS||(LA378_0 >= REM && LA378_0 <= RIGHTTOP_SYM)||(LA378_0 >= SASS_AT_ROOT && LA378_0 <= SASS_DEBUG)||(LA378_0 >= SASS_EACH && LA378_0 <= SASS_ELSE)||LA378_0==SASS_EXTEND||LA378_0==SASS_FOR||LA378_0==SASS_FUNCTION||(LA378_0 >= SASS_IF && LA378_0 <= SASS_MIXIN)||LA378_0==SASS_RETURN||(LA378_0 >= SASS_VAR && LA378_0 <= SASS_WHILE)||LA378_0==STRING||(LA378_0 >= TILDE && LA378_0 <= TOPRIGHT_SYM)||(LA378_0 >= URANGE && LA378_0 <= URI)||LA378_0==VARIABLE||LA378_0==WEBKIT_KEYFRAMES_SYM) ) {
								alt378=1;
							}
							} finally {dbg.exitDecision(378);}

							switch (alt378) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:73: cp_mixin_call_args
									{
									dbg.location(1188,73);
									pushFollow(FOLLOW_cp_mixin_call_args_in_cp_mixin_call8254);
									cp_mixin_call_args();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(378);}
							dbg.location(1188,93);
							match(input,RPAREN,FOLLOW_RPAREN_in_cp_mixin_call8257); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(379);}
					dbg.location(1188,102);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:102: ( ( ws )? cp_mixin_block )?
					int alt381=2;
					try { dbg.enterSubRule(381);
					try { dbg.enterDecision(381, decisionCanBacktrack[381]);

					try {
						isCyclicDecision = true;
						alt381 = dfa381.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(381);}

					switch (alt381) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:103: ( ws )? cp_mixin_block
							{
							dbg.location(1188,103);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:103: ( ws )?
							int alt380=2;
							try { dbg.enterSubRule(380);
							try { dbg.enterDecision(380, decisionCanBacktrack[380]);

							int LA380_0 = input.LA(1);
							if ( (LA380_0==COMMENT||LA380_0==NL||LA380_0==WS) ) {
								alt380=1;
							}
							} finally {dbg.exitDecision(380);}

							switch (alt380) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1188:103: ws
									{
									dbg.location(1188,103);
									pushFollow(FOLLOW_ws_in_cp_mixin_call8262);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(380);}
							dbg.location(1188,107);
							pushFollow(FOLLOW_cp_mixin_block_in_cp_mixin_call8265);
							cp_mixin_block();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(381);}

					}
					break;

			}
			} finally {dbg.exitSubRule(382);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1190, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call"



	// $ANTLR start "cp_mixin_block"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1192:1: cp_mixin_block : LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE ;
	public final void cp_mixin_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1192, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1193:5: ( LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1194:5: LBRACE ( ws )? syncToFollow ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )? RBRACE
			{
			dbg.location(1194,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_cp_mixin_block8294); if (state.failed) return;dbg.location(1194,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1194:12: ( ws )?
			int alt383=2;
			try { dbg.enterSubRule(383);
			try { dbg.enterDecision(383, decisionCanBacktrack[383]);

			int LA383_0 = input.LA(1);
			if ( (LA383_0==COMMENT||LA383_0==NL||LA383_0==WS) ) {
				alt383=1;
			}
			} finally {dbg.exitDecision(383);}

			switch (alt383) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1194:12: ws
					{
					dbg.location(1194,12);
					pushFollow(FOLLOW_ws_in_cp_mixin_block8296);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(383);}
			dbg.location(1194,16);
			pushFollow(FOLLOW_syncToFollow_in_cp_mixin_block8299);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1195,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:9: ( declarations | ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )* )?
			int alt386=3;
			try { dbg.enterSubRule(386);
			try { dbg.enterDecision(386, decisionCanBacktrack[386]);

			int LA386_0 = input.LA(1);
			if ( ((LA386_0 >= AT_IDENT && LA386_0 <= AT_SIGN)||(LA386_0 >= BOTTOMCENTER_SYM && LA386_0 <= BOTTOMRIGHT_SYM)||(LA386_0 >= CHARSET_SYM && LA386_0 <= COLON)||LA386_0==COUNTER_STYLE_SYM||(LA386_0 >= DCOLON && LA386_0 <= DOT)||LA386_0==FONT_FACE_SYM||(LA386_0 >= GEN && LA386_0 <= GREATER)||(LA386_0 >= HASH && LA386_0 <= HASH_SYMBOL)||LA386_0==IMPORT_SYM||(LA386_0 >= LBRACKET && LA386_0 <= LEFTTOP_SYM)||LA386_0==LESS_AND||(LA386_0 >= MEDIA_SYM && LA386_0 <= MOZ_DOCUMENT_SYM)||LA386_0==NAMESPACE_SYM||LA386_0==PAGE_SYM||(LA386_0 >= PIPE && LA386_0 <= PLUS)||(LA386_0 >= RIGHTBOTTOM_SYM && LA386_0 <= RIGHTTOP_SYM)||LA386_0==SASS_AT_ROOT||LA386_0==SASS_DEBUG||(LA386_0 >= SASS_EACH && LA386_0 <= SASS_ELSE)||(LA386_0 >= SASS_ERROR && LA386_0 <= SASS_FOR)||LA386_0==SASS_FUNCTION||(LA386_0 >= SASS_IF && LA386_0 <= SASS_MIXIN)||LA386_0==SASS_RETURN||(LA386_0 >= SASS_VAR && LA386_0 <= SEMI)||LA386_0==STAR||LA386_0==SUPPORTS_SYM||LA386_0==TILDE||(LA386_0 >= TOPCENTER_SYM && LA386_0 <= TOPRIGHT_SYM)||LA386_0==VARIABLE||LA386_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt386=1;
			}
			else if ( (LA386_0==IDENT) ) {
				int LA386_4 = input.LA(2);
				if ( (true) ) {
					alt386=1;
				}
				else if ( (((evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")||evalPredicate(tokenNameEquals("to"),"tokenNameEquals(\"to\")"))&&synpred51_Css3())) ) {
					alt386=2;
				}
			}
			else if ( (LA386_0==SASS_CONTENT) ) {
				int LA386_36 = input.LA(2);
				if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))||evalPredicate(isLessSource(),"isLessSource()")||(evalPredicate(isLessSource(),"isLessSource()")&&evalPredicate(isScssSource(),"isScssSource()"))||evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt386=1;
				}
				else if ( ((synpred51_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {
					alt386=2;
				}
			}
			else if ( (LA386_0==PERCENTAGE) && (synpred51_Css3())) {
				alt386=2;
			}
			else if ( (LA386_0==RBRACE) ) {
				int LA386_42 = input.LA(2);
				if ( (synpred51_Css3()) ) {
					alt386=2;
				}
			}
			} finally {dbg.exitDecision(386);}

			switch (alt386) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:10: declarations
					{
					dbg.location(1195,10);
					pushFollow(FOLLOW_declarations_in_cp_mixin_block8310);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:25: ( webkitKeyframeSelectors )=> ( webkitKeyframesBlock ( ws )? )*
					{
					dbg.location(1196,3);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:3: ( webkitKeyframesBlock ( ws )? )*
					try { dbg.enterSubRule(385);

					loop385:
					while (true) {
						int alt385=2;
						try { dbg.enterDecision(385, decisionCanBacktrack[385]);

						int LA385_0 = input.LA(1);
						if ( (LA385_0==IDENT||LA385_0==PERCENTAGE||LA385_0==SASS_CONTENT) ) {
							alt385=1;
						}

						} finally {dbg.exitDecision(385);}

						switch (alt385) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:5: webkitKeyframesBlock ( ws )?
							{
							dbg.location(1196,5);
							pushFollow(FOLLOW_webkitKeyframesBlock_in_cp_mixin_block8325);
							webkitKeyframesBlock();
							state._fsp--;
							if (state.failed) return;dbg.location(1196,26);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:26: ( ws )?
							int alt384=2;
							try { dbg.enterSubRule(384);
							try { dbg.enterDecision(384, decisionCanBacktrack[384]);

							int LA384_0 = input.LA(1);
							if ( (LA384_0==COMMENT||LA384_0==NL||LA384_0==WS) ) {
								alt384=1;
							}
							} finally {dbg.exitDecision(384);}

							switch (alt384) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1196:26: ws
									{
									dbg.location(1196,26);
									pushFollow(FOLLOW_ws_in_cp_mixin_block8327);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(384);}

							}
							break;

						default :
							break loop385;
						}
					}
					} finally {dbg.exitSubRule(385);}

					}
					break;

			}
			} finally {dbg.exitSubRule(386);}
			dbg.location(1197,5);
			match(input,RBRACE,FOLLOW_RBRACE_in_cp_mixin_block8339); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1198, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_block"



	// $ANTLR start "cp_mixin_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1200:1: cp_mixin_name : IDENT ;
	public final void cp_mixin_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1200, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1201:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1202:5: IDENT
			{
			dbg.location(1202,5);
			match(input,IDENT,FOLLOW_IDENT_in_cp_mixin_name8360); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1203, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_name"



	// $ANTLR start "cp_mixin_call_args"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1205:1: cp_mixin_call_args : cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? ;
	public final void cp_mixin_call_args() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_args");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1205, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1206:5: ( cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:5: cp_mixin_call_arg ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )* ( CP_DOTS ( ws )? )? ( SEMI )?
			{
			dbg.location(1209,5);
			pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args8391);
			cp_mixin_call_arg();
			state._fsp--;
			if (state.failed) return;dbg.location(1209,23);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:23: ( ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg )*
			try { dbg.enterSubRule(388);

			loop388:
			while (true) {
				int alt388=2;
				try { dbg.enterDecision(388, decisionCanBacktrack[388]);

				int LA388_0 = input.LA(1);
				if ( (LA388_0==SEMI) ) {
					int LA388_2 = input.LA(2);
					if ( ((LA388_2 >= ANGLE && LA388_2 <= AT_SIGN)||(LA388_2 >= BOTTOMCENTER_SYM && LA388_2 <= BOTTOMRIGHT_SYM)||LA388_2==CHARSET_SYM||LA388_2==COMMENT||LA388_2==COUNTER_STYLE_SYM||LA388_2==DIMENSION||LA388_2==EMS||LA388_2==EXS||(LA388_2 >= FONT_FACE_SYM && LA388_2 <= FREQ)||LA388_2==GEN||(LA388_2 >= HASH && LA388_2 <= HASH_SYMBOL)||(LA388_2 >= IDENT && LA388_2 <= IMPORT_SYM)||(LA388_2 >= LBRACE && LA388_2 <= LENGTH)||(LA388_2 >= LESS_AND && LA388_2 <= LESS_JS_STRING)||LA388_2==LPAREN||(LA388_2 >= MEDIA_SYM && LA388_2 <= MOZ_DOCUMENT_SYM)||(LA388_2 >= NAMESPACE_SYM && LA388_2 <= NL)||(LA388_2 >= NOT && LA388_2 <= NUMBER)||(LA388_2 >= PAGE_SYM && LA388_2 <= PERCENTAGE_SYMBOL)||LA388_2==PLUS||(LA388_2 >= REM && LA388_2 <= RIGHTTOP_SYM)||(LA388_2 >= SASS_AT_ROOT && LA388_2 <= SASS_DEBUG)||(LA388_2 >= SASS_EACH && LA388_2 <= SASS_ELSE)||LA388_2==SASS_EXTEND||LA388_2==SASS_FOR||LA388_2==SASS_FUNCTION||(LA388_2 >= SASS_IF && LA388_2 <= SASS_MIXIN)||LA388_2==SASS_RETURN||(LA388_2 >= SASS_VAR && LA388_2 <= SASS_WHILE)||LA388_2==STRING||(LA388_2 >= TILDE && LA388_2 <= TOPRIGHT_SYM)||(LA388_2 >= URANGE && LA388_2 <= URI)||LA388_2==VARIABLE||(LA388_2 >= WEBKIT_KEYFRAMES_SYM && LA388_2 <= WS)) ) {
						alt388=1;
					}

				}
				else if ( (LA388_0==COMMA) ) {
					alt388=1;
				}

				} finally {dbg.exitDecision(388);}

				switch (alt388) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:25: ( COMMA | SEMI ) ( ws )? cp_mixin_call_arg
					{
					dbg.location(1209,25);
					if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1209,40);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:40: ( ws )?
					int alt387=2;
					try { dbg.enterSubRule(387);
					try { dbg.enterDecision(387, decisionCanBacktrack[387]);

					int LA387_0 = input.LA(1);
					if ( (LA387_0==COMMENT||LA387_0==NL||LA387_0==WS) ) {
						alt387=1;
					}
					} finally {dbg.exitDecision(387);}

					switch (alt387) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:40: ws
							{
							dbg.location(1209,40);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args8403);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(387);}
					dbg.location(1209,44);
					pushFollow(FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args8406);
					cp_mixin_call_arg();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop388;
				}
			}
			} finally {dbg.exitSubRule(388);}
			dbg.location(1209,65);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:65: ( CP_DOTS ( ws )? )?
			int alt390=2;
			try { dbg.enterSubRule(390);
			try { dbg.enterDecision(390, decisionCanBacktrack[390]);

			int LA390_0 = input.LA(1);
			if ( (LA390_0==CP_DOTS) ) {
				alt390=1;
			}
			} finally {dbg.exitDecision(390);}

			switch (alt390) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:66: CP_DOTS ( ws )?
					{
					dbg.location(1209,66);
					match(input,CP_DOTS,FOLLOW_CP_DOTS_in_cp_mixin_call_args8412); if (state.failed) return;dbg.location(1209,74);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:74: ( ws )?
					int alt389=2;
					try { dbg.enterSubRule(389);
					try { dbg.enterDecision(389, decisionCanBacktrack[389]);

					int LA389_0 = input.LA(1);
					if ( (LA389_0==COMMENT||LA389_0==NL||LA389_0==WS) ) {
						alt389=1;
					}
					} finally {dbg.exitDecision(389);}

					switch (alt389) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:74: ws
							{
							dbg.location(1209,74);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_args8414);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(389);}

					}
					break;

			}
			} finally {dbg.exitSubRule(390);}
			dbg.location(1209,80);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:80: ( SEMI )?
			int alt391=2;
			try { dbg.enterSubRule(391);
			try { dbg.enterDecision(391, decisionCanBacktrack[391]);

			int LA391_0 = input.LA(1);
			if ( (LA391_0==SEMI) ) {
				alt391=1;
			}
			} finally {dbg.exitDecision(391);}

			switch (alt391) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1209:80: SEMI
					{
					dbg.location(1209,80);
					match(input,SEMI,FOLLOW_SEMI_in_cp_mixin_call_args8419); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(391);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1210, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_args");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_args"



	// $ANTLR start "cp_mixin_call_arg"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1212:1: cp_mixin_call_arg : ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? ;
	public final void cp_mixin_call_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_mixin_call_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1212, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1213:5: ( ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression ) ( ws )?
			{
			dbg.location(1214,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1214:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )
			int alt394=2;
			try { dbg.enterSubRule(394);
			try { dbg.enterDecision(394, decisionCanBacktrack[394]);

			try {
				isCyclicDecision = true;
				alt394 = dfa394.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(394);}

			switch (alt394) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:9: cp_variable ( ws )? COLON ( ws )? cp_expression
					{
					dbg.location(1215,9);
					pushFollow(FOLLOW_cp_variable_in_cp_mixin_call_arg8451);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1215,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:21: ( ws )?
					int alt392=2;
					try { dbg.enterSubRule(392);
					try { dbg.enterDecision(392, decisionCanBacktrack[392]);

					int LA392_0 = input.LA(1);
					if ( (LA392_0==COMMENT||LA392_0==NL||LA392_0==WS) ) {
						alt392=1;
					}
					} finally {dbg.exitDecision(392);}

					switch (alt392) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:21: ws
							{
							dbg.location(1215,21);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg8453);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(392);}
					dbg.location(1215,25);
					match(input,COLON,FOLLOW_COLON_in_cp_mixin_call_arg8456); if (state.failed) return;dbg.location(1215,31);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:31: ( ws )?
					int alt393=2;
					try { dbg.enterSubRule(393);
					try { dbg.enterDecision(393, decisionCanBacktrack[393]);

					int LA393_0 = input.LA(1);
					if ( (LA393_0==COMMENT||LA393_0==NL||LA393_0==WS) ) {
						alt393=1;
					}
					} finally {dbg.exitDecision(393);}

					switch (alt393) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1215:31: ws
							{
							dbg.location(1215,31);
							pushFollow(FOLLOW_ws_in_cp_mixin_call_arg8458);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(393);}
					dbg.location(1215,35);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg8461);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1216:11: cp_expression
					{
					dbg.location(1216,11);
					pushFollow(FOLLOW_cp_expression_in_cp_mixin_call_arg8473);
					cp_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(394);}
			dbg.location(1217,7);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1217:7: ( ws )?
			int alt395=2;
			try { dbg.enterSubRule(395);
			try { dbg.enterDecision(395, decisionCanBacktrack[395]);

			int LA395_0 = input.LA(1);
			if ( (LA395_0==COMMENT||LA395_0==NL||LA395_0==WS) ) {
				alt395=1;
			}
			} finally {dbg.exitDecision(395);}

			switch (alt395) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1217:7: ws
					{
					dbg.location(1217,7);
					pushFollow(FOLLOW_ws_in_cp_mixin_call_arg8481);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(395);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1218, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_mixin_call_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_mixin_call_arg"



	// $ANTLR start "cp_args_list"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1221:1: cp_args_list : ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? );
	public final void cp_args_list() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_args_list");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1221, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1222:5: ( ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? ) | ( CP_DOTS | LESS_REST ) ( ws )? )
			int alt403=2;
			try { dbg.enterDecision(403, decisionCanBacktrack[403]);

			int LA403_0 = input.LA(1);
			if ( (LA403_0==AT_IDENT||(LA403_0 >= BOTTOMCENTER_SYM && LA403_0 <= BOTTOMRIGHT_SYM)||LA403_0==CHARSET_SYM||LA403_0==COUNTER_STYLE_SYM||LA403_0==FONT_FACE_SYM||LA403_0==IDENT||LA403_0==IMPORT_SYM||(LA403_0 >= LEFTBOTTOM_SYM && LA403_0 <= LEFTTOP_SYM)||LA403_0==MEDIA_SYM||LA403_0==MOZ_DOCUMENT_SYM||LA403_0==NAMESPACE_SYM||LA403_0==PAGE_SYM||(LA403_0 >= RIGHTBOTTOM_SYM && LA403_0 <= RIGHTTOP_SYM)||(LA403_0 >= SASS_AT_ROOT && LA403_0 <= SASS_DEBUG)||(LA403_0 >= SASS_EACH && LA403_0 <= SASS_ELSE)||LA403_0==SASS_EXTEND||LA403_0==SASS_FOR||LA403_0==SASS_FUNCTION||(LA403_0 >= SASS_IF && LA403_0 <= SASS_MIXIN)||LA403_0==SASS_RETURN||(LA403_0 >= SASS_VAR && LA403_0 <= SASS_WHILE)||(LA403_0 >= TOPCENTER_SYM && LA403_0 <= TOPRIGHT_SYM)||LA403_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt403=1;
			}
			else if ( (LA403_0==CP_DOTS||LA403_0==LESS_REST) ) {
				alt403=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 403, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(403);}

			switch (alt403) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					{
					dbg.location(1229,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:5: ( cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )? )
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:7: cp_arg ( ( COMMA | SEMI ) ( ws )? cp_arg )* ( ( COMMA | SEMI ) ( ws )? )? ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					{
					dbg.location(1229,7);
					pushFollow(FOLLOW_cp_arg_in_cp_args_list8528);
					cp_arg();
					state._fsp--;
					if (state.failed) return;dbg.location(1229,14);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*
					try { dbg.enterSubRule(397);

					loop397:
					while (true) {
						int alt397=2;
						try { dbg.enterDecision(397, decisionCanBacktrack[397]);

						try {
							isCyclicDecision = true;
							alt397 = dfa397.predict(input);
						}
						catch (NoViableAltException nvae) {
							dbg.recognitionException(nvae);
							throw nvae;
						}
						} finally {dbg.exitDecision(397);}

						switch (alt397) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:16: ( COMMA | SEMI ) ( ws )? cp_arg
							{
							dbg.location(1229,16);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1229,33);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:33: ( ws )?
							int alt396=2;
							try { dbg.enterSubRule(396);
							try { dbg.enterDecision(396, decisionCanBacktrack[396]);

							int LA396_0 = input.LA(1);
							if ( (LA396_0==COMMENT||LA396_0==NL||LA396_0==WS) ) {
								alt396=1;
							}
							} finally {dbg.exitDecision(396);}

							switch (alt396) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:33: ws
									{
									dbg.location(1229,33);
									pushFollow(FOLLOW_ws_in_cp_args_list8542);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(396);}
							dbg.location(1229,37);
							pushFollow(FOLLOW_cp_arg_in_cp_args_list8545);
							cp_arg();
							state._fsp--;
							if (state.failed) return;
							}
							break;

						default :
							break loop397;
						}
					}
					} finally {dbg.exitSubRule(397);}
					dbg.location(1229,47);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:47: ( ( COMMA | SEMI ) ( ws )? )?
					int alt399=2;
					try { dbg.enterSubRule(399);
					try { dbg.enterDecision(399, decisionCanBacktrack[399]);

					int LA399_0 = input.LA(1);
					if ( (LA399_0==COMMA||LA399_0==SEMI) ) {
						alt399=1;
					}
					} finally {dbg.exitDecision(399);}

					switch (alt399) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:49: ( COMMA | SEMI ) ( ws )?
							{
							dbg.location(1229,49);
							if ( input.LA(1)==COMMA||input.LA(1)==SEMI ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1229,64);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:64: ( ws )?
							int alt398=2;
							try { dbg.enterSubRule(398);
							try { dbg.enterDecision(398, decisionCanBacktrack[398]);

							int LA398_0 = input.LA(1);
							if ( (LA398_0==COMMENT||LA398_0==NL||LA398_0==WS) ) {
								alt398=1;
							}
							} finally {dbg.exitDecision(398);}

							switch (alt398) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:64: ws
									{
									dbg.location(1229,64);
									pushFollow(FOLLOW_ws_in_cp_args_list8560);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(398);}

							}
							break;

					}
					} finally {dbg.exitSubRule(399);}
					dbg.location(1229,71);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:71: ( ( CP_DOTS | LESS_REST ) ( ws )? )?
					int alt401=2;
					try { dbg.enterSubRule(401);
					try { dbg.enterDecision(401, decisionCanBacktrack[401]);

					int LA401_0 = input.LA(1);
					if ( (LA401_0==CP_DOTS||LA401_0==LESS_REST) ) {
						alt401=1;
					}
					} finally {dbg.exitDecision(401);}

					switch (alt401) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:73: ( CP_DOTS | LESS_REST ) ( ws )?
							{
							dbg.location(1229,73);
							if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}dbg.location(1229,95);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:95: ( ws )?
							int alt400=2;
							try { dbg.enterSubRule(400);
							try { dbg.enterDecision(400, decisionCanBacktrack[400]);

							int LA400_0 = input.LA(1);
							if ( (LA400_0==COMMENT||LA400_0==NL||LA400_0==WS) ) {
								alt400=1;
							}
							} finally {dbg.exitDecision(400);}

							switch (alt400) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1229:95: ws
									{
									dbg.location(1229,95);
									pushFollow(FOLLOW_ws_in_cp_args_list8576);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(400);}

							}
							break;

					}
					} finally {dbg.exitSubRule(401);}

					}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:5: ( CP_DOTS | LESS_REST ) ( ws )?
					{
					dbg.location(1231,5);
					if ( input.LA(1)==CP_DOTS||input.LA(1)==LESS_REST ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}dbg.location(1231,27);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:27: ( ws )?
					int alt402=2;
					try { dbg.enterSubRule(402);
					try { dbg.enterDecision(402, decisionCanBacktrack[402]);

					int LA402_0 = input.LA(1);
					if ( (LA402_0==COMMENT||LA402_0==NL||LA402_0==WS) ) {
						alt402=1;
					}
					} finally {dbg.exitDecision(402);}

					switch (alt402) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1231:27: ws
							{
							dbg.location(1231,27);
							pushFollow(FOLLOW_ws_in_cp_args_list8601);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(402);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1232, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_args_list");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_args_list"



	// $ANTLR start "cp_arg"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1235:1: cp_arg : ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT );
	public final void cp_arg() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "cp_arg");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1235, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1236:5: ( cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )? |{...}? IDENT )
			int alt408=2;
			try { dbg.enterDecision(408, decisionCanBacktrack[408]);

			int LA408_0 = input.LA(1);
			if ( (LA408_0==AT_IDENT||(LA408_0 >= BOTTOMCENTER_SYM && LA408_0 <= BOTTOMRIGHT_SYM)||LA408_0==CHARSET_SYM||LA408_0==COUNTER_STYLE_SYM||LA408_0==FONT_FACE_SYM||LA408_0==IMPORT_SYM||(LA408_0 >= LEFTBOTTOM_SYM && LA408_0 <= LEFTTOP_SYM)||LA408_0==MEDIA_SYM||LA408_0==MOZ_DOCUMENT_SYM||LA408_0==NAMESPACE_SYM||LA408_0==PAGE_SYM||(LA408_0 >= RIGHTBOTTOM_SYM && LA408_0 <= RIGHTTOP_SYM)||(LA408_0 >= SASS_AT_ROOT && LA408_0 <= SASS_DEBUG)||(LA408_0 >= SASS_EACH && LA408_0 <= SASS_ELSE)||LA408_0==SASS_EXTEND||LA408_0==SASS_FOR||LA408_0==SASS_FUNCTION||(LA408_0 >= SASS_IF && LA408_0 <= SASS_MIXIN)||LA408_0==SASS_RETURN||(LA408_0 >= SASS_VAR && LA408_0 <= SASS_WHILE)||(LA408_0 >= TOPCENTER_SYM && LA408_0 <= TOPRIGHT_SYM)||LA408_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt408=1;
			}
			else if ( (LA408_0==IDENT) ) {
				int LA408_2 = input.LA(2);
				if ( (LA408_2==DOT) ) {
					alt408=1;
				}
				else if ( (LA408_2==COMMA||LA408_2==CP_DOTS||LA408_2==LESS_REST||LA408_2==RPAREN||LA408_2==SEMI) ) {
					alt408=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 408, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 408, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(408);}

			switch (alt408) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:5: cp_variable ( ws )? ( COLON ( ws )? cp_expression ( ws )? )?
					{
					dbg.location(1237,5);
					pushFollow(FOLLOW_cp_variable_in_cp_arg8624);
					cp_variable();
					state._fsp--;
					if (state.failed) return;dbg.location(1237,17);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:17: ( ws )?
					int alt404=2;
					try { dbg.enterSubRule(404);
					try { dbg.enterDecision(404, decisionCanBacktrack[404]);

					int LA404_0 = input.LA(1);
					if ( (LA404_0==COMMENT||LA404_0==NL||LA404_0==WS) ) {
						alt404=1;
					}
					} finally {dbg.exitDecision(404);}

					switch (alt404) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:17: ws
							{
							dbg.location(1237,17);
							pushFollow(FOLLOW_ws_in_cp_arg8626);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(404);}
					dbg.location(1237,21);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:21: ( COLON ( ws )? cp_expression ( ws )? )?
					int alt407=2;
					try { dbg.enterSubRule(407);
					try { dbg.enterDecision(407, decisionCanBacktrack[407]);

					int LA407_0 = input.LA(1);
					if ( (LA407_0==COLON) ) {
						alt407=1;
					}
					} finally {dbg.exitDecision(407);}

					switch (alt407) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:23: COLON ( ws )? cp_expression ( ws )?
							{
							dbg.location(1237,23);
							match(input,COLON,FOLLOW_COLON_in_cp_arg8631); if (state.failed) return;dbg.location(1237,29);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:29: ( ws )?
							int alt405=2;
							try { dbg.enterSubRule(405);
							try { dbg.enterDecision(405, decisionCanBacktrack[405]);

							int LA405_0 = input.LA(1);
							if ( (LA405_0==COMMENT||LA405_0==NL||LA405_0==WS) ) {
								alt405=1;
							}
							} finally {dbg.exitDecision(405);}

							switch (alt405) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:29: ws
									{
									dbg.location(1237,29);
									pushFollow(FOLLOW_ws_in_cp_arg8633);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(405);}
							dbg.location(1237,33);
							pushFollow(FOLLOW_cp_expression_in_cp_arg8636);
							cp_expression();
							state._fsp--;
							if (state.failed) return;dbg.location(1237,47);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:47: ( ws )?
							int alt406=2;
							try { dbg.enterSubRule(406);
							try { dbg.enterDecision(406, decisionCanBacktrack[406]);

							int LA406_0 = input.LA(1);
							if ( (LA406_0==COMMENT||LA406_0==NL||LA406_0==WS) ) {
								alt406=1;
							}
							} finally {dbg.exitDecision(406);}

							switch (alt406) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1237:47: ws
									{
									dbg.location(1237,47);
									pushFollow(FOLLOW_ws_in_cp_arg8638);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(406);}

							}
							break;

					}
					} finally {dbg.exitSubRule(407);}

					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1238:7: {...}? IDENT
					{
					dbg.location(1238,7);
					if ( !(evalPredicate(isLessSource(),"isLessSource()")) ) {
						if (state.backtracking>0) {state.failed=true; return;}
						throw new FailedPredicateException(input, "cp_arg", "isLessSource()");
					}dbg.location(1238,25);
					match(input,IDENT,FOLLOW_IDENT_in_cp_arg8651); if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1239, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "cp_arg");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "cp_arg"



	// $ANTLR start "less_mixin_guarded"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1243:1: less_mixin_guarded : less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* ;
	public final void less_mixin_guarded() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_mixin_guarded");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1243, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1244:5: ( less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:5: less_when ( ws )? less_condition ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			{
			dbg.location(1245,5);
			pushFollow(FOLLOW_less_when_in_less_mixin_guarded8674);
			less_when();
			state._fsp--;
			if (state.failed) return;dbg.location(1245,15);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:15: ( ws )?
			int alt409=2;
			try { dbg.enterSubRule(409);
			try { dbg.enterDecision(409, decisionCanBacktrack[409]);

			int LA409_0 = input.LA(1);
			if ( (LA409_0==COMMENT||LA409_0==NL||LA409_0==WS) ) {
				alt409=1;
			}
			} finally {dbg.exitDecision(409);}

			switch (alt409) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:15: ws
					{
					dbg.location(1245,15);
					pushFollow(FOLLOW_ws_in_less_mixin_guarded8676);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(409);}
			dbg.location(1245,19);
			pushFollow(FOLLOW_less_condition_in_less_mixin_guarded8679);
			less_condition();
			state._fsp--;
			if (state.failed) return;dbg.location(1245,34);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*
			try { dbg.enterSubRule(413);

			loop413:
			while (true) {
				int alt413=2;
				try { dbg.enterDecision(413, decisionCanBacktrack[413]);

				try {
					isCyclicDecision = true;
					alt413 = dfa413.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(413);}

				switch (alt413) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:35: ( ws )? ( COMMA | key_and ) ( ws )? less_condition
					{
					dbg.location(1245,35);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:35: ( ws )?
					int alt410=2;
					try { dbg.enterSubRule(410);
					try { dbg.enterDecision(410, decisionCanBacktrack[410]);

					int LA410_0 = input.LA(1);
					if ( (LA410_0==COMMENT||LA410_0==NL||LA410_0==WS) ) {
						alt410=1;
					}
					} finally {dbg.exitDecision(410);}

					switch (alt410) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:35: ws
							{
							dbg.location(1245,35);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded8682);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(410);}
					dbg.location(1245,39);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:39: ( COMMA | key_and )
					int alt411=2;
					try { dbg.enterSubRule(411);
					try { dbg.enterDecision(411, decisionCanBacktrack[411]);

					int LA411_0 = input.LA(1);
					if ( (LA411_0==COMMA) ) {
						alt411=1;
					}
					else if ( (LA411_0==IDENT) ) {
						alt411=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 411, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(411);}

					switch (alt411) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:40: COMMA
							{
							dbg.location(1245,40);
							match(input,COMMA,FOLLOW_COMMA_in_less_mixin_guarded8686); if (state.failed) return;
							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:48: key_and
							{
							dbg.location(1245,48);
							pushFollow(FOLLOW_key_and_in_less_mixin_guarded8690);
							key_and();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(411);}
					dbg.location(1245,57);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:57: ( ws )?
					int alt412=2;
					try { dbg.enterSubRule(412);
					try { dbg.enterDecision(412, decisionCanBacktrack[412]);

					int LA412_0 = input.LA(1);
					if ( (LA412_0==COMMENT||LA412_0==NL||LA412_0==WS) ) {
						alt412=1;
					}
					} finally {dbg.exitDecision(412);}

					switch (alt412) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1245:57: ws
							{
							dbg.location(1245,57);
							pushFollow(FOLLOW_ws_in_less_mixin_guarded8693);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(412);}
					dbg.location(1245,61);
					pushFollow(FOLLOW_less_condition_in_less_mixin_guarded8696);
					less_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop413;
				}
			}
			} finally {dbg.exitSubRule(413);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1246, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_mixin_guarded");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_mixin_guarded"



	// $ANTLR start "less_condition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1250:1: less_condition : ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN ;
	public final void less_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1250, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1251:5: ( ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:5: ( NOT ( ws )? )? LPAREN ( ws )? ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? ) RPAREN
			{
			dbg.location(1252,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:5: ( NOT ( ws )? )?
			int alt415=2;
			try { dbg.enterSubRule(415);
			try { dbg.enterDecision(415, decisionCanBacktrack[415]);

			int LA415_0 = input.LA(1);
			if ( (LA415_0==NOT) ) {
				alt415=1;
			}
			} finally {dbg.exitDecision(415);}

			switch (alt415) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:6: NOT ( ws )?
					{
					dbg.location(1252,6);
					match(input,NOT,FOLLOW_NOT_in_less_condition8722); if (state.failed) return;dbg.location(1252,10);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:10: ( ws )?
					int alt414=2;
					try { dbg.enterSubRule(414);
					try { dbg.enterDecision(414, decisionCanBacktrack[414]);

					int LA414_0 = input.LA(1);
					if ( (LA414_0==COMMENT||LA414_0==NL||LA414_0==WS) ) {
						alt414=1;
					}
					} finally {dbg.exitDecision(414);}

					switch (alt414) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1252:10: ws
							{
							dbg.location(1252,10);
							pushFollow(FOLLOW_ws_in_less_condition8724);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(414);}

					}
					break;

			}
			} finally {dbg.exitSubRule(415);}
			dbg.location(1253,5);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_condition8733); if (state.failed) return;dbg.location(1253,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1253:12: ( ws )?
			int alt416=2;
			try { dbg.enterSubRule(416);
			try { dbg.enterDecision(416, decisionCanBacktrack[416]);

			int LA416_0 = input.LA(1);
			if ( (LA416_0==COMMENT||LA416_0==NL||LA416_0==WS) ) {
				alt416=1;
			}
			} finally {dbg.exitDecision(416);}

			switch (alt416) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1253:12: ws
					{
					dbg.location(1253,12);
					pushFollow(FOLLOW_ws_in_less_condition8735);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(416);}
			dbg.location(1254,9);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1254:9: ( ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:14: ( cp_variable | less_function_in_condition ) ( ws )? ( less_condition_operator ( ws )? cp_math_expression )?
			{
			dbg.location(1255,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:14: ( cp_variable | less_function_in_condition )
			int alt417=2;
			try { dbg.enterSubRule(417);
			try { dbg.enterDecision(417, decisionCanBacktrack[417]);

			int LA417_0 = input.LA(1);
			if ( (LA417_0==AT_IDENT||(LA417_0 >= BOTTOMCENTER_SYM && LA417_0 <= BOTTOMRIGHT_SYM)||LA417_0==CHARSET_SYM||LA417_0==COUNTER_STYLE_SYM||LA417_0==FONT_FACE_SYM||LA417_0==IMPORT_SYM||(LA417_0 >= LEFTBOTTOM_SYM && LA417_0 <= LEFTTOP_SYM)||LA417_0==MEDIA_SYM||LA417_0==MOZ_DOCUMENT_SYM||LA417_0==NAMESPACE_SYM||LA417_0==PAGE_SYM||(LA417_0 >= RIGHTBOTTOM_SYM && LA417_0 <= RIGHTTOP_SYM)||(LA417_0 >= SASS_AT_ROOT && LA417_0 <= SASS_DEBUG)||(LA417_0 >= SASS_EACH && LA417_0 <= SASS_ELSE)||LA417_0==SASS_EXTEND||LA417_0==SASS_FOR||LA417_0==SASS_FUNCTION||(LA417_0 >= SASS_IF && LA417_0 <= SASS_MIXIN)||LA417_0==SASS_RETURN||(LA417_0 >= SASS_VAR && LA417_0 <= SASS_WHILE)||(LA417_0 >= TOPCENTER_SYM && LA417_0 <= TOPRIGHT_SYM)||LA417_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt417=1;
			}
			else if ( (LA417_0==IDENT) ) {
				int LA417_2 = input.LA(2);
				if ( (LA417_2==DOT) ) {
					alt417=1;
				}
				else if ( (LA417_2==COMMENT||LA417_2==LPAREN||LA417_2==NL||LA417_2==WS) ) {
					alt417=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 417, 2, input);
						dbg.recognitionException(nvae);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 417, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}

			} finally {dbg.exitDecision(417);}

			switch (alt417) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:15: cp_variable
					{
					dbg.location(1255,15);
					pushFollow(FOLLOW_cp_variable_in_less_condition8762);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:29: less_function_in_condition
					{
					dbg.location(1255,29);
					pushFollow(FOLLOW_less_function_in_condition_in_less_condition8766);
					less_function_in_condition();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(417);}
			dbg.location(1255,57);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:57: ( ws )?
			int alt418=2;
			try { dbg.enterSubRule(418);
			try { dbg.enterDecision(418, decisionCanBacktrack[418]);

			int LA418_0 = input.LA(1);
			if ( (LA418_0==COMMENT||LA418_0==NL||LA418_0==WS) ) {
				alt418=1;
			}
			} finally {dbg.exitDecision(418);}

			switch (alt418) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:57: ws
					{
					dbg.location(1255,57);
					pushFollow(FOLLOW_ws_in_less_condition8769);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(418);}
			dbg.location(1255,61);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:61: ( less_condition_operator ( ws )? cp_math_expression )?
			int alt420=2;
			try { dbg.enterSubRule(420);
			try { dbg.enterDecision(420, decisionCanBacktrack[420]);

			int LA420_0 = input.LA(1);
			if ( ((LA420_0 >= GREATER && LA420_0 <= GREATER_OR_EQ)||LA420_0==LESS||LA420_0==LESS_OR_EQ||LA420_0==OPEQ) ) {
				alt420=1;
			}
			} finally {dbg.exitDecision(420);}

			switch (alt420) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:62: less_condition_operator ( ws )? cp_math_expression
					{
					dbg.location(1255,62);
					pushFollow(FOLLOW_less_condition_operator_in_less_condition8773);
					less_condition_operator();
					state._fsp--;
					if (state.failed) return;dbg.location(1255,86);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:86: ( ws )?
					int alt419=2;
					try { dbg.enterSubRule(419);
					try { dbg.enterDecision(419, decisionCanBacktrack[419]);

					int LA419_0 = input.LA(1);
					if ( (LA419_0==COMMENT||LA419_0==NL||LA419_0==WS) ) {
						alt419=1;
					}
					} finally {dbg.exitDecision(419);}

					switch (alt419) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1255:86: ws
							{
							dbg.location(1255,86);
							pushFollow(FOLLOW_ws_in_less_condition8775);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(419);}
					dbg.location(1255,90);
					pushFollow(FOLLOW_cp_math_expression_in_less_condition8778);
					cp_math_expression();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(420);}

			}
			dbg.location(1257,5);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_condition8796); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1258, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition"



	// $ANTLR start "less_function_in_condition"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1261:1: less_function_in_condition : less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN ;
	public final void less_function_in_condition() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_function_in_condition");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1261, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1262:5: ( less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:5: less_fn_name ( ws )? LPAREN ( ws )? cp_variable ( ws )? RPAREN
			{
			dbg.location(1263,5);
			pushFollow(FOLLOW_less_fn_name_in_less_function_in_condition8818);
			less_fn_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1263,18);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:18: ( ws )?
			int alt421=2;
			try { dbg.enterSubRule(421);
			try { dbg.enterDecision(421, decisionCanBacktrack[421]);

			int LA421_0 = input.LA(1);
			if ( (LA421_0==COMMENT||LA421_0==NL||LA421_0==WS) ) {
				alt421=1;
			}
			} finally {dbg.exitDecision(421);}

			switch (alt421) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:18: ws
					{
					dbg.location(1263,18);
					pushFollow(FOLLOW_ws_in_less_function_in_condition8820);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(421);}
			dbg.location(1263,22);
			match(input,LPAREN,FOLLOW_LPAREN_in_less_function_in_condition8823); if (state.failed) return;dbg.location(1263,29);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:29: ( ws )?
			int alt422=2;
			try { dbg.enterSubRule(422);
			try { dbg.enterDecision(422, decisionCanBacktrack[422]);

			int LA422_0 = input.LA(1);
			if ( (LA422_0==COMMENT||LA422_0==NL||LA422_0==WS) ) {
				alt422=1;
			}
			} finally {dbg.exitDecision(422);}

			switch (alt422) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:29: ws
					{
					dbg.location(1263,29);
					pushFollow(FOLLOW_ws_in_less_function_in_condition8825);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(422);}
			dbg.location(1263,33);
			pushFollow(FOLLOW_cp_variable_in_less_function_in_condition8828);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1263,45);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:45: ( ws )?
			int alt423=2;
			try { dbg.enterSubRule(423);
			try { dbg.enterDecision(423, decisionCanBacktrack[423]);

			int LA423_0 = input.LA(1);
			if ( (LA423_0==COMMENT||LA423_0==NL||LA423_0==WS) ) {
				alt423=1;
			}
			} finally {dbg.exitDecision(423);}

			switch (alt423) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1263:45: ws
					{
					dbg.location(1263,45);
					pushFollow(FOLLOW_ws_in_less_function_in_condition8830);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(423);}
			dbg.location(1263,49);
			match(input,RPAREN,FOLLOW_RPAREN_in_less_function_in_condition8833); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1264, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_function_in_condition");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_function_in_condition"



	// $ANTLR start "less_fn_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1267:1: less_fn_name : IDENT ;
	public final void less_fn_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_fn_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1267, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1268:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1269:5: IDENT
			{
			dbg.location(1269,5);
			match(input,IDENT,FOLLOW_IDENT_in_less_fn_name8855); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1270, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_fn_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_fn_name"



	// $ANTLR start "less_condition_operator"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1272:1: less_condition_operator : ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ );
	public final void less_condition_operator() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_condition_operator");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1272, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1273:5: ( GREATER | GREATER_OR_EQ | OPEQ | LESS | LESS_OR_EQ )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
			{
			dbg.location(1273,5);
			if ( (input.LA(1) >= GREATER && input.LA(1) <= GREATER_OR_EQ)||input.LA(1)==LESS||input.LA(1)==LESS_OR_EQ||input.LA(1)==OPEQ ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1275, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_condition_operator");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_condition_operator"



	// $ANTLR start "less_selector_interpolation_exp"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:1: less_selector_interpolation_exp : ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void less_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1277, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1277:33: ( ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:5: ( IDENT | MINUS )? less_selector_interpolation ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1278,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:5: ( IDENT | MINUS )?
			int alt424=2;
			try { dbg.enterSubRule(424);
			try { dbg.enterDecision(424, decisionCanBacktrack[424]);

			int LA424_0 = input.LA(1);
			if ( (LA424_0==IDENT||LA424_0==MINUS) ) {
				alt424=1;
			}
			} finally {dbg.exitDecision(424);}

			switch (alt424) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1278,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(424);}
			dbg.location(1278,22);
			pushFollow(FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp8918);
			less_selector_interpolation();
			state._fsp--;
			if (state.failed) return;dbg.location(1278,50);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:50: ( less_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt426=3;
			try { dbg.enterSubRule(426);
			try { dbg.enterDecision(426, decisionCanBacktrack[426]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA426_1 = input.LA(2);
					if ( (LA426_1==AT_SIGN) ) {
						alt426=1;
					}
					else if ( ((LA426_1 >= COLON && LA426_1 <= COMMENT)||(LA426_1 >= DCOLON && LA426_1 <= DOT)||LA426_1==GREATER||(LA426_1 >= HASH && LA426_1 <= HASH_SYMBOL)||LA426_1==IDENT||(LA426_1 >= LBRACE && LA426_1 <= LBRACKET)||LA426_1==LENGTH||LA426_1==LESS_AND||LA426_1==MINUS||LA426_1==NL||LA426_1==PLUS||LA426_1==RBRACE||LA426_1==RPAREN||LA426_1==SASS_EXTEND_ONLY_SELECTOR||LA426_1==SEMI||LA426_1==TILDE||LA426_1==WS) ) {
						alt426=2;
					}
					}
					break;
				case AT_SIGN:
					{
					alt426=1;
					}
					break;
				case DIMENSION:
					{
					int LA426_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt426=2;
					}
					}
					break;
				case LENGTH:
					{
					alt426=2;
					}
					break;
			}
			} finally {dbg.exitDecision(426);}

			switch (alt426) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:51: less_selector_interpolation_exp
					{
					dbg.location(1278,51);
					pushFollow(FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp8921);
					less_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1278,85);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1278:85: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt425=0;
					try { dbg.enterSubRule(425);

					loop425:
					while (true) {
						int alt425=2;
						try { dbg.enterDecision(425, decisionCanBacktrack[425]);

						int LA425_0 = input.LA(1);
						if ( (LA425_0==DIMENSION) ) {
							int LA425_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt425=1;
							}

						}
						else if ( (LA425_0==IDENT||LA425_0==LENGTH||LA425_0==MINUS) ) {
							alt425=1;
						}

						} finally {dbg.exitDecision(425);}

						switch (alt425) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1278,85);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt425 >= 1 ) break loop425;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(425, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt425++;
					}
					} finally {dbg.exitSubRule(425);}

					}
					break;

			}
			} finally {dbg.exitSubRule(426);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1279, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation_exp"



	// $ANTLR start "less_selector_interpolation"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1281:1: less_selector_interpolation : AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE ;
	public final void less_selector_interpolation() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_selector_interpolation");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1281, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1282:5: ( AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:5: AT_SIGN LBRACE ( ws )? IDENT ( ws )? RBRACE
			{
			dbg.location(1283,5);
			match(input,AT_SIGN,FOLLOW_AT_SIGN_in_less_selector_interpolation8964); if (state.failed) return;dbg.location(1283,13);
			match(input,LBRACE,FOLLOW_LBRACE_in_less_selector_interpolation8966); if (state.failed) return;dbg.location(1283,20);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:20: ( ws )?
			int alt427=2;
			try { dbg.enterSubRule(427);
			try { dbg.enterDecision(427, decisionCanBacktrack[427]);

			int LA427_0 = input.LA(1);
			if ( (LA427_0==COMMENT||LA427_0==NL||LA427_0==WS) ) {
				alt427=1;
			}
			} finally {dbg.exitDecision(427);}

			switch (alt427) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:20: ws
					{
					dbg.location(1283,20);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation8968);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(427);}
			dbg.location(1283,24);
			match(input,IDENT,FOLLOW_IDENT_in_less_selector_interpolation8971); if (state.failed) return;dbg.location(1283,30);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:30: ( ws )?
			int alt428=2;
			try { dbg.enterSubRule(428);
			try { dbg.enterDecision(428, decisionCanBacktrack[428]);

			int LA428_0 = input.LA(1);
			if ( (LA428_0==COMMENT||LA428_0==NL||LA428_0==WS) ) {
				alt428=1;
			}
			} finally {dbg.exitDecision(428);}

			switch (alt428) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1283:30: ws
					{
					dbg.location(1283,30);
					pushFollow(FOLLOW_ws_in_less_selector_interpolation8973);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(428);}
			dbg.location(1283,34);
			match(input,RBRACE,FOLLOW_RBRACE_in_less_selector_interpolation8976); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1284, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_selector_interpolation");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_selector_interpolation"



	// $ANTLR start "sass_selector_interpolation_exp"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:1: sass_selector_interpolation_exp : ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? ;
	public final void sass_selector_interpolation_exp() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_selector_interpolation_exp");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1287, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1287:33: ( ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:5: ( IDENT | MINUS )? sass_interpolation_expression_var ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			{
			dbg.location(1288,5);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:5: ( IDENT | MINUS )?
			int alt429=2;
			try { dbg.enterSubRule(429);
			try { dbg.enterDecision(429, decisionCanBacktrack[429]);

			int LA429_0 = input.LA(1);
			if ( (LA429_0==IDENT||LA429_0==MINUS) ) {
				alt429=1;
			}
			} finally {dbg.exitDecision(429);}

			switch (alt429) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
					{
					dbg.location(1288,5);
					if ( input.LA(1)==IDENT||input.LA(1)==MINUS ) {
						input.consume();
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						dbg.recognitionException(mse);
						throw mse;
					}
					}
					break;

			}
			} finally {dbg.exitSubRule(429);}
			dbg.location(1288,22);
			pushFollow(FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp9003);
			sass_interpolation_expression_var();
			state._fsp--;
			if (state.failed) return;dbg.location(1288,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:56: ( sass_selector_interpolation_exp | ( IDENT | MINUS | DIMENSION | LENGTH )+ )?
			int alt431=3;
			try { dbg.enterSubRule(431);
			try { dbg.enterDecision(431, decisionCanBacktrack[431]);

			switch ( input.LA(1) ) {
				case IDENT:
				case MINUS:
					{
					int LA431_1 = input.LA(2);
					if ( (LA431_1==HASH_SYMBOL) ) {
						int LA431_6 = input.LA(3);
						if ( (LA431_6==LBRACE) ) {
							alt431=1;
						}
						else if ( (LA431_6==AT_SIGN||LA431_6==IDENT||LA431_6==MINUS||LA431_6==NAME) ) {
							alt431=2;
						}
					}
					else if ( ((LA431_1 >= COLON && LA431_1 <= COMMENT)||(LA431_1 >= DCOLON && LA431_1 <= DOT)||LA431_1==GREATER||LA431_1==HASH||LA431_1==IDENT||(LA431_1 >= LBRACE && LA431_1 <= LBRACKET)||LA431_1==LENGTH||LA431_1==LESS_AND||LA431_1==MINUS||LA431_1==NL||LA431_1==PLUS||LA431_1==RBRACE||LA431_1==RPAREN||LA431_1==SASS_EXTEND_ONLY_SELECTOR||LA431_1==SEMI||LA431_1==TILDE||LA431_1==WS) ) {
						alt431=2;
					}
					}
					break;
				case HASH_SYMBOL:
					{
					int LA431_2 = input.LA(2);
					if ( (LA431_2==LBRACE) ) {
						alt431=1;
					}
					}
					break;
				case DIMENSION:
					{
					int LA431_3 = input.LA(2);
					if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
						alt431=2;
					}
					}
					break;
				case LENGTH:
					{
					alt431=2;
					}
					break;
			}
			} finally {dbg.exitDecision(431);}

			switch (alt431) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:57: sass_selector_interpolation_exp
					{
					dbg.location(1288,57);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp9006);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					{
					dbg.location(1288,91);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1288:91: ( IDENT | MINUS | DIMENSION | LENGTH )+
					int cnt430=0;
					try { dbg.enterSubRule(430);

					loop430:
					while (true) {
						int alt430=2;
						try { dbg.enterDecision(430, decisionCanBacktrack[430]);

						int LA430_0 = input.LA(1);
						if ( (LA430_0==DIMENSION) ) {
							int LA430_2 = input.LA(2);
							if ( (!(evalPredicate(evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")"),""))) ) {
								alt430=1;
							}

						}
						else if ( (LA430_0==IDENT||LA430_0==LENGTH||LA430_0==MINUS) ) {
							alt430=1;
						}

						} finally {dbg.exitDecision(430);}

						switch (alt430) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
							{
							dbg.location(1288,91);
							if ( input.LA(1)==DIMENSION||input.LA(1)==IDENT||input.LA(1)==LENGTH||input.LA(1)==MINUS ) {
								input.consume();
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								dbg.recognitionException(mse);
								throw mse;
							}
							}
							break;

						default :
							if ( cnt430 >= 1 ) break loop430;
							if (state.backtracking>0) {state.failed=true; return;}
							EarlyExitException eee = new EarlyExitException(430, input);
							dbg.recognitionException(eee);

							throw eee;
						}
						cnt430++;
					}
					} finally {dbg.exitSubRule(430);}

					}
					break;

			}
			} finally {dbg.exitSubRule(431);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1289, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_selector_interpolation_exp");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_selector_interpolation_exp"



	// $ANTLR start "sass_interpolation_expression_var"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1291:1: sass_interpolation_expression_var : HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE ;
	public final void sass_interpolation_expression_var() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_interpolation_expression_var");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1291, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1292:5: ( HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:9: HASH_SYMBOL LBRACE ( WS )? cp_expression ( WS )? RBRACE
			{
			dbg.location(1293,9);
			match(input,HASH_SYMBOL,FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var9053); if (state.failed) return;dbg.location(1293,21);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_interpolation_expression_var9055); if (state.failed) return;dbg.location(1293,28);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:28: ( WS )?
			int alt432=2;
			try { dbg.enterSubRule(432);
			try { dbg.enterDecision(432, decisionCanBacktrack[432]);

			int LA432_0 = input.LA(1);
			if ( (LA432_0==WS) ) {
				alt432=1;
			}
			} finally {dbg.exitDecision(432);}

			switch (alt432) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:28: WS
					{
					dbg.location(1293,28);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var9057); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(432);}
			dbg.location(1293,32);
			pushFollow(FOLLOW_cp_expression_in_sass_interpolation_expression_var9060);
			cp_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1293,46);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:46: ( WS )?
			int alt433=2;
			try { dbg.enterSubRule(433);
			try { dbg.enterDecision(433, decisionCanBacktrack[433]);

			int LA433_0 = input.LA(1);
			if ( (LA433_0==WS) ) {
				alt433=1;
			}
			} finally {dbg.exitDecision(433);}

			switch (alt433) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1293:46: WS
					{
					dbg.location(1293,46);
					match(input,WS,FOLLOW_WS_in_sass_interpolation_expression_var9062); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(433);}
			dbg.location(1293,50);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_interpolation_expression_var9065); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1294, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_interpolation_expression_var");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_interpolation_expression_var"



	// $ANTLR start "sass_nested_properties"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1314:1: sass_nested_properties : property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE ;
	public final void sass_nested_properties() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_nested_properties");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1314, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1315:5: ( property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:5: property ( ws )? COLON ( ws )? ( propertyValue ( ws )? )? LBRACE ( ws )? syncToFollow ( declarations )? RBRACE
			{
			dbg.location(1316,5);
			pushFollow(FOLLOW_property_in_sass_nested_properties9105);
			property();
			state._fsp--;
			if (state.failed) return;dbg.location(1316,14);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:14: ( ws )?
			int alt434=2;
			try { dbg.enterSubRule(434);
			try { dbg.enterDecision(434, decisionCanBacktrack[434]);

			int LA434_0 = input.LA(1);
			if ( (LA434_0==COMMENT||LA434_0==NL||LA434_0==WS) ) {
				alt434=1;
			}
			} finally {dbg.exitDecision(434);}

			switch (alt434) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:14: ws
					{
					dbg.location(1316,14);
					pushFollow(FOLLOW_ws_in_sass_nested_properties9107);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(434);}
			dbg.location(1316,18);
			match(input,COLON,FOLLOW_COLON_in_sass_nested_properties9110); if (state.failed) return;dbg.location(1316,24);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:24: ( ws )?
			int alt435=2;
			try { dbg.enterSubRule(435);
			try { dbg.enterDecision(435, decisionCanBacktrack[435]);

			int LA435_0 = input.LA(1);
			if ( (LA435_0==COMMENT||LA435_0==NL||LA435_0==WS) ) {
				alt435=1;
			}
			} finally {dbg.exitDecision(435);}

			switch (alt435) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:24: ws
					{
					dbg.location(1316,24);
					pushFollow(FOLLOW_ws_in_sass_nested_properties9112);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(435);}
			dbg.location(1316,28);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:28: ( propertyValue ( ws )? )?
			int alt437=2;
			try { dbg.enterSubRule(437);
			try { dbg.enterDecision(437, decisionCanBacktrack[437]);

			int LA437_0 = input.LA(1);
			if ( ((LA437_0 >= ANGLE && LA437_0 <= AT_SIGN)||(LA437_0 >= BOTTOMCENTER_SYM && LA437_0 <= BOTTOMRIGHT_SYM)||LA437_0==CHARSET_SYM||LA437_0==COUNTER_STYLE_SYM||LA437_0==DIMENSION||LA437_0==EMS||LA437_0==EXS||(LA437_0 >= FONT_FACE_SYM && LA437_0 <= FREQ)||LA437_0==GEN||(LA437_0 >= HASH && LA437_0 <= HASH_SYMBOL)||LA437_0==IDENT||LA437_0==IMPORT_SYM||(LA437_0 >= LBRACKET && LA437_0 <= LENGTH)||(LA437_0 >= LESS_AND && LA437_0 <= LESS_JS_STRING)||(LA437_0 >= MEDIA_SYM && LA437_0 <= MOZ_DOCUMENT_SYM)||LA437_0==NAMESPACE_SYM||LA437_0==NUMBER||(LA437_0 >= PAGE_SYM && LA437_0 <= PERCENTAGE_SYMBOL)||LA437_0==PLUS||(LA437_0 >= REM && LA437_0 <= RIGHTTOP_SYM)||(LA437_0 >= SASS_AT_ROOT && LA437_0 <= SASS_DEBUG)||(LA437_0 >= SASS_EACH && LA437_0 <= SASS_ELSE)||LA437_0==SASS_EXTEND||LA437_0==SASS_FOR||LA437_0==SASS_FUNCTION||(LA437_0 >= SASS_IF && LA437_0 <= SASS_MIXIN)||LA437_0==SASS_RETURN||(LA437_0 >= SASS_VAR && LA437_0 <= SASS_WHILE)||LA437_0==STRING||(LA437_0 >= TILDE && LA437_0 <= TOPRIGHT_SYM)||(LA437_0 >= URANGE && LA437_0 <= URI)||LA437_0==VARIABLE||LA437_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt437=1;
			}
			} finally {dbg.exitDecision(437);}

			switch (alt437) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:29: propertyValue ( ws )?
					{
					dbg.location(1316,29);
					pushFollow(FOLLOW_propertyValue_in_sass_nested_properties9116);
					propertyValue();
					state._fsp--;
					if (state.failed) return;dbg.location(1316,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:43: ( ws )?
					int alt436=2;
					try { dbg.enterSubRule(436);
					try { dbg.enterDecision(436, decisionCanBacktrack[436]);

					int LA436_0 = input.LA(1);
					if ( (LA436_0==COMMENT||LA436_0==NL||LA436_0==WS) ) {
						alt436=1;
					}
					} finally {dbg.exitDecision(436);}

					switch (alt436) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:43: ws
							{
							dbg.location(1316,43);
							pushFollow(FOLLOW_ws_in_sass_nested_properties9118);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(436);}

					}
					break;

			}
			} finally {dbg.exitSubRule(437);}
			dbg.location(1316,49);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_nested_properties9123); if (state.failed) return;dbg.location(1316,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:56: ( ws )?
			int alt438=2;
			try { dbg.enterSubRule(438);
			try { dbg.enterDecision(438, decisionCanBacktrack[438]);

			int LA438_0 = input.LA(1);
			if ( (LA438_0==COMMENT||LA438_0==NL||LA438_0==WS) ) {
				alt438=1;
			}
			} finally {dbg.exitDecision(438);}

			switch (alt438) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:56: ws
					{
					dbg.location(1316,56);
					pushFollow(FOLLOW_ws_in_sass_nested_properties9125);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(438);}
			dbg.location(1316,60);
			pushFollow(FOLLOW_syncToFollow_in_sass_nested_properties9128);
			syncToFollow();
			state._fsp--;
			if (state.failed) return;dbg.location(1316,73);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:73: ( declarations )?
			int alt439=2;
			try { dbg.enterSubRule(439);
			try { dbg.enterDecision(439, decisionCanBacktrack[439]);

			int LA439_0 = input.LA(1);
			if ( ((LA439_0 >= AT_IDENT && LA439_0 <= AT_SIGN)||(LA439_0 >= BOTTOMCENTER_SYM && LA439_0 <= BOTTOMRIGHT_SYM)||(LA439_0 >= CHARSET_SYM && LA439_0 <= COLON)||LA439_0==COUNTER_STYLE_SYM||(LA439_0 >= DCOLON && LA439_0 <= DOT)||LA439_0==FONT_FACE_SYM||(LA439_0 >= GEN && LA439_0 <= GREATER)||(LA439_0 >= HASH && LA439_0 <= HASH_SYMBOL)||LA439_0==IDENT||LA439_0==IMPORT_SYM||(LA439_0 >= LBRACKET && LA439_0 <= LEFTTOP_SYM)||LA439_0==LESS_AND||(LA439_0 >= MEDIA_SYM && LA439_0 <= MOZ_DOCUMENT_SYM)||LA439_0==NAMESPACE_SYM||LA439_0==PAGE_SYM||(LA439_0 >= PIPE && LA439_0 <= PLUS)||(LA439_0 >= RIGHTBOTTOM_SYM && LA439_0 <= RIGHTTOP_SYM)||(LA439_0 >= SASS_AT_ROOT && LA439_0 <= SASS_DEBUG)||(LA439_0 >= SASS_EACH && LA439_0 <= SASS_ELSE)||(LA439_0 >= SASS_ERROR && LA439_0 <= SASS_FOR)||LA439_0==SASS_FUNCTION||(LA439_0 >= SASS_IF && LA439_0 <= SASS_MIXIN)||LA439_0==SASS_RETURN||(LA439_0 >= SASS_VAR && LA439_0 <= SEMI)||LA439_0==STAR||LA439_0==SUPPORTS_SYM||LA439_0==TILDE||(LA439_0 >= TOPCENTER_SYM && LA439_0 <= TOPRIGHT_SYM)||LA439_0==VARIABLE||LA439_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt439=1;
			}
			} finally {dbg.exitDecision(439);}

			switch (alt439) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1316:73: declarations
					{
					dbg.location(1316,73);
					pushFollow(FOLLOW_declarations_in_sass_nested_properties9130);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(439);}
			dbg.location(1316,87);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_nested_properties9133); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1317, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_nested_properties");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_nested_properties"



	// $ANTLR start "sass_extend"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1319:1: sass_extend : SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? ;
	public final void sass_extend() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1319, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1320:5: ( SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:5: SASS_EXTEND ws simpleSelectorSequence ( ( ws )? COMMA ( ws )? simpleSelectorSequence )* ( ws SASS_OPTIONAL )?
			{
			dbg.location(1321,5);
			match(input,SASS_EXTEND,FOLLOW_SASS_EXTEND_in_sass_extend9154); if (state.failed) return;dbg.location(1321,17);
			pushFollow(FOLLOW_ws_in_sass_extend9156);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,20);
			pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend9158);
			simpleSelectorSequence();
			state._fsp--;
			if (state.failed) return;dbg.location(1321,43);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*
			try { dbg.enterSubRule(442);

			loop442:
			while (true) {
				int alt442=2;
				try { dbg.enterDecision(442, decisionCanBacktrack[442]);

				try {
					isCyclicDecision = true;
					alt442 = dfa442.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(442);}

				switch (alt442) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:44: ( ws )? COMMA ( ws )? simpleSelectorSequence
					{
					dbg.location(1321,44);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:44: ( ws )?
					int alt440=2;
					try { dbg.enterSubRule(440);
					try { dbg.enterDecision(440, decisionCanBacktrack[440]);

					int LA440_0 = input.LA(1);
					if ( (LA440_0==COMMENT||LA440_0==NL||LA440_0==WS) ) {
						alt440=1;
					}
					} finally {dbg.exitDecision(440);}

					switch (alt440) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:44: ws
							{
							dbg.location(1321,44);
							pushFollow(FOLLOW_ws_in_sass_extend9161);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(440);}
					dbg.location(1321,48);
					match(input,COMMA,FOLLOW_COMMA_in_sass_extend9164); if (state.failed) return;dbg.location(1321,54);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:54: ( ws )?
					int alt441=2;
					try { dbg.enterSubRule(441);
					try { dbg.enterDecision(441, decisionCanBacktrack[441]);

					int LA441_0 = input.LA(1);
					if ( (LA441_0==COMMENT||LA441_0==NL||LA441_0==WS) ) {
						alt441=1;
					}
					} finally {dbg.exitDecision(441);}

					switch (alt441) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:54: ws
							{
							dbg.location(1321,54);
							pushFollow(FOLLOW_ws_in_sass_extend9166);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(441);}
					dbg.location(1321,58);
					pushFollow(FOLLOW_simpleSelectorSequence_in_sass_extend9169);
					simpleSelectorSequence();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop442;
				}
			}
			} finally {dbg.exitSubRule(442);}
			dbg.location(1321,83);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:83: ( ws SASS_OPTIONAL )?
			int alt443=2;
			try { dbg.enterSubRule(443);
			try { dbg.enterDecision(443, decisionCanBacktrack[443]);

			try {
				isCyclicDecision = true;
				alt443 = dfa443.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(443);}

			switch (alt443) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1321:84: ws SASS_OPTIONAL
					{
					dbg.location(1321,84);
					pushFollow(FOLLOW_ws_in_sass_extend9174);
					ws();
					state._fsp--;
					if (state.failed) return;dbg.location(1321,87);
					match(input,SASS_OPTIONAL,FOLLOW_SASS_OPTIONAL_in_sass_extend9176); if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(443);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1322, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend"



	// $ANTLR start "sass_extend_only_selector"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1324:1: sass_extend_only_selector : SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? ;
	public final void sass_extend_only_selector() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_extend_only_selector");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1324, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1325:5: ( SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:5: SASS_EXTEND_ONLY_SELECTOR ( sass_selector_interpolation_exp )?
			{
			dbg.location(1326,5);
			match(input,SASS_EXTEND_ONLY_SELECTOR,FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector9199); if (state.failed) return;dbg.location(1326,31);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:31: ( sass_selector_interpolation_exp )?
			int alt444=2;
			try { dbg.enterSubRule(444);
			try { dbg.enterDecision(444, decisionCanBacktrack[444]);

			int LA444_0 = input.LA(1);
			if ( (LA444_0==IDENT||LA444_0==MINUS) ) {
				alt444=1;
			}
			else if ( (LA444_0==HASH_SYMBOL) ) {
				int LA444_2 = input.LA(2);
				if ( (LA444_2==LBRACE) ) {
					alt444=1;
				}
			}
			} finally {dbg.exitDecision(444);}

			switch (alt444) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1326:31: sass_selector_interpolation_exp
					{
					dbg.location(1326,31);
					pushFollow(FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector9201);
					sass_selector_interpolation_exp();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(444);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1327, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_extend_only_selector");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_extend_only_selector"



	// $ANTLR start "sass_debug"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1329:1: sass_debug : ( SASS_DEBUG | SASS_WARN ) ws cp_expression ;
	public final void sass_debug() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_debug");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1329, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1330:5: ( ( SASS_DEBUG | SASS_WARN ) ws cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1331:5: ( SASS_DEBUG | SASS_WARN ) ws cp_expression
			{
			dbg.location(1331,5);
			if ( input.LA(1)==SASS_DEBUG||input.LA(1)==SASS_WARN ) {
				input.consume();
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				dbg.recognitionException(mse);
				throw mse;
			}dbg.location(1331,32);
			pushFollow(FOLLOW_ws_in_sass_debug9233);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1331,35);
			pushFollow(FOLLOW_cp_expression_in_sass_debug9235);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1332, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_debug");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_debug"



	// $ANTLR start "sass_error"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1334:1: sass_error : SASS_ERROR ws STRING ;
	public final void sass_error() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_error");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1334, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1335:5: ( SASS_ERROR ws STRING )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1336:5: SASS_ERROR ws STRING
			{
			dbg.location(1336,5);
			match(input,SASS_ERROR,FOLLOW_SASS_ERROR_in_sass_error9256); if (state.failed) return;dbg.location(1336,16);
			pushFollow(FOLLOW_ws_in_sass_error9258);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1336,19);
			match(input,STRING,FOLLOW_STRING_in_sass_error9260); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1337, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_error");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_error"



	// $ANTLR start "sass_control"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1339:1: sass_control : ( sass_if | sass_for | sass_each | sass_while );
	public final void sass_control() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1339, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1340:5: ( sass_if | sass_for | sass_each | sass_while )
			int alt445=4;
			try { dbg.enterDecision(445, decisionCanBacktrack[445]);

			switch ( input.LA(1) ) {
			case SASS_IF:
				{
				alt445=1;
				}
				break;
			case SASS_FOR:
				{
				alt445=2;
				}
				break;
			case SASS_EACH:
				{
				alt445=3;
				}
				break;
			case SASS_WHILE:
				{
				alt445=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae =
					new NoViableAltException("", 445, 0, input);
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(445);}

			switch (alt445) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:5: sass_if
					{
					dbg.location(1341,5);
					pushFollow(FOLLOW_sass_if_in_sass_control9281);
					sass_if();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:15: sass_for
					{
					dbg.location(1341,15);
					pushFollow(FOLLOW_sass_for_in_sass_control9285);
					sass_for();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 3 :
					dbg.enterAlt(3);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:26: sass_each
					{
					dbg.location(1341,26);
					pushFollow(FOLLOW_sass_each_in_sass_control9289);
					sass_each();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 4 :
					dbg.enterAlt(4);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1341:38: sass_while
					{
					dbg.location(1341,38);
					pushFollow(FOLLOW_sass_while_in_sass_control9293);
					sass_while();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1342, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control"



	// $ANTLR start "sass_if"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1344:1: sass_if : SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? ;
	public final void sass_if() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_if");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1344, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1345:5: ( SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:5: SASS_IF ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
			{
			dbg.location(1346,5);
			match(input,SASS_IF,FOLLOW_SASS_IF_in_sass_if9314); if (state.failed) return;dbg.location(1346,13);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:13: ( ws )?
			int alt446=2;
			try { dbg.enterSubRule(446);
			try { dbg.enterDecision(446, decisionCanBacktrack[446]);

			int LA446_0 = input.LA(1);
			if ( (LA446_0==COMMENT||LA446_0==NL||LA446_0==WS) ) {
				alt446=1;
			}
			} finally {dbg.exitDecision(446);}

			switch (alt446) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:13: ws
					{
					dbg.location(1346,13);
					pushFollow(FOLLOW_ws_in_sass_if9316);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(446);}
			dbg.location(1346,17);
			pushFollow(FOLLOW_sass_control_expression_in_sass_if9319);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1346,41);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:41: ( ws )?
			int alt447=2;
			try { dbg.enterSubRule(447);
			try { dbg.enterDecision(447, decisionCanBacktrack[447]);

			int LA447_0 = input.LA(1);
			if ( (LA447_0==COMMENT||LA447_0==NL||LA447_0==WS) ) {
				alt447=1;
			}
			} finally {dbg.exitDecision(447);}

			switch (alt447) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:41: ws
					{
					dbg.location(1346,41);
					pushFollow(FOLLOW_ws_in_sass_if9321);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(447);}
			dbg.location(1346,45);
			pushFollow(FOLLOW_sass_control_block_in_sass_if9324);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;dbg.location(1346,64);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:64: ( ( ws )? sass_else )?
			int alt449=2;
			try { dbg.enterSubRule(449);
			try { dbg.enterDecision(449, decisionCanBacktrack[449]);

			try {
				isCyclicDecision = true;
				alt449 = dfa449.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(449);}

			switch (alt449) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:65: ( ws )? sass_else
					{
					dbg.location(1346,65);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:65: ( ws )?
					int alt448=2;
					try { dbg.enterSubRule(448);
					try { dbg.enterDecision(448, decisionCanBacktrack[448]);

					int LA448_0 = input.LA(1);
					if ( (LA448_0==COMMENT||LA448_0==NL||LA448_0==WS) ) {
						alt448=1;
					}
					} finally {dbg.exitDecision(448);}

					switch (alt448) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1346:65: ws
							{
							dbg.location(1346,65);
							pushFollow(FOLLOW_ws_in_sass_if9327);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(448);}
					dbg.location(1346,69);
					pushFollow(FOLLOW_sass_else_in_sass_if9330);
					sass_else();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(449);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1347, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_if");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_if"



	// $ANTLR start "sass_else"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1349:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );
	public final void sass_else() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_else");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1349, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1350:5: ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? )
			int alt457=2;
			try { dbg.enterDecision(457, decisionCanBacktrack[457]);

			try {
				isCyclicDecision = true;
				alt457 = dfa457.predict(input);
			}
			catch (NoViableAltException nvae) {
				dbg.recognitionException(nvae);
				throw nvae;
			}
			} finally {dbg.exitDecision(457);}

			switch (alt457) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1351:5: SASS_ELSE ( ws )? sass_control_block
					{
					dbg.location(1351,5);
					match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else9353); if (state.failed) return;dbg.location(1351,15);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1351:15: ( ws )?
					int alt450=2;
					try { dbg.enterSubRule(450);
					try { dbg.enterDecision(450, decisionCanBacktrack[450]);

					int LA450_0 = input.LA(1);
					if ( (LA450_0==COMMENT||LA450_0==NL||LA450_0==WS) ) {
						alt450=1;
					}
					} finally {dbg.exitDecision(450);}

					switch (alt450) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1351:15: ws
							{
							dbg.location(1351,15);
							pushFollow(FOLLOW_ws_in_sass_else9355);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(450);}
					dbg.location(1351,19);
					pushFollow(FOLLOW_sass_control_block_in_sass_else9358);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;
					}
					break;
				case 2 :
					dbg.enterAlt(2);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )?
					{
					dbg.location(1353,5);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:5: ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF )
					int alt452=2;
					try { dbg.enterSubRule(452);
					try { dbg.enterDecision(452, decisionCanBacktrack[452]);

					int LA452_0 = input.LA(1);
					if ( (LA452_0==SASS_ELSE) ) {
						alt452=1;
					}
					else if ( (LA452_0==SASS_ELSEIF) ) {
						alt452=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae =
							new NoViableAltException("", 452, 0, input);
						dbg.recognitionException(nvae);
						throw nvae;
					}

					} finally {dbg.exitDecision(452);}

					switch (alt452) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							{
							dbg.location(1353,6);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:6: ( SASS_ELSE ( ws )? {...}? IDENT )
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:7: SASS_ELSE ( ws )? {...}? IDENT
							{
							dbg.location(1353,7);
							match(input,SASS_ELSE,FOLLOW_SASS_ELSE_in_sass_else9372); if (state.failed) return;dbg.location(1353,17);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:17: ( ws )?
							int alt451=2;
							try { dbg.enterSubRule(451);
							try { dbg.enterDecision(451, decisionCanBacktrack[451]);

							int LA451_0 = input.LA(1);
							if ( (LA451_0==COMMENT||LA451_0==NL||LA451_0==WS) ) {
								alt451=1;
							}
							} finally {dbg.exitDecision(451);}

							switch (alt451) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:17: ws
									{
									dbg.location(1353,17);
									pushFollow(FOLLOW_ws_in_sass_else9374);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(451);}
							dbg.location(1353,21);
							if ( !(evalPredicate(tokenNameEquals("if"),"tokenNameEquals(\"if\")")) ) {
								if (state.backtracking>0) {state.failed=true; return;}
								throw new FailedPredicateException(input, "sass_else", "tokenNameEquals(\"if\")");
							}dbg.location(1353,46);
							match(input,IDENT,FOLLOW_IDENT_in_sass_else9379); if (state.failed) return;
							}

							}
							break;
						case 2 :
							dbg.enterAlt(2);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:64: SASS_ELSEIF
							{
							dbg.location(1353,64);
							match(input,SASS_ELSEIF,FOLLOW_SASS_ELSEIF_in_sass_else9386); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(452);}
					dbg.location(1353,77);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:77: ( ws )?
					int alt453=2;
					try { dbg.enterSubRule(453);
					try { dbg.enterDecision(453, decisionCanBacktrack[453]);

					int LA453_0 = input.LA(1);
					if ( (LA453_0==COMMENT||LA453_0==NL||LA453_0==WS) ) {
						alt453=1;
					}
					} finally {dbg.exitDecision(453);}

					switch (alt453) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:77: ws
							{
							dbg.location(1353,77);
							pushFollow(FOLLOW_ws_in_sass_else9389);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(453);}
					dbg.location(1353,81);
					pushFollow(FOLLOW_sass_control_expression_in_sass_else9392);
					sass_control_expression();
					state._fsp--;
					if (state.failed) return;dbg.location(1353,105);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:105: ( ws )?
					int alt454=2;
					try { dbg.enterSubRule(454);
					try { dbg.enterDecision(454, decisionCanBacktrack[454]);

					int LA454_0 = input.LA(1);
					if ( (LA454_0==COMMENT||LA454_0==NL||LA454_0==WS) ) {
						alt454=1;
					}
					} finally {dbg.exitDecision(454);}

					switch (alt454) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:105: ws
							{
							dbg.location(1353,105);
							pushFollow(FOLLOW_ws_in_sass_else9394);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(454);}
					dbg.location(1353,109);
					pushFollow(FOLLOW_sass_control_block_in_sass_else9397);
					sass_control_block();
					state._fsp--;
					if (state.failed) return;dbg.location(1353,128);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:128: ( ( ws )? sass_else )?
					int alt456=2;
					try { dbg.enterSubRule(456);
					try { dbg.enterDecision(456, decisionCanBacktrack[456]);

					try {
						isCyclicDecision = true;
						alt456 = dfa456.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(456);}

					switch (alt456) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:129: ( ws )? sass_else
							{
							dbg.location(1353,129);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:129: ( ws )?
							int alt455=2;
							try { dbg.enterSubRule(455);
							try { dbg.enterDecision(455, decisionCanBacktrack[455]);

							int LA455_0 = input.LA(1);
							if ( (LA455_0==COMMENT||LA455_0==NL||LA455_0==WS) ) {
								alt455=1;
							}
							} finally {dbg.exitDecision(455);}

							switch (alt455) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1353:129: ws
									{
									dbg.location(1353,129);
									pushFollow(FOLLOW_ws_in_sass_else9400);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(455);}
							dbg.location(1353,133);
							pushFollow(FOLLOW_sass_else_in_sass_else9403);
							sass_else();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(456);}

					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1354, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_else");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_else"



	// $ANTLR start "sass_control_expression"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1356:1: sass_control_expression : cp_expression ;
	public final void sass_control_expression() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_expression");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1356, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1357:5: ( cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1358:5: cp_expression
			{
			dbg.location(1358,5);
			pushFollow(FOLLOW_cp_expression_in_sass_control_expression9426);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1359, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_expression");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_expression"



	// $ANTLR start "sass_for"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1361:1: sass_for : SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block ;
	public final void sass_for() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_for");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1361, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1362:5: ( SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1363:5: SASS_FOR ws cp_variable ws {...}? IDENT ws cp_math_expression ws {...}? IDENT ws cp_math_expression ( ws )? sass_control_block
			{
			dbg.location(1363,5);
			match(input,SASS_FOR,FOLLOW_SASS_FOR_in_sass_for9447); if (state.failed) return;dbg.location(1363,14);
			pushFollow(FOLLOW_ws_in_sass_for9449);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,17);
			pushFollow(FOLLOW_cp_variable_in_sass_for9451);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,29);
			pushFollow(FOLLOW_ws_in_sass_for9453);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,32);
			if ( !(evalPredicate(tokenNameEquals("from"),"tokenNameEquals(\"from\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"from\")");
			}dbg.location(1363,59);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for9457); if (state.failed) return;dbg.location(1363,74);
			pushFollow(FOLLOW_ws_in_sass_for9461);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,77);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for9463);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,96);
			pushFollow(FOLLOW_ws_in_sass_for9465);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,99);
			if ( !(evalPredicate(tokenNameEquals("to")|tokenNameEquals("through"),"tokenNameEquals(\"to\")|tokenNameEquals(\"through\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_for", "tokenNameEquals(\"to\")|tokenNameEquals(\"through\")");
			}dbg.location(1363,151);
			match(input,IDENT,FOLLOW_IDENT_in_sass_for9469); if (state.failed) return;dbg.location(1363,173);
			pushFollow(FOLLOW_ws_in_sass_for9473);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,176);
			pushFollow(FOLLOW_cp_math_expression_in_sass_for9475);
			cp_math_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1363,195);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1363:195: ( ws )?
			int alt458=2;
			try { dbg.enterSubRule(458);
			try { dbg.enterDecision(458, decisionCanBacktrack[458]);

			int LA458_0 = input.LA(1);
			if ( (LA458_0==COMMENT||LA458_0==NL||LA458_0==WS) ) {
				alt458=1;
			}
			} finally {dbg.exitDecision(458);}

			switch (alt458) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1363:195: ws
					{
					dbg.location(1363,195);
					pushFollow(FOLLOW_ws_in_sass_for9477);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(458);}
			dbg.location(1363,199);
			pushFollow(FOLLOW_sass_control_block_in_sass_for9480);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1364, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_for");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_for"



	// $ANTLR start "sass_each"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1366:1: sass_each : SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block ;
	public final void sass_each() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1366, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1367:5: ( SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:5: SASS_EACH ws sass_each_variables ws {...}? IDENT ws ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+ sass_control_block
			{
			dbg.location(1368,5);
			match(input,SASS_EACH,FOLLOW_SASS_EACH_in_sass_each9501); if (state.failed) return;dbg.location(1368,15);
			pushFollow(FOLLOW_ws_in_sass_each9503);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1368,18);
			pushFollow(FOLLOW_sass_each_variables_in_sass_each9505);
			sass_each_variables();
			state._fsp--;
			if (state.failed) return;dbg.location(1368,38);
			pushFollow(FOLLOW_ws_in_sass_each9507);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1368,41);
			if ( !(evalPredicate(tokenNameEquals("in"),"tokenNameEquals(\"in\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "sass_each", "tokenNameEquals(\"in\")");
			}dbg.location(1368,66);
			match(input,IDENT,FOLLOW_IDENT_in_sass_each9511); if (state.failed) return;dbg.location(1368,79);
			pushFollow(FOLLOW_ws_in_sass_each9515);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1368,82);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:82: ( cp_expression_list ( ( ws )? COMMA )? ( ws )? )+
			int cnt462=0;
			try { dbg.enterSubRule(462);

			loop462:
			while (true) {
				int alt462=2;
				try { dbg.enterDecision(462, decisionCanBacktrack[462]);

				int LA462_0 = input.LA(1);
				if ( (LA462_0==LBRACE) ) {
					int LA462_1 = input.LA(2);
					if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {
						alt462=1;
					}

				}
				else if ( ((LA462_0 >= ANGLE && LA462_0 <= AT_SIGN)||(LA462_0 >= BOTTOMCENTER_SYM && LA462_0 <= BOTTOMRIGHT_SYM)||LA462_0==CHARSET_SYM||LA462_0==COUNTER_STYLE_SYM||LA462_0==DIMENSION||LA462_0==EMS||LA462_0==EXS||(LA462_0 >= FONT_FACE_SYM && LA462_0 <= FREQ)||LA462_0==GEN||(LA462_0 >= HASH && LA462_0 <= HASH_SYMBOL)||(LA462_0 >= IDENT && LA462_0 <= IMPORT_SYM)||(LA462_0 >= LBRACKET && LA462_0 <= LENGTH)||(LA462_0 >= LESS_AND && LA462_0 <= LESS_JS_STRING)||LA462_0==LPAREN||(LA462_0 >= MEDIA_SYM && LA462_0 <= MOZ_DOCUMENT_SYM)||LA462_0==NAMESPACE_SYM||(LA462_0 >= NOT && LA462_0 <= NUMBER)||(LA462_0 >= PAGE_SYM && LA462_0 <= PERCENTAGE_SYMBOL)||LA462_0==PLUS||(LA462_0 >= REM && LA462_0 <= RIGHTTOP_SYM)||(LA462_0 >= SASS_AT_ROOT && LA462_0 <= SASS_DEBUG)||(LA462_0 >= SASS_EACH && LA462_0 <= SASS_ELSE)||LA462_0==SASS_EXTEND||LA462_0==SASS_FOR||LA462_0==SASS_FUNCTION||(LA462_0 >= SASS_IF && LA462_0 <= SASS_MIXIN)||LA462_0==SASS_RETURN||(LA462_0 >= SASS_VAR && LA462_0 <= SASS_WHILE)||LA462_0==STRING||(LA462_0 >= TILDE && LA462_0 <= TOPRIGHT_SYM)||(LA462_0 >= URANGE && LA462_0 <= URI)||LA462_0==VARIABLE||LA462_0==WEBKIT_KEYFRAMES_SYM) ) {
					alt462=1;
				}

				} finally {dbg.exitDecision(462);}

				switch (alt462) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:83: cp_expression_list ( ( ws )? COMMA )? ( ws )?
					{
					dbg.location(1368,83);
					pushFollow(FOLLOW_cp_expression_list_in_sass_each9518);
					cp_expression_list();
					state._fsp--;
					if (state.failed) return;dbg.location(1368,102);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:102: ( ( ws )? COMMA )?
					int alt460=2;
					try { dbg.enterSubRule(460);
					try { dbg.enterDecision(460, decisionCanBacktrack[460]);

					try {
						isCyclicDecision = true;
						alt460 = dfa460.predict(input);
					}
					catch (NoViableAltException nvae) {
						dbg.recognitionException(nvae);
						throw nvae;
					}
					} finally {dbg.exitDecision(460);}

					switch (alt460) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:103: ( ws )? COMMA
							{
							dbg.location(1368,103);
							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:103: ( ws )?
							int alt459=2;
							try { dbg.enterSubRule(459);
							try { dbg.enterDecision(459, decisionCanBacktrack[459]);

							int LA459_0 = input.LA(1);
							if ( (LA459_0==COMMENT||LA459_0==NL||LA459_0==WS) ) {
								alt459=1;
							}
							} finally {dbg.exitDecision(459);}

							switch (alt459) {
								case 1 :
									dbg.enterAlt(1);

									// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:103: ws
									{
									dbg.location(1368,103);
									pushFollow(FOLLOW_ws_in_sass_each9521);
									ws();
									state._fsp--;
									if (state.failed) return;
									}
									break;

							}
							} finally {dbg.exitSubRule(459);}
							dbg.location(1368,107);
							match(input,COMMA,FOLLOW_COMMA_in_sass_each9524); if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(460);}
					dbg.location(1368,115);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:115: ( ws )?
					int alt461=2;
					try { dbg.enterSubRule(461);
					try { dbg.enterDecision(461, decisionCanBacktrack[461]);

					int LA461_0 = input.LA(1);
					if ( (LA461_0==COMMENT||LA461_0==NL||LA461_0==WS) ) {
						alt461=1;
					}
					} finally {dbg.exitDecision(461);}

					switch (alt461) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1368:115: ws
							{
							dbg.location(1368,115);
							pushFollow(FOLLOW_ws_in_sass_each9528);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(461);}

					}
					break;

				default :
					if ( cnt462 >= 1 ) break loop462;
					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee = new EarlyExitException(462, input);
					dbg.recognitionException(eee);

					throw eee;
				}
				cnt462++;
			}
			} finally {dbg.exitSubRule(462);}
			dbg.location(1368,122);
			pushFollow(FOLLOW_sass_control_block_in_sass_each9534);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1369, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each"



	// $ANTLR start "sass_each_variables"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1371:1: sass_each_variables : cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* ;
	public final void sass_each_variables() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_each_variables");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1371, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1372:5: ( cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )* )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:5: cp_variable ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			{
			dbg.location(1373,5);
			pushFollow(FOLLOW_cp_variable_in_sass_each_variables9555);
			cp_variable();
			state._fsp--;
			if (state.failed) return;dbg.location(1373,17);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*
			try { dbg.enterSubRule(465);

			loop465:
			while (true) {
				int alt465=2;
				try { dbg.enterDecision(465, decisionCanBacktrack[465]);

				try {
					isCyclicDecision = true;
					alt465 = dfa465.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(465);}

				switch (alt465) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:19: ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable
					{
					dbg.location(1373,33);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:33: ( ws )?
					int alt463=2;
					try { dbg.enterSubRule(463);
					try { dbg.enterDecision(463, decisionCanBacktrack[463]);

					int LA463_0 = input.LA(1);
					if ( (LA463_0==COMMENT||LA463_0==NL||LA463_0==WS) ) {
						alt463=1;
					}
					} finally {dbg.exitDecision(463);}

					switch (alt463) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:33: ws
							{
							dbg.location(1373,33);
							pushFollow(FOLLOW_ws_in_sass_each_variables9567);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(463);}
					dbg.location(1373,37);
					match(input,COMMA,FOLLOW_COMMA_in_sass_each_variables9570); if (state.failed) return;dbg.location(1373,43);
					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:43: ( ws )?
					int alt464=2;
					try { dbg.enterSubRule(464);
					try { dbg.enterDecision(464, decisionCanBacktrack[464]);

					int LA464_0 = input.LA(1);
					if ( (LA464_0==COMMENT||LA464_0==NL||LA464_0==WS) ) {
						alt464=1;
					}
					} finally {dbg.exitDecision(464);}

					switch (alt464) {
						case 1 :
							dbg.enterAlt(1);

							// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:43: ws
							{
							dbg.location(1373,43);
							pushFollow(FOLLOW_ws_in_sass_each_variables9572);
							ws();
							state._fsp--;
							if (state.failed) return;
							}
							break;

					}
					} finally {dbg.exitSubRule(464);}
					dbg.location(1373,47);
					pushFollow(FOLLOW_cp_variable_in_sass_each_variables9575);
					cp_variable();
					state._fsp--;
					if (state.failed) return;
					}
					break;

				default :
					break loop465;
				}
			}
			} finally {dbg.exitSubRule(465);}

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1374, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_each_variables");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_each_variables"



	// $ANTLR start "sass_while"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1376:1: sass_while : SASS_WHILE ws sass_control_expression ( ws )? sass_control_block ;
	public final void sass_while() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_while");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1376, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1377:5: ( SASS_WHILE ws sass_control_expression ( ws )? sass_control_block )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1378:5: SASS_WHILE ws sass_control_expression ( ws )? sass_control_block
			{
			dbg.location(1378,5);
			match(input,SASS_WHILE,FOLLOW_SASS_WHILE_in_sass_while9600); if (state.failed) return;dbg.location(1378,16);
			pushFollow(FOLLOW_ws_in_sass_while9602);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1378,19);
			pushFollow(FOLLOW_sass_control_expression_in_sass_while9604);
			sass_control_expression();
			state._fsp--;
			if (state.failed) return;dbg.location(1378,43);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1378:43: ( ws )?
			int alt466=2;
			try { dbg.enterSubRule(466);
			try { dbg.enterDecision(466, decisionCanBacktrack[466]);

			int LA466_0 = input.LA(1);
			if ( (LA466_0==COMMENT||LA466_0==NL||LA466_0==WS) ) {
				alt466=1;
			}
			} finally {dbg.exitDecision(466);}

			switch (alt466) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1378:43: ws
					{
					dbg.location(1378,43);
					pushFollow(FOLLOW_ws_in_sass_while9606);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(466);}
			dbg.location(1378,47);
			pushFollow(FOLLOW_sass_control_block_in_sass_while9609);
			sass_control_block();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1379, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_while");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_while"



	// $ANTLR start "sass_control_block"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1381:1: sass_control_block : LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_control_block() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_control_block");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1381, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1382:5: ( LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:5: LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1383,5);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_control_block9630); if (state.failed) return;dbg.location(1383,12);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:12: ( ws )?
			int alt467=2;
			try { dbg.enterSubRule(467);
			try { dbg.enterDecision(467, decisionCanBacktrack[467]);

			int LA467_0 = input.LA(1);
			if ( (LA467_0==COMMENT||LA467_0==NL||LA467_0==WS) ) {
				alt467=1;
			}
			} finally {dbg.exitDecision(467);}

			switch (alt467) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:12: ws
					{
					dbg.location(1383,12);
					pushFollow(FOLLOW_ws_in_sass_control_block9632);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(467);}
			dbg.location(1383,16);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:16: ( declarations )?
			int alt468=2;
			try { dbg.enterSubRule(468);
			try { dbg.enterDecision(468, decisionCanBacktrack[468]);

			int LA468_0 = input.LA(1);
			if ( ((LA468_0 >= AT_IDENT && LA468_0 <= AT_SIGN)||(LA468_0 >= BOTTOMCENTER_SYM && LA468_0 <= BOTTOMRIGHT_SYM)||(LA468_0 >= CHARSET_SYM && LA468_0 <= COLON)||LA468_0==COUNTER_STYLE_SYM||(LA468_0 >= DCOLON && LA468_0 <= DOT)||LA468_0==FONT_FACE_SYM||(LA468_0 >= GEN && LA468_0 <= GREATER)||(LA468_0 >= HASH && LA468_0 <= HASH_SYMBOL)||LA468_0==IDENT||LA468_0==IMPORT_SYM||(LA468_0 >= LBRACKET && LA468_0 <= LEFTTOP_SYM)||LA468_0==LESS_AND||(LA468_0 >= MEDIA_SYM && LA468_0 <= MOZ_DOCUMENT_SYM)||LA468_0==NAMESPACE_SYM||LA468_0==PAGE_SYM||(LA468_0 >= PIPE && LA468_0 <= PLUS)||(LA468_0 >= RIGHTBOTTOM_SYM && LA468_0 <= RIGHTTOP_SYM)||(LA468_0 >= SASS_AT_ROOT && LA468_0 <= SASS_DEBUG)||(LA468_0 >= SASS_EACH && LA468_0 <= SASS_ELSE)||(LA468_0 >= SASS_ERROR && LA468_0 <= SASS_FOR)||LA468_0==SASS_FUNCTION||(LA468_0 >= SASS_IF && LA468_0 <= SASS_MIXIN)||LA468_0==SASS_RETURN||(LA468_0 >= SASS_VAR && LA468_0 <= SEMI)||LA468_0==STAR||LA468_0==SUPPORTS_SYM||LA468_0==TILDE||(LA468_0 >= TOPCENTER_SYM && LA468_0 <= TOPRIGHT_SYM)||LA468_0==VARIABLE||LA468_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt468=1;
			}
			} finally {dbg.exitDecision(468);}

			switch (alt468) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1383:16: declarations
					{
					dbg.location(1383,16);
					pushFollow(FOLLOW_declarations_in_sass_control_block9635);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(468);}
			dbg.location(1383,30);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_control_block9638); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1384, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_control_block");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_control_block"



	// $ANTLR start "sass_function_declaration"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1386:1: sass_function_declaration : SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE ;
	public final void sass_function_declaration() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_declaration");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1386, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1387:5: ( SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:5: SASS_FUNCTION ws sass_function_name ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN ( ws )? LBRACE ( ws )? ( declarations )? RBRACE
			{
			dbg.location(1392,5);
			match(input,SASS_FUNCTION,FOLLOW_SASS_FUNCTION_in_sass_function_declaration9680); if (state.failed) return;dbg.location(1392,19);
			pushFollow(FOLLOW_ws_in_sass_function_declaration9682);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1392,22);
			pushFollow(FOLLOW_sass_function_name_in_sass_function_declaration9684);
			sass_function_name();
			state._fsp--;
			if (state.failed) return;dbg.location(1392,41);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:41: ( ws )?
			int alt469=2;
			try { dbg.enterSubRule(469);
			try { dbg.enterDecision(469, decisionCanBacktrack[469]);

			int LA469_0 = input.LA(1);
			if ( (LA469_0==COMMENT||LA469_0==NL||LA469_0==WS) ) {
				alt469=1;
			}
			} finally {dbg.exitDecision(469);}

			switch (alt469) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:41: ws
					{
					dbg.location(1392,41);
					pushFollow(FOLLOW_ws_in_sass_function_declaration9686);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(469);}
			dbg.location(1392,45);
			match(input,LPAREN,FOLLOW_LPAREN_in_sass_function_declaration9689); if (state.failed) return;dbg.location(1392,52);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:52: ( ws )?
			int alt470=2;
			try { dbg.enterSubRule(470);
			try { dbg.enterDecision(470, decisionCanBacktrack[470]);

			int LA470_0 = input.LA(1);
			if ( (LA470_0==COMMENT||LA470_0==NL||LA470_0==WS) ) {
				alt470=1;
			}
			} finally {dbg.exitDecision(470);}

			switch (alt470) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:52: ws
					{
					dbg.location(1392,52);
					pushFollow(FOLLOW_ws_in_sass_function_declaration9691);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(470);}
			dbg.location(1392,56);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:56: ( cp_args_list )?
			int alt471=2;
			try { dbg.enterSubRule(471);
			try { dbg.enterDecision(471, decisionCanBacktrack[471]);

			int LA471_0 = input.LA(1);
			if ( (LA471_0==AT_IDENT||(LA471_0 >= BOTTOMCENTER_SYM && LA471_0 <= BOTTOMRIGHT_SYM)||LA471_0==CHARSET_SYM||(LA471_0 >= COUNTER_STYLE_SYM && LA471_0 <= CP_DOTS)||LA471_0==FONT_FACE_SYM||LA471_0==IDENT||LA471_0==IMPORT_SYM||(LA471_0 >= LEFTBOTTOM_SYM && LA471_0 <= LEFTTOP_SYM)||LA471_0==LESS_REST||LA471_0==MEDIA_SYM||LA471_0==MOZ_DOCUMENT_SYM||LA471_0==NAMESPACE_SYM||LA471_0==PAGE_SYM||(LA471_0 >= RIGHTBOTTOM_SYM && LA471_0 <= RIGHTTOP_SYM)||(LA471_0 >= SASS_AT_ROOT && LA471_0 <= SASS_DEBUG)||(LA471_0 >= SASS_EACH && LA471_0 <= SASS_ELSE)||LA471_0==SASS_EXTEND||LA471_0==SASS_FOR||LA471_0==SASS_FUNCTION||(LA471_0 >= SASS_IF && LA471_0 <= SASS_MIXIN)||LA471_0==SASS_RETURN||(LA471_0 >= SASS_VAR && LA471_0 <= SASS_WHILE)||(LA471_0 >= TOPCENTER_SYM && LA471_0 <= TOPRIGHT_SYM)||LA471_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt471=1;
			}
			} finally {dbg.exitDecision(471);}

			switch (alt471) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:56: cp_args_list
					{
					dbg.location(1392,56);
					pushFollow(FOLLOW_cp_args_list_in_sass_function_declaration9694);
					cp_args_list();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(471);}
			dbg.location(1392,70);
			match(input,RPAREN,FOLLOW_RPAREN_in_sass_function_declaration9697); if (state.failed) return;dbg.location(1392,77);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:77: ( ws )?
			int alt472=2;
			try { dbg.enterSubRule(472);
			try { dbg.enterDecision(472, decisionCanBacktrack[472]);

			int LA472_0 = input.LA(1);
			if ( (LA472_0==COMMENT||LA472_0==NL||LA472_0==WS) ) {
				alt472=1;
			}
			} finally {dbg.exitDecision(472);}

			switch (alt472) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:77: ws
					{
					dbg.location(1392,77);
					pushFollow(FOLLOW_ws_in_sass_function_declaration9699);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(472);}
			dbg.location(1392,81);
			match(input,LBRACE,FOLLOW_LBRACE_in_sass_function_declaration9702); if (state.failed) return;dbg.location(1392,88);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:88: ( ws )?
			int alt473=2;
			try { dbg.enterSubRule(473);
			try { dbg.enterDecision(473, decisionCanBacktrack[473]);

			int LA473_0 = input.LA(1);
			if ( (LA473_0==COMMENT||LA473_0==NL||LA473_0==WS) ) {
				alt473=1;
			}
			} finally {dbg.exitDecision(473);}

			switch (alt473) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:88: ws
					{
					dbg.location(1392,88);
					pushFollow(FOLLOW_ws_in_sass_function_declaration9704);
					ws();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(473);}
			dbg.location(1392,92);
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:92: ( declarations )?
			int alt474=2;
			try { dbg.enterSubRule(474);
			try { dbg.enterDecision(474, decisionCanBacktrack[474]);

			int LA474_0 = input.LA(1);
			if ( ((LA474_0 >= AT_IDENT && LA474_0 <= AT_SIGN)||(LA474_0 >= BOTTOMCENTER_SYM && LA474_0 <= BOTTOMRIGHT_SYM)||(LA474_0 >= CHARSET_SYM && LA474_0 <= COLON)||LA474_0==COUNTER_STYLE_SYM||(LA474_0 >= DCOLON && LA474_0 <= DOT)||LA474_0==FONT_FACE_SYM||(LA474_0 >= GEN && LA474_0 <= GREATER)||(LA474_0 >= HASH && LA474_0 <= HASH_SYMBOL)||LA474_0==IDENT||LA474_0==IMPORT_SYM||(LA474_0 >= LBRACKET && LA474_0 <= LEFTTOP_SYM)||LA474_0==LESS_AND||(LA474_0 >= MEDIA_SYM && LA474_0 <= MOZ_DOCUMENT_SYM)||LA474_0==NAMESPACE_SYM||LA474_0==PAGE_SYM||(LA474_0 >= PIPE && LA474_0 <= PLUS)||(LA474_0 >= RIGHTBOTTOM_SYM && LA474_0 <= RIGHTTOP_SYM)||(LA474_0 >= SASS_AT_ROOT && LA474_0 <= SASS_DEBUG)||(LA474_0 >= SASS_EACH && LA474_0 <= SASS_ELSE)||(LA474_0 >= SASS_ERROR && LA474_0 <= SASS_FOR)||LA474_0==SASS_FUNCTION||(LA474_0 >= SASS_IF && LA474_0 <= SASS_MIXIN)||LA474_0==SASS_RETURN||(LA474_0 >= SASS_VAR && LA474_0 <= SEMI)||LA474_0==STAR||LA474_0==SUPPORTS_SYM||LA474_0==TILDE||(LA474_0 >= TOPCENTER_SYM && LA474_0 <= TOPRIGHT_SYM)||LA474_0==VARIABLE||LA474_0==WEBKIT_KEYFRAMES_SYM) ) {
				alt474=1;
			}
			} finally {dbg.exitDecision(474);}

			switch (alt474) {
				case 1 :
					dbg.enterAlt(1);

					// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1392:92: declarations
					{
					dbg.location(1392,92);
					pushFollow(FOLLOW_declarations_in_sass_function_declaration9707);
					declarations();
					state._fsp--;
					if (state.failed) return;
					}
					break;

			}
			} finally {dbg.exitSubRule(474);}
			dbg.location(1392,106);
			match(input,RBRACE,FOLLOW_RBRACE_in_sass_function_declaration9710); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1393, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_declaration");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_declaration"



	// $ANTLR start "sass_function_name"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1395:1: sass_function_name : IDENT ;
	public final void sass_function_name() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_name");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1395, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1396:5: ( IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1397:5: IDENT
			{
			dbg.location(1397,5);
			match(input,IDENT,FOLLOW_IDENT_in_sass_function_name9731); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1398, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_name");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_name"



	// $ANTLR start "sass_function_return"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1400:1: sass_function_return : SASS_RETURN ws cp_expression ;
	public final void sass_function_return() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_function_return");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1400, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1401:5: ( SASS_RETURN ws cp_expression )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1402:5: SASS_RETURN ws cp_expression
			{
			dbg.location(1402,5);
			match(input,SASS_RETURN,FOLLOW_SASS_RETURN_in_sass_function_return9752); if (state.failed) return;dbg.location(1402,17);
			pushFollow(FOLLOW_ws_in_sass_function_return9754);
			ws();
			state._fsp--;
			if (state.failed) return;dbg.location(1402,20);
			pushFollow(FOLLOW_cp_expression_in_sass_function_return9756);
			cp_expression();
			state._fsp--;
			if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1403, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_function_return");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_function_return"



	// $ANTLR start "sass_content"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1405:1: sass_content : SASS_CONTENT ;
	public final void sass_content() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "sass_content");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1405, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1406:5: ( SASS_CONTENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1407:5: SASS_CONTENT
			{
			dbg.location(1407,5);
			match(input,SASS_CONTENT,FOLLOW_SASS_CONTENT_in_sass_content9777); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1408, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "sass_content");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "sass_content"



	// $ANTLR start "less_import_types"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1410:1: less_import_types :{...}? IDENT ;
	public final void less_import_types() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_import_types");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1410, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1410:18: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1411:5: {...}? IDENT
			{
			dbg.location(1411,5);
			if ( !(evalPredicate(tokenNameIs(new String[]{"LESS", "CSS", "REFERENCE", "INLINE", "ONCE", "MULTIPLE"}),"tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_import_types", "tokenNameIs(new String[]{\"LESS\", \"CSS\", \"REFERENCE\", \"INLINE\", \"ONCE\", \"MULTIPLE\"})");
			}dbg.location(1411,92);
			match(input,IDENT,FOLLOW_IDENT_in_less_import_types9796); if (state.failed) return;
			}

		}
		catch ( RecognitionException rce) {

			        reportError(rce);
			        input.consume();
			    
		}

		finally {
			// do for sure before leaving
		}
		dbg.location(1412, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_import_types");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_import_types"



	// $ANTLR start "less_when"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1417:1: less_when :{...}? IDENT ;
	public final void less_when() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "less_when");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1417, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1417:10: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1418:5: {...}? IDENT
			{
			dbg.location(1418,5);
			if ( !(evalPredicate(tokenNameEquals("when"),"tokenNameEquals(\"when\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "less_when", "tokenNameEquals(\"when\")");
			}dbg.location(1418,32);
			match(input,IDENT,FOLLOW_IDENT_in_less_when9819); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1419, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "less_when");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "less_when"



	// $ANTLR start "key_and"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1421:1: key_and :{...}? IDENT ;
	public final void key_and() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_and");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1421, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1421:8: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1422:5: {...}? IDENT
			{
			dbg.location(1422,5);
			if ( !(evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_and", "tokenNameEquals(\"and\")");
			}dbg.location(1422,31);
			match(input,IDENT,FOLLOW_IDENT_in_key_and9838); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1423, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_and");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_and"



	// $ANTLR start "key_or"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1425:1: key_or :{...}? IDENT ;
	public final void key_or() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_or");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1425, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1425:7: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1426:5: {...}? IDENT
			{
			dbg.location(1426,5);
			if ( !(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_or", "tokenNameEquals(\"or\")");
			}dbg.location(1426,30);
			match(input,IDENT,FOLLOW_IDENT_in_key_or9856); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1427, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_or");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_or"



	// $ANTLR start "key_only"
	// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:1: key_only :{...}? IDENT ;
	public final void key_only() throws RecognitionException {
		try { dbg.enterRule(getGrammarFileName(), "key_only");
		if ( getRuleLevel()==0 ) {dbg.commence();}
		incRuleLevel();
		dbg.location(1429, 0);

		try {
			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1429:9: ({...}? IDENT )
			dbg.enterAlt(1);

			// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1430:5: {...}? IDENT
			{
			dbg.location(1430,5);
			if ( !(evalPredicate(tokenNameEquals("only"),"tokenNameEquals(\"only\")")) ) {
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "key_only", "tokenNameEquals(\"only\")");
			}dbg.location(1430,32);
			match(input,IDENT,FOLLOW_IDENT_in_key_only9874); if (state.failed) return;
			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		dbg.location(1431, 4);

		}
		finally {
			dbg.exitRule(getGrammarFileName(), "key_only");
			decRuleLevel();
			if ( getRuleLevel()==0 ) {dbg.terminate();}
		}

	}
	// $ANTLR end "key_only"

	// $ANTLR start synpred1_Css3
	public final void synpred1_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:44: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:45: ( ws )? mediaQueryList
		{
		dbg.location(329,45);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:45: ( ws )?
		int alt475=2;
		try { dbg.enterSubRule(475);
		try { dbg.enterDecision(475, decisionCanBacktrack[475]);

		int LA475_0 = input.LA(1);
		if ( (LA475_0==COMMENT||LA475_0==NL||LA475_0==WS) ) {
			alt475=1;
		}
		} finally {dbg.exitDecision(475);}

		switch (alt475) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:329:45: ws
				{
				dbg.location(329,45);
				pushFollow(FOLLOW_ws_in_synpred1_Css3439);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(475);}
		dbg.location(329,49);
		pushFollow(FOLLOW_mediaQueryList_in_synpred1_Css3442);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_Css3

	// $ANTLR start synpred2_Css3
	public final void synpred2_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:98: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:99: ( ws )? mediaQueryList
		{
		dbg.location(332,99);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:99: ( ws )?
		int alt476=2;
		try { dbg.enterSubRule(476);
		try { dbg.enterDecision(476, decisionCanBacktrack[476]);

		int LA476_0 = input.LA(1);
		if ( (LA476_0==COMMENT||LA476_0==NL||LA476_0==WS) ) {
			alt476=1;
		}
		} finally {dbg.exitDecision(476);}

		switch (alt476) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:332:99: ws
				{
				dbg.location(332,99);
				pushFollow(FOLLOW_ws_in_synpred2_Css3503);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(476);}
		dbg.location(332,103);
		pushFollow(FOLLOW_mediaQueryList_in_synpred2_Css3506);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_Css3

	// $ANTLR start synpred3_Css3
	public final void synpred3_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:101: ( ( ws )? mediaQueryList )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:102: ( ws )? mediaQueryList
		{
		dbg.location(334,102);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:102: ( ws )?
		int alt477=2;
		try { dbg.enterSubRule(477);
		try { dbg.enterDecision(477, decisionCanBacktrack[477]);

		int LA477_0 = input.LA(1);
		if ( (LA477_0==COMMENT||LA477_0==NL||LA477_0==WS) ) {
			alt477=1;
		}
		} finally {dbg.exitDecision(477);}

		switch (alt477) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:334:102: ws
				{
				dbg.location(334,102);
				pushFollow(FOLLOW_ws_in_synpred3_Css3557);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(477);}
		dbg.location(334,106);
		pushFollow(FOLLOW_mediaQueryList_in_synpred3_Css3560);
		mediaQueryList();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_Css3

	// $ANTLR start synpred4_Css3
	public final void synpred4_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:27: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:28: ( ws )? SEMI
		{
		dbg.location(401,28);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:28: ( ws )?
		int alt478=2;
		try { dbg.enterSubRule(478);
		try { dbg.enterDecision(478, decisionCanBacktrack[478]);

		int LA478_0 = input.LA(1);
		if ( (LA478_0==COMMENT||LA478_0==NL||LA478_0==WS) ) {
			alt478=1;
		}
		} finally {dbg.exitDecision(478);}

		switch (alt478) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:401:28: ws
				{
				dbg.location(401,28);
				pushFollow(FOLLOW_ws_in_synpred4_Css31093);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(478);}
		dbg.location(401,32);
		match(input,SEMI,FOLLOW_SEMI_in_synpred4_Css31096); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_Css3

	// $ANTLR start synpred5_Css3
	public final void synpred5_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:5: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE ) )
		int alt483=2;
		try { dbg.enterDecision(483, decisionCanBacktrack[483]);

		int LA483_0 = input.LA(1);
		if ( (LA483_0==SASS_MIXIN) ) {
			alt483=1;
		}
		else if ( (LA483_0==DOT||LA483_0==HASH) ) {
			alt483=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 483, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(483);}

		switch (alt483) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:6: SASS_MIXIN
				{
				dbg.location(410,6);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred5_Css31194); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(410,19);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:19: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:20: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | SEMI ) )* LBRACE
				{
				dbg.location(410,20);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:20: ( ( DOT IDENT ) | HASH )
				int alt479=2;
				try { dbg.enterSubRule(479);
				try { dbg.enterDecision(479, decisionCanBacktrack[479]);

				int LA479_0 = input.LA(1);
				if ( (LA479_0==DOT) ) {
					alt479=1;
				}
				else if ( (LA479_0==HASH) ) {
					alt479=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 479, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(479);}

				switch (alt479) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:21: ( DOT IDENT )
						{
						dbg.location(410,21);
						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:21: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:22: DOT IDENT
						{
						dbg.location(410,22);
						match(input,DOT,FOLLOW_DOT_in_synpred5_Css31201); if (state.failed) return;dbg.location(410,26);
						match(input,IDENT,FOLLOW_IDENT_in_synpred5_Css31203); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:35: HASH
						{
						dbg.location(410,35);
						match(input,HASH,FOLLOW_HASH_in_synpred5_Css31208); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(479);}
				dbg.location(410,41);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:41: ( ws )?
				int alt480=2;
				try { dbg.enterSubRule(480);
				try { dbg.enterDecision(480, decisionCanBacktrack[480]);

				int LA480_0 = input.LA(1);
				if ( (LA480_0==COMMENT||LA480_0==NL||LA480_0==WS) ) {
					alt480=1;
				}
				} finally {dbg.exitDecision(480);}

				switch (alt480) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:41: ws
						{
						dbg.location(410,41);
						pushFollow(FOLLOW_ws_in_synpred5_Css31211);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(480);}
				dbg.location(410,45);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred5_Css31214); if (state.failed) return;dbg.location(410,52);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:52: (~ RPAREN )*
				try { dbg.enterSubRule(481);

				loop481:
				while (true) {
					int alt481=2;
					try { dbg.enterDecision(481, decisionCanBacktrack[481]);

					int LA481_0 = input.LA(1);
					if ( ((LA481_0 >= A && LA481_0 <= RIGHTTOP_SYM)||(LA481_0 >= S && LA481_0 <= Z)) ) {
						alt481=1;
					}

					} finally {dbg.exitDecision(481);}

					switch (alt481) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(410,52);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop481;
					}
				}
				} finally {dbg.exitSubRule(481);}
				dbg.location(410,63);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred5_Css31222); if (state.failed) return;dbg.location(410,70);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:410:70: (~ ( LBRACE | SEMI ) )*
				try { dbg.enterSubRule(482);

				loop482:
				while (true) {
					int alt482=2;
					try { dbg.enterDecision(482, decisionCanBacktrack[482]);

					int LA482_0 = input.LA(1);
					if ( ((LA482_0 >= A && LA482_0 <= L)||(LA482_0 >= LBRACKET && LA482_0 <= SASS_WHILE)||(LA482_0 >= SOLIDUS && LA482_0 <= Z)) ) {
						alt482=1;
					}

					} finally {dbg.exitDecision(482);}

					switch (alt482) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(410,70);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop482;
					}
				}
				} finally {dbg.exitSubRule(482);}
				dbg.location(410,86);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred5_Css31232); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred5_Css3

	// $ANTLR start synpred6_Css3
	public final void synpred6_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:7: ( cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:8: cp_mixin_call ( ( ws )? IMPORTANT_SYM )? ( ws )? SEMI
		{
		dbg.location(412,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred6_Css31250);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(412,22);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:22: ( ( ws )? IMPORTANT_SYM )?
		int alt485=2;
		try { dbg.enterSubRule(485);
		try { dbg.enterDecision(485, decisionCanBacktrack[485]);

		try {
			isCyclicDecision = true;
			alt485 = dfa485.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(485);}

		switch (alt485) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:23: ( ws )? IMPORTANT_SYM
				{
				dbg.location(412,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:23: ( ws )?
				int alt484=2;
				try { dbg.enterSubRule(484);
				try { dbg.enterDecision(484, decisionCanBacktrack[484]);

				int LA484_0 = input.LA(1);
				if ( (LA484_0==COMMENT||LA484_0==NL||LA484_0==WS) ) {
					alt484=1;
				}
				} finally {dbg.exitDecision(484);}

				switch (alt484) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:23: ws
						{
						dbg.location(412,23);
						pushFollow(FOLLOW_ws_in_synpred6_Css31253);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(484);}
				dbg.location(412,27);
				match(input,IMPORTANT_SYM,FOLLOW_IMPORTANT_SYM_in_synpred6_Css31256); if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(485);}
		dbg.location(412,43);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:43: ( ws )?
		int alt486=2;
		try { dbg.enterSubRule(486);
		try { dbg.enterDecision(486, decisionCanBacktrack[486]);

		int LA486_0 = input.LA(1);
		if ( (LA486_0==COMMENT||LA486_0==NL||LA486_0==WS) ) {
			alt486=1;
		}
		} finally {dbg.exitDecision(486);}

		switch (alt486) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:412:43: ws
				{
				dbg.location(412,43);
				pushFollow(FOLLOW_ws_in_synpred6_Css31260);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(486);}
		dbg.location(412,47);
		match(input,SEMI,FOLLOW_SEMI_in_synpred6_Css31263); if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_Css3

	// $ANTLR start synpred7_Css3
	public final void synpred7_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:413:8: cp_mixin_call
		{
		dbg.location(413,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred7_Css31286);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred7_Css3

	// $ANTLR start synpred8_Css3
	public final void synpred8_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(414,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt492=3;
		try { dbg.enterSubRule(492);
		try { dbg.enterDecision(492, decisionCanBacktrack[492]);

		try {
			isCyclicDecision = true;
			alt492 = dfa492.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(492);}

		switch (alt492) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(414,9);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(414,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31311); if (state.failed) return;dbg.location(414,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:23: ( ws selectorsGroup )?
				int alt487=2;
				try { dbg.enterSubRule(487);
				try { dbg.enterDecision(487, decisionCanBacktrack[487]);

				try {
					isCyclicDecision = true;
					alt487 = dfa487.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(487);}

				switch (alt487) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:24: ws selectorsGroup
						{
						dbg.location(414,24);
						pushFollow(FOLLOW_ws_in_synpred8_Css31314);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(414,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31316);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(487);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(414,48);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(414,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred8_Css31325); if (state.failed) return;dbg.location(414,62);
				pushFollow(FOLLOW_ws_in_synpred8_Css31327);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(414,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred8_Css31329); if (state.failed) return;dbg.location(414,72);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:72: ( ws )?
				int alt488=2;
				try { dbg.enterSubRule(488);
				try { dbg.enterDecision(488, decisionCanBacktrack[488]);

				int LA488_0 = input.LA(1);
				if ( (LA488_0==COMMENT||LA488_0==NL||LA488_0==WS) ) {
					alt488=1;
				}
				} finally {dbg.exitDecision(488);}

				switch (alt488) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:72: ws
						{
						dbg.location(414,72);
						pushFollow(FOLLOW_ws_in_synpred8_Css31331);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(488);}
				dbg.location(414,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31334); if (state.failed) return;dbg.location(414,82);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:82: ( ws )?
				int alt489=2;
				try { dbg.enterSubRule(489);
				try { dbg.enterDecision(489, decisionCanBacktrack[489]);

				int LA489_0 = input.LA(1);
				if ( (LA489_0==COMMENT||LA489_0==NL||LA489_0==WS) ) {
					alt489=1;
				}
				} finally {dbg.exitDecision(489);}

				switch (alt489) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:82: ws
						{
						dbg.location(414,82);
						pushFollow(FOLLOW_ws_in_synpred8_Css31336);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(489);}
				dbg.location(414,86);
				match(input,COLON,FOLLOW_COLON_in_synpred8_Css31339); if (state.failed) return;dbg.location(414,92);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:92: ( ws )?
				int alt490=2;
				try { dbg.enterSubRule(490);
				try { dbg.enterDecision(490, decisionCanBacktrack[490]);

				int LA490_0 = input.LA(1);
				if ( (LA490_0==COMMENT||LA490_0==NL||LA490_0==WS) ) {
					alt490=1;
				}
				} finally {dbg.exitDecision(490);}

				switch (alt490) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:92: ws
						{
						dbg.location(414,92);
						pushFollow(FOLLOW_ws_in_synpred8_Css31341);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(490);}
				dbg.location(414,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred8_Css31344); if (state.failed) return;dbg.location(414,102);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:102: ( ws )?
				int alt491=2;
				try { dbg.enterSubRule(491);
				try { dbg.enterDecision(491, decisionCanBacktrack[491]);

				int LA491_0 = input.LA(1);
				if ( (LA491_0==COMMENT||LA491_0==NL||LA491_0==WS) ) {
					alt491=1;
				}
				} finally {dbg.exitDecision(491);}

				switch (alt491) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:102: ws
						{
						dbg.location(414,102);
						pushFollow(FOLLOW_ws_in_synpred8_Css31346);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(491);}
				dbg.location(414,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred8_Css31349); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:116: selectorsGroup
				{
				dbg.location(414,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred8_Css31354);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(492);}
		dbg.location(414,132);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:132: ( ws )?
		int alt493=2;
		try { dbg.enterSubRule(493);
		try { dbg.enterDecision(493, decisionCanBacktrack[493]);

		int LA493_0 = input.LA(1);
		if ( (LA493_0==COMMENT||LA493_0==NL||LA493_0==WS) ) {
			alt493=1;
		}
		} finally {dbg.exitDecision(493);}

		switch (alt493) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:414:132: ws
				{
				dbg.location(414,132);
				pushFollow(FOLLOW_ws_in_synpred8_Css31357);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(493);}
		dbg.location(414,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred8_Css31360); if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_Css3

	// $ANTLR start synpred9_Css3
	public final void synpred9_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:415:8: propertyDeclaration
		{
		dbg.location(415,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred9_Css31372);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_Css3

	// $ANTLR start synpred10_Css3
	public final void synpred10_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:17: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:18: ( ws )? COMMA
		{
		dbg.location(430,18);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:18: ( ws )?
		int alt494=2;
		try { dbg.enterSubRule(494);
		try { dbg.enterDecision(494, decisionCanBacktrack[494]);

		int LA494_0 = input.LA(1);
		if ( (LA494_0==COMMENT||LA494_0==NL||LA494_0==WS) ) {
			alt494=1;
		}
		} finally {dbg.exitDecision(494);}

		switch (alt494) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:430:18: ws
				{
				dbg.location(430,18);
				pushFollow(FOLLOW_ws_in_synpred10_Css31487);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(494);}
		dbg.location(430,22);
		match(input,COMMA,FOLLOW_COMMA_in_synpred10_Css31490); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_Css3

	// $ANTLR start synpred11_Css3
	public final void synpred11_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:44: ( ( ws )? key_and )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:45: ( ws )? key_and
		{
		dbg.location(435,45);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:45: ( ws )?
		int alt495=2;
		try { dbg.enterSubRule(495);
		try { dbg.enterDecision(495, decisionCanBacktrack[495]);

		int LA495_0 = input.LA(1);
		if ( (LA495_0==COMMENT||LA495_0==NL||LA495_0==WS) ) {
			alt495=1;
		}
		} finally {dbg.exitDecision(495);}

		switch (alt495) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:435:45: ws
				{
				dbg.location(435,45);
				pushFollow(FOLLOW_ws_in_synpred11_Css31534);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(495);}
		dbg.location(435,49);
		pushFollow(FOLLOW_key_and_in_synpred11_Css31537);
		key_and();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_Css3

	// $ANTLR start synpred12_Css3
	public final void synpred12_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:24: ( ( ws )? key_and )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:25: ( ws )? key_and
		{
		dbg.location(436,25);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:25: ( ws )?
		int alt496=2;
		try { dbg.enterSubRule(496);
		try { dbg.enterDecision(496, decisionCanBacktrack[496]);

		int LA496_0 = input.LA(1);
		if ( (LA496_0==COMMENT||LA496_0==NL||LA496_0==WS) ) {
			alt496=1;
		}
		} finally {dbg.exitDecision(496);}

		switch (alt496) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:436:25: ws
				{
				dbg.location(436,25);
				pushFollow(FOLLOW_ws_in_synpred12_Css31564);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(496);}
		dbg.location(436,29);
		pushFollow(FOLLOW_key_and_in_synpred12_Css31567);
		key_and();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred12_Css3

	// $ANTLR start synpred13_Css3
	public final void synpred13_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:5: ( LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:450:6: LPAREN
		{
		dbg.location(450,6);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred13_Css31649); if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_Css3

	// $ANTLR start synpred14_Css3
	public final void synpred14_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:451:7: ( HASH )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:451:8: HASH
		{
		dbg.location(451,8);
		match(input,HASH,FOLLOW_HASH_in_synpred14_Css31678); if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_Css3

	// $ANTLR start synpred15_Css3
	public final void synpred15_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:22: ( ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:23: ( ws )? SEMI
		{
		dbg.location(471,23);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:23: ( ws )?
		int alt497=2;
		try { dbg.enterSubRule(497);
		try { dbg.enterDecision(497, decisionCanBacktrack[497]);

		int LA497_0 = input.LA(1);
		if ( (LA497_0==COMMENT||LA497_0==NL||LA497_0==WS) ) {
			alt497=1;
		}
		} finally {dbg.exitDecision(497);}

		switch (alt497) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:471:23: ws
				{
				dbg.location(471,23);
				pushFollow(FOLLOW_ws_in_synpred15_Css31824);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(497);}
		dbg.location(471,27);
		match(input,SEMI,FOLLOW_SEMI_in_synpred15_Css31827); if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_Css3

	// $ANTLR start synpred16_Css3
	public final void synpred16_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:9: ( SASS_MIXIN | ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE ) )
		int alt502=2;
		try { dbg.enterDecision(502, decisionCanBacktrack[502]);

		int LA502_0 = input.LA(1);
		if ( (LA502_0==SASS_MIXIN) ) {
			alt502=1;
		}
		else if ( (LA502_0==DOT||LA502_0==HASH) ) {
			alt502=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 502, 0, input);
			dbg.recognitionException(nvae);
			throw nvae;
		}

		} finally {dbg.exitDecision(502);}

		switch (alt502) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:10: SASS_MIXIN
				{
				dbg.location(479,10);
				match(input,SASS_MIXIN,FOLLOW_SASS_MIXIN_in_synpred16_Css31902); if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				{
				dbg.location(479,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:23: ( ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:24: ( ( DOT IDENT ) | HASH ) ( ws )? LPAREN (~ RPAREN )* RPAREN (~ ( LBRACE | RBRACE | SEMI ) )* LBRACE
				{
				dbg.location(479,24);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:24: ( ( DOT IDENT ) | HASH )
				int alt498=2;
				try { dbg.enterSubRule(498);
				try { dbg.enterDecision(498, decisionCanBacktrack[498]);

				int LA498_0 = input.LA(1);
				if ( (LA498_0==DOT) ) {
					alt498=1;
				}
				else if ( (LA498_0==HASH) ) {
					alt498=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae =
						new NoViableAltException("", 498, 0, input);
					dbg.recognitionException(nvae);
					throw nvae;
				}

				} finally {dbg.exitDecision(498);}

				switch (alt498) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:25: ( DOT IDENT )
						{
						dbg.location(479,25);
						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:25: ( DOT IDENT )
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:26: DOT IDENT
						{
						dbg.location(479,26);
						match(input,DOT,FOLLOW_DOT_in_synpred16_Css31909); if (state.failed) return;dbg.location(479,30);
						match(input,IDENT,FOLLOW_IDENT_in_synpred16_Css31911); if (state.failed) return;
						}

						}
						break;
					case 2 :
						dbg.enterAlt(2);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:39: HASH
						{
						dbg.location(479,39);
						match(input,HASH,FOLLOW_HASH_in_synpred16_Css31916); if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(498);}
				dbg.location(479,45);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:45: ( ws )?
				int alt499=2;
				try { dbg.enterSubRule(499);
				try { dbg.enterDecision(499, decisionCanBacktrack[499]);

				int LA499_0 = input.LA(1);
				if ( (LA499_0==COMMENT||LA499_0==NL||LA499_0==WS) ) {
					alt499=1;
				}
				} finally {dbg.exitDecision(499);}

				switch (alt499) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:45: ws
						{
						dbg.location(479,45);
						pushFollow(FOLLOW_ws_in_synpred16_Css31919);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(499);}
				dbg.location(479,49);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred16_Css31922); if (state.failed) return;dbg.location(479,56);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:56: (~ RPAREN )*
				try { dbg.enterSubRule(500);

				loop500:
				while (true) {
					int alt500=2;
					try { dbg.enterDecision(500, decisionCanBacktrack[500]);

					int LA500_0 = input.LA(1);
					if ( ((LA500_0 >= A && LA500_0 <= RIGHTTOP_SYM)||(LA500_0 >= S && LA500_0 <= Z)) ) {
						alt500=1;
					}

					} finally {dbg.exitDecision(500);}

					switch (alt500) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(479,56);
						if ( (input.LA(1) >= A && input.LA(1) <= RIGHTTOP_SYM)||(input.LA(1) >= S && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop500;
					}
				}
				} finally {dbg.exitSubRule(500);}
				dbg.location(479,67);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred16_Css31930); if (state.failed) return;dbg.location(479,74);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:479:74: (~ ( LBRACE | RBRACE | SEMI ) )*
				try { dbg.enterSubRule(501);

				loop501:
				while (true) {
					int alt501=2;
					try { dbg.enterDecision(501, decisionCanBacktrack[501]);

					int LA501_0 = input.LA(1);
					if ( ((LA501_0 >= A && LA501_0 <= L)||(LA501_0 >= LBRACKET && LA501_0 <= R)||(LA501_0 >= RBRACKET && LA501_0 <= SASS_WHILE)||(LA501_0 >= SOLIDUS && LA501_0 <= Z)) ) {
						alt501=1;
					}

					} finally {dbg.exitDecision(501);}

					switch (alt501) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
						{
						dbg.location(479,74);
						if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
							input.consume();
							state.errorRecovery=false;
							state.failed=false;
						}
						else {
							if (state.backtracking>0) {state.failed=true; return;}
							MismatchedSetException mse = new MismatchedSetException(null,input);
							dbg.recognitionException(mse);
							throw mse;
						}
						}
						break;

					default :
						break loop501;
					}
				}
				} finally {dbg.exitSubRule(501);}
				dbg.location(479,97);
				match(input,LBRACE,FOLLOW_LBRACE_in_synpred16_Css31942); if (state.failed) return;
				}

				}
				break;

		}
	}
	// $ANTLR end synpred16_Css3

	// $ANTLR start synpred17_Css3
	public final void synpred17_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:11: ( cp_mixin_call ( ws )? SEMI )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:12: cp_mixin_call ( ws )? SEMI
		{
		dbg.location(481,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred17_Css31968);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;dbg.location(481,26);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:26: ( ws )?
		int alt503=2;
		try { dbg.enterSubRule(503);
		try { dbg.enterDecision(503, decisionCanBacktrack[503]);

		int LA503_0 = input.LA(1);
		if ( (LA503_0==COMMENT||LA503_0==NL||LA503_0==WS) ) {
			alt503=1;
		}
		} finally {dbg.exitDecision(503);}

		switch (alt503) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:481:26: ws
				{
				dbg.location(481,26);
				pushFollow(FOLLOW_ws_in_synpred17_Css31970);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(503);}
		dbg.location(481,30);
		match(input,SEMI,FOLLOW_SEMI_in_synpred17_Css31973); if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_Css3

	// $ANTLR start synpred18_Css3
	public final void synpred18_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:11: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:482:12: cp_mixin_call
		{
		dbg.location(482,12);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred18_Css31992);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred18_Css3

	// $ANTLR start synpred19_Css3
	public final void synpred19_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:11: ( cp_variable ( ws )? COLON )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:12: cp_variable ( ws )? COLON
		{
		dbg.location(484,12);
		pushFollow(FOLLOW_cp_variable_in_synpred19_Css32020);
		cp_variable();
		state._fsp--;
		if (state.failed) return;dbg.location(484,24);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:24: ( ws )?
		int alt504=2;
		try { dbg.enterSubRule(504);
		try { dbg.enterDecision(504, decisionCanBacktrack[504]);

		int LA504_0 = input.LA(1);
		if ( (LA504_0==COMMENT||LA504_0==NL||LA504_0==WS) ) {
			alt504=1;
		}
		} finally {dbg.exitDecision(504);}

		switch (alt504) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:484:24: ws
				{
				dbg.location(484,24);
				pushFollow(FOLLOW_ws_in_synpred19_Css32022);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(504);}
		dbg.location(484,28);
		match(input,COLON,FOLLOW_COLON_in_synpred19_Css32025); if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_Css3

	// $ANTLR start synpred20_Css3
	public final void synpred20_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:11: ( sass_map )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:485:12: sass_map
		{
		dbg.location(485,12);
		pushFollow(FOLLOW_sass_map_in_synpred20_Css32042);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_Css3

	// $ANTLR start synpred21_Css3
	public final void synpred21_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:27: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:28: ( ws )? COMMA
		{
		dbg.location(697,28);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:28: ( ws )?
		int alt505=2;
		try { dbg.enterSubRule(505);
		try { dbg.enterDecision(505, decisionCanBacktrack[505]);

		int LA505_0 = input.LA(1);
		if ( (LA505_0==COMMENT||LA505_0==NL||LA505_0==WS) ) {
			alt505=1;
		}
		} finally {dbg.exitDecision(505);}

		switch (alt505) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:697:28: ws
				{
				dbg.location(697,28);
				pushFollow(FOLLOW_ws_in_synpred21_Css33541);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(505);}
		dbg.location(697,32);
		match(input,COMMA,FOLLOW_COMMA_in_synpred21_Css33544); if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_Css3

	// $ANTLR start synpred22_Css3
	public final void synpred22_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:41: ( function )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:705:42: function
		{
		dbg.location(705,42);
		pushFollow(FOLLOW_function_in_synpred22_Css33635);
		function();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_Css3

	// $ANTLR start synpred23_Css3
	public final void synpred23_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:733:5: ( cp_variable_declaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:733:6: cp_variable_declaration
		{
		dbg.location(733,6);
		pushFollow(FOLLOW_cp_variable_declaration_in_synpred23_Css33935);
		cp_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_Css3

	// $ANTLR start synpred24_Css3
	public final void synpred24_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:7: ( sass_map )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:734:8: sass_map
		{
		dbg.location(734,8);
		pushFollow(FOLLOW_sass_map_in_synpred24_Css33947);
		sass_map();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred24_Css3

	// $ANTLR start synpred25_Css3
	public final void synpred25_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:7: ( sass_nested_properties )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:735:8: sass_nested_properties
		{
		dbg.location(735,8);
		pushFollow(FOLLOW_sass_nested_properties_in_synpred25_Css33960);
		sass_nested_properties();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_Css3

	// $ANTLR start synpred26_Css3
	public final void synpred26_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:7: ( ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup ) ( ws )? LBRACE
		{
		dbg.location(736,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )
		int alt511=3;
		try { dbg.enterSubRule(511);
		try { dbg.enterDecision(511, decisionCanBacktrack[511]);

		try {
			isCyclicDecision = true;
			alt511 = dfa511.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(511);}

		switch (alt511) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				{
				dbg.location(736,9);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:9: ( SASS_AT_ROOT ( ws selectorsGroup )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:10: SASS_AT_ROOT ( ws selectorsGroup )?
				{
				dbg.location(736,10);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred26_Css33974); if (state.failed) return;dbg.location(736,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:23: ( ws selectorsGroup )?
				int alt506=2;
				try { dbg.enterSubRule(506);
				try { dbg.enterDecision(506, decisionCanBacktrack[506]);

				try {
					isCyclicDecision = true;
					alt506 = dfa506.predict(input);
				}
				catch (NoViableAltException nvae) {
					dbg.recognitionException(nvae);
					throw nvae;
				}
				} finally {dbg.exitDecision(506);}

				switch (alt506) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:24: ws selectorsGroup
						{
						dbg.location(736,24);
						pushFollow(FOLLOW_ws_in_synpred26_Css33977);
						ws();
						state._fsp--;
						if (state.failed) return;dbg.location(736,27);
						pushFollow(FOLLOW_selectorsGroup_in_synpred26_Css33979);
						selectorsGroup();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(506);}

				}

				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				{
				dbg.location(736,48);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:48: ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:49: SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN
				{
				dbg.location(736,49);
				match(input,SASS_AT_ROOT,FOLLOW_SASS_AT_ROOT_in_synpred26_Css33988); if (state.failed) return;dbg.location(736,62);
				pushFollow(FOLLOW_ws_in_synpred26_Css33990);
				ws();
				state._fsp--;
				if (state.failed) return;dbg.location(736,65);
				match(input,LPAREN,FOLLOW_LPAREN_in_synpred26_Css33992); if (state.failed) return;dbg.location(736,72);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:72: ( ws )?
				int alt507=2;
				try { dbg.enterSubRule(507);
				try { dbg.enterDecision(507, decisionCanBacktrack[507]);

				int LA507_0 = input.LA(1);
				if ( (LA507_0==COMMENT||LA507_0==NL||LA507_0==WS) ) {
					alt507=1;
				}
				} finally {dbg.exitDecision(507);}

				switch (alt507) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:72: ws
						{
						dbg.location(736,72);
						pushFollow(FOLLOW_ws_in_synpred26_Css33994);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(507);}
				dbg.location(736,76);
				match(input,IDENT,FOLLOW_IDENT_in_synpred26_Css33997); if (state.failed) return;dbg.location(736,82);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:82: ( ws )?
				int alt508=2;
				try { dbg.enterSubRule(508);
				try { dbg.enterDecision(508, decisionCanBacktrack[508]);

				int LA508_0 = input.LA(1);
				if ( (LA508_0==COMMENT||LA508_0==NL||LA508_0==WS) ) {
					alt508=1;
				}
				} finally {dbg.exitDecision(508);}

				switch (alt508) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:82: ws
						{
						dbg.location(736,82);
						pushFollow(FOLLOW_ws_in_synpred26_Css33999);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(508);}
				dbg.location(736,86);
				match(input,COLON,FOLLOW_COLON_in_synpred26_Css34002); if (state.failed) return;dbg.location(736,92);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:92: ( ws )?
				int alt509=2;
				try { dbg.enterSubRule(509);
				try { dbg.enterDecision(509, decisionCanBacktrack[509]);

				int LA509_0 = input.LA(1);
				if ( (LA509_0==COMMENT||LA509_0==NL||LA509_0==WS) ) {
					alt509=1;
				}
				} finally {dbg.exitDecision(509);}

				switch (alt509) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:92: ws
						{
						dbg.location(736,92);
						pushFollow(FOLLOW_ws_in_synpred26_Css34004);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(509);}
				dbg.location(736,96);
				match(input,IDENT,FOLLOW_IDENT_in_synpred26_Css34007); if (state.failed) return;dbg.location(736,102);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:102: ( ws )?
				int alt510=2;
				try { dbg.enterSubRule(510);
				try { dbg.enterDecision(510, decisionCanBacktrack[510]);

				int LA510_0 = input.LA(1);
				if ( (LA510_0==COMMENT||LA510_0==NL||LA510_0==WS) ) {
					alt510=1;
				}
				} finally {dbg.exitDecision(510);}

				switch (alt510) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:102: ws
						{
						dbg.location(736,102);
						pushFollow(FOLLOW_ws_in_synpred26_Css34009);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(510);}
				dbg.location(736,106);
				match(input,RPAREN,FOLLOW_RPAREN_in_synpred26_Css34012); if (state.failed) return;
				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:116: selectorsGroup
				{
				dbg.location(736,116);
				pushFollow(FOLLOW_selectorsGroup_in_synpred26_Css34017);
				selectorsGroup();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(511);}
		dbg.location(736,132);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:132: ( ws )?
		int alt512=2;
		try { dbg.enterSubRule(512);
		try { dbg.enterDecision(512, decisionCanBacktrack[512]);

		int LA512_0 = input.LA(1);
		if ( (LA512_0==COMMENT||LA512_0==NL||LA512_0==WS) ) {
			alt512=1;
		}
		} finally {dbg.exitDecision(512);}

		switch (alt512) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:736:132: ws
				{
				dbg.location(736,132);
				pushFollow(FOLLOW_ws_in_synpred26_Css34020);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(512);}
		dbg.location(736,136);
		match(input,LBRACE,FOLLOW_LBRACE_in_synpred26_Css34023); if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_Css3

	// $ANTLR start synpred27_Css3
	public final void synpred27_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:7: ( propertyDeclaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:737:8: propertyDeclaration
		{
		dbg.location(737,8);
		pushFollow(FOLLOW_propertyDeclaration_in_synpred27_Css34035);
		propertyDeclaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_Css3

	// $ANTLR start synpred28_Css3
	public final void synpred28_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:7: ( property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:8: property ( ws )? COLON (~ ( LBRACE | SEMI | RBRACE ) )* ( RBRACE | SEMI )
		{
		dbg.location(739,8);
		pushFollow(FOLLOW_property_in_synpred28_Css34052);
		property();
		state._fsp--;
		if (state.failed) return;dbg.location(739,17);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:17: ( ws )?
		int alt513=2;
		try { dbg.enterSubRule(513);
		try { dbg.enterDecision(513, decisionCanBacktrack[513]);

		int LA513_0 = input.LA(1);
		if ( (LA513_0==COMMENT||LA513_0==NL||LA513_0==WS) ) {
			alt513=1;
		}
		} finally {dbg.exitDecision(513);}

		switch (alt513) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:17: ws
				{
				dbg.location(739,17);
				pushFollow(FOLLOW_ws_in_synpred28_Css34054);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(513);}
		dbg.location(739,21);
		match(input,COLON,FOLLOW_COLON_in_synpred28_Css34057); if (state.failed) return;dbg.location(739,27);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:739:27: (~ ( LBRACE | SEMI | RBRACE ) )*
		try { dbg.enterSubRule(514);

		loop514:
		while (true) {
			int alt514=2;
			try { dbg.enterDecision(514, decisionCanBacktrack[514]);

			int LA514_0 = input.LA(1);
			if ( ((LA514_0 >= A && LA514_0 <= L)||(LA514_0 >= LBRACKET && LA514_0 <= R)||(LA514_0 >= RBRACKET && LA514_0 <= SASS_WHILE)||(LA514_0 >= SOLIDUS && LA514_0 <= Z)) ) {
				alt514=1;
			}

			} finally {dbg.exitDecision(514);}

			switch (alt514) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(739,27);
				if ( (input.LA(1) >= A && input.LA(1) <= L)||(input.LA(1) >= LBRACKET && input.LA(1) <= R)||(input.LA(1) >= RBRACKET && input.LA(1) <= SASS_WHILE)||(input.LA(1) >= SOLIDUS && input.LA(1) <= Z) ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

			default :
				break loop514;
			}
		}
		} finally {dbg.exitSubRule(514);}
		dbg.location(739,50);
		if ( input.LA(1)==RBRACE||input.LA(1)==SEMI ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred28_Css3

	// $ANTLR start synpred29_Css3
	public final void synpred29_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:740:7: ( cp_mixin_declaration )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:740:8: cp_mixin_declaration
		{
		dbg.location(740,8);
		pushFollow(FOLLOW_cp_mixin_declaration_in_synpred29_Css34086);
		cp_mixin_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_Css3

	// $ANTLR start synpred30_Css3
	public final void synpred30_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:741:8: cp_mixin_call
		{
		dbg.location(741,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred30_Css34098);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_Css3

	// $ANTLR start synpred31_Css3
	public final void synpred31_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:7: ( cp_mixin_call )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:742:8: cp_mixin_call
		{
		dbg.location(742,8);
		pushFollow(FOLLOW_cp_mixin_call_in_synpred31_Css34119);
		cp_mixin_call();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred31_Css3

	// $ANTLR start synpred32_Css3
	public final void synpred32_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:65: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:66: ( ws )? esPred
		{
		dbg.location(776,66);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:66: ( ws )?
		int alt515=2;
		try { dbg.enterSubRule(515);
		try { dbg.enterDecision(515, decisionCanBacktrack[515]);

		int LA515_0 = input.LA(1);
		if ( (LA515_0==COMMENT||LA515_0==NL||LA515_0==WS) ) {
			alt515=1;
		}
		} finally {dbg.exitDecision(515);}

		switch (alt515) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:776:66: ws
				{
				dbg.location(776,66);
				pushFollow(FOLLOW_ws_in_synpred32_Css34417);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(515);}
		dbg.location(776,70);
		pushFollow(FOLLOW_esPred_in_synpred32_Css34420);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_Css3

	// $ANTLR start synpred33_Css3
	public final void synpred33_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:4: ( typeSelector )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:5: typeSelector
		{
		dbg.location(777,5);
		pushFollow(FOLLOW_typeSelector_in_synpred33_Css34455);
		typeSelector();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_Css3

	// $ANTLR start synpred34_Css3
	public final void synpred34_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:34: ( ( ws )? esPred )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:35: ( ws )? esPred
		{
		dbg.location(777,35);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:35: ( ws )?
		int alt516=2;
		try { dbg.enterSubRule(516);
		try { dbg.enterDecision(516, decisionCanBacktrack[516]);

		int LA516_0 = input.LA(1);
		if ( (LA516_0==COMMENT||LA516_0==NL||LA516_0==WS) ) {
			alt516=1;
		}
		} finally {dbg.exitDecision(516);}

		switch (alt516) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:777:35: ws
				{
				dbg.location(777,35);
				pushFollow(FOLLOW_ws_in_synpred34_Css34462);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(516);}
		dbg.location(777,39);
		pushFollow(FOLLOW_esPred_in_synpred34_Css34465);
		esPred();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_Css3

	// $ANTLR start synpred35_Css3
	public final void synpred35_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:7: ( ( IDENT | STAR )? PIPE )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:8: ( IDENT | STAR )? PIPE
		{
		dbg.location(791,8);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:791:8: ( IDENT | STAR )?
		int alt517=2;
		try { dbg.enterSubRule(517);
		try { dbg.enterDecision(517, decisionCanBacktrack[517]);

		int LA517_0 = input.LA(1);
		if ( (LA517_0==IDENT||LA517_0==STAR) ) {
			alt517=1;
		}
		} finally {dbg.exitDecision(517);}

		switch (alt517) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:
				{
				dbg.location(791,8);
				if ( input.LA(1)==IDENT||input.LA(1)==STAR ) {
					input.consume();
					state.errorRecovery=false;
					state.failed=false;
				}
				else {
					if (state.backtracking>0) {state.failed=true; return;}
					MismatchedSetException mse = new MismatchedSetException(null,input);
					dbg.recognitionException(mse);
					throw mse;
				}
				}
				break;

		}
		} finally {dbg.exitSubRule(517);}
		dbg.location(791,24);
		match(input,PIPE,FOLLOW_PIPE_in_synpred35_Css34576); if (state.failed) return;
		}

	}
	// $ANTLR end synpred35_Css3

	// $ANTLR start synpred36_Css3
	public final void synpred36_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:14: ( ( ws | ( ( ws )? operator ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:15: ( ws | ( ( ws )? operator ( ws )? ) |) term
		{
		dbg.location(973,15);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:15: ( ws | ( ( ws )? operator ( ws )? ) |)
		int alt520=3;
		try { dbg.enterSubRule(520);
		try { dbg.enterDecision(520, decisionCanBacktrack[520]);

		try {
			isCyclicDecision = true;
			alt520 = dfa520.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(520);}

		switch (alt520) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:17: ws
				{
				dbg.location(973,17);
				pushFollow(FOLLOW_ws_in_synpred36_Css36144);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:22: ( ( ws )? operator ( ws )? )
				{
				dbg.location(973,22);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:22: ( ( ws )? operator ( ws )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:23: ( ws )? operator ( ws )?
				{
				dbg.location(973,23);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:23: ( ws )?
				int alt518=2;
				try { dbg.enterSubRule(518);
				try { dbg.enterDecision(518, decisionCanBacktrack[518]);

				int LA518_0 = input.LA(1);
				if ( (LA518_0==COMMENT||LA518_0==NL||LA518_0==WS) ) {
					alt518=1;
				}
				} finally {dbg.exitDecision(518);}

				switch (alt518) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:23: ws
						{
						dbg.location(973,23);
						pushFollow(FOLLOW_ws_in_synpred36_Css36149);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(518);}
				dbg.location(973,27);
				pushFollow(FOLLOW_operator_in_synpred36_Css36152);
				operator();
				state._fsp--;
				if (state.failed) return;dbg.location(973,36);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:36: ( ws )?
				int alt519=2;
				try { dbg.enterSubRule(519);
				try { dbg.enterDecision(519, decisionCanBacktrack[519]);

				int LA519_0 = input.LA(1);
				if ( (LA519_0==COMMENT||LA519_0==NL||LA519_0==WS) ) {
					alt519=1;
				}
				} finally {dbg.exitDecision(519);}

				switch (alt519) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:36: ws
						{
						dbg.location(973,36);
						pushFollow(FOLLOW_ws_in_synpred36_Css36154);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(519);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:973:56: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(520);}
		dbg.location(973,58);
		pushFollow(FOLLOW_term_in_synpred36_Css36163);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_Css3

	// $ANTLR start synpred37_Css3
	public final void synpred37_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:980:9: ( functionName ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:980:10: functionName ( ws )? LPAREN
		{
		dbg.location(980,10);
		pushFollow(FOLLOW_functionName_in_synpred37_Css36236);
		functionName();
		state._fsp--;
		if (state.failed) return;dbg.location(980,23);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:980:23: ( ws )?
		int alt521=2;
		try { dbg.enterSubRule(521);
		try { dbg.enterDecision(521, decisionCanBacktrack[521]);

		int LA521_0 = input.LA(1);
		if ( (LA521_0==COMMENT||LA521_0==NL||LA521_0==WS) ) {
			alt521=1;
		}
		} finally {dbg.exitDecision(521);}

		switch (alt521) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:980:23: ws
				{
				dbg.location(980,23);
				pushFollow(FOLLOW_ws_in_synpred37_Css36238);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(521);}
		dbg.location(980,27);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred37_Css36241); if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_Css3

	// $ANTLR start synpred38_Css3
	public final void synpred38_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:9: ( fnAttributeName ( ws )? ( OPEQ | COLON ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:10: fnAttributeName ( ws )? ( OPEQ | COLON )
		{
		dbg.location(1046,10);
		pushFollow(FOLLOW_fnAttributeName_in_synpred38_Css36851);
		fnAttributeName();
		state._fsp--;
		if (state.failed) return;dbg.location(1046,26);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:26: ( ws )?
		int alt522=2;
		try { dbg.enterSubRule(522);
		try { dbg.enterDecision(522, decisionCanBacktrack[522]);

		int LA522_0 = input.LA(1);
		if ( (LA522_0==COMMENT||LA522_0==NL||LA522_0==WS) ) {
			alt522=1;
		}
		} finally {dbg.exitDecision(522);}

		switch (alt522) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1046:26: ws
				{
				dbg.location(1046,26);
				pushFollow(FOLLOW_ws_in_synpred38_Css36853);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(522);}
		dbg.location(1046,30);
		if ( input.LA(1)==COLON||input.LA(1)==OPEQ ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred38_Css3

	// $ANTLR start synpred39_Css3
	public final void synpred39_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:11: ( cp_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1047:12: cp_expression
		{
		dbg.location(1047,12);
		pushFollow(FOLLOW_cp_expression_in_synpred39_Css36891);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_Css3

	// $ANTLR start synpred40_Css3
	public final void synpred40_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:20: ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term
		{
		dbg.location(1059,21);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)
		int alt525=3;
		try { dbg.enterSubRule(525);
		try { dbg.enterDecision(525, decisionCanBacktrack[525]);

		try {
			isCyclicDecision = true;
			alt525 = dfa525.predict(input);
		}
		catch (NoViableAltException nvae) {
			dbg.recognitionException(nvae);
			throw nvae;
		}
		} finally {dbg.exitDecision(525);}

		switch (alt525) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:23: ws
				{
				dbg.location(1059,23);
				pushFollow(FOLLOW_ws_in_synpred40_Css36985);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				dbg.enterAlt(2);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:28: ( ( ws )? SOLIDUS ( ws )? )
				{
				dbg.location(1059,28);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:28: ( ( ws )? SOLIDUS ( ws )? )
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:29: ( ws )? SOLIDUS ( ws )?
				{
				dbg.location(1059,29);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:29: ( ws )?
				int alt523=2;
				try { dbg.enterSubRule(523);
				try { dbg.enterDecision(523, decisionCanBacktrack[523]);

				int LA523_0 = input.LA(1);
				if ( (LA523_0==COMMENT||LA523_0==NL||LA523_0==WS) ) {
					alt523=1;
				}
				} finally {dbg.exitDecision(523);}

				switch (alt523) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:29: ws
						{
						dbg.location(1059,29);
						pushFollow(FOLLOW_ws_in_synpred40_Css36990);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(523);}
				dbg.location(1059,33);
				match(input,SOLIDUS,FOLLOW_SOLIDUS_in_synpred40_Css36993); if (state.failed) return;dbg.location(1059,41);
				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:41: ( ws )?
				int alt524=2;
				try { dbg.enterSubRule(524);
				try { dbg.enterDecision(524, decisionCanBacktrack[524]);

				int LA524_0 = input.LA(1);
				if ( (LA524_0==COMMENT||LA524_0==NL||LA524_0==WS) ) {
					alt524=1;
				}
				} finally {dbg.exitDecision(524);}

				switch (alt524) {
					case 1 :
						dbg.enterAlt(1);

						// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:41: ws
						{
						dbg.location(1059,41);
						pushFollow(FOLLOW_ws_in_synpred40_Css36995);
						ws();
						state._fsp--;
						if (state.failed) return;
						}
						break;

				}
				} finally {dbg.exitSubRule(524);}

				}

				}
				break;
			case 3 :
				dbg.enterAlt(3);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1059:61: 
				{
				}
				break;

		}
		} finally {dbg.exitSubRule(525);}
		dbg.location(1059,63);
		pushFollow(FOLLOW_term_in_synpred40_Css37004);
		term();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred40_Css3

	// $ANTLR start synpred42_Css3
	public final void synpred42_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:6: ( ( ws )? COMMA ( ws )? cp_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:7: ( ws )? COMMA ( ws )? cp_expression
		{
		dbg.location(1094,7);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:7: ( ws )?
		int alt526=2;
		try { dbg.enterSubRule(526);
		try { dbg.enterDecision(526, decisionCanBacktrack[526]);

		int LA526_0 = input.LA(1);
		if ( (LA526_0==COMMENT||LA526_0==NL||LA526_0==WS) ) {
			alt526=1;
		}
		} finally {dbg.exitDecision(526);}

		switch (alt526) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:7: ws
				{
				dbg.location(1094,7);
				pushFollow(FOLLOW_ws_in_synpred42_Css37452);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(526);}
		dbg.location(1094,11);
		match(input,COMMA,FOLLOW_COMMA_in_synpred42_Css37455); if (state.failed) return;dbg.location(1094,17);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:17: ( ws )?
		int alt527=2;
		try { dbg.enterSubRule(527);
		try { dbg.enterDecision(527, decisionCanBacktrack[527]);

		int LA527_0 = input.LA(1);
		if ( (LA527_0==COMMENT||LA527_0==NL||LA527_0==WS) ) {
			alt527=1;
		}
		} finally {dbg.exitDecision(527);}

		switch (alt527) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1094:17: ws
				{
				dbg.location(1094,17);
				pushFollow(FOLLOW_ws_in_synpred42_Css37457);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(527);}
		dbg.location(1094,21);
		pushFollow(FOLLOW_cp_expression_in_synpred42_Css37460);
		cp_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred42_Css3

	// $ANTLR start synpred43_Css3
	public final void synpred43_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:7: ( cp_expression_atom )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1110:8: cp_expression_atom
		{
		dbg.location(1110,8);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred43_Css37527);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred43_Css3

	// $ANTLR start synpred44_Css3
	public final void synpred44_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:9: ( ( ws )? cp_expression_operator )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:10: ( ws )? cp_expression_operator
		{
		dbg.location(1112,10);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:10: ( ws )?
		int alt528=2;
		try { dbg.enterSubRule(528);
		try { dbg.enterDecision(528, decisionCanBacktrack[528]);

		int LA528_0 = input.LA(1);
		if ( (LA528_0==COMMENT||LA528_0==NL||LA528_0==WS) ) {
			alt528=1;
		}
		} finally {dbg.exitDecision(528);}

		switch (alt528) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1112:10: ws
				{
				dbg.location(1112,10);
				pushFollow(FOLLOW_ws_in_synpred44_Css37550);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(528);}
		dbg.location(1112,14);
		pushFollow(FOLLOW_cp_expression_operator_in_synpred44_Css37553);
		cp_expression_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred44_Css3

	// $ANTLR start synpred45_Css3
	public final void synpred45_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:11: ( ( ws )? cp_expression_atom )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:12: ( ws )? cp_expression_atom
		{
		dbg.location(1113,12);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:12: ( ws )?
		int alt529=2;
		try { dbg.enterSubRule(529);
		try { dbg.enterDecision(529, decisionCanBacktrack[529]);

		int LA529_0 = input.LA(1);
		if ( (LA529_0==COMMENT||LA529_0==NL||LA529_0==WS) ) {
			alt529=1;
		}
		} finally {dbg.exitDecision(529);}

		switch (alt529) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1113:12: ws
				{
				dbg.location(1113,12);
				pushFollow(FOLLOW_ws_in_synpred45_Css37579);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(529);}
		dbg.location(1113,16);
		pushFollow(FOLLOW_cp_expression_atom_in_synpred45_Css37582);
		cp_expression_atom();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred45_Css3

	// $ANTLR start synpred46_Css3
	public final void synpred46_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:13: ( cp_math_expression )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1127:14: cp_math_expression
		{
		dbg.location(1127,14);
		pushFollow(FOLLOW_cp_math_expression_in_synpred46_Css37722);
		cp_math_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred46_Css3

	// $ANTLR start synpred47_Css3
	public final void synpred47_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:13: ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:14: ( ws )? ( PLUS | MINUS | STAR | SOLIDUS )
		{
		dbg.location(1154,14);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:14: ( ws )?
		int alt530=2;
		try { dbg.enterSubRule(530);
		try { dbg.enterDecision(530, decisionCanBacktrack[530]);

		int LA530_0 = input.LA(1);
		if ( (LA530_0==COMMENT||LA530_0==NL||LA530_0==WS) ) {
			alt530=1;
		}
		} finally {dbg.exitDecision(530);}

		switch (alt530) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1154:14: ws
				{
				dbg.location(1154,14);
				pushFollow(FOLLOW_ws_in_synpred47_Css37855);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(530);}
		dbg.location(1154,18);
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS||(input.LA(1) >= SOLIDUS && input.LA(1) <= STAR) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			dbg.recognitionException(mse);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred47_Css3

	// $ANTLR start synpred48_Css3
	public final void synpred48_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:77: ( ( ws )? combinator ( ws )? )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:78: ( ws )? combinator ( ws )?
		{
		dbg.location(1186,78);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:78: ( ws )?
		int alt531=2;
		try { dbg.enterSubRule(531);
		try { dbg.enterDecision(531, decisionCanBacktrack[531]);

		int LA531_0 = input.LA(1);
		if ( (LA531_0==COMMENT||LA531_0==NL||LA531_0==WS) ) {
			alt531=1;
		}
		} finally {dbg.exitDecision(531);}

		switch (alt531) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:78: ws
				{
				dbg.location(1186,78);
				pushFollow(FOLLOW_ws_in_synpred48_Css38147);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(531);}
		dbg.location(1186,82);
		pushFollow(FOLLOW_combinator_in_synpred48_Css38150);
		combinator();
		state._fsp--;
		if (state.failed) return;dbg.location(1186,93);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:93: ( ws )?
		int alt532=2;
		try { dbg.enterSubRule(532);
		try { dbg.enterDecision(532, decisionCanBacktrack[532]);

		int LA532_0 = input.LA(1);
		if ( (LA532_0==COMMENT||LA532_0==NL||LA532_0==WS) ) {
			alt532=1;
		}
		} finally {dbg.exitDecision(532);}

		switch (alt532) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:93: ws
				{
				dbg.location(1186,93);
				pushFollow(FOLLOW_ws_in_synpred48_Css38152);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(532);}

		}

	}
	// $ANTLR end synpred48_Css3

	// $ANTLR start synpred49_Css3
	public final void synpred49_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:172: ( pseudo )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:173: pseudo
		{
		dbg.location(1186,173);
		pushFollow(FOLLOW_pseudo_in_synpred49_Css38188);
		pseudo();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred49_Css3

	// $ANTLR start synpred50_Css3
	public final void synpred50_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:191: ( ( ws )? LPAREN )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:192: ( ws )? LPAREN
		{
		dbg.location(1186,192);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:192: ( ws )?
		int alt533=2;
		try { dbg.enterSubRule(533);
		try { dbg.enterDecision(533, decisionCanBacktrack[533]);

		int LA533_0 = input.LA(1);
		if ( (LA533_0==COMMENT||LA533_0==NL||LA533_0==WS) ) {
			alt533=1;
		}
		} finally {dbg.exitDecision(533);}

		switch (alt533) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1186:192: ws
				{
				dbg.location(1186,192);
				pushFollow(FOLLOW_ws_in_synpred50_Css38196);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(533);}
		dbg.location(1186,196);
		match(input,LPAREN,FOLLOW_LPAREN_in_synpred50_Css38199); if (state.failed) return;
		}

	}
	// $ANTLR end synpred50_Css3

	// $ANTLR start synpred51_Css3
	public final void synpred51_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:25: ( webkitKeyframeSelectors )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1195:26: webkitKeyframeSelectors
		{
		dbg.location(1195,26);
		pushFollow(FOLLOW_webkitKeyframeSelectors_in_synpred51_Css38315);
		webkitKeyframeSelectors();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred51_Css3

	// $ANTLR start synpred52_Css3
	public final void synpred52_Css3_fragment() throws RecognitionException {
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:19: ( ( ws )? COMMA )
		dbg.enterAlt(1);

		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:20: ( ws )? COMMA
		{
		dbg.location(1373,20);
		// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:20: ( ws )?
		int alt534=2;
		try { dbg.enterSubRule(534);
		try { dbg.enterDecision(534, decisionCanBacktrack[534]);

		int LA534_0 = input.LA(1);
		if ( (LA534_0==COMMENT||LA534_0==NL||LA534_0==WS) ) {
			alt534=1;
		}
		} finally {dbg.exitDecision(534);}

		switch (alt534) {
			case 1 :
				dbg.enterAlt(1);

				// /home/matthias/src/netbeans/ide/css.lib/src/org/netbeans/modules/css/lib/Css3.g:1373:20: ws
				{
				dbg.location(1373,20);
				pushFollow(FOLLOW_ws_in_synpred52_Css39560);
				ws();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}
		} finally {dbg.exitSubRule(534);}
		dbg.location(1373,24);
		match(input,COMMA,FOLLOW_COMMA_in_synpred52_Css39563); if (state.failed) return;
		}

	}
	// $ANTLR end synpred52_Css3

	// Delegated rules

	public final boolean synpred14_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred14_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred22_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred9_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred45_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred45_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred4_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred37_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred19_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred23_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred31_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred15_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred32_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred35_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred38_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred43_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred43_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred46_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred46_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred18_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred27_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred21_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred29_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred40_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred40_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred16_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred24_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred24_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred13_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred10_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred6_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred3_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred11_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred50_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred50_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred17_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred42_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred42_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred48_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred48_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred7_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred34_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred51_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred51_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred1_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred26_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred12_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred49_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred49_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred20_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred8_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred2_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred5_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred44_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred44_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred30_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred47_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred47_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred36_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred39_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred33_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred25_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred52_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred52_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_Css3() {
		state.backtracking++;
		dbg.beginBacktrack(state.backtracking);
		int start = input.mark();
		try {
			synpred28_Css3_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		dbg.endBacktrack(state.backtracking, success);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA3 dfa3 = new DFA3(this);
	protected DFA5 dfa5 = new DFA5(this);
	protected DFA8 dfa8 = new DFA8(this);
	protected DFA36 dfa36 = new DFA36(this);
	protected DFA28 dfa28 = new DFA28(this);
	protected DFA37 dfa37 = new DFA37(this);
	protected DFA38 dfa38 = new DFA38(this);
	protected DFA43 dfa43 = new DFA43(this);
	protected DFA48 dfa48 = new DFA48(this);
	protected DFA47 dfa47 = new DFA47(this);
	protected DFA49 dfa49 = new DFA49(this);
	protected DFA50 dfa50 = new DFA50(this);
	protected DFA55 dfa55 = new DFA55(this);
	protected DFA61 dfa61 = new DFA61(this);
	protected DFA64 dfa64 = new DFA64(this);
	protected DFA70 dfa70 = new DFA70(this);
	protected DFA76 dfa76 = new DFA76(this);
	protected DFA78 dfa78 = new DFA78(this);
	protected DFA82 dfa82 = new DFA82(this);
	protected DFA95 dfa95 = new DFA95(this);
	protected DFA104 dfa104 = new DFA104(this);
	protected DFA113 dfa113 = new DFA113(this);
	protected DFA115 dfa115 = new DFA115(this);
	protected DFA116 dfa116 = new DFA116(this);
	protected DFA149 dfa149 = new DFA149(this);
	protected DFA161 dfa161 = new DFA161(this);
	protected DFA160 dfa160 = new DFA160(this);
	protected DFA180 dfa180 = new DFA180(this);
	protected DFA182 dfa182 = new DFA182(this);
	protected DFA187 dfa187 = new DFA187(this);
	protected DFA192 dfa192 = new DFA192(this);
	protected DFA198 dfa198 = new DFA198(this);
	protected DFA193 dfa193 = new DFA193(this);
	protected DFA215 dfa215 = new DFA215(this);
	protected DFA208 dfa208 = new DFA208(this);
	protected DFA207 dfa207 = new DFA207(this);
	protected DFA212 dfa212 = new DFA212(this);
	protected DFA217 dfa217 = new DFA217(this);
	protected DFA219 dfa219 = new DFA219(this);
	protected DFA223 dfa223 = new DFA223(this);
	protected DFA231 dfa231 = new DFA231(this);
	protected DFA230 dfa230 = new DFA230(this);
	protected DFA229 dfa229 = new DFA229(this);
	protected DFA235 dfa235 = new DFA235(this);
	protected DFA238 dfa238 = new DFA238(this);
	protected DFA261 dfa261 = new DFA261(this);
	protected DFA281 dfa281 = new DFA281(this);
	protected DFA288 dfa288 = new DFA288(this);
	protected DFA287 dfa287 = new DFA287(this);
	protected DFA303 dfa303 = new DFA303(this);
	protected DFA313 dfa313 = new DFA313(this);
	protected DFA312 dfa312 = new DFA312(this);
	protected DFA322 dfa322 = new DFA322(this);
	protected DFA328 dfa328 = new DFA328(this);
	protected DFA334 dfa334 = new DFA334(this);
	protected DFA348 dfa348 = new DFA348(this);
	protected DFA353 dfa353 = new DFA353(this);
	protected DFA360 dfa360 = new DFA360(this);
	protected DFA364 dfa364 = new DFA364(this);
	protected DFA379 dfa379 = new DFA379(this);
	protected DFA381 dfa381 = new DFA381(this);
	protected DFA394 dfa394 = new DFA394(this);
	protected DFA397 dfa397 = new DFA397(this);
	protected DFA413 dfa413 = new DFA413(this);
	protected DFA442 dfa442 = new DFA442(this);
	protected DFA443 dfa443 = new DFA443(this);
	protected DFA449 dfa449 = new DFA449(this);
	protected DFA457 dfa457 = new DFA457(this);
	protected DFA456 dfa456 = new DFA456(this);
	protected DFA460 dfa460 = new DFA460(this);
	protected DFA465 dfa465 = new DFA465(this);
	protected DFA485 dfa485 = new DFA485(this);
	protected DFA492 dfa492 = new DFA492(this);
	protected DFA487 dfa487 = new DFA487(this);
	protected DFA511 dfa511 = new DFA511(this);
	protected DFA506 dfa506 = new DFA506(this);
	protected DFA520 dfa520 = new DFA520(this);
	protected DFA525 dfa525 = new DFA525(this);
	static final String DFA3_eotS =
		"\5\uffff";
	static final String DFA3_eofS =
		"\1\2\4\uffff";
	static final String DFA3_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA3_maxS =
		"\1\u0097\1\u0098\1\uffff\1\u0098\1\uffff";
	static final String DFA3_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA3_specialS =
		"\5\uffff}>";
	static final String[] DFA3_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\1\1\1\2\3\uffff\1\2\5\uffff\3\2\7\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff"+
			"\3\2\1\uffff\2\2\2\uffff\5\2\1\uffff\3\2\1\uffff\6\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\2\1\uffff\1\3\74\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\74\uffff\1\3\62\uffff\1\4\22\uffff\1\3",
			""
	};

	static final short[] DFA3_eot = DFA.unpackEncodedString(DFA3_eotS);
	static final short[] DFA3_eof = DFA.unpackEncodedString(DFA3_eofS);
	static final char[] DFA3_min = DFA.unpackEncodedStringToUnsignedChars(DFA3_minS);
	static final char[] DFA3_max = DFA.unpackEncodedStringToUnsignedChars(DFA3_maxS);
	static final short[] DFA3_accept = DFA.unpackEncodedString(DFA3_acceptS);
	static final short[] DFA3_special = DFA.unpackEncodedString(DFA3_specialS);
	static final short[][] DFA3_transition;

	static {
		int numStates = DFA3_transitionS.length;
		DFA3_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA3_transition[i] = DFA.unpackEncodedString(DFA3_transitionS[i]);
		}
	}

	protected class DFA3 extends DFA {

		public DFA3(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 3;
			this.eot = DFA3_eot;
			this.eof = DFA3_eof;
			this.min = DFA3_min;
			this.max = DFA3_max;
			this.accept = DFA3_accept;
			this.special = DFA3_special;
			this.transition = DFA3_transition;
		}
		@Override
		public String getDescription() {
			return "284:6: ( charSet ( ws )? )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA5_eotS =
		"\5\uffff";
	static final String DFA5_eofS =
		"\1\2\4\uffff";
	static final String DFA5_minS =
		"\1\6\1\23\1\uffff\1\23\1\uffff";
	static final String DFA5_maxS =
		"\1\u0097\1\u0098\1\uffff\1\u0098\1\uffff";
	static final String DFA5_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA5_specialS =
		"\5\uffff}>";
	static final String[] DFA5_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\3\2\7\uffff\1\2\2\uffff"+
			"\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff\1\2\6\uffff"+
			"\3\2\5\uffff\1\1\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\2\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\4\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff\1\2",
			"\1\2\1\uffff\1\3\35\uffff\1\4\36\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"",
			"\1\2\1\uffff\1\3\35\uffff\1\4\36\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
	static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
	static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
	static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
	static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
	static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
	static final short[][] DFA5_transition;

	static {
		int numStates = DFA5_transitionS.length;
		DFA5_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
		}
	}

	protected class DFA5 extends DFA {

		public DFA5(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 5;
			this.eot = DFA5_eot;
			this.eof = DFA5_eof;
			this.min = DFA5_min;
			this.max = DFA5_max;
			this.accept = DFA5_accept;
			this.special = DFA5_special;
			this.transition = DFA5_transition;
		}
		@Override
		public String getDescription() {
			return "286:9: ( namespaces )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA8_eotS =
		"\5\uffff";
	static final String DFA8_eofS =
		"\1\1\4\uffff";
	static final String DFA8_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA8_maxS =
		"\1\u0097\1\uffff\2\u0098\1\uffff";
	static final String DFA8_acceptS =
		"\1\uffff\1\2\2\uffff\1\1";
	static final String DFA8_specialS =
		"\5\uffff}>";
	static final String[] DFA8_transitionS = {
			"\2\1\2\uffff\5\1\3\uffff\2\1\3\uffff\1\1\5\uffff\3\1\7\uffff\1\1\2\uffff"+
			"\2\1\2\uffff\2\1\3\uffff\1\1\1\uffff\1\1\6\uffff\4\1\2\uffff\1\1\6\uffff"+
			"\3\1\5\uffff\1\2\11\uffff\1\1\2\uffff\2\1\6\uffff\3\1\2\uffff\3\1\1\uffff"+
			"\2\1\2\uffff\3\1\1\uffff\1\1\1\uffff\3\1\1\uffff\1\1\1\uffff\4\1\1\uffff"+
			"\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff\5\1\10\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\35\uffff\1\4\36\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			"\1\1\1\uffff\1\3\35\uffff\1\4\36\uffff\1\3\62\uffff\1\4\14\uffff\1\4"+
			"\5\uffff\1\3",
			""
	};

	static final short[] DFA8_eot = DFA.unpackEncodedString(DFA8_eotS);
	static final short[] DFA8_eof = DFA.unpackEncodedString(DFA8_eofS);
	static final char[] DFA8_min = DFA.unpackEncodedStringToUnsignedChars(DFA8_minS);
	static final char[] DFA8_max = DFA.unpackEncodedStringToUnsignedChars(DFA8_maxS);
	static final short[] DFA8_accept = DFA.unpackEncodedString(DFA8_acceptS);
	static final short[] DFA8_special = DFA.unpackEncodedString(DFA8_specialS);
	static final short[][] DFA8_transition;

	static {
		int numStates = DFA8_transitionS.length;
		DFA8_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA8_transition[i] = DFA.unpackEncodedString(DFA8_transitionS[i]);
		}
	}

	protected class DFA8 extends DFA {

		public DFA8(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 8;
			this.eot = DFA8_eot;
			this.eof = DFA8_eof;
			this.min = DFA8_min;
			this.max = DFA8_max;
			this.accept = DFA8_accept;
			this.special = DFA8_special;
			this.transition = DFA8_transition;
		}
		@Override
		public String getDescription() {
			return "()+ loopback of 293:2: ( namespace ( ws )? )+";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA36_eotS =
		"\10\uffff";
	static final String DFA36_eofS =
		"\10\uffff";
	static final String DFA36_minS =
		"\1\65\2\25\1\0\1\uffff\1\0\2\uffff";
	static final String DFA36_maxS =
		"\1\65\2\u0098\1\0\1\uffff\1\0\2\uffff";
	static final String DFA36_acceptS =
		"\4\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA36_specialS =
		"\3\uffff\1\0\1\uffff\1\1\2\uffff}>";
	static final String[] DFA36_transitionS = {
			"\1\1",
			"\1\2\61\uffff\1\4\12\uffff\1\2\62\uffff\1\3\14\uffff\1\3\5\uffff\1\2",
			"\1\2\61\uffff\1\4\12\uffff\1\2\62\uffff\1\5\14\uffff\1\5\5\uffff\1\2",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA36_eot = DFA.unpackEncodedString(DFA36_eotS);
	static final short[] DFA36_eof = DFA.unpackEncodedString(DFA36_eofS);
	static final char[] DFA36_min = DFA.unpackEncodedStringToUnsignedChars(DFA36_minS);
	static final char[] DFA36_max = DFA.unpackEncodedStringToUnsignedChars(DFA36_maxS);
	static final short[] DFA36_accept = DFA.unpackEncodedString(DFA36_acceptS);
	static final short[] DFA36_special = DFA.unpackEncodedString(DFA36_specialS);
	static final short[][] DFA36_transition;

	static {
		int numStates = DFA36_transitionS.length;
		DFA36_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA36_transition[i] = DFA.unpackEncodedString(DFA36_transitionS[i]);
		}
	}

	protected class DFA36 extends DFA {

		public DFA36(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 36;
			this.eot = DFA36_eot;
			this.eof = DFA36_eof;
			this.min = DFA36_min;
			this.max = DFA36_max;
			this.accept = DFA36_accept;
			this.special = DFA36_special;
			this.transition = DFA36_transition;
		}
		@Override
		public String getDescription() {
			return "327:1: importItem : ( IMPORT_SYM ( ws )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? resourceIdentifier ( ( ws )? COMMA ( ws )? resourceIdentifier )* ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? |{...}? IMPORT_SYM ( ws )? ( LPAREN less_import_types RPAREN ( ws )? )? resourceIdentifier ( ( ( ws )? mediaQueryList )=> ( ws )? mediaQueryList )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA36_3 = input.LA(1);
						 
						int index36_3 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index36_3);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA36_5 = input.LA(1);
						 
						int index36_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate((evalPredicate(isLessSource(),"isLessSource()")||evalPredicate(isScssSource(),"isScssSource()")),""))) ) {s = 6;}
						else if ( (evalPredicate(isScssSource(),"isScssSource()")) ) {s = 7;}
						else if ( (evalPredicate(isLessSource(),"isLessSource()")) ) {s = 4;}
						 
						input.seek(index36_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 36, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA28_eotS =
		"\4\uffff";
	static final String DFA28_eofS =
		"\2\2\2\uffff";
	static final String DFA28_minS =
		"\2\6\2\uffff";
	static final String DFA28_maxS =
		"\2\u0098\2\uffff";
	static final String DFA28_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA28_specialS =
		"\4\uffff}>";
	static final String[] DFA28_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2\4\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\3\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\4\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\1\2\4\uffff\1\2"+
			"\2\uffff\2\2\2\uffff\1\2\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff"+
			"\4\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA28_eot = DFA.unpackEncodedString(DFA28_eotS);
	static final short[] DFA28_eof = DFA.unpackEncodedString(DFA28_eofS);
	static final char[] DFA28_min = DFA.unpackEncodedStringToUnsignedChars(DFA28_minS);
	static final char[] DFA28_max = DFA.unpackEncodedStringToUnsignedChars(DFA28_maxS);
	static final short[] DFA28_accept = DFA.unpackEncodedString(DFA28_acceptS);
	static final short[] DFA28_special = DFA.unpackEncodedString(DFA28_specialS);
	static final short[][] DFA28_transition;

	static {
		int numStates = DFA28_transitionS.length;
		DFA28_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA28_transition[i] = DFA.unpackEncodedString(DFA28_transitionS[i]);
		}
	}

	protected class DFA28 extends DFA {

		public DFA28(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 28;
			this.eot = DFA28_eot;
			this.eof = DFA28_eof;
			this.min = DFA28_min;
			this.max = DFA28_max;
			this.accept = DFA28_accept;
			this.special = DFA28_special;
			this.transition = DFA28_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 332:61: ( ( ws )? COMMA ( ws )? resourceIdentifier )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA37_eotS =
		"\6\uffff";
	static final String DFA37_eofS =
		"\6\uffff";
	static final String DFA37_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA37_maxS =
		"\2\u0098\1\uffff\2\u0098\1\uffff";
	static final String DFA37_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA37_specialS =
		"\6\uffff}>";
	static final String[] DFA37_transitionS = {
			"\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\35\uffff\1\3\36\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\61\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\35\uffff\1\5\23\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA37_eot = DFA.unpackEncodedString(DFA37_eotS);
	static final short[] DFA37_eof = DFA.unpackEncodedString(DFA37_eofS);
	static final char[] DFA37_min = DFA.unpackEncodedStringToUnsignedChars(DFA37_minS);
	static final char[] DFA37_max = DFA.unpackEncodedStringToUnsignedChars(DFA37_maxS);
	static final short[] DFA37_accept = DFA.unpackEncodedString(DFA37_acceptS);
	static final short[] DFA37_special = DFA.unpackEncodedString(DFA37_specialS);
	static final short[][] DFA37_transition;

	static {
		int numStates = DFA37_transitionS.length;
		DFA37_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA37_transition[i] = DFA.unpackEncodedString(DFA37_transitionS[i]);
		}
	}

	protected class DFA37 extends DFA {

		public DFA37(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 37;
			this.eot = DFA37_eot;
			this.eof = DFA37_eof;
			this.min = DFA37_min;
			this.max = DFA37_max;
			this.accept = DFA37_accept;
			this.special = DFA37_special;
			this.transition = DFA37_transition;
		}
		@Override
		public String getDescription() {
			return "339:58: ( ws sass_use_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA38_eotS =
		"\4\uffff";
	static final String DFA38_eofS =
		"\4\uffff";
	static final String DFA38_minS =
		"\2\25\2\uffff";
	static final String DFA38_maxS =
		"\2\u0098\2\uffff";
	static final String DFA38_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA38_specialS =
		"\4\uffff}>";
	static final String[] DFA38_transitionS = {
			"\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\35\uffff\1\3\36\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
	static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
	static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
	static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
	static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
	static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
	static final short[][] DFA38_transition;

	static {
		int numStates = DFA38_transitionS.length;
		DFA38_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
		}
	}

	protected class DFA38 extends DFA {

		public DFA38(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 38;
			this.eot = DFA38_eot;
			this.eof = DFA38_eof;
			this.min = DFA38_min;
			this.max = DFA38_max;
			this.accept = DFA38_accept;
			this.special = DFA38_special;
			this.transition = DFA38_transition;
		}
		@Override
		public String getDescription() {
			return "339:76: ( ws sass_use_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA43_eotS =
		"\4\uffff";
	static final String DFA43_eofS =
		"\4\uffff";
	static final String DFA43_minS =
		"\2\24\2\uffff";
	static final String DFA43_maxS =
		"\2\u0098\2\uffff";
	static final String DFA43_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA43_specialS =
		"\4\uffff}>";
	static final String[] DFA43_transitionS = {
			"\1\3\1\1\74\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\74\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA43_eot = DFA.unpackEncodedString(DFA43_eotS);
	static final short[] DFA43_eof = DFA.unpackEncodedString(DFA43_eofS);
	static final char[] DFA43_min = DFA.unpackEncodedStringToUnsignedChars(DFA43_minS);
	static final char[] DFA43_max = DFA.unpackEncodedStringToUnsignedChars(DFA43_maxS);
	static final short[] DFA43_accept = DFA.unpackEncodedString(DFA43_acceptS);
	static final short[] DFA43_special = DFA.unpackEncodedString(DFA43_specialS);
	static final short[][] DFA43_transition;

	static {
		int numStates = DFA43_transitionS.length;
		DFA43_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA43_transition[i] = DFA.unpackEncodedString(DFA43_transitionS[i]);
		}
	}

	protected class DFA43 extends DFA {

		public DFA43(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 43;
			this.eot = DFA43_eot;
			this.eof = DFA43_eof;
			this.min = DFA43_min;
			this.max = DFA43_max;
			this.accept = DFA43_accept;
			this.special = DFA43_special;
			this.transition = DFA43_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 349:80: ( ( ws )? COMMA ( ws )? sass_use_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA48_eotS =
		"\7\uffff";
	static final String DFA48_eofS =
		"\7\uffff";
	static final String DFA48_minS =
		"\2\25\1\uffff\2\25\1\0\1\uffff";
	static final String DFA48_maxS =
		"\2\u0098\1\uffff\2\u0098\1\0\1\uffff";
	static final String DFA48_acceptS =
		"\2\uffff\1\2\3\uffff\1\1";
	static final String DFA48_specialS =
		"\5\uffff\1\0\1\uffff}>";
	static final String[] DFA48_transitionS = {
			"\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\35\uffff\1\3\36\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\61\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\35\uffff\1\5\23\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\uffff",
			""
	};

	static final short[] DFA48_eot = DFA.unpackEncodedString(DFA48_eotS);
	static final short[] DFA48_eof = DFA.unpackEncodedString(DFA48_eofS);
	static final char[] DFA48_min = DFA.unpackEncodedStringToUnsignedChars(DFA48_minS);
	static final char[] DFA48_max = DFA.unpackEncodedStringToUnsignedChars(DFA48_maxS);
	static final short[] DFA48_accept = DFA.unpackEncodedString(DFA48_acceptS);
	static final short[] DFA48_special = DFA.unpackEncodedString(DFA48_specialS);
	static final short[][] DFA48_transition;

	static {
		int numStates = DFA48_transitionS.length;
		DFA48_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA48_transition[i] = DFA.unpackEncodedString(DFA48_transitionS[i]);
		}
	}

	protected class DFA48 extends DFA {

		public DFA48(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 48;
			this.eot = DFA48_eot;
			this.eof = DFA48_eof;
			this.min = DFA48_min;
			this.max = DFA48_max;
			this.accept = DFA48_accept;
			this.special = DFA48_special;
			this.transition = DFA48_transition;
		}
		@Override
		public String getDescription() {
			return "360:62: ( ws ( sass_forward_hide | sass_forward_show ) )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA48_5 = input.LA(1);
						 
						int index48_5 = input.index();
						input.rewind();
						s = -1;
						if ( (!(evalPredicate(evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")"),""))) ) {s = 6;}
						else if ( (evalPredicate(tokenNameEquals2("as"),"tokenNameEquals2(\"as\")")) ) {s = 2;}
						 
						input.seek(index48_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 48, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA47_eotS =
		"\6\uffff";
	static final String DFA47_eofS =
		"\6\uffff";
	static final String DFA47_minS =
		"\1\63\2\25\1\0\2\uffff";
	static final String DFA47_maxS =
		"\1\63\2\u0098\1\0\2\uffff";
	static final String DFA47_acceptS =
		"\4\uffff\1\1\1\2";
	static final String DFA47_specialS =
		"\3\uffff\1\0\2\uffff}>";
	static final String[] DFA47_transitionS = {
			"\1\1",
			"\1\2\74\uffff\1\2\105\uffff\1\2",
			"\1\2\35\uffff\1\3\36\uffff\1\2\105\uffff\1\2",
			"\1\uffff",
			"",
			""
	};

	static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
	static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
	static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
	static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
	static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
	static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
	static final short[][] DFA47_transition;

	static {
		int numStates = DFA47_transitionS.length;
		DFA47_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
		}
	}

	protected class DFA47 extends DFA {

		public DFA47(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 47;
			this.eot = DFA47_eot;
			this.eof = DFA47_eof;
			this.min = DFA47_min;
			this.max = DFA47_max;
			this.accept = DFA47_accept;
			this.special = DFA47_special;
			this.transition = DFA47_transition;
		}
		@Override
		public String getDescription() {
			return "360:67: ( sass_forward_hide | sass_forward_show )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA47_3 = input.LA(1);
						 
						int index47_3 = input.index();
						input.rewind();
						s = -1;
						if ( (evalPredicate(tokenNameEquals("hide"),"tokenNameEquals(\"hide\")")) ) {s = 4;}
						else if ( (evalPredicate(tokenNameEquals("show"),"tokenNameEquals(\"show\")")) ) {s = 5;}
						 
						input.seek(index47_3);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 47, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA49_eotS =
		"\6\uffff";
	static final String DFA49_eofS =
		"\6\uffff";
	static final String DFA49_minS =
		"\2\25\1\uffff\2\25\1\uffff";
	static final String DFA49_maxS =
		"\2\u0098\1\uffff\2\u0098\1\uffff";
	static final String DFA49_acceptS =
		"\2\uffff\1\2\2\uffff\1\1";
	static final String DFA49_specialS =
		"\6\uffff}>";
	static final String[] DFA49_transitionS = {
			"\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\35\uffff\1\3\36\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			"\1\4\61\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			"\1\4\35\uffff\1\5\23\uffff\1\2\12\uffff\1\4\105\uffff\1\4",
			""
	};

	static final short[] DFA49_eot = DFA.unpackEncodedString(DFA49_eotS);
	static final short[] DFA49_eof = DFA.unpackEncodedString(DFA49_eofS);
	static final char[] DFA49_min = DFA.unpackEncodedStringToUnsignedChars(DFA49_minS);
	static final char[] DFA49_max = DFA.unpackEncodedStringToUnsignedChars(DFA49_maxS);
	static final short[] DFA49_accept = DFA.unpackEncodedString(DFA49_acceptS);
	static final short[] DFA49_special = DFA.unpackEncodedString(DFA49_specialS);
	static final short[][] DFA49_transition;

	static {
		int numStates = DFA49_transitionS.length;
		DFA49_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA49_transition[i] = DFA.unpackEncodedString(DFA49_transitionS[i]);
		}
	}

	protected class DFA49 extends DFA {

		public DFA49(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 49;
			this.eot = DFA49_eot;
			this.eof = DFA49_eof;
			this.min = DFA49_min;
			this.max = DFA49_max;
			this.accept = DFA49_accept;
			this.special = DFA49_special;
			this.transition = DFA49_transition;
		}
		@Override
		public String getDescription() {
			return "360:111: ({...}? ws sass_forward_as )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA50_eotS =
		"\4\uffff";
	static final String DFA50_eofS =
		"\4\uffff";
	static final String DFA50_minS =
		"\2\25\2\uffff";
	static final String DFA50_maxS =
		"\2\u0098\2\uffff";
	static final String DFA50_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA50_specialS =
		"\4\uffff}>";
	static final String[] DFA50_transitionS = {
			"\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\1\35\uffff\1\3\36\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
	static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
	static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
	static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
	static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
	static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
	static final short[][] DFA50_transition;

	static {
		int numStates = DFA50_transitionS.length;
		DFA50_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
		}
	}

	protected class DFA50 extends DFA {

		public DFA50(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}
		@Override
		public String getDescription() {
			return "360:159: ({...}? ws sass_forward_with )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA55_eotS =
		"\4\uffff";
	static final String DFA55_eofS =
		"\4\uffff";
	static final String DFA55_minS =
		"\2\24\2\uffff";
	static final String DFA55_maxS =
		"\2\u0098\2\uffff";
	static final String DFA55_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA55_specialS =
		"\4\uffff}>";
	static final String[] DFA55_transitionS = {
			"\1\3\1\1\74\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\3\1\1\74\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
	static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
	static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
	static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
	static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
	static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
	static final short[][] DFA55_transition;

	static {
		int numStates = DFA55_transitionS.length;
		DFA55_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
		}
	}

	protected class DFA55 extends DFA {

		public DFA55(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 55;
			this.eot = DFA55_eot;
			this.eof = DFA55_eof;
			this.min = DFA55_min;
			this.max = DFA55_max;
			this.accept = DFA55_accept;
			this.special = DFA55_special;
			this.transition = DFA55_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 370:84: ( ( ws )? COMMA ( ws )? sass_forward_with_declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA61_eotS =
		"\4\uffff";
	static final String DFA61_eofS =
		"\4\uffff";
	static final String DFA61_minS =
		"\2\24\2\uffff";
	static final String DFA61_maxS =
		"\2\u0098\2\uffff";
	static final String DFA61_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA61_specialS =
		"\4\uffff}>";
	static final String[] DFA61_transitionS = {
			"\1\3\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\35\uffff\1\2\36\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA61_eot = DFA.unpackEncodedString(DFA61_eotS);
	static final short[] DFA61_eof = DFA.unpackEncodedString(DFA61_eofS);
	static final char[] DFA61_min = DFA.unpackEncodedStringToUnsignedChars(DFA61_minS);
	static final char[] DFA61_max = DFA.unpackEncodedStringToUnsignedChars(DFA61_maxS);
	static final short[] DFA61_accept = DFA.unpackEncodedString(DFA61_acceptS);
	static final short[] DFA61_special = DFA.unpackEncodedString(DFA61_specialS);
	static final short[][] DFA61_transition;

	static {
		int numStates = DFA61_transitionS.length;
		DFA61_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA61_transition[i] = DFA.unpackEncodedString(DFA61_transitionS[i]);
		}
	}

	protected class DFA61 extends DFA {

		public DFA61(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 61;
			this.eot = DFA61_eot;
			this.eof = DFA61_eof;
			this.min = DFA61_min;
			this.max = DFA61_max;
			this.accept = DFA61_accept;
			this.special = DFA61_special;
			this.transition = DFA61_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 380:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA64_eotS =
		"\4\uffff";
	static final String DFA64_eofS =
		"\4\uffff";
	static final String DFA64_minS =
		"\2\24\2\uffff";
	static final String DFA64_maxS =
		"\2\u0098\2\uffff";
	static final String DFA64_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA64_specialS =
		"\4\uffff}>";
	static final String[] DFA64_transitionS = {
			"\1\3\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\1\3\1\1\35\uffff\1\2\36\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA64_eot = DFA.unpackEncodedString(DFA64_eotS);
	static final short[] DFA64_eof = DFA.unpackEncodedString(DFA64_eofS);
	static final char[] DFA64_min = DFA.unpackEncodedStringToUnsignedChars(DFA64_minS);
	static final char[] DFA64_max = DFA.unpackEncodedStringToUnsignedChars(DFA64_maxS);
	static final short[] DFA64_accept = DFA.unpackEncodedString(DFA64_acceptS);
	static final short[] DFA64_special = DFA.unpackEncodedString(DFA64_specialS);
	static final short[][] DFA64_transition;

	static {
		int numStates = DFA64_transitionS.length;
		DFA64_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA64_transition[i] = DFA.unpackEncodedString(DFA64_transitionS[i]);
		}
	}

	protected class DFA64 extends DFA {

		public DFA64(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 64;
			this.eot = DFA64_eot;
			this.eof = DFA64_eof;
			this.min = DFA64_min;
			this.max = DFA64_max;
			this.accept = DFA64_accept;
			this.special = DFA64_special;
			this.transition = DFA64_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 385:47: ( ( ws )? COMMA ( ws )? IDENT )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA70_eotS =
		"\6\uffff";
	static final String DFA70_eofS =
		"\6\uffff";
	static final String DFA70_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA70_maxS =
		"\2\u0098\1\0\1\uffff\1\0\1\uffff";
	static final String DFA70_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA70_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA70_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\3\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\3\3\1\4\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA70_eot = DFA.unpackEncodedString(DFA70_eotS);
	static final short[] DFA70_eof = DFA.unpackEncodedString(DFA70_eofS);
	static final char[] DFA70_min = DFA.unpackEncodedStringToUnsignedChars(DFA70_minS);
	static final char[] DFA70_max = DFA.unpackEncodedStringToUnsignedChars(DFA70_maxS);
	static final short[] DFA70_accept = DFA.unpackEncodedString(DFA70_acceptS);
	static final short[] DFA70_special = DFA.unpackEncodedString(DFA70_specialS);
	static final short[][] DFA70_transition;

	static {
		int numStates = DFA70_transitionS.length;
		DFA70_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA70_transition[i] = DFA.unpackEncodedString(DFA70_transitionS[i]);
		}
	}

	protected class DFA70 extends DFA {

		public DFA70(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 70;
			this.eot = DFA70_eot;
			this.eof = DFA70_eof;
			this.min = DFA70_min;
			this.max = DFA70_max;
			this.accept = DFA70_accept;
			this.special = DFA70_special;
			this.transition = DFA70_transition;
		}
		@Override
		public String getDescription() {
			return "401:26: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA70_2 = input.LA(1);
						 
						int index70_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index70_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA70_4 = input.LA(1);
						 
						int index70_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred4_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index70_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 70, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA76_eotS =
		"\4\uffff";
	static final String DFA76_eofS =
		"\4\uffff";
	static final String DFA76_minS =
		"\2\6\2\uffff";
	static final String DFA76_maxS =
		"\2\u0098\2\uffff";
	static final String DFA76_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA76_specialS =
		"\4\uffff}>";
	static final String[] DFA76_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA76_eot = DFA.unpackEncodedString(DFA76_eotS);
	static final short[] DFA76_eof = DFA.unpackEncodedString(DFA76_eofS);
	static final char[] DFA76_min = DFA.unpackEncodedStringToUnsignedChars(DFA76_minS);
	static final char[] DFA76_max = DFA.unpackEncodedStringToUnsignedChars(DFA76_maxS);
	static final short[] DFA76_accept = DFA.unpackEncodedString(DFA76_acceptS);
	static final short[] DFA76_special = DFA.unpackEncodedString(DFA76_specialS);
	static final short[][] DFA76_transition;

	static {
		int numStates = DFA76_transitionS.length;
		DFA76_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA76_transition[i] = DFA.unpackEncodedString(DFA76_transitionS[i]);
		}
	}

	protected class DFA76 extends DFA {

		public DFA76(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 76;
			this.eot = DFA76_eot;
			this.eof = DFA76_eof;
			this.min = DFA76_min;
			this.max = DFA76_max;
			this.accept = DFA76_accept;
			this.special = DFA76_special;
			this.transition = DFA76_transition;
		}
		@Override
		public String getDescription() {
			return "412:87: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA78_eotS =
		"\4\uffff";
	static final String DFA78_eofS =
		"\4\uffff";
	static final String DFA78_minS =
		"\2\6\2\uffff";
	static final String DFA78_maxS =
		"\2\u0098\2\uffff";
	static final String DFA78_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA78_specialS =
		"\4\uffff}>";
	static final String[] DFA78_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA78_eot = DFA.unpackEncodedString(DFA78_eotS);
	static final short[] DFA78_eof = DFA.unpackEncodedString(DFA78_eofS);
	static final char[] DFA78_min = DFA.unpackEncodedStringToUnsignedChars(DFA78_minS);
	static final char[] DFA78_max = DFA.unpackEncodedStringToUnsignedChars(DFA78_maxS);
	static final short[] DFA78_accept = DFA.unpackEncodedString(DFA78_acceptS);
	static final short[] DFA78_special = DFA.unpackEncodedString(DFA78_specialS);
	static final short[][] DFA78_transition;

	static {
		int numStates = DFA78_transitionS.length;
		DFA78_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA78_transition[i] = DFA.unpackEncodedString(DFA78_transitionS[i]);
		}
	}

	protected class DFA78 extends DFA {

		public DFA78(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 78;
			this.eot = DFA78_eot;
			this.eof = DFA78_eof;
			this.min = DFA78_min;
			this.max = DFA78_max;
			this.accept = DFA78_accept;
			this.special = DFA78_special;
			this.transition = DFA78_transition;
		}
		@Override
		public String getDescription() {
			return "413:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA82_eotS =
		"\4\uffff";
	static final String DFA82_eofS =
		"\2\2\2\uffff";
	static final String DFA82_minS =
		"\2\6\2\uffff";
	static final String DFA82_maxS =
		"\2\u0098\2\uffff";
	static final String DFA82_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA82_specialS =
		"\1\0\1\1\2\uffff}>";
	static final String[] DFA82_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\2\uffff\3\2\1\uffff\1\2\1\uffff"+
			"\3\2\1\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\5\uffff\5\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff"+
			"\3\2\1\uffff\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA82_eot = DFA.unpackEncodedString(DFA82_eotS);
	static final short[] DFA82_eof = DFA.unpackEncodedString(DFA82_eofS);
	static final char[] DFA82_min = DFA.unpackEncodedStringToUnsignedChars(DFA82_minS);
	static final char[] DFA82_max = DFA.unpackEncodedStringToUnsignedChars(DFA82_maxS);
	static final short[] DFA82_accept = DFA.unpackEncodedString(DFA82_acceptS);
	static final short[] DFA82_special = DFA.unpackEncodedString(DFA82_specialS);
	static final short[][] DFA82_transition;

	static {
		int numStates = DFA82_transitionS.length;
		DFA82_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA82_transition[i] = DFA.unpackEncodedString(DFA82_transitionS[i]);
		}
	}

	protected class DFA82 extends DFA {

		public DFA82(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 82;
			this.eot = DFA82_eot;
			this.eof = DFA82_eof;
			this.min = DFA82_min;
			this.max = DFA82_max;
			this.accept = DFA82_accept;
			this.special = DFA82_special;
			this.transition = DFA82_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 430:15: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? mediaQuery )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA82_0 = input.LA(1);
						 
						int index82_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA82_0==COMMENT||LA82_0==NL||LA82_0==WS) ) {s = 1;}
						else if ( (LA82_0==EOF||(LA82_0 >= AT_IDENT && LA82_0 <= AT_SIGN)||(LA82_0 >= BOTTOMCENTER_SYM && LA82_0 <= BOTTOMRIGHT_SYM)||(LA82_0 >= CHARSET_SYM && LA82_0 <= COLON)||LA82_0==COUNTER_STYLE_SYM||(LA82_0 >= DCOLON && LA82_0 <= DOT)||LA82_0==FONT_FACE_SYM||(LA82_0 >= GEN && LA82_0 <= GREATER)||(LA82_0 >= HASH && LA82_0 <= HASH_SYMBOL)||LA82_0==IDENT||LA82_0==IMPORT_SYM||(LA82_0 >= LBRACE && LA82_0 <= LEFTTOP_SYM)||LA82_0==LESS_AND||(LA82_0 >= MEDIA_SYM && LA82_0 <= MOZ_DOCUMENT_SYM)||LA82_0==NAMESPACE_SYM||LA82_0==PAGE_SYM||(LA82_0 >= PIPE && LA82_0 <= PLUS)||LA82_0==RBRACE||(LA82_0 >= RIGHTBOTTOM_SYM && LA82_0 <= RPAREN)||(LA82_0 >= SASS_AT_ROOT && LA82_0 <= SASS_DEBUG)||(LA82_0 >= SASS_EACH && LA82_0 <= SASS_ELSE)||(LA82_0 >= SASS_EXTEND && LA82_0 <= SASS_FOR)||LA82_0==SASS_FUNCTION||(LA82_0 >= SASS_IF && LA82_0 <= SASS_MIXIN)||LA82_0==SASS_RETURN||(LA82_0 >= SASS_VAR && LA82_0 <= SEMI)||LA82_0==STAR||LA82_0==SUPPORTS_SYM||LA82_0==TILDE||(LA82_0 >= TOPCENTER_SYM && LA82_0 <= TOPRIGHT_SYM)||LA82_0==VARIABLE||LA82_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA82_0==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index82_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA82_1 = input.LA(1);
						 
						int index82_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA82_1==EOF||(LA82_1 >= AT_IDENT && LA82_1 <= AT_SIGN)||(LA82_1 >= BOTTOMCENTER_SYM && LA82_1 <= BOTTOMRIGHT_SYM)||(LA82_1 >= CHARSET_SYM && LA82_1 <= COLON)||LA82_1==COUNTER_STYLE_SYM||(LA82_1 >= DCOLON && LA82_1 <= DOT)||LA82_1==FONT_FACE_SYM||(LA82_1 >= GEN && LA82_1 <= GREATER)||(LA82_1 >= HASH && LA82_1 <= HASH_SYMBOL)||LA82_1==IDENT||LA82_1==IMPORT_SYM||(LA82_1 >= LBRACE && LA82_1 <= LEFTTOP_SYM)||LA82_1==LESS_AND||(LA82_1 >= MEDIA_SYM && LA82_1 <= MOZ_DOCUMENT_SYM)||LA82_1==NAMESPACE_SYM||LA82_1==PAGE_SYM||(LA82_1 >= PIPE && LA82_1 <= PLUS)||LA82_1==RBRACE||(LA82_1 >= RIGHTBOTTOM_SYM && LA82_1 <= RPAREN)||(LA82_1 >= SASS_AT_ROOT && LA82_1 <= SASS_DEBUG)||(LA82_1 >= SASS_EACH && LA82_1 <= SASS_ELSE)||(LA82_1 >= SASS_ERROR && LA82_1 <= SASS_FOR)||LA82_1==SASS_FUNCTION||(LA82_1 >= SASS_IF && LA82_1 <= SASS_MIXIN)||LA82_1==SASS_RETURN||(LA82_1 >= SASS_VAR && LA82_1 <= SEMI)||LA82_1==STAR||LA82_1==SUPPORTS_SYM||LA82_1==TILDE||(LA82_1 >= TOPCENTER_SYM && LA82_1 <= TOPRIGHT_SYM)||LA82_1==VARIABLE||LA82_1==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA82_1==COMMENT||LA82_1==NL||LA82_1==WS) ) {s = 1;}
						else if ( (LA82_1==COMMA) && (synpred10_Css3())) {s = 3;}
						 
						input.seek(index82_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 82, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA95_eotS =
		"\4\uffff";
	static final String DFA95_eofS =
		"\4\uffff";
	static final String DFA95_minS =
		"\2\23\2\uffff";
	static final String DFA95_maxS =
		"\2\u0098\2\uffff";
	static final String DFA95_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA95_specialS =
		"\4\uffff}>";
	static final String[] DFA95_transitionS = {
			"\1\2\1\uffff\1\1\74\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"\1\2\1\uffff\1\1\74\uffff\1\1\26\uffff\1\3\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA95_eot = DFA.unpackEncodedString(DFA95_eotS);
	static final short[] DFA95_eof = DFA.unpackEncodedString(DFA95_eofS);
	static final char[] DFA95_min = DFA.unpackEncodedStringToUnsignedChars(DFA95_minS);
	static final char[] DFA95_max = DFA.unpackEncodedStringToUnsignedChars(DFA95_maxS);
	static final short[] DFA95_accept = DFA.unpackEncodedString(DFA95_acceptS);
	static final short[] DFA95_special = DFA.unpackEncodedString(DFA95_specialS);
	static final short[][] DFA95_transition;

	static {
		int numStates = DFA95_transitionS.length;
		DFA95_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA95_transition[i] = DFA.unpackEncodedString(DFA95_transitionS[i]);
		}
	}

	protected class DFA95 extends DFA {

		public DFA95(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 95;
			this.eot = DFA95_eot;
			this.eof = DFA95_eof;
			this.min = DFA95_min;
			this.max = DFA95_max;
			this.accept = DFA95_accept;
			this.special = DFA95_special;
			this.transition = DFA95_transition;
		}
		@Override
		public String getDescription() {
			return "450:42: ( mediaFeatureValue )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA104_eotS =
		"\6\uffff";
	static final String DFA104_eofS =
		"\2\3\4\uffff";
	static final String DFA104_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA104_maxS =
		"\2\u0098\1\0\1\uffff\1\0\1\uffff";
	static final String DFA104_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA104_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA104_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\3\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\10\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\3\3\2\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\3\3\1\4\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3"+
			"\1\uffff\5\3\10\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA104_eot = DFA.unpackEncodedString(DFA104_eotS);
	static final short[] DFA104_eof = DFA.unpackEncodedString(DFA104_eofS);
	static final char[] DFA104_min = DFA.unpackEncodedStringToUnsignedChars(DFA104_minS);
	static final char[] DFA104_max = DFA.unpackEncodedStringToUnsignedChars(DFA104_maxS);
	static final short[] DFA104_accept = DFA.unpackEncodedString(DFA104_acceptS);
	static final short[] DFA104_special = DFA.unpackEncodedString(DFA104_specialS);
	static final short[][] DFA104_transition;

	static {
		int numStates = DFA104_transitionS.length;
		DFA104_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA104_transition[i] = DFA.unpackEncodedString(DFA104_transitionS[i]);
		}
	}

	protected class DFA104 extends DFA {

		public DFA104(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 104;
			this.eot = DFA104_eot;
			this.eof = DFA104_eof;
			this.min = DFA104_min;
			this.max = DFA104_max;
			this.accept = DFA104_accept;
			this.special = DFA104_special;
			this.transition = DFA104_transition;
		}
		@Override
		public String getDescription() {
			return "471:21: ( ( ( ws )? SEMI )=> ( ws )? SEMI )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA104_2 = input.LA(1);
						 
						int index104_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred15_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index104_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA104_4 = input.LA(1);
						 
						int index104_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred15_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index104_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 104, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA113_eotS =
		"\4\uffff";
	static final String DFA113_eofS =
		"\4\uffff";
	static final String DFA113_minS =
		"\2\25\2\uffff";
	static final String DFA113_maxS =
		"\2\u0098\2\uffff";
	static final String DFA113_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA113_specialS =
		"\4\uffff}>";
	static final String[] DFA113_transitionS = {
			"\1\1\45\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\35\uffff\1\3\7\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA113_eot = DFA.unpackEncodedString(DFA113_eotS);
	static final short[] DFA113_eof = DFA.unpackEncodedString(DFA113_eofS);
	static final char[] DFA113_min = DFA.unpackEncodedStringToUnsignedChars(DFA113_minS);
	static final char[] DFA113_max = DFA.unpackEncodedStringToUnsignedChars(DFA113_maxS);
	static final short[] DFA113_accept = DFA.unpackEncodedString(DFA113_acceptS);
	static final short[] DFA113_special = DFA.unpackEncodedString(DFA113_specialS);
	static final short[][] DFA113_transition;

	static {
		int numStates = DFA113_transitionS.length;
		DFA113_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA113_transition[i] = DFA.unpackEncodedString(DFA113_transitionS[i]);
		}
	}

	protected class DFA113 extends DFA {

		public DFA113(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 113;
			this.eot = DFA113_eot;
			this.eof = DFA113_eof;
			this.min = DFA113_min;
			this.max = DFA113_max;
			this.accept = DFA113_accept;
			this.special = DFA113_special;
			this.transition = DFA113_transition;
		}
		@Override
		public String getDescription() {
			return "506:21: ( ws supportsWithOperator )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA115_eotS =
		"\4\uffff";
	static final String DFA115_eofS =
		"\4\uffff";
	static final String DFA115_minS =
		"\2\25\2\uffff";
	static final String DFA115_maxS =
		"\2\u0098\2\uffff";
	static final String DFA115_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA115_specialS =
		"\4\uffff}>";
	static final String[] DFA115_transitionS = {
			"\1\1\45\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\35\uffff\1\3\7\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA115_eot = DFA.unpackEncodedString(DFA115_eotS);
	static final short[] DFA115_eof = DFA.unpackEncodedString(DFA115_eofS);
	static final char[] DFA115_min = DFA.unpackEncodedStringToUnsignedChars(DFA115_minS);
	static final char[] DFA115_max = DFA.unpackEncodedStringToUnsignedChars(DFA115_maxS);
	static final short[] DFA115_accept = DFA.unpackEncodedString(DFA115_acceptS);
	static final short[] DFA115_special = DFA.unpackEncodedString(DFA115_specialS);
	static final short[][] DFA115_transition;

	static {
		int numStates = DFA115_transitionS.length;
		DFA115_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA115_transition[i] = DFA.unpackEncodedString(DFA115_transitionS[i]);
		}
	}

	protected class DFA115 extends DFA {

		public DFA115(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 115;
			this.eot = DFA115_eot;
			this.eof = DFA115_eof;
			this.min = DFA115_min;
			this.max = DFA115_max;
			this.accept = DFA115_accept;
			this.special = DFA115_special;
			this.transition = DFA115_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 511:29: ( ws supportsConjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA116_eotS =
		"\4\uffff";
	static final String DFA116_eofS =
		"\4\uffff";
	static final String DFA116_minS =
		"\2\25\2\uffff";
	static final String DFA116_maxS =
		"\2\u0098\2\uffff";
	static final String DFA116_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA116_specialS =
		"\4\uffff}>";
	static final String[] DFA116_transitionS = {
			"\1\1\45\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"\1\1\35\uffff\1\3\7\uffff\1\2\26\uffff\1\1\26\uffff\1\2\56\uffff\1\1",
			"",
			""
	};

	static final short[] DFA116_eot = DFA.unpackEncodedString(DFA116_eotS);
	static final short[] DFA116_eof = DFA.unpackEncodedString(DFA116_eofS);
	static final char[] DFA116_min = DFA.unpackEncodedStringToUnsignedChars(DFA116_minS);
	static final char[] DFA116_max = DFA.unpackEncodedStringToUnsignedChars(DFA116_maxS);
	static final short[] DFA116_accept = DFA.unpackEncodedString(DFA116_acceptS);
	static final short[] DFA116_special = DFA.unpackEncodedString(DFA116_specialS);
	static final short[][] DFA116_transition;

	static {
		int numStates = DFA116_transitionS.length;
		DFA116_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA116_transition[i] = DFA.unpackEncodedString(DFA116_transitionS[i]);
		}
	}

	protected class DFA116 extends DFA {

		public DFA116(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 116;
			this.eot = DFA116_eot;
			this.eof = DFA116_eof;
			this.min = DFA116_min;
			this.max = DFA116_max;
			this.accept = DFA116_accept;
			this.special = DFA116_special;
			this.transition = DFA116_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 512:31: ( ws supportsDisjunction )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA149_eotS =
		"\4\uffff";
	static final String DFA149_eofS =
		"\1\2\3\uffff";
	static final String DFA149_minS =
		"\2\24\2\uffff";
	static final String DFA149_maxS =
		"\2\u0098\2\uffff";
	static final String DFA149_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA149_specialS =
		"\4\uffff}>";
	static final String[] DFA149_transitionS = {
			"\1\3\1\1\45\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\45\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA149_eot = DFA.unpackEncodedString(DFA149_eotS);
	static final short[] DFA149_eof = DFA.unpackEncodedString(DFA149_eofS);
	static final char[] DFA149_min = DFA.unpackEncodedStringToUnsignedChars(DFA149_minS);
	static final char[] DFA149_max = DFA.unpackEncodedStringToUnsignedChars(DFA149_maxS);
	static final short[] DFA149_accept = DFA.unpackEncodedString(DFA149_acceptS);
	static final short[] DFA149_special = DFA.unpackEncodedString(DFA149_specialS);
	static final short[][] DFA149_transition;

	static {
		int numStates = DFA149_transitionS.length;
		DFA149_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA149_transition[i] = DFA.unpackEncodedString(DFA149_transitionS[i]);
		}
	}

	protected class DFA149 extends DFA {

		public DFA149(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 149;
			this.eot = DFA149_eot;
			this.eof = DFA149_eof;
			this.min = DFA149_min;
			this.max = DFA149_max;
			this.accept = DFA149_accept;
			this.special = DFA149_special;
			this.transition = DFA149_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 595:85: ( ( ws )? COMMA ( ws )? ({...}? IDENT |{...}? IDENT | PERCENTAGE ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA161_eotS =
		"\6\uffff";
	static final String DFA161_eofS =
		"\6\uffff";
	static final String DFA161_minS =
		"\3\6\2\uffff\1\6";
	static final String DFA161_maxS =
		"\3\u0098\2\uffff\1\u0098";
	static final String DFA161_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA161_specialS =
		"\6\uffff}>";
	static final String[] DFA161_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\1\uffff\1\4\17\uffff\1\4\2\uffff"+
			"\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\7\uffff\3\4\11\uffff\3\4\5\uffff"+
			"\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4"+
			"\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\1\1\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\1\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\7\uffff\3\4\11\uffff\3"+
			"\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1"+
			"\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1"+
			"\4\1\uffff\3\4\2\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\2\1\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\7\uffff\3\4\11\uffff\3"+
			"\4\5\uffff\1\4\1\2\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1"+
			"\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1"+
			"\4\1\uffff\4\4\1\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\2",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\5\1\uffff\1\4\17\uffff\1\4\2"+
			"\uffff\1\4\4\uffff\1\4\3\uffff\1\4\1\uffff\1\4\7\uffff\3\4\11\uffff\3"+
			"\4\5\uffff\1\4\1\5\10\uffff\1\4\6\uffff\1\3\3\uffff\3\4\2\uffff\3\4\1"+
			"\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1"+
			"\4\1\uffff\3\4\2\uffff\1\4\5\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA161_eot = DFA.unpackEncodedString(DFA161_eotS);
	static final short[] DFA161_eof = DFA.unpackEncodedString(DFA161_eofS);
	static final char[] DFA161_min = DFA.unpackEncodedStringToUnsignedChars(DFA161_minS);
	static final char[] DFA161_max = DFA.unpackEncodedStringToUnsignedChars(DFA161_maxS);
	static final short[] DFA161_accept = DFA.unpackEncodedString(DFA161_acceptS);
	static final short[] DFA161_special = DFA.unpackEncodedString(DFA161_specialS);
	static final short[][] DFA161_transition;

	static {
		int numStates = DFA161_transitionS.length;
		DFA161_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA161_transition[i] = DFA.unpackEncodedString(DFA161_transitionS[i]);
		}
	}

	protected class DFA161 extends DFA {

		public DFA161(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 161;
			this.eot = DFA161_eot;
			this.eof = DFA161_eof;
			this.min = DFA161_min;
			this.max = DFA161_max;
			this.accept = DFA161_accept;
			this.special = DFA161_special;
			this.transition = DFA161_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 606:13: ( ( ws )? ({...}? ( SEMI ( ws )? ) | ( SEMI ( ws )? )? ) ( propertyDeclaration | margin ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA160_eotS =
		"\5\uffff";
	static final String DFA160_eofS =
		"\5\uffff";
	static final String DFA160_minS =
		"\1\6\1\uffff\2\23\1\uffff";
	static final String DFA160_maxS =
		"\1\u0097\1\uffff\2\u0098\1\uffff";
	static final String DFA160_acceptS =
		"\1\uffff\1\1\2\uffff\1\2";
	static final String DFA160_specialS =
		"\5\uffff}>";
	static final String[] DFA160_transitionS = {
			"\2\1\2\uffff\5\2\3\uffff\1\1\4\uffff\1\1\17\uffff\1\1\2\uffff\1\1\4\uffff"+
			"\1\1\3\uffff\1\1\1\uffff\1\1\7\uffff\3\2\11\uffff\3\1\5\uffff\1\1\11"+
			"\uffff\1\1\12\uffff\3\2\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\1"+
			"\1\1\uffff\1\1\1\uffff\3\1\1\uffff\1\1\1\uffff\3\1\2\uffff\1\1\5\uffff"+
			"\5\2\6\uffff\1\1\1\uffff\1\1",
			"",
			"\1\1\1\uffff\1\3\45\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"\1\1\1\uffff\1\3\45\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA160_eot = DFA.unpackEncodedString(DFA160_eotS);
	static final short[] DFA160_eof = DFA.unpackEncodedString(DFA160_eofS);
	static final char[] DFA160_min = DFA.unpackEncodedStringToUnsignedChars(DFA160_minS);
	static final char[] DFA160_max = DFA.unpackEncodedStringToUnsignedChars(DFA160_maxS);
	static final short[] DFA160_accept = DFA.unpackEncodedString(DFA160_acceptS);
	static final short[] DFA160_special = DFA.unpackEncodedString(DFA160_specialS);
	static final short[][] DFA160_transition;

	static {
		int numStates = DFA160_transitionS.length;
		DFA160_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA160_transition[i] = DFA.unpackEncodedString(DFA160_transitionS[i]);
		}
	}

	protected class DFA160 extends DFA {

		public DFA160(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 160;
			this.eot = DFA160_eot;
			this.eof = DFA160_eof;
			this.min = DFA160_min;
			this.max = DFA160_max;
			this.accept = DFA160_accept;
			this.special = DFA160_special;
			this.transition = DFA160_transition;
		}
		@Override
		public String getDescription() {
			return "606:62: ( propertyDeclaration | margin )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA180_eotS =
		"\5\uffff";
	static final String DFA180_eofS =
		"\2\2\3\uffff";
	static final String DFA180_minS =
		"\2\6\3\uffff";
	static final String DFA180_maxS =
		"\2\u0098\3\uffff";
	static final String DFA180_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA180_specialS =
		"\5\uffff}>";
	static final String[] DFA180_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\3\2\2\2\uffff\3\2\1\uffff\1\2\1\4\3\2\1\uffff"+
			"\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff"+
			"\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\3\2\2\1\uffff\4\2\1\uffff\1\2\1\4\3\2\1\uffff"+
			"\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA180_eot = DFA.unpackEncodedString(DFA180_eotS);
	static final short[] DFA180_eof = DFA.unpackEncodedString(DFA180_eofS);
	static final char[] DFA180_min = DFA.unpackEncodedStringToUnsignedChars(DFA180_minS);
	static final char[] DFA180_max = DFA.unpackEncodedStringToUnsignedChars(DFA180_maxS);
	static final short[] DFA180_accept = DFA.unpackEncodedString(DFA180_acceptS);
	static final short[] DFA180_special = DFA.unpackEncodedString(DFA180_specialS);
	static final short[][] DFA180_transition;

	static {
		int numStates = DFA180_transitionS.length;
		DFA180_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA180_transition[i] = DFA.unpackEncodedString(DFA180_transitionS[i]);
		}
	}

	protected class DFA180 extends DFA {

		public DFA180(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 180;
			this.eot = DFA180_eot;
			this.eof = DFA180_eof;
			this.min = DFA180_min;
			this.max = DFA180_max;
			this.accept = DFA180_accept;
			this.special = DFA180_special;
			this.transition = DFA180_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 686:12: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA182_eotS =
		"\6\uffff";
	static final String DFA182_eofS =
		"\6\uffff";
	static final String DFA182_minS =
		"\2\6\1\0\1\uffff\1\0\1\uffff";
	static final String DFA182_maxS =
		"\2\u0098\1\0\1\uffff\1\0\1\uffff";
	static final String DFA182_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA182_specialS =
		"\2\uffff\1\0\1\uffff\1\1\1\uffff}>";
	static final String[] DFA182_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff"+
			"\1\3\1\uffff\3\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\4\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\uffff\1\3\7\uffff\3\3\11\uffff"+
			"\3\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3"+
			"\1\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff"+
			"\1\3\1\uffff\3\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\1\uffff",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
	static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
	static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
	static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
	static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
	static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
	static final short[][] DFA182_transition;

	static {
		int numStates = DFA182_transitionS.length;
		DFA182_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
		}
	}

	protected class DFA182 extends DFA {

		public DFA182(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 182;
			this.eot = DFA182_eot;
			this.eof = DFA182_eof;
			this.min = DFA182_min;
			this.max = DFA182_max;
			this.accept = DFA182_accept;
			this.special = DFA182_special;
			this.transition = DFA182_transition;
		}
		@Override
		public String getDescription() {
			return "697:26: ( ( ( ws )? COMMA )=> ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA182_2 = input.LA(1);
						 
						int index182_2 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred21_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index182_2);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA182_4 = input.LA(1);
						 
						int index182_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred21_Css3()) ) {s = 5;}
						else if ( (true) ) {s = 3;}
						 
						input.seek(index182_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 182, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA187_eotS =
		"\4\uffff";
	static final String DFA187_eofS =
		"\4\uffff";
	static final String DFA187_minS =
		"\2\23\2\uffff";
	static final String DFA187_maxS =
		"\2\u0098\2\uffff";
	static final String DFA187_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA187_specialS =
		"\4\uffff}>";
	static final String[] DFA187_transitionS = {
			"\1\2\1\uffff\1\1\74\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"\1\2\1\uffff\1\1\74\uffff\1\1\62\uffff\1\3\22\uffff\1\1",
			"",
			""
	};

	static final short[] DFA187_eot = DFA.unpackEncodedString(DFA187_eotS);
	static final short[] DFA187_eof = DFA.unpackEncodedString(DFA187_eofS);
	static final char[] DFA187_min = DFA.unpackEncodedStringToUnsignedChars(DFA187_minS);
	static final char[] DFA187_max = DFA.unpackEncodedStringToUnsignedChars(DFA187_maxS);
	static final short[] DFA187_accept = DFA.unpackEncodedString(DFA187_acceptS);
	static final short[] DFA187_special = DFA.unpackEncodedString(DFA187_specialS);
	static final short[][] DFA187_transition;

	static {
		int numStates = DFA187_transitionS.length;
		DFA187_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA187_transition[i] = DFA.unpackEncodedString(DFA187_transitionS[i]);
		}
	}

	protected class DFA187 extends DFA {

		public DFA187(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 187;
			this.eot = DFA187_eot;
			this.eof = DFA187_eof;
			this.min = DFA187_min;
			this.max = DFA187_max;
			this.accept = DFA187_accept;
			this.special = DFA187_special;
			this.transition = DFA187_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 705:25: ( ( ws )? STRING )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA192_eotS =
		"\4\uffff";
	static final String DFA192_eofS =
		"\4\uffff";
	static final String DFA192_minS =
		"\2\6\2\uffff";
	static final String DFA192_maxS =
		"\2\u0098\2\uffff";
	static final String DFA192_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA192_specialS =
		"\4\uffff}>";
	static final String[] DFA192_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1\3"+
			"\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3\3"+
			"\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\1\1\uffff\1\3\17\uffff\1"+
			"\3\2\uffff\1\3\4\uffff\1\3\3\uffff\1\3\1\2\1\3\7\uffff\3\3\11\uffff\3"+
			"\3\5\uffff\1\3\1\1\4\uffff\1\3\3\uffff\1\3\12\uffff\4\3\1\uffff\3\3\1"+
			"\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1"+
			"\3\1\uffff\3\3\3\uffff\1\3\4\uffff\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA192_eot = DFA.unpackEncodedString(DFA192_eotS);
	static final short[] DFA192_eof = DFA.unpackEncodedString(DFA192_eofS);
	static final char[] DFA192_min = DFA.unpackEncodedStringToUnsignedChars(DFA192_minS);
	static final char[] DFA192_max = DFA.unpackEncodedStringToUnsignedChars(DFA192_maxS);
	static final short[] DFA192_accept = DFA.unpackEncodedString(DFA192_acceptS);
	static final short[] DFA192_special = DFA.unpackEncodedString(DFA192_specialS);
	static final short[][] DFA192_transition;

	static {
		int numStates = DFA192_transitionS.length;
		DFA192_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA192_transition[i] = DFA.unpackEncodedString(DFA192_transitionS[i]);
		}
	}

	protected class DFA192 extends DFA {

		public DFA192(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 192;
			this.eot = DFA192_eot;
			this.eof = DFA192_eof;
			this.min = DFA192_min;
			this.max = DFA192_max;
			this.accept = DFA192_accept;
			this.special = DFA192_special;
			this.transition = DFA192_transition;
		}
		@Override
		public String getDescription() {
			return "705:110: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA198_eotS =
		"\6\uffff";
	static final String DFA198_eofS =
		"\6\uffff";
	static final String DFA198_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA198_maxS =
		"\1\u0088\1\u0098\1\uffff\1\u0098\2\uffff";
	static final String DFA198_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA198_specialS =
		"\6\uffff}>";
	static final String[] DFA198_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\10"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\45\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\3\4\12\uffff\2\4\2\uffff\2\4\3"+
			"\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff\1"+
			"\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA198_eot = DFA.unpackEncodedString(DFA198_eotS);
	static final short[] DFA198_eof = DFA.unpackEncodedString(DFA198_eofS);
	static final char[] DFA198_min = DFA.unpackEncodedStringToUnsignedChars(DFA198_minS);
	static final char[] DFA198_max = DFA.unpackEncodedStringToUnsignedChars(DFA198_maxS);
	static final short[] DFA198_accept = DFA.unpackEncodedString(DFA198_acceptS);
	static final short[] DFA198_special = DFA.unpackEncodedString(DFA198_specialS);
	static final short[][] DFA198_transition;

	static {
		int numStates = DFA198_transitionS.length;
		DFA198_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA198_transition[i] = DFA.unpackEncodedString(DFA198_transitionS[i]);
		}
	}

	protected class DFA198 extends DFA {

		public DFA198(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 198;
			this.eot = DFA198_eot;
			this.eof = DFA198_eof;
			this.min = DFA198_min;
			this.max = DFA198_max;
			this.accept = DFA198_accept;
			this.special = DFA198_special;
			this.transition = DFA198_transition;
		}
		@Override
		public String getDescription() {
			return "710:9: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? {...}? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA193_eotS =
		"\4\uffff";
	static final String DFA193_eofS =
		"\4\uffff";
	static final String DFA193_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA193_maxS =
		"\2\u0098\2\uffff";
	static final String DFA193_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA193_specialS =
		"\4\uffff}>";
	static final String[] DFA193_transitionS = {
			"\1\1\45\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\3"+
			"\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA193_eot = DFA.unpackEncodedString(DFA193_eotS);
	static final short[] DFA193_eof = DFA.unpackEncodedString(DFA193_eofS);
	static final char[] DFA193_min = DFA.unpackEncodedStringToUnsignedChars(DFA193_minS);
	static final char[] DFA193_max = DFA.unpackEncodedStringToUnsignedChars(DFA193_maxS);
	static final short[] DFA193_accept = DFA.unpackEncodedString(DFA193_acceptS);
	static final short[] DFA193_special = DFA.unpackEncodedString(DFA193_specialS);
	static final short[][] DFA193_transition;

	static {
		int numStates = DFA193_transitionS.length;
		DFA193_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA193_transition[i] = DFA.unpackEncodedString(DFA193_transitionS[i]);
		}
	}

	protected class DFA193 extends DFA {

		public DFA193(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 193;
			this.eot = DFA193_eot;
			this.eof = DFA193_eof;
			this.min = DFA193_min;
			this.max = DFA193_max;
			this.accept = DFA193_accept;
			this.special = DFA193_special;
			this.transition = DFA193_transition;
		}
		@Override
		public String getDescription() {
			return "711:27: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA215_eotS =
		"\5\uffff";
	static final String DFA215_eofS =
		"\5\uffff";
	static final String DFA215_minS =
		"\2\6\1\uffff\1\6\1\uffff";
	static final String DFA215_maxS =
		"\1\u0097\1\u0098\1\uffff\1\u0098\1\uffff";
	static final String DFA215_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA215_specialS =
		"\5\uffff}>";
	static final String[] DFA215_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\3\uffff\1\2\5\uffff\3\2\7\uffff\1\2\2\uffff"+
			"\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff\1\2\6\uffff"+
			"\3\2\5\uffff\1\2\11\uffff\1\2\2\uffff\2\2\6\uffff\3\2\2\uffff\3\2\1\uffff"+
			"\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\1\1"+
			"\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff\1\2\1\uffff"+
			"\1\2",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff"+
			"\3\2\1\uffff\1\2\1\uffff\3\2\1\1\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			"",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\3\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\3\10\uffff\1\2\2\uffff\2\2\2\uffff\1\4"+
			"\3\uffff\3\2\2\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff"+
			"\3\2\1\uffff\1\2\1\uffff\3\2\1\1\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2"+
			"\1\uffff\5\2\6\uffff\1\2\1\uffff\1\2\1\3",
			""
	};

	static final short[] DFA215_eot = DFA.unpackEncodedString(DFA215_eotS);
	static final short[] DFA215_eof = DFA.unpackEncodedString(DFA215_eofS);
	static final char[] DFA215_min = DFA.unpackEncodedStringToUnsignedChars(DFA215_minS);
	static final char[] DFA215_max = DFA.unpackEncodedStringToUnsignedChars(DFA215_maxS);
	static final short[] DFA215_accept = DFA.unpackEncodedString(DFA215_acceptS);
	static final short[] DFA215_special = DFA.unpackEncodedString(DFA215_specialS);
	static final short[][] DFA215_transition;

	static {
		int numStates = DFA215_transitionS.length;
		DFA215_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA215_transition[i] = DFA.unpackEncodedString(DFA215_transitionS[i]);
		}
	}

	protected class DFA215 extends DFA {

		public DFA215(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 215;
			this.eot = DFA215_eot;
			this.eof = DFA215_eof;
			this.min = DFA215_min;
			this.max = DFA215_max;
			this.accept = DFA215_accept;
			this.special = DFA215_special;
			this.transition = DFA215_transition;
		}
		@Override
		public String getDescription() {
			return "725:1: declarations : ( ( SEMI ( ws )? )* declaration ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )* ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )? | ( SEMI ( ws )? )+ );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA208_eotS =
		"\6\uffff";
	static final String DFA208_eofS =
		"\6\uffff";
	static final String DFA208_minS =
		"\1\25\2\6\2\uffff\1\6";
	static final String DFA208_maxS =
		"\3\u0098\2\uffff\1\u0098";
	static final String DFA208_acceptS =
		"\3\uffff\1\2\1\1\1\uffff";
	static final String DFA208_specialS =
		"\6\uffff}>";
	static final String[] DFA208_transitionS = {
			"\1\1\74\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\4\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\1\4\1\uffff\3\4\1\2\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\4\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\1\4\1\uffff\3\4\1\2\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5",
			"",
			"",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\5\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\5\10\uffff\1\4\2\uffff\2\4\2\uffff\1\3"+
			"\3\uffff\3\4\2\uffff\3\4\1\uffff\2\4\1\uffff\4\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\1\4\1\uffff\3\4\1\2\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4"+
			"\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\5"
	};

	static final short[] DFA208_eot = DFA.unpackEncodedString(DFA208_eotS);
	static final short[] DFA208_eof = DFA.unpackEncodedString(DFA208_eofS);
	static final char[] DFA208_min = DFA.unpackEncodedStringToUnsignedChars(DFA208_minS);
	static final char[] DFA208_max = DFA.unpackEncodedStringToUnsignedChars(DFA208_maxS);
	static final short[] DFA208_accept = DFA.unpackEncodedString(DFA208_acceptS);
	static final short[] DFA208_special = DFA.unpackEncodedString(DFA208_specialS);
	static final short[][] DFA208_transition;

	static {
		int numStates = DFA208_transitionS.length;
		DFA208_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA208_transition[i] = DFA.unpackEncodedString(DFA208_transitionS[i]);
		}
	}

	protected class DFA208 extends DFA {

		public DFA208(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 208;
			this.eot = DFA208_eot;
			this.eof = DFA208_eof;
			this.min = DFA208_min;
			this.max = DFA208_max;
			this.accept = DFA208_accept;
			this.special = DFA208_special;
			this.transition = DFA208_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 727:33: ( ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws ) declaration )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA207_eotS =
		"\4\uffff";
	static final String DFA207_eofS =
		"\4\uffff";
	static final String DFA207_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA207_maxS =
		"\2\u0098\2\uffff";
	static final String DFA207_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA207_specialS =
		"\4\uffff}>";
	static final String[] DFA207_transitionS = {
			"\1\1\74\uffff\1\1\57\uffff\1\2\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\uffff\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\6\uffff\3\3"+
			"\2\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\1\3\1\uffff\3\3\1\uffff"+
			"\1\3\1\uffff\3\3\1\2\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3"+
			"\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA207_eot = DFA.unpackEncodedString(DFA207_eotS);
	static final short[] DFA207_eof = DFA.unpackEncodedString(DFA207_eofS);
	static final char[] DFA207_min = DFA.unpackEncodedStringToUnsignedChars(DFA207_minS);
	static final char[] DFA207_max = DFA.unpackEncodedStringToUnsignedChars(DFA207_maxS);
	static final short[] DFA207_accept = DFA.unpackEncodedString(DFA207_acceptS);
	static final short[] DFA207_special = DFA.unpackEncodedString(DFA207_specialS);
	static final short[][] DFA207_transition;

	static {
		int numStates = DFA207_transitionS.length;
		DFA207_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA207_transition[i] = DFA.unpackEncodedString(DFA207_transitionS[i]);
		}
	}

	protected class DFA207 extends DFA {

		public DFA207(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 207;
			this.eot = DFA207_eot;
			this.eof = DFA207_eof;
			this.min = DFA207_min;
			this.max = DFA207_max;
			this.accept = DFA207_accept;
			this.special = DFA207_special;
			this.transition = DFA207_transition;
		}
		@Override
		public String getDescription() {
			return "727:34: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA212_eotS =
		"\5\uffff";
	static final String DFA212_eofS =
		"\5\uffff";
	static final String DFA212_minS =
		"\2\25\3\uffff";
	static final String DFA212_maxS =
		"\2\u0098\3\uffff";
	static final String DFA212_acceptS =
		"\2\uffff\1\1\1\3\1\2";
	static final String DFA212_specialS =
		"\5\uffff}>";
	static final String[] DFA212_transitionS = {
			"\1\1\74\uffff\1\1\17\uffff\1\3\37\uffff\1\2\25\uffff\1\1",
			"\1\1\74\uffff\1\1\17\uffff\1\4\37\uffff\1\2\25\uffff\1\1",
			"",
			"",
			""
	};

	static final short[] DFA212_eot = DFA.unpackEncodedString(DFA212_eotS);
	static final short[] DFA212_eof = DFA.unpackEncodedString(DFA212_eofS);
	static final char[] DFA212_min = DFA.unpackEncodedStringToUnsignedChars(DFA212_minS);
	static final char[] DFA212_max = DFA.unpackEncodedStringToUnsignedChars(DFA212_maxS);
	static final short[] DFA212_accept = DFA.unpackEncodedString(DFA212_acceptS);
	static final short[] DFA212_special = DFA.unpackEncodedString(DFA212_specialS);
	static final short[][] DFA212_transition;

	static {
		int numStates = DFA212_transitionS.length;
		DFA212_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA212_transition[i] = DFA.unpackEncodedString(DFA212_transitionS[i]);
		}
	}

	protected class DFA212 extends DFA {

		public DFA212(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 212;
			this.eot = DFA212_eot;
			this.eof = DFA212_eof;
			this.min = DFA212_min;
			this.max = DFA212_max;
			this.accept = DFA212_accept;
			this.special = DFA212_special;
			this.transition = DFA212_transition;
		}
		@Override
		public String getDescription() {
			return "727:71: ( ( ( ws )? ( SEMI ( ws )? )+ ) | ws )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA217_eotS =
		"\4\uffff";
	static final String DFA217_eofS =
		"\4\uffff";
	static final String DFA217_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA217_maxS =
		"\2\u0098\2\uffff";
	static final String DFA217_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA217_specialS =
		"\4\uffff}>";
	static final String[] DFA217_transitionS = {
			"\1\1\36\uffff\1\2\35\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA217_eot = DFA.unpackEncodedString(DFA217_eotS);
	static final short[] DFA217_eof = DFA.unpackEncodedString(DFA217_eofS);
	static final char[] DFA217_min = DFA.unpackEncodedStringToUnsignedChars(DFA217_minS);
	static final char[] DFA217_max = DFA.unpackEncodedStringToUnsignedChars(DFA217_maxS);
	static final short[] DFA217_accept = DFA.unpackEncodedString(DFA217_acceptS);
	static final short[] DFA217_special = DFA.unpackEncodedString(DFA217_specialS);
	static final short[][] DFA217_transition;

	static {
		int numStates = DFA217_transitionS.length;
		DFA217_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA217_transition[i] = DFA.unpackEncodedString(DFA217_transitionS[i]);
		}
	}

	protected class DFA217 extends DFA {

		public DFA217(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 217;
			this.eot = DFA217_eot;
			this.eof = DFA217_eof;
			this.min = DFA217_min;
			this.max = DFA217_max;
			this.accept = DFA217_accept;
			this.special = DFA217_special;
			this.transition = DFA217_transition;
		}
		@Override
		public String getDescription() {
			return "741:39: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA219_eotS =
		"\4\uffff";
	static final String DFA219_eofS =
		"\4\uffff";
	static final String DFA219_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA219_maxS =
		"\2\u0098\2\uffff";
	static final String DFA219_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA219_specialS =
		"\4\uffff}>";
	static final String[] DFA219_transitionS = {
			"\1\1\36\uffff\1\2\35\uffff\1\1\17\uffff\1\3\6\uffff\1\3\30\uffff\1\3"+
			"\25\uffff\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA219_eot = DFA.unpackEncodedString(DFA219_eotS);
	static final short[] DFA219_eof = DFA.unpackEncodedString(DFA219_eofS);
	static final char[] DFA219_min = DFA.unpackEncodedStringToUnsignedChars(DFA219_minS);
	static final char[] DFA219_max = DFA.unpackEncodedStringToUnsignedChars(DFA219_maxS);
	static final short[] DFA219_accept = DFA.unpackEncodedString(DFA219_acceptS);
	static final short[] DFA219_special = DFA.unpackEncodedString(DFA219_specialS);
	static final short[][] DFA219_transition;

	static {
		int numStates = DFA219_transitionS.length;
		DFA219_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA219_transition[i] = DFA.unpackEncodedString(DFA219_transitionS[i]);
		}
	}

	protected class DFA219 extends DFA {

		public DFA219(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 219;
			this.eot = DFA219_eot;
			this.eof = DFA219_eof;
			this.min = DFA219_min;
			this.max = DFA219_max;
			this.accept = DFA219_accept;
			this.special = DFA219_special;
			this.transition = DFA219_transition;
		}
		@Override
		public String getDescription() {
			return "742:57: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA223_eotS =
		"\6\uffff";
	static final String DFA223_eofS =
		"\6\uffff";
	static final String DFA223_minS =
		"\1\24\1\7\1\24\1\uffff\1\7\1\uffff";
	static final String DFA223_maxS =
		"\3\u0098\1\uffff\1\u0098\1\uffff";
	static final String DFA223_acceptS =
		"\3\uffff\1\2\1\uffff\1\1";
	static final String DFA223_specialS =
		"\6\uffff}>";
	static final String[] DFA223_transitionS = {
			"\1\1\1\2\45\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\3\5\12\uffff\2\5\2\uffff\2\5\3"+
			"\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13\uffff"+
			"\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff\1\4",
			"\1\5\1\2\45\uffff\1\3\26\uffff\1\2\26\uffff\1\3\56\uffff\1\2",
			"",
			"\1\5\13\uffff\1\5\1\uffff\1\4\7\uffff\3\5\12\uffff\2\5\2\uffff\2\5\3"+
			"\uffff\1\5\7\uffff\1\3\1\5\5\uffff\1\5\7\uffff\1\5\7\uffff\1\4\13\uffff"+
			"\2\5\11\uffff\1\3\12\uffff\1\5\17\uffff\1\5\3\uffff\1\5\17\uffff\1\4",
			""
	};

	static final short[] DFA223_eot = DFA.unpackEncodedString(DFA223_eotS);
	static final short[] DFA223_eof = DFA.unpackEncodedString(DFA223_eofS);
	static final char[] DFA223_min = DFA.unpackEncodedStringToUnsignedChars(DFA223_minS);
	static final char[] DFA223_max = DFA.unpackEncodedStringToUnsignedChars(DFA223_maxS);
	static final short[] DFA223_accept = DFA.unpackEncodedString(DFA223_acceptS);
	static final short[] DFA223_special = DFA.unpackEncodedString(DFA223_specialS);
	static final short[][] DFA223_transition;

	static {
		int numStates = DFA223_transitionS.length;
		DFA223_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA223_transition[i] = DFA.unpackEncodedString(DFA223_transitionS[i]);
		}
	}

	protected class DFA223 extends DFA {

		public DFA223(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 223;
			this.eot = DFA223_eot;
			this.eof = DFA223_eof;
			this.min = DFA223_min;
			this.max = DFA223_max;
			this.accept = DFA223_accept;
			this.special = DFA223_special;
			this.transition = DFA223_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 760:18: ( ( ws )? COMMA ( ws )? selector )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA231_eotS =
		"\5\uffff";
	static final String DFA231_eofS =
		"\5\uffff";
	static final String DFA231_minS =
		"\2\7\1\uffff\1\7\1\uffff";
	static final String DFA231_maxS =
		"\1\u0088\1\u0098\1\uffff\1\u0098\1\uffff";
	static final String DFA231_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA231_specialS =
		"\5\uffff}>";
	static final String[] DFA231_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\1\2\1\1\2\uffff\2\2\3\uffff\1"+
			"\2\10\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\1\2\1\1\24\uffff\1\2"+
			"\17\uffff\1\2\3\uffff\1\1",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1\2"+
			"\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			"",
			"\1\2\13\uffff\1\2\1\4\1\3\7\uffff\3\2\12\uffff\1\2\3\uffff\2\2\3\uffff"+
			"\1\2\7\uffff\1\4\1\2\5\uffff\1\2\7\uffff\1\2\7\uffff\1\3\13\uffff\1\2"+
			"\12\uffff\1\4\12\uffff\1\2\17\uffff\1\2\23\uffff\1\3",
			""
	};

	static final short[] DFA231_eot = DFA.unpackEncodedString(DFA231_eotS);
	static final short[] DFA231_eof = DFA.unpackEncodedString(DFA231_eofS);
	static final char[] DFA231_min = DFA.unpackEncodedStringToUnsignedChars(DFA231_minS);
	static final char[] DFA231_max = DFA.unpackEncodedStringToUnsignedChars(DFA231_maxS);
	static final short[] DFA231_accept = DFA.unpackEncodedString(DFA231_acceptS);
	static final short[] DFA231_special = DFA.unpackEncodedString(DFA231_specialS);
	static final short[][] DFA231_transition;

	static {
		int numStates = DFA231_transitionS.length;
		DFA231_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA231_transition[i] = DFA.unpackEncodedString(DFA231_transitionS[i]);
		}
	}

	protected class DFA231 extends DFA {

		public DFA231(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 231;
			this.eot = DFA231_eot;
			this.eof = DFA231_eof;
			this.min = DFA231_min;
			this.max = DFA231_max;
			this.accept = DFA231_accept;
			this.special = DFA231_special;
			this.transition = DFA231_transition;
		}
		@Override
		public String getDescription() {
			return "763:1: selector : ( ( combinator ( ws )? )? simpleSelectorSequence ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )* |{...}? combinator );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA230_eotS =
		"\4\uffff";
	static final String DFA230_eofS =
		"\4\uffff";
	static final String DFA230_minS =
		"\1\24\1\7\2\uffff";
	static final String DFA230_maxS =
		"\2\u0098\2\uffff";
	static final String DFA230_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA230_specialS =
		"\4\uffff}>";
	static final String[] DFA230_transitionS = {
			"\1\2\1\1\25\uffff\1\3\17\uffff\1\2\26\uffff\1\1\14\uffff\1\3\11\uffff"+
			"\1\2\36\uffff\1\3\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\2\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\3\uffff"+
			"\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff\2\3"+
			"\11\uffff\1\2\12\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA230_eot = DFA.unpackEncodedString(DFA230_eotS);
	static final short[] DFA230_eof = DFA.unpackEncodedString(DFA230_eofS);
	static final char[] DFA230_min = DFA.unpackEncodedStringToUnsignedChars(DFA230_minS);
	static final char[] DFA230_max = DFA.unpackEncodedStringToUnsignedChars(DFA230_maxS);
	static final short[] DFA230_accept = DFA.unpackEncodedString(DFA230_acceptS);
	static final short[] DFA230_special = DFA.unpackEncodedString(DFA230_specialS);
	static final short[][] DFA230_transition;

	static {
		int numStates = DFA230_transitionS.length;
		DFA230_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA230_transition[i] = DFA.unpackEncodedString(DFA230_transitionS[i]);
		}
	}

	protected class DFA230 extends DFA {

		public DFA230(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 230;
			this.eot = DFA230_eot;
			this.eof = DFA230_eof;
			this.min = DFA230_min;
			this.max = DFA230_max;
			this.accept = DFA230_accept;
			this.special = DFA230_special;
			this.transition = DFA230_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 764:49: ( ( ( ( ws )? combinator ( ws )? ) | ws ) simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA229_eotS =
		"\4\uffff";
	static final String DFA229_eofS =
		"\4\uffff";
	static final String DFA229_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA229_maxS =
		"\2\u0098\2\uffff";
	static final String DFA229_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA229_specialS =
		"\4\uffff}>";
	static final String[] DFA229_transitionS = {
			"\1\1\25\uffff\1\2\46\uffff\1\1\14\uffff\1\2\50\uffff\1\2\17\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\1\3\1\2\2\uffff\2"+
			"\3\3\uffff\1\3\10\uffff\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\1\3\1\2\24\uffff\1\3\17\uffff\1\3\3\uffff\1\2\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA229_eot = DFA.unpackEncodedString(DFA229_eotS);
	static final short[] DFA229_eof = DFA.unpackEncodedString(DFA229_eofS);
	static final char[] DFA229_min = DFA.unpackEncodedStringToUnsignedChars(DFA229_minS);
	static final char[] DFA229_max = DFA.unpackEncodedStringToUnsignedChars(DFA229_maxS);
	static final short[] DFA229_accept = DFA.unpackEncodedString(DFA229_acceptS);
	static final short[] DFA229_special = DFA.unpackEncodedString(DFA229_specialS);
	static final short[][] DFA229_transition;

	static {
		int numStates = DFA229_transitionS.length;
		DFA229_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA229_transition[i] = DFA.unpackEncodedString(DFA229_transitionS[i]);
		}
	}

	protected class DFA229 extends DFA {

		public DFA229(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 229;
			this.eot = DFA229_eot;
			this.eof = DFA229_eof;
			this.min = DFA229_min;
			this.max = DFA229_max;
			this.accept = DFA229_accept;
			this.special = DFA229_special;
			this.transition = DFA229_transition;
		}
		@Override
		public String getDescription() {
			return "764:51: ( ( ( ws )? combinator ( ws )? ) | ws )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA235_eotS =
		"\5\uffff";
	static final String DFA235_eofS =
		"\5\uffff";
	static final String DFA235_minS =
		"\1\23\1\7\1\uffff\1\7\1\uffff";
	static final String DFA235_maxS =
		"\2\u0098\1\uffff\1\120\1\uffff";
	static final String DFA235_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA235_specialS =
		"\5\uffff}>";
	static final String[] DFA235_transitionS = {
			"\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\2\2\14\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\4\13\uffff\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\1\2\1\3\3\uffff\1"+
			"\4\10\uffff\1\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43\uffff"+
			"\1\1",
			"",
			"\1\2\53\uffff\1\2\7\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA235_eot = DFA.unpackEncodedString(DFA235_eotS);
	static final short[] DFA235_eof = DFA.unpackEncodedString(DFA235_eofS);
	static final char[] DFA235_min = DFA.unpackEncodedStringToUnsignedChars(DFA235_minS);
	static final char[] DFA235_max = DFA.unpackEncodedStringToUnsignedChars(DFA235_maxS);
	static final short[] DFA235_accept = DFA.unpackEncodedString(DFA235_acceptS);
	static final short[] DFA235_special = DFA.unpackEncodedString(DFA235_specialS);
	static final short[][] DFA235_transition;

	static {
		int numStates = DFA235_transitionS.length;
		DFA235_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA235_transition[i] = DFA.unpackEncodedString(DFA235_transitionS[i]);
		}
	}

	protected class DFA235 extends DFA {

		public DFA235(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 235;
			this.eot = DFA235_eot;
			this.eof = DFA235_eof;
			this.min = DFA235_min;
			this.max = DFA235_max;
			this.accept = DFA235_accept;
			this.special = DFA235_special;
			this.transition = DFA235_transition;
		}
		@Override
		public String getDescription() {
			return "776:79: ( ( ( ws )? elementSubsequent ) | ( ws ({...}? sass_selector_interpolation_exp |{...}? less_selector_interpolation_exp ) ) )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA238_eotS =
		"\5\uffff";
	static final String DFA238_eofS =
		"\5\uffff";
	static final String DFA238_minS =
		"\2\23\1\uffff\1\7\1\uffff";
	static final String DFA238_maxS =
		"\2\u0098\1\uffff\1\120\1\uffff";
	static final String DFA238_acceptS =
		"\2\uffff\1\1\1\uffff\1\2";
	static final String DFA238_specialS =
		"\5\uffff}>";
	static final String[] DFA238_transitionS = {
			"\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\2\2\14\uffff\1\2\5\uffff\1\2\17"+
			"\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"\1\2\1\uffff\1\1\7\uffff\3\2\16\uffff\1\2\1\3\3\uffff\1\4\10\uffff\1"+
			"\2\5\uffff\1\2\7\uffff\1\4\7\uffff\1\1\41\uffff\1\2\43\uffff\1\1",
			"",
			"\1\2\53\uffff\1\2\7\uffff\1\4\16\uffff\1\2\5\uffff\1\2",
			""
	};

	static final short[] DFA238_eot = DFA.unpackEncodedString(DFA238_eotS);
	static final short[] DFA238_eof = DFA.unpackEncodedString(DFA238_eofS);
	static final char[] DFA238_min = DFA.unpackEncodedStringToUnsignedChars(DFA238_minS);
	static final char[] DFA238_max = DFA.unpackEncodedStringToUnsignedChars(DFA238_maxS);
	static final short[] DFA238_accept = DFA.unpackEncodedString(DFA238_acceptS);
	static final short[] DFA238_special = DFA.unpackEncodedString(DFA238_specialS);
	static final short[][] DFA238_transition;

	static {
		int numStates = DFA238_transitionS.length;
		DFA238_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA238_transition[i] = DFA.unpackEncodedString(DFA238_transitionS[i]);
		}
	}

	protected class DFA238 extends DFA {

		public DFA238(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 238;
			this.eot = DFA238_eot;
			this.eof = DFA238_eof;
			this.min = DFA238_min;
			this.max = DFA238_max;
			this.accept = DFA238_accept;
			this.special = DFA238_special;
			this.transition = DFA238_transition;
		}
		@Override
		public String getDescription() {
			return "777:48: ( ( ( ws )? elementSubsequent ) |{...}? ws sass_selector_interpolation_exp )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA261_eotS =
		"\4\uffff";
	static final String DFA261_eofS =
		"\2\3\2\uffff";
	static final String DFA261_minS =
		"\2\6\2\uffff";
	static final String DFA261_maxS =
		"\2\u0098\2\uffff";
	static final String DFA261_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA261_specialS =
		"\4\uffff}>";
	static final String[] DFA261_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\3\3\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff\1\3"+
			"\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\1\3\1\uffff"+
			"\5\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA261_eot = DFA.unpackEncodedString(DFA261_eotS);
	static final short[] DFA261_eof = DFA.unpackEncodedString(DFA261_eofS);
	static final char[] DFA261_min = DFA.unpackEncodedStringToUnsignedChars(DFA261_minS);
	static final char[] DFA261_max = DFA.unpackEncodedStringToUnsignedChars(DFA261_maxS);
	static final short[] DFA261_accept = DFA.unpackEncodedString(DFA261_acceptS);
	static final short[] DFA261_special = DFA.unpackEncodedString(DFA261_specialS);
	static final short[][] DFA261_transition;

	static {
		int numStates = DFA261_transitionS.length;
		DFA261_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA261_transition[i] = DFA.unpackEncodedString(DFA261_transitionS[i]);
		}
	}

	protected class DFA261 extends DFA {

		public DFA261(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 261;
			this.eot = DFA261_eot;
			this.eof = DFA261_eof;
			this.min = DFA261_min;
			this.max = DFA261_max;
			this.accept = DFA261_accept;
			this.special = DFA261_special;
			this.transition = DFA261_transition;
		}
		@Override
		public String getDescription() {
			return "892:21: ( ( ws )? LPAREN ( ws )? ( ( expression ( ws )? ) | STAR )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA281_eotS =
		"\4\uffff";
	static final String DFA281_eofS =
		"\1\3\3\uffff";
	static final String DFA281_minS =
		"\2\6\2\uffff";
	static final String DFA281_maxS =
		"\2\u0098\2\uffff";
	static final String DFA281_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA281_specialS =
		"\4\uffff}>";
	static final String[] DFA281_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\1\3\1\2\1\3\6\uffff\4\3\2\uffff"+
			"\1\3\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA281_eot = DFA.unpackEncodedString(DFA281_eotS);
	static final short[] DFA281_eof = DFA.unpackEncodedString(DFA281_eofS);
	static final char[] DFA281_min = DFA.unpackEncodedStringToUnsignedChars(DFA281_minS);
	static final char[] DFA281_max = DFA.unpackEncodedStringToUnsignedChars(DFA281_maxS);
	static final short[] DFA281_accept = DFA.unpackEncodedString(DFA281_acceptS);
	static final short[] DFA281_special = DFA.unpackEncodedString(DFA281_specialS);
	static final short[][] DFA281_transition;

	static {
		int numStates = DFA281_transitionS.length;
		DFA281_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA281_transition[i] = DFA.unpackEncodedString(DFA281_transitionS[i]);
		}
	}

	protected class DFA281 extends DFA {

		public DFA281(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 281;
			this.eot = DFA281_eot;
			this.eof = DFA281_eof;
			this.min = DFA281_min;
			this.max = DFA281_max;
			this.accept = DFA281_accept;
			this.special = DFA281_special;
			this.transition = DFA281_transition;
		}
		@Override
		public String getDescription() {
			return "906:50: ( ( ws )? prio )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA288_eotS =
		"\100\uffff";
	static final String DFA288_eofS =
		"\1\2\77\uffff";
	static final String DFA288_minS =
		"\1\5\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\3\0\1\uffff\3\0\2\uffff\20\0"+
		"\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA288_maxS =
		"\1\u0098\1\0\4\uffff\1\0\1\uffff\6\0\1\uffff\3\0\1\uffff\3\0\2\uffff\20"+
		"\0\1\uffff\2\0\2\uffff\1\0\1\uffff\1\0\20\uffff";
	static final String DFA288_acceptS =
		"\2\uffff\1\2\53\uffff\1\1\1\uffff\14\1\1\uffff\3\1";
	static final String DFA288_specialS =
		"\1\0\1\1\4\uffff\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12"+
		"\1\13\1\uffff\1\14\1\15\1\16\2\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
		"\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\uffff\1\37\1\40\2\uffff"+
		"\1\41\1\uffff\1\42\20\uffff}>";
	static final String[] DFA288_transitionS = {
			"\1\67\1\12\1\24\2\uffff\5\51\3\uffff\1\52\1\2\1\55\1\1\1\uffff\1\52\5"+
			"\uffff\1\2\1\20\1\2\1\uffff\1\64\3\uffff\1\66\1\uffff\1\43\1\71\1\uffff"+
			"\1\30\1\2\2\uffff\1\10\1\17\3\uffff\1\23\1\2\1\41\5\uffff\1\2\1\21\3"+
			"\51\1\63\1\uffff\1\6\1\75\5\uffff\1\46\1\25\1\44\5\uffff\1\52\1\1\4\uffff"+
			"\1\60\3\uffff\1\42\1\62\1\77\1\2\1\15\2\uffff\1\2\1\uffff\1\65\1\72\3"+
			"\51\1\2\1\uffff\1\14\1\40\1\32\1\uffff\1\36\1\52\2\uffff\1\47\1\2\1\35"+
			"\1\uffff\1\52\1\uffff\1\34\1\13\1\11\1\uffff\1\52\1\uffff\1\33\1\32\1"+
			"\37\1\2\1\56\1\2\1\73\1\2\1\uffff\1\57\1\70\5\51\2\uffff\1\61\1\76\2"+
			"\uffff\1\31\1\uffff\1\45\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA288_eot = DFA.unpackEncodedString(DFA288_eotS);
	static final short[] DFA288_eof = DFA.unpackEncodedString(DFA288_eofS);
	static final char[] DFA288_min = DFA.unpackEncodedStringToUnsignedChars(DFA288_minS);
	static final char[] DFA288_max = DFA.unpackEncodedStringToUnsignedChars(DFA288_maxS);
	static final short[] DFA288_accept = DFA.unpackEncodedString(DFA288_acceptS);
	static final short[] DFA288_special = DFA.unpackEncodedString(DFA288_specialS);
	static final short[][] DFA288_transition;

	static {
		int numStates = DFA288_transitionS.length;
		DFA288_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA288_transition[i] = DFA.unpackEncodedString(DFA288_transitionS[i]);
		}
	}

	protected class DFA288 extends DFA {

		public DFA288(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 288;
			this.eot = DFA288_eot;
			this.eof = DFA288_eof;
			this.min = DFA288_min;
			this.max = DFA288_max;
			this.accept = DFA288_accept;
			this.special = DFA288_special;
			this.transition = DFA288_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 973:12: ( ( ( ws | ( ( ws )? operator ( ws )? ) |) term )=> ( ws | ( ( ws )? operator ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA288_0 = input.LA(1);
						 
						int index288_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA288_0==COMMENT||LA288_0==NL||LA288_0==WS) ) {s = 1;}
						else if ( (LA288_0==EOF||LA288_0==COLON||LA288_0==DCOLON||LA288_0==DOT||LA288_0==GREATER||LA288_0==IMPORTANT_SYM||LA288_0==LBRACE||LA288_0==PIPE||LA288_0==RBRACE||LA288_0==RPAREN||LA288_0==SASS_EXTEND_ONLY_SELECTOR||LA288_0==SEMI||LA288_0==STAR||LA288_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA288_0==LESS_AND) ) {s = 6;}
						else if ( (LA288_0==HASH) ) {s = 8;}
						else if ( (LA288_0==SASS_MIXIN) ) {s = 9;}
						else if ( (LA288_0==AT_IDENT) ) {s = 10;}
						else if ( (LA288_0==SASS_INCLUDE) ) {s = 11;}
						else if ( (LA288_0==SASS_AT_ROOT) ) {s = 12;}
						else if ( (LA288_0==PLUS) ) {s = 13;}
						else if ( (LA288_0==HASH_SYMBOL) ) {s = 15;}
						else if ( (LA288_0==DIMENSION) ) {s = 16;}
						else if ( (LA288_0==LBRACKET) ) {s = 17;}
						else if ( (LA288_0==IDENT) ) {s = 19;}
						else if ( (LA288_0==AT_SIGN) ) {s = 20;}
						else if ( (LA288_0==MINUS) ) {s = 21;}
						else if ( (LA288_0==GEN) ) {s = 24;}
						else if ( (LA288_0==VARIABLE) ) {s = 25;}
						else if ( (LA288_0==SASS_DEBUG||LA288_0==SASS_WARN) ) {s = 26;}
						else if ( (LA288_0==SASS_VAR) ) {s = 27;}
						else if ( (LA288_0==SASS_IF) ) {s = 28;}
						else if ( (LA288_0==SASS_FOR) ) {s = 29;}
						else if ( (LA288_0==SASS_EACH) ) {s = 30;}
						else if ( (LA288_0==SASS_WHILE) ) {s = 31;}
						else if ( (LA288_0==SASS_CONTENT) ) {s = 32;}
						else if ( (LA288_0==IMPORT_SYM) ) {s = 33;}
						else if ( (LA288_0==PAGE_SYM) ) {s = 34;}
						else if ( (LA288_0==FONT_FACE_SYM) ) {s = 35;}
						else if ( (LA288_0==MOZ_DOCUMENT_SYM) ) {s = 36;}
						else if ( (LA288_0==WEBKIT_KEYFRAMES_SYM) ) {s = 37;}
						else if ( (LA288_0==MEDIA_SYM) ) {s = 38;}
						else if ( (LA288_0==SASS_EXTEND) ) {s = 39;}
						else if ( ((LA288_0 >= BOTTOMCENTER_SYM && LA288_0 <= BOTTOMRIGHT_SYM)||(LA288_0 >= LEFTBOTTOM_SYM && LA288_0 <= LEFTTOP_SYM)||(LA288_0 >= RIGHTBOTTOM_SYM && LA288_0 <= RIGHTTOP_SYM)||(LA288_0 >= TOPCENTER_SYM && LA288_0 <= TOPRIGHT_SYM)) ) {s = 41;}
						else if ( (LA288_0==CHARSET_SYM||LA288_0==COUNTER_STYLE_SYM||LA288_0==NAMESPACE_SYM||LA288_0==SASS_ELSE||LA288_0==SASS_FUNCTION||LA288_0==SASS_RETURN) ) {s = 42;}
						else if ( (LA288_0==COMMA) ) {s = 45;}
						else if ( (LA288_0==SOLIDUS) && (synpred36_Css3())) {s = 46;}
						else if ( (LA288_0==TILDE) ) {s = 47;}
						else if ( (LA288_0==NUMBER) && (synpred36_Css3())) {s = 48;}
						else if ( (LA288_0==URANGE) && (synpred36_Css3())) {s = 49;}
						else if ( (LA288_0==PERCENTAGE) && (synpred36_Css3())) {s = 50;}
						else if ( (LA288_0==LENGTH) && (synpred36_Css3())) {s = 51;}
						else if ( (LA288_0==EMS) && (synpred36_Css3())) {s = 52;}
						else if ( (LA288_0==REM) && (synpred36_Css3())) {s = 53;}
						else if ( (LA288_0==EXS) && (synpred36_Css3())) {s = 54;}
						else if ( (LA288_0==ANGLE) && (synpred36_Css3())) {s = 55;}
						else if ( (LA288_0==TIME) && (synpred36_Css3())) {s = 56;}
						else if ( (LA288_0==FREQ) && (synpred36_Css3())) {s = 57;}
						else if ( (LA288_0==RESOLUTION) && (synpred36_Css3())) {s = 58;}
						else if ( (LA288_0==STRING) && (synpred36_Css3())) {s = 59;}
						else if ( (LA288_0==LESS_JS_STRING) && (synpred36_Css3())) {s = 61;}
						else if ( (LA288_0==URI) && (synpred36_Css3())) {s = 62;}
						else if ( (LA288_0==PERCENTAGE_SYMBOL) && (synpred36_Css3())) {s = 63;}
						 
						input.seek(index288_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA288_1 = input.LA(1);
						 
						int index288_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA288_6 = input.LA(1);
						 
						int index288_6 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred36_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_6);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA288_8 = input.LA(1);
						 
						int index288_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_8);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA288_9 = input.LA(1);
						 
						int index288_9 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_9);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA288_10 = input.LA(1);
						 
						int index288_10 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_10);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA288_11 = input.LA(1);
						 
						int index288_11 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_11);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA288_12 = input.LA(1);
						 
						int index288_12 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_12);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA288_13 = input.LA(1);
						 
						int index288_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_13);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA288_15 = input.LA(1);
						 
						int index288_15 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred36_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_15);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA288_16 = input.LA(1);
						 
						int index288_16 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (evalPredicate(tokenNameStartsWith("."),"tokenNameStartsWith(\".\")")) ) {s = 2;}
						 
						input.seek(index288_16);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA288_17 = input.LA(1);
						 
						int index288_17 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_17);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA288_19 = input.LA(1);
						 
						int index288_19 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_19);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA288_20 = input.LA(1);
						 
						int index288_20 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_20);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA288_21 = input.LA(1);
						 
						int index288_21 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_21);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA288_24 = input.LA(1);
						 
						int index288_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_24);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA288_25 = input.LA(1);
						 
						int index288_25 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_25);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA288_26 = input.LA(1);
						 
						int index288_26 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_26);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA288_27 = input.LA(1);
						 
						int index288_27 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred36_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_27);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA288_28 = input.LA(1);
						 
						int index288_28 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_28);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA288_29 = input.LA(1);
						 
						int index288_29 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_29);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA288_30 = input.LA(1);
						 
						int index288_30 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_30);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA288_31 = input.LA(1);
						 
						int index288_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_31);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA288_32 = input.LA(1);
						 
						int index288_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_32);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA288_33 = input.LA(1);
						 
						int index288_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_33);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA288_34 = input.LA(1);
						 
						int index288_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_34);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA288_35 = input.LA(1);
						 
						int index288_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_35);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA288_36 = input.LA(1);
						 
						int index288_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_36);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA288_37 = input.LA(1);
						 
						int index288_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_37);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA288_38 = input.LA(1);
						 
						int index288_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_38);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA288_39 = input.LA(1);
						 
						int index288_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_39);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA288_41 = input.LA(1);
						 
						int index288_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_41);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA288_42 = input.LA(1);
						 
						int index288_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred36_Css3())) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_42);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA288_45 = input.LA(1);
						 
						int index288_45 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_45);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA288_47 = input.LA(1);
						 
						int index288_47 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred36_Css3()) ) {s = 63;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index288_47);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 288, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA287_eotS =
		"\5\uffff";
	static final String DFA287_eofS =
		"\5\uffff";
	static final String DFA287_minS =
		"\2\5\3\uffff";
	static final String DFA287_maxS =
		"\2\u0098\3\uffff";
	static final String DFA287_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA287_specialS =
		"\5\uffff}>";
	static final String[] DFA287_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\6\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\6\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA287_eot = DFA.unpackEncodedString(DFA287_eotS);
	static final short[] DFA287_eof = DFA.unpackEncodedString(DFA287_eofS);
	static final char[] DFA287_min = DFA.unpackEncodedStringToUnsignedChars(DFA287_minS);
	static final char[] DFA287_max = DFA.unpackEncodedStringToUnsignedChars(DFA287_maxS);
	static final short[] DFA287_accept = DFA.unpackEncodedString(DFA287_acceptS);
	static final short[] DFA287_special = DFA.unpackEncodedString(DFA287_specialS);
	static final short[][] DFA287_transition;

	static {
		int numStates = DFA287_transitionS.length;
		DFA287_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA287_transition[i] = DFA.unpackEncodedString(DFA287_transitionS[i]);
		}
	}

	protected class DFA287 extends DFA {

		public DFA287(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 287;
			this.eot = DFA287_eot;
			this.eof = DFA287_eof;
			this.min = DFA287_min;
			this.max = DFA287_max;
			this.accept = DFA287_accept;
			this.special = DFA287_special;
			this.transition = DFA287_transition;
		}
		@Override
		public String getDescription() {
			return "973:66: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA303_eotS =
		"\4\uffff";
	static final String DFA303_eofS =
		"\4\uffff";
	static final String DFA303_minS =
		"\2\24\2\uffff";
	static final String DFA303_maxS =
		"\2\u0098\2\uffff";
	static final String DFA303_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA303_specialS =
		"\4\uffff}>";
	static final String[] DFA303_transitionS = {
			"\1\3\1\1\74\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"\1\3\1\1\74\uffff\1\1\26\uffff\1\2\30\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA303_eot = DFA.unpackEncodedString(DFA303_eotS);
	static final short[] DFA303_eof = DFA.unpackEncodedString(DFA303_eofS);
	static final char[] DFA303_min = DFA.unpackEncodedStringToUnsignedChars(DFA303_minS);
	static final char[] DFA303_max = DFA.unpackEncodedStringToUnsignedChars(DFA303_maxS);
	static final short[] DFA303_accept = DFA.unpackEncodedString(DFA303_acceptS);
	static final short[] DFA303_special = DFA.unpackEncodedString(DFA303_specialS);
	static final short[][] DFA303_transition;

	static {
		int numStates = DFA303_transitionS.length;
		DFA303_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA303_transition[i] = DFA.unpackEncodedString(DFA303_transitionS[i]);
		}
	}

	protected class DFA303 extends DFA {

		public DFA303(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 303;
			this.eot = DFA303_eot;
			this.eof = DFA303_eof;
			this.min = DFA303_min;
			this.max = DFA303_max;
			this.accept = DFA303_accept;
			this.special = DFA303_special;
			this.transition = DFA303_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1041:17: ( ( ws )? ( COMMA |{...}? SEMI ) ( ws )? fnAttribute )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA313_eotS =
		"\47\uffff";
	static final String DFA313_eofS =
		"\47\uffff";
	static final String DFA313_minS =
		"\2\5\45\uffff";
	static final String DFA313_maxS =
		"\2\u0098\45\uffff";
	static final String DFA313_acceptS =
		"\2\uffff\1\2\44\1";
	static final String DFA313_specialS =
		"\1\0\1\1\45\uffff}>";
	static final String[] DFA313_transitionS = {
			"\1\17\1\32\1\36\2\uffff\5\32\3\uffff\1\32\1\uffff\1\2\1\1\1\uffff\1\32"+
			"\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\32\1\21\1\uffff\1\27"+
			"\3\uffff\1\31\1\35\3\uffff\1\5\1\uffff\1\32\6\uffff\1\7\3\32\1\13\1\uffff"+
			"\1\34\1\26\5\uffff\1\32\1\4\1\32\5\uffff\1\32\1\1\4\uffff\1\10\3\uffff"+
			"\1\32\1\12\1\37\1\uffff\1\4\4\uffff\1\15\1\22\3\32\1\2\1\uffff\3\32\1"+
			"\uffff\2\32\2\uffff\1\32\1\uffff\1\32\1\uffff\1\32\1\uffff\3\32\1\uffff"+
			"\1\32\1\uffff\1\33\2\32\1\2\1\3\1\uffff\1\24\2\uffff\1\25\1\20\5\32\2"+
			"\uffff\1\11\1\30\2\uffff\1\6\1\uffff\1\32\1\1",
			"\1\17\1\41\1\45\2\uffff\5\41\3\uffff\1\41\1\uffff\1\2\1\1\1\uffff\1"+
			"\41\6\uffff\1\23\2\uffff\1\14\3\uffff\1\16\1\uffff\1\41\1\21\1\uffff"+
			"\1\27\3\uffff\1\31\1\44\3\uffff\1\40\1\uffff\1\41\6\uffff\1\7\3\41\1"+
			"\13\1\uffff\1\43\1\26\5\uffff\1\41\1\4\1\41\5\uffff\1\41\1\1\4\uffff"+
			"\1\10\3\uffff\1\41\1\12\1\46\1\uffff\1\4\4\uffff\1\15\1\22\3\41\1\2\1"+
			"\uffff\3\41\1\uffff\2\41\2\uffff\1\41\1\uffff\1\41\1\uffff\1\41\1\uffff"+
			"\3\41\1\uffff\1\41\1\uffff\1\42\2\41\1\2\1\3\1\uffff\1\24\2\uffff\1\25"+
			"\1\20\5\41\2\uffff\1\11\1\30\2\uffff\1\6\1\uffff\1\41\1\1",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA313_eot = DFA.unpackEncodedString(DFA313_eotS);
	static final short[] DFA313_eof = DFA.unpackEncodedString(DFA313_eofS);
	static final char[] DFA313_min = DFA.unpackEncodedStringToUnsignedChars(DFA313_minS);
	static final char[] DFA313_max = DFA.unpackEncodedStringToUnsignedChars(DFA313_maxS);
	static final short[] DFA313_accept = DFA.unpackEncodedString(DFA313_acceptS);
	static final short[] DFA313_special = DFA.unpackEncodedString(DFA313_specialS);
	static final short[][] DFA313_transition;

	static {
		int numStates = DFA313_transitionS.length;
		DFA313_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA313_transition[i] = DFA.unpackEncodedString(DFA313_transitionS[i]);
		}
	}

	protected class DFA313 extends DFA {

		public DFA313(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 313;
			this.eot = DFA313_eot;
			this.eof = DFA313_eof;
			this.min = DFA313_min;
			this.max = DFA313_max;
			this.accept = DFA313_accept;
			this.special = DFA313_special;
			this.transition = DFA313_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1059:18: ( ( ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )=> ( ws | ( ( ws )? SOLIDUS ( ws )? ) |) term )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA313_0 = input.LA(1);
						 
						int index313_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA313_0==COMMENT||LA313_0==NL||LA313_0==WS) ) {s = 1;}
						else if ( (LA313_0==COMMA||LA313_0==RPAREN||LA313_0==SEMI) ) {s = 2;}
						else if ( (LA313_0==SOLIDUS) && (synpred40_Css3())) {s = 3;}
						else if ( (LA313_0==MINUS||LA313_0==PLUS) && (synpred40_Css3())) {s = 4;}
						else if ( (LA313_0==IDENT) && (synpred40_Css3())) {s = 5;}
						else if ( (LA313_0==VARIABLE) && (synpred40_Css3())) {s = 6;}
						else if ( (LA313_0==LBRACKET) && (synpred40_Css3())) {s = 7;}
						else if ( (LA313_0==NUMBER) && (synpred40_Css3())) {s = 8;}
						else if ( (LA313_0==URANGE) && (synpred40_Css3())) {s = 9;}
						else if ( (LA313_0==PERCENTAGE) && (synpred40_Css3())) {s = 10;}
						else if ( (LA313_0==LENGTH) && (synpred40_Css3())) {s = 11;}
						else if ( (LA313_0==EMS) && (synpred40_Css3())) {s = 12;}
						else if ( (LA313_0==REM) && (synpred40_Css3())) {s = 13;}
						else if ( (LA313_0==EXS) && (synpred40_Css3())) {s = 14;}
						else if ( (LA313_0==ANGLE) && (synpred40_Css3())) {s = 15;}
						else if ( (LA313_0==TIME) && (synpred40_Css3())) {s = 16;}
						else if ( (LA313_0==FREQ) && (synpred40_Css3())) {s = 17;}
						else if ( (LA313_0==RESOLUTION) && (synpred40_Css3())) {s = 18;}
						else if ( (LA313_0==DIMENSION) && (synpred40_Css3())) {s = 19;}
						else if ( (LA313_0==STRING) && (synpred40_Css3())) {s = 20;}
						else if ( (LA313_0==TILDE) && (synpred40_Css3())) {s = 21;}
						else if ( (LA313_0==LESS_JS_STRING) && (synpred40_Css3())) {s = 22;}
						else if ( (LA313_0==GEN) && (synpred40_Css3())) {s = 23;}
						else if ( (LA313_0==URI) && (synpred40_Css3())) {s = 24;}
						else if ( (LA313_0==HASH) && (synpred40_Css3())) {s = 25;}
						else if ( (LA313_0==AT_IDENT||(LA313_0 >= BOTTOMCENTER_SYM && LA313_0 <= BOTTOMRIGHT_SYM)||LA313_0==CHARSET_SYM||LA313_0==COUNTER_STYLE_SYM||LA313_0==FONT_FACE_SYM||LA313_0==IMPORT_SYM||(LA313_0 >= LEFTBOTTOM_SYM && LA313_0 <= LEFTTOP_SYM)||LA313_0==MEDIA_SYM||LA313_0==MOZ_DOCUMENT_SYM||LA313_0==NAMESPACE_SYM||LA313_0==PAGE_SYM||(LA313_0 >= RIGHTBOTTOM_SYM && LA313_0 <= RIGHTTOP_SYM)||(LA313_0 >= SASS_AT_ROOT && LA313_0 <= SASS_DEBUG)||(LA313_0 >= SASS_EACH && LA313_0 <= SASS_ELSE)||LA313_0==SASS_EXTEND||LA313_0==SASS_FOR||LA313_0==SASS_FUNCTION||(LA313_0 >= SASS_IF && LA313_0 <= SASS_MIXIN)||LA313_0==SASS_RETURN||(LA313_0 >= SASS_WARN && LA313_0 <= SASS_WHILE)||(LA313_0 >= TOPCENTER_SYM && LA313_0 <= TOPRIGHT_SYM)||LA313_0==WEBKIT_KEYFRAMES_SYM) && (synpred40_Css3())) {s = 26;}
						else if ( (LA313_0==SASS_VAR) && (synpred40_Css3())) {s = 27;}
						else if ( (LA313_0==LESS_AND) && (synpred40_Css3())) {s = 28;}
						else if ( (LA313_0==HASH_SYMBOL) && (synpred40_Css3())) {s = 29;}
						else if ( (LA313_0==AT_SIGN) && (synpred40_Css3())) {s = 30;}
						else if ( (LA313_0==PERCENTAGE_SYMBOL) && (synpred40_Css3())) {s = 31;}
						 
						input.seek(index313_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA313_1 = input.LA(1);
						 
						int index313_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA313_1==COMMA||LA313_1==RPAREN||LA313_1==SEMI) ) {s = 2;}
						else if ( (LA313_1==COMMENT||LA313_1==NL||LA313_1==WS) ) {s = 1;}
						else if ( (LA313_1==MINUS||LA313_1==PLUS) && (synpred40_Css3())) {s = 4;}
						else if ( (LA313_1==IDENT) && (synpred40_Css3())) {s = 32;}
						else if ( (LA313_1==VARIABLE) && (synpred40_Css3())) {s = 6;}
						else if ( (LA313_1==LBRACKET) && (synpred40_Css3())) {s = 7;}
						else if ( (LA313_1==NUMBER) && (synpred40_Css3())) {s = 8;}
						else if ( (LA313_1==URANGE) && (synpred40_Css3())) {s = 9;}
						else if ( (LA313_1==PERCENTAGE) && (synpred40_Css3())) {s = 10;}
						else if ( (LA313_1==LENGTH) && (synpred40_Css3())) {s = 11;}
						else if ( (LA313_1==EMS) && (synpred40_Css3())) {s = 12;}
						else if ( (LA313_1==REM) && (synpred40_Css3())) {s = 13;}
						else if ( (LA313_1==EXS) && (synpred40_Css3())) {s = 14;}
						else if ( (LA313_1==ANGLE) && (synpred40_Css3())) {s = 15;}
						else if ( (LA313_1==TIME) && (synpred40_Css3())) {s = 16;}
						else if ( (LA313_1==FREQ) && (synpred40_Css3())) {s = 17;}
						else if ( (LA313_1==RESOLUTION) && (synpred40_Css3())) {s = 18;}
						else if ( (LA313_1==DIMENSION) && (synpred40_Css3())) {s = 19;}
						else if ( (LA313_1==STRING) && (synpred40_Css3())) {s = 20;}
						else if ( (LA313_1==TILDE) && (synpred40_Css3())) {s = 21;}
						else if ( (LA313_1==LESS_JS_STRING) && (synpred40_Css3())) {s = 22;}
						else if ( (LA313_1==GEN) && (synpred40_Css3())) {s = 23;}
						else if ( (LA313_1==URI) && (synpred40_Css3())) {s = 24;}
						else if ( (LA313_1==HASH) && (synpred40_Css3())) {s = 25;}
						else if ( (LA313_1==AT_IDENT||(LA313_1 >= BOTTOMCENTER_SYM && LA313_1 <= BOTTOMRIGHT_SYM)||LA313_1==CHARSET_SYM||LA313_1==COUNTER_STYLE_SYM||LA313_1==FONT_FACE_SYM||LA313_1==IMPORT_SYM||(LA313_1 >= LEFTBOTTOM_SYM && LA313_1 <= LEFTTOP_SYM)||LA313_1==MEDIA_SYM||LA313_1==MOZ_DOCUMENT_SYM||LA313_1==NAMESPACE_SYM||LA313_1==PAGE_SYM||(LA313_1 >= RIGHTBOTTOM_SYM && LA313_1 <= RIGHTTOP_SYM)||(LA313_1 >= SASS_AT_ROOT && LA313_1 <= SASS_DEBUG)||(LA313_1 >= SASS_EACH && LA313_1 <= SASS_ELSE)||LA313_1==SASS_EXTEND||LA313_1==SASS_FOR||LA313_1==SASS_FUNCTION||(LA313_1 >= SASS_IF && LA313_1 <= SASS_MIXIN)||LA313_1==SASS_RETURN||(LA313_1 >= SASS_WARN && LA313_1 <= SASS_WHILE)||(LA313_1 >= TOPCENTER_SYM && LA313_1 <= TOPRIGHT_SYM)||LA313_1==WEBKIT_KEYFRAMES_SYM) && (synpred40_Css3())) {s = 33;}
						else if ( (LA313_1==SASS_VAR) && (synpred40_Css3())) {s = 34;}
						else if ( (LA313_1==LESS_AND) && (synpred40_Css3())) {s = 35;}
						else if ( (LA313_1==HASH_SYMBOL) && (synpred40_Css3())) {s = 36;}
						else if ( (LA313_1==AT_SIGN) && (synpred40_Css3())) {s = 37;}
						else if ( (LA313_1==PERCENTAGE_SYMBOL) && (synpred40_Css3())) {s = 38;}
						else if ( (LA313_1==SOLIDUS) && (synpred40_Css3())) {s = 3;}
						 
						input.seek(index313_1);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 313, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA312_eotS =
		"\5\uffff";
	static final String DFA312_eofS =
		"\5\uffff";
	static final String DFA312_minS =
		"\2\5\3\uffff";
	static final String DFA312_maxS =
		"\2\u0098\3\uffff";
	static final String DFA312_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA312_specialS =
		"\5\uffff}>";
	static final String[] DFA312_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\6\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff\3\3\1\uffff"+
			"\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\6\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\3\4\1\uffff"+
			"\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA312_eot = DFA.unpackEncodedString(DFA312_eotS);
	static final short[] DFA312_eof = DFA.unpackEncodedString(DFA312_eofS);
	static final char[] DFA312_min = DFA.unpackEncodedStringToUnsignedChars(DFA312_minS);
	static final char[] DFA312_max = DFA.unpackEncodedStringToUnsignedChars(DFA312_maxS);
	static final short[] DFA312_accept = DFA.unpackEncodedString(DFA312_acceptS);
	static final short[] DFA312_special = DFA.unpackEncodedString(DFA312_specialS);
	static final short[][] DFA312_transition;

	static {
		int numStates = DFA312_transitionS.length;
		DFA312_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA312_transition[i] = DFA.unpackEncodedString(DFA312_transitionS[i]);
		}
	}

	protected class DFA312 extends DFA {

		public DFA312(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 312;
			this.eot = DFA312_eot;
			this.eof = DFA312_eof;
			this.min = DFA312_min;
			this.max = DFA312_max;
			this.accept = DFA312_accept;
			this.special = DFA312_special;
			this.transition = DFA312_transition;
		}
		@Override
		public String getDescription() {
			return "1059:71: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA322_eotS =
		"\5\uffff";
	static final String DFA322_eofS =
		"\2\2\3\uffff";
	static final String DFA322_minS =
		"\2\6\3\uffff";
	static final String DFA322_maxS =
		"\2\u0098\3\uffff";
	static final String DFA322_acceptS =
		"\2\uffff\1\3\1\1\1\2";
	static final String DFA322_specialS =
		"\5\uffff}>";
	static final String[] DFA322_transitionS = {
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\3\2\2\2\uffff\3\2\1\uffff\1\2\1\4\3\2\1\uffff"+
			"\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\10\uffff"+
			"\1\2\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\3\2\2\1\uffff\4\2\1\uffff\1\2\1\4\3\2\1\uffff"+
			"\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			"",
			""
	};

	static final short[] DFA322_eot = DFA.unpackEncodedString(DFA322_eotS);
	static final short[] DFA322_eof = DFA.unpackEncodedString(DFA322_eofS);
	static final char[] DFA322_min = DFA.unpackEncodedStringToUnsignedChars(DFA322_minS);
	static final char[] DFA322_max = DFA.unpackEncodedStringToUnsignedChars(DFA322_maxS);
	static final short[] DFA322_accept = DFA.unpackEncodedString(DFA322_acceptS);
	static final short[] DFA322_special = DFA.unpackEncodedString(DFA322_specialS);
	static final short[][] DFA322_transition;

	static {
		int numStates = DFA322_transitionS.length;
		DFA322_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA322_transition[i] = DFA.unpackEncodedString(DFA322_transitionS[i]);
		}
	}

	protected class DFA322 extends DFA {

		public DFA322(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 322;
			this.eot = DFA322_eot;
			this.eof = DFA322_eof;
			this.min = DFA322_min;
			this.max = DFA322_max;
			this.accept = DFA322_accept;
			this.special = DFA322_special;
			this.transition = DFA322_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1078:72: ( ( ( ws )? SASS_DEFAULT ) | ( ( ws )? SASS_GLOBAL ) )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA328_eotS =
		"\106\uffff";
	static final String DFA328_eofS =
		"\1\2\105\uffff";
	static final String DFA328_minS =
		"\1\5\1\0\55\uffff\1\0\26\uffff";
	static final String DFA328_maxS =
		"\1\u0098\1\0\55\uffff\1\0\26\uffff";
	static final String DFA328_acceptS =
		"\2\uffff\1\2\102\uffff\1\1";
	static final String DFA328_specialS =
		"\1\uffff\1\0\55\uffff\1\1\26\uffff}>";
	static final String[] DFA328_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\2\2\1\57\1\1\1\uffff\1\2\5\uffff\3\2\1\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\2\2\2\uffff\2\2\3\uffff\3\2\5\uffff"+
			"\6\2\1\uffff\2\2\3\uffff\1\2\1\uffff\3\2\5\uffff\1\2\1\1\3\uffff\2\2"+
			"\3\uffff\5\2\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\1\uffff\4\2\1\uffff\3\2\1\uffff\7\2\2\uffff\2\2\2\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA328_eot = DFA.unpackEncodedString(DFA328_eotS);
	static final short[] DFA328_eof = DFA.unpackEncodedString(DFA328_eofS);
	static final char[] DFA328_min = DFA.unpackEncodedStringToUnsignedChars(DFA328_minS);
	static final char[] DFA328_max = DFA.unpackEncodedStringToUnsignedChars(DFA328_maxS);
	static final short[] DFA328_accept = DFA.unpackEncodedString(DFA328_acceptS);
	static final short[] DFA328_special = DFA.unpackEncodedString(DFA328_specialS);
	static final short[][] DFA328_transition;

	static {
		int numStates = DFA328_transitionS.length;
		DFA328_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA328_transition[i] = DFA.unpackEncodedString(DFA328_transitionS[i]);
		}
	}

	protected class DFA328 extends DFA {

		public DFA328(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 328;
			this.eot = DFA328_eot;
			this.eof = DFA328_eof;
			this.min = DFA328_min;
			this.max = DFA328_max;
			this.accept = DFA328_accept;
			this.special = DFA328_special;
			this.transition = DFA328_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1094:5: ( ( ( ws )? COMMA ( ws )? cp_expression )=> ( ws )? COMMA ( ws )? cp_expression )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA328_1 = input.LA(1);
						 
						int index328_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred42_Css3()) ) {s = 69;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index328_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA328_47 = input.LA(1);
						 
						int index328_47 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred42_Css3()) ) {s = 69;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index328_47);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 328, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA334_eotS =
		"\116\uffff";
	static final String DFA334_eofS =
		"\1\2\115\uffff";
	static final String DFA334_minS =
		"\1\5\1\0\2\uffff\13\0\2\uffff\1\0\1\uffff\6\0\1\uffff\2\0\3\uffff\14\0"+
		"\1\uffff\2\0\1\uffff\2\0\3\uffff\21\0\2\uffff\1\0\6\uffff";
	static final String DFA334_maxS =
		"\1\u0098\1\0\2\uffff\13\0\2\uffff\1\0\1\uffff\6\0\1\uffff\2\0\3\uffff"+
		"\14\0\1\uffff\2\0\1\uffff\2\0\3\uffff\21\0\2\uffff\1\0\6\uffff";
	static final String DFA334_acceptS =
		"\2\uffff\1\3\105\uffff\5\1\1\2";
	static final String DFA334_specialS =
		"\1\0\1\1\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\uffff"+
		"\1\15\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\3\uffff"+
		"\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\uffff\1"+
		"\42\1\43\1\uffff\1\44\1\45\3\uffff\1\46\1\47\1\50\1\51\1\52\1\53\1\54"+
		"\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\2\uffff\1\67\6\uffff}>";
	static final String[] DFA334_transitionS = {
			"\1\74\1\24\1\12\2\uffff\5\54\3\uffff\1\60\2\2\1\107\1\uffff\1\55\1\2"+
			"\1\110\1\111\2\uffff\1\2\1\32\1\2\1\uffff\1\71\3\uffff\1\73\1\uffff\1"+
			"\46\1\76\1\uffff\1\14\1\100\1\114\1\uffff\1\23\1\11\3\uffff\1\7\1\4\1"+
			"\44\5\uffff\1\2\1\33\3\54\1\70\1\112\1\21\1\101\1\113\1\2\1\uffff\1\104"+
			"\1\uffff\1\51\1\10\1\47\5\uffff\1\60\1\107\3\uffff\1\64\1\5\3\uffff\1"+
			"\45\1\67\1\103\1\2\1\30\2\uffff\1\2\1\uffff\1\72\1\77\3\54\1\2\1\uffff"+
			"\1\26\1\43\1\27\1\2\1\41\1\60\2\uffff\1\52\1\2\1\40\1\uffff\1\57\1\2"+
			"\1\37\1\25\1\15\1\uffff\1\60\1\uffff\1\16\1\27\1\42\1\2\1\uffff\1\2\1"+
			"\6\1\2\1\uffff\1\65\1\75\5\54\2\uffff\1\66\1\102\2\uffff\1\13\1\uffff"+
			"\1\50\1\1",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			""
	};

	static final short[] DFA334_eot = DFA.unpackEncodedString(DFA334_eotS);
	static final short[] DFA334_eof = DFA.unpackEncodedString(DFA334_eofS);
	static final char[] DFA334_min = DFA.unpackEncodedStringToUnsignedChars(DFA334_minS);
	static final char[] DFA334_max = DFA.unpackEncodedStringToUnsignedChars(DFA334_maxS);
	static final short[] DFA334_accept = DFA.unpackEncodedString(DFA334_acceptS);
	static final short[] DFA334_special = DFA.unpackEncodedString(DFA334_specialS);
	static final short[][] DFA334_transition;

	static {
		int numStates = DFA334_transitionS.length;
		DFA334_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA334_transition[i] = DFA.unpackEncodedString(DFA334_transitionS[i]);
		}
	}

	protected class DFA334 extends DFA {

		public DFA334(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 334;
			this.eot = DFA334_eot;
			this.eof = DFA334_eof;
			this.min = DFA334_min;
			this.max = DFA334_max;
			this.accept = DFA334_accept;
			this.special = DFA334_special;
			this.transition = DFA334_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1111:5: ( ( ( ws )? cp_expression_operator )=> ( ( ws )? cp_expression_operator ( ws )? ) cp_expression_atom | ( ( ws )? cp_expression_atom )=> ( ws )? cp_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA334_0 = input.LA(1);
						 
						int index334_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA334_0==WS) ) {s = 1;}
						else if ( (LA334_0==EOF||(LA334_0 >= COLON && LA334_0 <= COMMA)||LA334_0==CP_DOTS||LA334_0==DCOLON||LA334_0==DOT||LA334_0==LBRACE||LA334_0==LESS_REST||LA334_0==PIPE||LA334_0==RBRACE||LA334_0==RPAREN||LA334_0==SASS_DEFAULT||LA334_0==SASS_EXTEND_ONLY_SELECTOR||LA334_0==SASS_GLOBAL||LA334_0==SEMI||LA334_0==STAR||LA334_0==SUPPORTS_SYM) ) {s = 2;}
						else if ( (LA334_0==IMPORTANT_SYM) ) {s = 4;}
						else if ( (LA334_0==NUMBER) ) {s = 5;}
						else if ( (LA334_0==STRING) ) {s = 6;}
						else if ( (LA334_0==IDENT) ) {s = 7;}
						else if ( (LA334_0==MINUS) ) {s = 8;}
						else if ( (LA334_0==HASH_SYMBOL) ) {s = 9;}
						else if ( (LA334_0==AT_SIGN) ) {s = 10;}
						else if ( (LA334_0==VARIABLE) ) {s = 11;}
						else if ( (LA334_0==GEN) ) {s = 12;}
						else if ( (LA334_0==SASS_MIXIN) ) {s = 13;}
						else if ( (LA334_0==SASS_VAR) ) {s = 14;}
						else if ( (LA334_0==LESS_AND) ) {s = 17;}
						else if ( (LA334_0==HASH) ) {s = 19;}
						else if ( (LA334_0==AT_IDENT) ) {s = 20;}
						else if ( (LA334_0==SASS_INCLUDE) ) {s = 21;}
						else if ( (LA334_0==SASS_AT_ROOT) ) {s = 22;}
						else if ( (LA334_0==SASS_DEBUG||LA334_0==SASS_WARN) ) {s = 23;}
						else if ( (LA334_0==PLUS) ) {s = 24;}
						else if ( (LA334_0==DIMENSION) ) {s = 26;}
						else if ( (LA334_0==LBRACKET) ) {s = 27;}
						else if ( (LA334_0==SASS_IF) ) {s = 31;}
						else if ( (LA334_0==SASS_FOR) ) {s = 32;}
						else if ( (LA334_0==SASS_EACH) ) {s = 33;}
						else if ( (LA334_0==SASS_WHILE) ) {s = 34;}
						else if ( (LA334_0==SASS_CONTENT) ) {s = 35;}
						else if ( (LA334_0==IMPORT_SYM) ) {s = 36;}
						else if ( (LA334_0==PAGE_SYM) ) {s = 37;}
						else if ( (LA334_0==FONT_FACE_SYM) ) {s = 38;}
						else if ( (LA334_0==MOZ_DOCUMENT_SYM) ) {s = 39;}
						else if ( (LA334_0==WEBKIT_KEYFRAMES_SYM) ) {s = 40;}
						else if ( (LA334_0==MEDIA_SYM) ) {s = 41;}
						else if ( (LA334_0==SASS_EXTEND) ) {s = 42;}
						else if ( ((LA334_0 >= BOTTOMCENTER_SYM && LA334_0 <= BOTTOMRIGHT_SYM)||(LA334_0 >= LEFTBOTTOM_SYM && LA334_0 <= LEFTTOP_SYM)||(LA334_0 >= RIGHTBOTTOM_SYM && LA334_0 <= RIGHTTOP_SYM)||(LA334_0 >= TOPCENTER_SYM && LA334_0 <= TOPRIGHT_SYM)) ) {s = 44;}
						else if ( (LA334_0==COUNTER_STYLE_SYM) ) {s = 45;}
						else if ( (LA334_0==SASS_FUNCTION) ) {s = 47;}
						else if ( (LA334_0==CHARSET_SYM||LA334_0==NAMESPACE_SYM||LA334_0==SASS_ELSE||LA334_0==SASS_RETURN) ) {s = 48;}
						else if ( (LA334_0==NOT) ) {s = 52;}
						else if ( (LA334_0==TILDE) ) {s = 53;}
						else if ( (LA334_0==URANGE) ) {s = 54;}
						else if ( (LA334_0==PERCENTAGE) ) {s = 55;}
						else if ( (LA334_0==LENGTH) ) {s = 56;}
						else if ( (LA334_0==EMS) ) {s = 57;}
						else if ( (LA334_0==REM) ) {s = 58;}
						else if ( (LA334_0==EXS) ) {s = 59;}
						else if ( (LA334_0==ANGLE) ) {s = 60;}
						else if ( (LA334_0==TIME) ) {s = 61;}
						else if ( (LA334_0==FREQ) ) {s = 62;}
						else if ( (LA334_0==RESOLUTION) ) {s = 63;}
						else if ( (LA334_0==GREATER) ) {s = 64;}
						else if ( (LA334_0==LESS_JS_STRING) ) {s = 65;}
						else if ( (LA334_0==URI) ) {s = 66;}
						else if ( (LA334_0==PERCENTAGE_SYMBOL) ) {s = 67;}
						else if ( (LA334_0==LPAREN) ) {s = 68;}
						else if ( (LA334_0==COMMENT||LA334_0==NL) ) {s = 71;}
						else if ( (LA334_0==CP_EQ) && (synpred44_Css3())) {s = 72;}
						else if ( (LA334_0==CP_NOT_EQ) && (synpred44_Css3())) {s = 73;}
						else if ( (LA334_0==LESS) && (synpred44_Css3())) {s = 74;}
						else if ( (LA334_0==LESS_OR_EQ) && (synpred44_Css3())) {s = 75;}
						else if ( (LA334_0==GREATER_OR_EQ) && (synpred44_Css3())) {s = 76;}
						 
						input.seek(index334_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA334_1 = input.LA(1);
						 
						int index334_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred44_Css3()) ) {s = 76;}
						else if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA334_4 = input.LA(1);
						 
						int index334_4 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_4);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA334_5 = input.LA(1);
						 
						int index334_5 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_5);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA334_6 = input.LA(1);
						 
						int index334_6 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_6);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA334_7 = input.LA(1);
						 
						int index334_7 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred44_Css3()&&(evalPredicate(tokenNameEquals("or"),"tokenNameEquals(\"or\")")||evalPredicate(tokenNameEquals("and"),"tokenNameEquals(\"and\")")))) ) {s = 76;}
						else if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_7);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA334_8 = input.LA(1);
						 
						int index334_8 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_8);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA334_9 = input.LA(1);
						 
						int index334_9 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred45_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_9);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA334_10 = input.LA(1);
						 
						int index334_10 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isLessSource(),"isLessSource()")&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_10);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA334_11 = input.LA(1);
						 
						int index334_11 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_11);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA334_12 = input.LA(1);
						 
						int index334_12 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_12);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA334_13 = input.LA(1);
						 
						int index334_13 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_13);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA334_14 = input.LA(1);
						 
						int index334_14 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred45_Css3())&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_14);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA334_17 = input.LA(1);
						 
						int index334_17 = input.index();
						input.rewind();
						s = -1;
						if ( ((synpred45_Css3()&&evalPredicate(isScssSource(),"isScssSource()"))) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_17);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA334_19 = input.LA(1);
						 
						int index334_19 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_19);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA334_20 = input.LA(1);
						 
						int index334_20 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_20);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA334_21 = input.LA(1);
						 
						int index334_21 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_21);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA334_22 = input.LA(1);
						 
						int index334_22 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_22);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA334_23 = input.LA(1);
						 
						int index334_23 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_23);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA334_24 = input.LA(1);
						 
						int index334_24 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_24);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA334_26 = input.LA(1);
						 
						int index334_26 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_26);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA334_27 = input.LA(1);
						 
						int index334_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_27);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA334_31 = input.LA(1);
						 
						int index334_31 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_31);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA334_32 = input.LA(1);
						 
						int index334_32 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_32);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA334_33 = input.LA(1);
						 
						int index334_33 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_33);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA334_34 = input.LA(1);
						 
						int index334_34 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_34);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA334_35 = input.LA(1);
						 
						int index334_35 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_35);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA334_36 = input.LA(1);
						 
						int index334_36 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_36);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA334_37 = input.LA(1);
						 
						int index334_37 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_37);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA334_38 = input.LA(1);
						 
						int index334_38 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_38);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA334_39 = input.LA(1);
						 
						int index334_39 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_39);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA334_40 = input.LA(1);
						 
						int index334_40 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_40);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA334_41 = input.LA(1);
						 
						int index334_41 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_41);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA334_42 = input.LA(1);
						 
						int index334_42 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_42);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA334_44 = input.LA(1);
						 
						int index334_44 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_44);
						if ( s>=0 ) return s;
						break;

					case 35 : 
						int LA334_45 = input.LA(1);
						 
						int index334_45 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_45);
						if ( s>=0 ) return s;
						break;

					case 36 : 
						int LA334_47 = input.LA(1);
						 
						int index334_47 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_47);
						if ( s>=0 ) return s;
						break;

					case 37 : 
						int LA334_48 = input.LA(1);
						 
						int index334_48 = input.index();
						input.rewind();
						s = -1;
						if ( (((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&evalPredicate(isLessSource(),"isLessSource()"))&&synpred45_Css3())) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_48);
						if ( s>=0 ) return s;
						break;

					case 38 : 
						int LA334_52 = input.LA(1);
						 
						int index334_52 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_52);
						if ( s>=0 ) return s;
						break;

					case 39 : 
						int LA334_53 = input.LA(1);
						 
						int index334_53 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_53);
						if ( s>=0 ) return s;
						break;

					case 40 : 
						int LA334_54 = input.LA(1);
						 
						int index334_54 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_54);
						if ( s>=0 ) return s;
						break;

					case 41 : 
						int LA334_55 = input.LA(1);
						 
						int index334_55 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_55);
						if ( s>=0 ) return s;
						break;

					case 42 : 
						int LA334_56 = input.LA(1);
						 
						int index334_56 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_56);
						if ( s>=0 ) return s;
						break;

					case 43 : 
						int LA334_57 = input.LA(1);
						 
						int index334_57 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_57);
						if ( s>=0 ) return s;
						break;

					case 44 : 
						int LA334_58 = input.LA(1);
						 
						int index334_58 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_58);
						if ( s>=0 ) return s;
						break;

					case 45 : 
						int LA334_59 = input.LA(1);
						 
						int index334_59 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_59);
						if ( s>=0 ) return s;
						break;

					case 46 : 
						int LA334_60 = input.LA(1);
						 
						int index334_60 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_60);
						if ( s>=0 ) return s;
						break;

					case 47 : 
						int LA334_61 = input.LA(1);
						 
						int index334_61 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_61);
						if ( s>=0 ) return s;
						break;

					case 48 : 
						int LA334_62 = input.LA(1);
						 
						int index334_62 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_62);
						if ( s>=0 ) return s;
						break;

					case 49 : 
						int LA334_63 = input.LA(1);
						 
						int index334_63 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_63);
						if ( s>=0 ) return s;
						break;

					case 50 : 
						int LA334_64 = input.LA(1);
						 
						int index334_64 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred44_Css3()) ) {s = 76;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_64);
						if ( s>=0 ) return s;
						break;

					case 51 : 
						int LA334_65 = input.LA(1);
						 
						int index334_65 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_65);
						if ( s>=0 ) return s;
						break;

					case 52 : 
						int LA334_66 = input.LA(1);
						 
						int index334_66 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_66);
						if ( s>=0 ) return s;
						break;

					case 53 : 
						int LA334_67 = input.LA(1);
						 
						int index334_67 = input.index();
						input.rewind();
						s = -1;
						if ( ((evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")&&synpred45_Css3())) ) {s = 77;}
						else if ( (evalPredicate(isCssPreprocessorSource(),"isCssPreprocessorSource()")) ) {s = 2;}
						 
						input.seek(index334_67);
						if ( s>=0 ) return s;
						break;

					case 54 : 
						int LA334_68 = input.LA(1);
						 
						int index334_68 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_68);
						if ( s>=0 ) return s;
						break;

					case 55 : 
						int LA334_71 = input.LA(1);
						 
						int index334_71 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred44_Css3()) ) {s = 76;}
						else if ( (synpred45_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index334_71);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 334, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA348_eotS =
		"\116\uffff";
	static final String DFA348_eofS =
		"\1\2\115\uffff";
	static final String DFA348_minS =
		"\1\5\1\0\13\uffff\1\0\34\uffff\1\0\10\uffff\1\0\30\uffff\1\0\1\uffff";
	static final String DFA348_maxS =
		"\1\u0098\1\0\13\uffff\1\0\34\uffff\1\0\10\uffff\1\0\30\uffff\1\0\1\uffff";
	static final String DFA348_acceptS =
		"\2\uffff\1\2\112\uffff\1\1";
	static final String DFA348_specialS =
		"\1\0\1\1\13\uffff\1\2\34\uffff\1\3\10\uffff\1\4\30\uffff\1\5\1\uffff}>";
	static final String[] DFA348_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\3\2\1\114\1\uffff\4\2\2\uffff\3\2\1\uffff\1"+
			"\2\3\uffff\1\2\1\uffff\2\2\1\uffff\3\2\1\uffff\2\2\3\uffff\3\2\5\uffff"+
			"\13\2\1\uffff\1\2\1\uffff\1\2\1\15\1\2\5\uffff\1\2\1\114\3\uffff\2\2"+
			"\3\uffff\4\2\1\52\2\uffff\1\2\1\uffff\6\2\1\uffff\6\2\2\uffff\3\2\1\uffff"+
			"\5\2\1\uffff\1\2\1\uffff\4\2\1\115\1\63\2\2\1\uffff\7\2\2\uffff\2\2\2"+
			"\uffff\1\2\1\uffff\1\2\1\1",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"\1\uffff",
			""
	};

	static final short[] DFA348_eot = DFA.unpackEncodedString(DFA348_eotS);
	static final short[] DFA348_eof = DFA.unpackEncodedString(DFA348_eofS);
	static final char[] DFA348_min = DFA.unpackEncodedStringToUnsignedChars(DFA348_minS);
	static final char[] DFA348_max = DFA.unpackEncodedStringToUnsignedChars(DFA348_maxS);
	static final short[] DFA348_accept = DFA.unpackEncodedString(DFA348_acceptS);
	static final short[] DFA348_special = DFA.unpackEncodedString(DFA348_specialS);
	static final short[][] DFA348_transition;

	static {
		int numStates = DFA348_transitionS.length;
		DFA348_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA348_transition[i] = DFA.unpackEncodedString(DFA348_transitionS[i]);
		}
	}

	protected class DFA348 extends DFA {

		public DFA348(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 348;
			this.eot = DFA348_eot;
			this.eof = DFA348_eof;
			this.min = DFA348_min;
			this.max = DFA348_max;
			this.accept = DFA348_accept;
			this.special = DFA348_special;
			this.transition = DFA348_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1153:10: ( ( ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) )=> ( ws )? ( PLUS | MINUS | STAR | SOLIDUS ) ( ws )? cp_math_expression_atom )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA348_0 = input.LA(1);
						 
						int index348_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA348_0==WS) ) {s = 1;}
						else if ( (LA348_0==EOF||(LA348_0 >= ANGLE && LA348_0 <= AT_SIGN)||(LA348_0 >= BOTTOMCENTER_SYM && LA348_0 <= BOTTOMRIGHT_SYM)||(LA348_0 >= CHARSET_SYM && LA348_0 <= COMMA)||(LA348_0 >= COUNTER_STYLE_SYM && LA348_0 <= CP_NOT_EQ)||(LA348_0 >= DCOLON && LA348_0 <= DOT)||LA348_0==EMS||LA348_0==EXS||(LA348_0 >= FONT_FACE_SYM && LA348_0 <= FREQ)||(LA348_0 >= GEN && LA348_0 <= GREATER_OR_EQ)||(LA348_0 >= HASH && LA348_0 <= HASH_SYMBOL)||(LA348_0 >= IDENT && LA348_0 <= IMPORT_SYM)||(LA348_0 >= LBRACE && LA348_0 <= LESS_REST)||LA348_0==LPAREN||LA348_0==MEDIA_SYM||LA348_0==MOZ_DOCUMENT_SYM||LA348_0==NAMESPACE_SYM||(LA348_0 >= NOT && LA348_0 <= NUMBER)||(LA348_0 >= PAGE_SYM && LA348_0 <= PIPE)||LA348_0==RBRACE||(LA348_0 >= REM && LA348_0 <= RPAREN)||(LA348_0 >= SASS_AT_ROOT && LA348_0 <= SASS_ELSE)||(LA348_0 >= SASS_EXTEND && LA348_0 <= SASS_FOR)||(LA348_0 >= SASS_FUNCTION && LA348_0 <= SASS_MIXIN)||LA348_0==SASS_RETURN||(LA348_0 >= SASS_VAR && LA348_0 <= SEMI)||(LA348_0 >= STRING && LA348_0 <= SUPPORTS_SYM)||(LA348_0 >= TILDE && LA348_0 <= TOPRIGHT_SYM)||(LA348_0 >= URANGE && LA348_0 <= URI)||LA348_0==VARIABLE||LA348_0==WEBKIT_KEYFRAMES_SYM) ) {s = 2;}
						else if ( (LA348_0==MINUS) ) {s = 13;}
						else if ( (LA348_0==PLUS) ) {s = 42;}
						else if ( (LA348_0==STAR) ) {s = 51;}
						else if ( (LA348_0==COMMENT||LA348_0==NL) ) {s = 76;}
						else if ( (LA348_0==SOLIDUS) && (synpred47_Css3())) {s = 77;}
						 
						input.seek(index348_0);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA348_1 = input.LA(1);
						 
						int index348_1 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred47_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index348_1);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA348_13 = input.LA(1);
						 
						int index348_13 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred47_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index348_13);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA348_42 = input.LA(1);
						 
						int index348_42 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred47_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index348_42);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA348_51 = input.LA(1);
						 
						int index348_51 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred47_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index348_51);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA348_76 = input.LA(1);
						 
						int index348_76 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred47_Css3()) ) {s = 77;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index348_76);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 348, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA353_eotS =
		"\6\uffff";
	static final String DFA353_eofS =
		"\6\uffff";
	static final String DFA353_minS =
		"\2\5\3\uffff\1\5";
	static final String DFA353_maxS =
		"\1\u0097\1\u0098\3\uffff\1\u0098";
	static final String DFA353_acceptS =
		"\2\uffff\1\1\1\2\1\3\1\uffff";
	static final String DFA353_specialS =
		"\6\uffff}>";
	static final String[] DFA353_transitionS = {
			"\3\2\2\uffff\5\2\3\uffff\1\2\4\uffff\1\2\6\uffff\1\2\2\uffff\1\2\3\uffff"+
			"\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\3\1\2\6\uffff"+
			"\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\1\1\2\5\uffff\1\2\5\uffff"+
			"\1\2\3\uffff\3\2\1\uffff\1\1\4\uffff\5\2\2\uffff\3\2\1\uffff\2\2\2\uffff"+
			"\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\3\uffff"+
			"\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\6\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff"+
			"\3\2\3\uffff\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5",
			"",
			"",
			"",
			"\3\2\2\uffff\5\2\3\uffff\1\2\2\uffff\1\5\1\uffff\1\2\6\uffff\1\2\2\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff\2\2\3\uffff\1\2\1\uffff"+
			"\1\2\6\uffff\5\2\1\uffff\2\2\3\uffff\1\4\1\uffff\1\2\1\uffff\1\2\5\uffff"+
			"\1\2\1\5\4\uffff\1\2\3\uffff\3\2\6\uffff\5\2\2\uffff\3\2\1\uffff\2\2"+
			"\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff"+
			"\3\2\3\uffff\1\2\2\uffff\7\2\2\uffff\2\2\2\uffff\1\2\1\uffff\1\2\1\5"
	};

	static final short[] DFA353_eot = DFA.unpackEncodedString(DFA353_eotS);
	static final short[] DFA353_eof = DFA.unpackEncodedString(DFA353_eofS);
	static final char[] DFA353_min = DFA.unpackEncodedStringToUnsignedChars(DFA353_minS);
	static final char[] DFA353_max = DFA.unpackEncodedStringToUnsignedChars(DFA353_maxS);
	static final short[] DFA353_accept = DFA.unpackEncodedString(DFA353_acceptS);
	static final short[] DFA353_special = DFA.unpackEncodedString(DFA353_specialS);
	static final short[][] DFA353_transition;

	static {
		int numStates = DFA353_transitionS.length;
		DFA353_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA353_transition[i] = DFA.unpackEncodedString(DFA353_transitionS[i]);
		}
	}

	protected class DFA353 extends DFA {

		public DFA353(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 353;
			this.eot = DFA353_eot;
			this.eof = DFA353_eof;
			this.min = DFA353_min;
			this.max = DFA353_max;
			this.accept = DFA353_accept;
			this.special = DFA353_special;
			this.transition = DFA353_transition;
		}
		@Override
		public String getDescription() {
			return "1158:1: cp_math_expression_atom : ( term | IMPORTANT_SYM | ( unaryOperator ( ws )? )? LPAREN ( ws )? cp_math_expression ( ws )? RPAREN );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA360_eotS =
		"\4\uffff";
	static final String DFA360_eofS =
		"\4\uffff";
	static final String DFA360_minS =
		"\2\25\2\uffff";
	static final String DFA360_maxS =
		"\2\u0098\2\uffff";
	static final String DFA360_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA360_specialS =
		"\4\uffff}>";
	static final String[] DFA360_transitionS = {
			"\1\1\35\uffff\1\2\7\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"\1\1\35\uffff\1\2\7\uffff\1\3\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA360_eot = DFA.unpackEncodedString(DFA360_eotS);
	static final short[] DFA360_eof = DFA.unpackEncodedString(DFA360_eofS);
	static final char[] DFA360_min = DFA.unpackEncodedStringToUnsignedChars(DFA360_minS);
	static final char[] DFA360_max = DFA.unpackEncodedStringToUnsignedChars(DFA360_maxS);
	static final short[] DFA360_accept = DFA.unpackEncodedString(DFA360_acceptS);
	static final short[] DFA360_special = DFA.unpackEncodedString(DFA360_specialS);
	static final short[][] DFA360_transition;

	static {
		int numStates = DFA360_transitionS.length;
		DFA360_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA360_transition[i] = DFA.unpackEncodedString(DFA360_transitionS[i]);
		}
	}

	protected class DFA360 extends DFA {

		public DFA360(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 360;
			this.eot = DFA360_eot;
			this.eof = DFA360_eof;
			this.min = DFA360_min;
			this.max = DFA360_max;
			this.accept = DFA360_accept;
			this.special = DFA360_special;
			this.transition = DFA360_transition;
		}
		@Override
		public String getDescription() {
			return "1174:107: ( ( ws )? less_mixin_guarded )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA364_eotS =
		"\4\uffff";
	static final String DFA364_eofS =
		"\4\uffff";
	static final String DFA364_minS =
		"\2\25\2\uffff";
	static final String DFA364_maxS =
		"\2\u0098\2\uffff";
	static final String DFA364_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA364_specialS =
		"\4\uffff}>";
	static final String[] DFA364_transitionS = {
			"\1\1\45\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"\1\1\45\uffff\1\3\13\uffff\1\2\12\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA364_eot = DFA.unpackEncodedString(DFA364_eotS);
	static final short[] DFA364_eof = DFA.unpackEncodedString(DFA364_eofS);
	static final char[] DFA364_min = DFA.unpackEncodedStringToUnsignedChars(DFA364_minS);
	static final char[] DFA364_max = DFA.unpackEncodedStringToUnsignedChars(DFA364_maxS);
	static final short[] DFA364_accept = DFA.unpackEncodedString(DFA364_acceptS);
	static final short[] DFA364_special = DFA.unpackEncodedString(DFA364_specialS);
	static final short[][] DFA364_transition;

	static {
		int numStates = DFA364_transitionS.length;
		DFA364_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA364_transition[i] = DFA.unpackEncodedString(DFA364_transitionS[i]);
		}
	}

	protected class DFA364 extends DFA {

		public DFA364(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 364;
			this.eot = DFA364_eot;
			this.eof = DFA364_eof;
			this.min = DFA364_min;
			this.max = DFA364_max;
			this.accept = DFA364_accept;
			this.special = DFA364_special;
			this.transition = DFA364_transition;
		}
		@Override
		public String getDescription() {
			return "1176:55: ( ( ws )? LPAREN ( ws )? ( cp_args_list )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA379_eotS =
		"\4\uffff";
	static final String DFA379_eofS =
		"\2\3\2\uffff";
	static final String DFA379_minS =
		"\2\6\2\uffff";
	static final String DFA379_maxS =
		"\2\u0098\2\uffff";
	static final String DFA379_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA379_specialS =
		"\4\uffff}>";
	static final String[] DFA379_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\5\3\2\uffff\1\3\4\uffff"+
			"\1\2\1\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3"+
			"\3\uffff\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff"+
			"\5\3\6\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA379_eot = DFA.unpackEncodedString(DFA379_eotS);
	static final short[] DFA379_eof = DFA.unpackEncodedString(DFA379_eofS);
	static final char[] DFA379_min = DFA.unpackEncodedStringToUnsignedChars(DFA379_minS);
	static final char[] DFA379_max = DFA.unpackEncodedStringToUnsignedChars(DFA379_maxS);
	static final short[] DFA379_accept = DFA.unpackEncodedString(DFA379_acceptS);
	static final short[] DFA379_special = DFA.unpackEncodedString(DFA379_specialS);
	static final short[][] DFA379_transition;

	static {
		int numStates = DFA379_transitionS.length;
		DFA379_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA379_transition[i] = DFA.unpackEncodedString(DFA379_transitionS[i]);
		}
	}

	protected class DFA379 extends DFA {

		public DFA379(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 379;
			this.eot = DFA379_eot;
			this.eof = DFA379_eof;
			this.min = DFA379_min;
			this.max = DFA379_max;
			this.accept = DFA379_accept;
			this.special = DFA379_special;
			this.transition = DFA379_transition;
		}
		@Override
		public String getDescription() {
			return "1188:57: ( ( ws )? LPAREN ( ws )? ( cp_mixin_call_args )? RPAREN )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA381_eotS =
		"\4\uffff";
	static final String DFA381_eofS =
		"\2\3\2\uffff";
	static final String DFA381_minS =
		"\2\6\2\uffff";
	static final String DFA381_maxS =
		"\2\u0098\2\uffff";
	static final String DFA381_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA381_specialS =
		"\4\uffff}>";
	static final String[] DFA381_transitionS = {
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\1\2\4\3\2\uffff\1\3"+
			"\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff"+
			"\4\3\1\uffff\3\3\1\uffff\2\3\2\uffff\3\3\1\uffff\1\3\1\uffff\3\3\1\uffff"+
			"\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"\2\3\2\uffff\5\3\3\uffff\2\3\1\uffff\1\1\1\uffff\1\3\5\uffff\3\3\7\uffff"+
			"\1\3\2\uffff\2\3\2\uffff\2\3\3\uffff\3\3\5\uffff\1\2\4\3\2\uffff\1\3"+
			"\6\uffff\3\3\5\uffff\1\3\1\1\10\uffff\1\3\2\uffff\2\3\2\uffff\1\3\3\uffff"+
			"\4\3\1\uffff\3\3\1\uffff\2\3\1\uffff\4\3\1\uffff\1\3\1\uffff\3\3\1\uffff"+
			"\1\3\1\uffff\4\3\1\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\5\3\6\uffff"+
			"\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA381_eot = DFA.unpackEncodedString(DFA381_eotS);
	static final short[] DFA381_eof = DFA.unpackEncodedString(DFA381_eofS);
	static final char[] DFA381_min = DFA.unpackEncodedStringToUnsignedChars(DFA381_minS);
	static final char[] DFA381_max = DFA.unpackEncodedStringToUnsignedChars(DFA381_maxS);
	static final short[] DFA381_accept = DFA.unpackEncodedString(DFA381_acceptS);
	static final short[] DFA381_special = DFA.unpackEncodedString(DFA381_specialS);
	static final short[][] DFA381_transition;

	static {
		int numStates = DFA381_transitionS.length;
		DFA381_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA381_transition[i] = DFA.unpackEncodedString(DFA381_transitionS[i]);
		}
	}

	protected class DFA381 extends DFA {

		public DFA381(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 381;
			this.eot = DFA381_eot;
			this.eof = DFA381_eof;
			this.min = DFA381_min;
			this.max = DFA381_max;
			this.accept = DFA381_accept;
			this.special = DFA381_special;
			this.transition = DFA381_transition;
		}
		@Override
		public String getDescription() {
			return "1188:102: ( ( ws )? cp_mixin_block )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA394_eotS =
		"\12\uffff";
	static final String DFA394_eofS =
		"\12\uffff";
	static final String DFA394_minS =
		"\4\5\1\uffff\1\5\1\uffff\1\5\1\63\1\5";
	static final String DFA394_maxS =
		"\1\u0097\3\u0098\1\uffff\1\u0098\1\uffff\1\u0098\1\177\1\u0098";
	static final String DFA394_acceptS =
		"\4\uffff\1\2\1\uffff\1\1\3\uffff";
	static final String DFA394_specialS =
		"\12\uffff}>";
	static final String[] DFA394_transitionS = {
			"\1\4\1\1\1\4\2\uffff\5\1\3\uffff\1\1\4\uffff\1\1\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\1\1\1\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\3"+
			"\1\4\1\1\5\uffff\2\4\3\1\1\4\1\uffff\2\4\3\uffff\1\4\1\uffff\1\1\1\4"+
			"\1\1\5\uffff\1\1\4\uffff\2\4\3\uffff\1\1\2\4\1\uffff\1\4\4\uffff\2\4"+
			"\3\1\2\uffff\3\1\1\uffff\2\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\uffff"+
			"\3\1\1\uffff\1\1\1\uffff\1\2\2\1\3\uffff\1\4\2\uffff\2\4\5\1\2\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\1\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\6\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\7\4\2\uffff\7\4\2\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\5",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\1\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\6\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\7\4\2\uffff\7\4\2\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\7",
			"\3\4\2\uffff\5\4\3\uffff\4\4\1\uffff\4\4\3\uffff\1\4\1\10\1\uffff\1"+
			"\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\6\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\2\4\3\uffff\2\4\3\uffff\3\4\1\uffff"+
			"\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\7\4\2\uffff\7\4\2\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\2\4",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\5\1\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\6\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\5\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\7\4\2\uffff\7\4\2\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\5",
			"",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\1\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\6\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\7\4\2\uffff\7\4\2\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\7",
			"\1\4\113\uffff\1\11",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\6\1\4\1\7\1\uffff\4\4\3\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\3\4\1\uffff\2\4\3\uffff\3\4\6\uffff"+
			"\11\4\2\uffff\1\4\1\uffff\3\4\5\uffff\1\4\1\7\3\uffff\2\4\3\uffff\3\4"+
			"\1\uffff\1\4\4\uffff\6\4\1\uffff\3\4\1\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\7\4\2\uffff\7\4\2\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\7"
	};

	static final short[] DFA394_eot = DFA.unpackEncodedString(DFA394_eotS);
	static final short[] DFA394_eof = DFA.unpackEncodedString(DFA394_eofS);
	static final char[] DFA394_min = DFA.unpackEncodedStringToUnsignedChars(DFA394_minS);
	static final char[] DFA394_max = DFA.unpackEncodedStringToUnsignedChars(DFA394_maxS);
	static final short[] DFA394_accept = DFA.unpackEncodedString(DFA394_acceptS);
	static final short[] DFA394_special = DFA.unpackEncodedString(DFA394_specialS);
	static final short[][] DFA394_transition;

	static {
		int numStates = DFA394_transitionS.length;
		DFA394_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA394_transition[i] = DFA.unpackEncodedString(DFA394_transitionS[i]);
		}
	}

	protected class DFA394 extends DFA {

		public DFA394(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 394;
			this.eot = DFA394_eot;
			this.eof = DFA394_eof;
			this.min = DFA394_min;
			this.max = DFA394_max;
			this.accept = DFA394_accept;
			this.special = DFA394_special;
			this.transition = DFA394_transition;
		}
		@Override
		public String getDescription() {
			return "1214:5: ( cp_variable ( ws )? COLON ( ws )? cp_expression | cp_expression )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA397_eotS =
		"\5\uffff";
	static final String DFA397_eofS =
		"\5\uffff";
	static final String DFA397_minS =
		"\1\24\1\6\1\uffff\1\6\1\uffff";
	static final String DFA397_maxS =
		"\1\u0082\1\u0098\1\uffff\1\u0098\1\uffff";
	static final String DFA397_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA397_specialS =
		"\5\uffff}>";
	static final String[] DFA397_transitionS = {
			"\1\1\3\uffff\1\2\54\uffff\1\2\43\uffff\1\2\30\uffff\1\1",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff"+
			"\3\4\10\uffff\5\4\10\uffff\1\4\1\3",
			"",
			"\1\4\3\uffff\5\4\3\uffff\1\4\2\uffff\1\3\1\uffff\1\4\1\2\16\uffff\1"+
			"\4\13\uffff\1\4\1\uffff\1\4\7\uffff\3\4\5\uffff\1\2\3\uffff\1\4\1\uffff"+
			"\1\4\5\uffff\1\4\1\3\10\uffff\1\4\12\uffff\3\4\1\2\1\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff"+
			"\3\4\10\uffff\5\4\10\uffff\1\4\1\3",
			""
	};

	static final short[] DFA397_eot = DFA.unpackEncodedString(DFA397_eotS);
	static final short[] DFA397_eof = DFA.unpackEncodedString(DFA397_eofS);
	static final char[] DFA397_min = DFA.unpackEncodedStringToUnsignedChars(DFA397_minS);
	static final char[] DFA397_max = DFA.unpackEncodedStringToUnsignedChars(DFA397_maxS);
	static final short[] DFA397_accept = DFA.unpackEncodedString(DFA397_acceptS);
	static final short[] DFA397_special = DFA.unpackEncodedString(DFA397_specialS);
	static final short[][] DFA397_transition;

	static {
		int numStates = DFA397_transitionS.length;
		DFA397_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA397_transition[i] = DFA.unpackEncodedString(DFA397_transitionS[i]);
		}
	}

	protected class DFA397 extends DFA {

		public DFA397(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 397;
			this.eot = DFA397_eot;
			this.eof = DFA397_eof;
			this.min = DFA397_min;
			this.max = DFA397_max;
			this.accept = DFA397_accept;
			this.special = DFA397_special;
			this.transition = DFA397_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1229:14: ( ( COMMA | SEMI ) ( ws )? cp_arg )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA413_eotS =
		"\4\uffff";
	static final String DFA413_eofS =
		"\4\uffff";
	static final String DFA413_minS =
		"\2\24\2\uffff";
	static final String DFA413_maxS =
		"\2\u0098\2\uffff";
	static final String DFA413_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA413_specialS =
		"\4\uffff}>";
	static final String[] DFA413_transitionS = {
			"\1\3\1\1\35\uffff\1\3\7\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\1\1\35\uffff\1\3\7\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA413_eot = DFA.unpackEncodedString(DFA413_eotS);
	static final short[] DFA413_eof = DFA.unpackEncodedString(DFA413_eofS);
	static final char[] DFA413_min = DFA.unpackEncodedStringToUnsignedChars(DFA413_minS);
	static final char[] DFA413_max = DFA.unpackEncodedStringToUnsignedChars(DFA413_maxS);
	static final short[] DFA413_accept = DFA.unpackEncodedString(DFA413_acceptS);
	static final short[] DFA413_special = DFA.unpackEncodedString(DFA413_specialS);
	static final short[][] DFA413_transition;

	static {
		int numStates = DFA413_transitionS.length;
		DFA413_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA413_transition[i] = DFA.unpackEncodedString(DFA413_transitionS[i]);
		}
	}

	protected class DFA413 extends DFA {

		public DFA413(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 413;
			this.eot = DFA413_eot;
			this.eof = DFA413_eof;
			this.min = DFA413_min;
			this.max = DFA413_max;
			this.accept = DFA413_accept;
			this.special = DFA413_special;
			this.transition = DFA413_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1245:34: ( ( ws )? ( COMMA | key_and ) ( ws )? less_condition )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA442_eotS =
		"\4\uffff";
	static final String DFA442_eofS =
		"\4\uffff";
	static final String DFA442_minS =
		"\1\24\1\6\2\uffff";
	static final String DFA442_maxS =
		"\2\u0098\2\uffff";
	static final String DFA442_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA442_specialS =
		"\4\uffff}>";
	static final String[] DFA442_transitionS = {
			"\1\3\1\1\74\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff"+
			"\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\3\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff"+
			"\5\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff\5\2\6\uffff"+
			"\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA442_eot = DFA.unpackEncodedString(DFA442_eotS);
	static final short[] DFA442_eof = DFA.unpackEncodedString(DFA442_eofS);
	static final char[] DFA442_min = DFA.unpackEncodedStringToUnsignedChars(DFA442_minS);
	static final char[] DFA442_max = DFA.unpackEncodedStringToUnsignedChars(DFA442_maxS);
	static final short[] DFA442_accept = DFA.unpackEncodedString(DFA442_acceptS);
	static final short[] DFA442_special = DFA.unpackEncodedString(DFA442_specialS);
	static final short[][] DFA442_transition;

	static {
		int numStates = DFA442_transitionS.length;
		DFA442_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA442_transition[i] = DFA.unpackEncodedString(DFA442_transitionS[i]);
		}
	}

	protected class DFA442 extends DFA {

		public DFA442(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 442;
			this.eot = DFA442_eot;
			this.eof = DFA442_eof;
			this.min = DFA442_min;
			this.max = DFA442_max;
			this.accept = DFA442_accept;
			this.special = DFA442_special;
			this.transition = DFA442_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1321:43: ( ( ws )? COMMA ( ws )? simpleSelectorSequence )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA443_eotS =
		"\4\uffff";
	static final String DFA443_eofS =
		"\4\uffff";
	static final String DFA443_minS =
		"\1\25\1\6\2\uffff";
	static final String DFA443_maxS =
		"\2\u0098\2\uffff";
	static final String DFA443_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA443_specialS =
		"\4\uffff}>";
	static final String[] DFA443_transitionS = {
			"\1\1\74\uffff\1\1\17\uffff\1\2\6\uffff\1\2\30\uffff\1\2\25\uffff\1\1",
			"\2\2\2\uffff\5\2\3\uffff\2\2\1\uffff\1\1\1\uffff\1\2\5\uffff\3\2\7\uffff"+
			"\1\2\2\uffff\2\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\6\uffff\4\2\2\uffff"+
			"\1\2\6\uffff\3\2\5\uffff\1\2\1\1\10\uffff\1\2\2\uffff\2\2\2\uffff\1\2"+
			"\3\uffff\4\2\1\uffff\3\2\1\uffff\2\2\1\uffff\4\2\1\uffff\1\2\1\uffff"+
			"\3\2\1\3\1\2\1\uffff\4\2\1\uffff\1\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\5\2\6\uffff\1\2\1\uffff\1\2\1\1",
			"",
			""
	};

	static final short[] DFA443_eot = DFA.unpackEncodedString(DFA443_eotS);
	static final short[] DFA443_eof = DFA.unpackEncodedString(DFA443_eofS);
	static final char[] DFA443_min = DFA.unpackEncodedStringToUnsignedChars(DFA443_minS);
	static final char[] DFA443_max = DFA.unpackEncodedStringToUnsignedChars(DFA443_maxS);
	static final short[] DFA443_accept = DFA.unpackEncodedString(DFA443_acceptS);
	static final short[] DFA443_special = DFA.unpackEncodedString(DFA443_specialS);
	static final short[][] DFA443_transition;

	static {
		int numStates = DFA443_transitionS.length;
		DFA443_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA443_transition[i] = DFA.unpackEncodedString(DFA443_transitionS[i]);
		}
	}

	protected class DFA443 extends DFA {

		public DFA443(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 443;
			this.eot = DFA443_eot;
			this.eof = DFA443_eof;
			this.min = DFA443_min;
			this.max = DFA443_max;
			this.accept = DFA443_accept;
			this.special = DFA443_special;
			this.transition = DFA443_transition;
		}
		@Override
		public String getDescription() {
			return "1321:83: ( ws SASS_OPTIONAL )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA449_eotS =
		"\10\uffff";
	static final String DFA449_eofS =
		"\2\4\6\uffff";
	static final String DFA449_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA449_maxS =
		"\3\u0098\2\uffff\3\u0098";
	static final String DFA449_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA449_specialS =
		"\10\uffff}>";
	static final String[] DFA449_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\3\4\1\uffff\1\4"+
			"\1\uffff\3\4\1\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\5\1\3\4\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\35\uffff\1\3\7\uffff\1\3\26\uffff\1\6\105\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\35\uffff\1\3\7\uffff\1\3\26\uffff\1\7\105\uffff\1\7",
			"\1\4\1\uffff\1\6\35\uffff\1\3\7\uffff\1\3\26\uffff\1\6\105\uffff\1\6",
			"\1\4\1\uffff\1\7\35\uffff\1\3\7\uffff\1\3\26\uffff\1\7\105\uffff\1\7"
	};

	static final short[] DFA449_eot = DFA.unpackEncodedString(DFA449_eotS);
	static final short[] DFA449_eof = DFA.unpackEncodedString(DFA449_eofS);
	static final char[] DFA449_min = DFA.unpackEncodedStringToUnsignedChars(DFA449_minS);
	static final char[] DFA449_max = DFA.unpackEncodedStringToUnsignedChars(DFA449_maxS);
	static final short[] DFA449_accept = DFA.unpackEncodedString(DFA449_acceptS);
	static final short[] DFA449_special = DFA.unpackEncodedString(DFA449_specialS);
	static final short[][] DFA449_transition;

	static {
		int numStates = DFA449_transitionS.length;
		DFA449_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA449_transition[i] = DFA.unpackEncodedString(DFA449_transitionS[i]);
		}
	}

	protected class DFA449 extends DFA {

		public DFA449(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 449;
			this.eot = DFA449_eot;
			this.eof = DFA449_eof;
			this.min = DFA449_min;
			this.max = DFA449_max;
			this.accept = DFA449_accept;
			this.special = DFA449_special;
			this.transition = DFA449_transition;
		}
		@Override
		public String getDescription() {
			return "1346:64: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA457_eotS =
		"\5\uffff";
	static final String DFA457_eofS =
		"\5\uffff";
	static final String DFA457_minS =
		"\1\160\1\25\1\uffff\1\25\1\uffff";
	static final String DFA457_maxS =
		"\1\161\1\u0098\1\uffff\1\u0098\1\uffff";
	static final String DFA457_acceptS =
		"\2\uffff\1\2\1\uffff\1\1";
	static final String DFA457_specialS =
		"\5\uffff}>";
	static final String[] DFA457_transitionS = {
			"\1\1\1\2",
			"\1\3\35\uffff\1\2\7\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\3\35\uffff\1\2\7\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			""
	};

	static final short[] DFA457_eot = DFA.unpackEncodedString(DFA457_eotS);
	static final short[] DFA457_eof = DFA.unpackEncodedString(DFA457_eofS);
	static final char[] DFA457_min = DFA.unpackEncodedStringToUnsignedChars(DFA457_minS);
	static final char[] DFA457_max = DFA.unpackEncodedStringToUnsignedChars(DFA457_maxS);
	static final short[] DFA457_accept = DFA.unpackEncodedString(DFA457_acceptS);
	static final short[] DFA457_special = DFA.unpackEncodedString(DFA457_specialS);
	static final short[][] DFA457_transition;

	static {
		int numStates = DFA457_transitionS.length;
		DFA457_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA457_transition[i] = DFA.unpackEncodedString(DFA457_transitionS[i]);
		}
	}

	protected class DFA457 extends DFA {

		public DFA457(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 457;
			this.eot = DFA457_eot;
			this.eof = DFA457_eof;
			this.min = DFA457_min;
			this.max = DFA457_max;
			this.accept = DFA457_accept;
			this.special = DFA457_special;
			this.transition = DFA457_transition;
		}
		@Override
		public String getDescription() {
			return "1349:1: sass_else : ( SASS_ELSE ( ws )? sass_control_block | ( ( SASS_ELSE ( ws )? {...}? IDENT ) | SASS_ELSEIF ) ( ws )? sass_control_expression ( ws )? sass_control_block ( ( ws )? sass_else )? );";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA456_eotS =
		"\10\uffff";
	static final String DFA456_eofS =
		"\2\4\6\uffff";
	static final String DFA456_minS =
		"\2\6\1\23\2\uffff\3\23";
	static final String DFA456_maxS =
		"\3\u0098\2\uffff\3\u0098";
	static final String DFA456_acceptS =
		"\3\uffff\1\1\1\2\3\uffff";
	static final String DFA456_specialS =
		"\10\uffff}>";
	static final String[] DFA456_transitionS = {
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\2\1\3\1\uffff\3\4\1\uffff\1\4"+
			"\1\uffff\3\4\1\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\1\4\1\uffff\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\2\4\2\uffff\5\4\3\uffff\2\4\1\uffff\1\1\1\uffff\1\4\5\uffff\3\4\7\uffff"+
			"\1\4\2\uffff\2\4\2\uffff\2\4\3\uffff\1\4\1\uffff\1\4\6\uffff\4\4\2\uffff"+
			"\1\4\6\uffff\3\4\5\uffff\1\4\1\1\10\uffff\1\4\2\uffff\2\4\2\uffff\1\4"+
			"\3\uffff\4\4\1\uffff\3\4\1\uffff\1\4\1\5\1\3\4\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\1\4\1\uffff\4\4\1\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff"+
			"\5\4\6\uffff\1\4\1\uffff\1\4\1\1",
			"\1\4\1\uffff\1\6\35\uffff\1\3\7\uffff\1\3\26\uffff\1\6\105\uffff\1\6",
			"",
			"",
			"\1\4\1\uffff\1\7\35\uffff\1\3\7\uffff\1\3\26\uffff\1\7\105\uffff\1\7",
			"\1\4\1\uffff\1\6\35\uffff\1\3\7\uffff\1\3\26\uffff\1\6\105\uffff\1\6",
			"\1\4\1\uffff\1\7\35\uffff\1\3\7\uffff\1\3\26\uffff\1\7\105\uffff\1\7"
	};

	static final short[] DFA456_eot = DFA.unpackEncodedString(DFA456_eotS);
	static final short[] DFA456_eof = DFA.unpackEncodedString(DFA456_eofS);
	static final char[] DFA456_min = DFA.unpackEncodedStringToUnsignedChars(DFA456_minS);
	static final char[] DFA456_max = DFA.unpackEncodedStringToUnsignedChars(DFA456_maxS);
	static final short[] DFA456_accept = DFA.unpackEncodedString(DFA456_acceptS);
	static final short[] DFA456_special = DFA.unpackEncodedString(DFA456_specialS);
	static final short[][] DFA456_transition;

	static {
		int numStates = DFA456_transitionS.length;
		DFA456_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA456_transition[i] = DFA.unpackEncodedString(DFA456_transitionS[i]);
		}
	}

	protected class DFA456 extends DFA {

		public DFA456(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 456;
			this.eot = DFA456_eot;
			this.eof = DFA456_eof;
			this.min = DFA456_min;
			this.max = DFA456_max;
			this.accept = DFA456_accept;
			this.special = DFA456_special;
			this.transition = DFA456_transition;
		}
		@Override
		public String getDescription() {
			return "1353:128: ( ( ws )? sass_else )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA460_eotS =
		"\4\uffff";
	static final String DFA460_eofS =
		"\4\uffff";
	static final String DFA460_minS =
		"\2\5\2\uffff";
	static final String DFA460_maxS =
		"\2\u0098\2\uffff";
	static final String DFA460_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA460_specialS =
		"\4\uffff}>";
	static final String[] DFA460_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\5\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\1"+
			"\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\3\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\3\3\5\uffff\6\3\1\uffff\2\3\3\uffff\1\3\1\uffff\3\3\5\uffff\1\3\1\1"+
			"\3\uffff\2\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\3\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"",
			""
	};

	static final short[] DFA460_eot = DFA.unpackEncodedString(DFA460_eotS);
	static final short[] DFA460_eof = DFA.unpackEncodedString(DFA460_eofS);
	static final char[] DFA460_min = DFA.unpackEncodedStringToUnsignedChars(DFA460_minS);
	static final char[] DFA460_max = DFA.unpackEncodedStringToUnsignedChars(DFA460_maxS);
	static final short[] DFA460_accept = DFA.unpackEncodedString(DFA460_acceptS);
	static final short[] DFA460_special = DFA.unpackEncodedString(DFA460_specialS);
	static final short[][] DFA460_transition;

	static {
		int numStates = DFA460_transitionS.length;
		DFA460_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA460_transition[i] = DFA.unpackEncodedString(DFA460_transitionS[i]);
		}
	}

	protected class DFA460 extends DFA {

		public DFA460(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 460;
			this.eot = DFA460_eot;
			this.eof = DFA460_eof;
			this.min = DFA460_min;
			this.max = DFA460_max;
			this.accept = DFA460_accept;
			this.special = DFA460_special;
			this.transition = DFA460_transition;
		}
		@Override
		public String getDescription() {
			return "1368:102: ( ( ws )? COMMA )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA465_eotS =
		"\4\uffff";
	static final String DFA465_eofS =
		"\4\uffff";
	static final String DFA465_minS =
		"\2\24\2\uffff";
	static final String DFA465_maxS =
		"\2\u0098\2\uffff";
	static final String DFA465_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA465_specialS =
		"\1\1\1\0\2\uffff}>";
	static final String[] DFA465_transitionS = {
			"\1\2\1\1\74\uffff\1\1\105\uffff\1\1",
			"\1\2\1\1\35\uffff\1\3\36\uffff\1\1\105\uffff\1\1",
			"",
			""
	};

	static final short[] DFA465_eot = DFA.unpackEncodedString(DFA465_eotS);
	static final short[] DFA465_eof = DFA.unpackEncodedString(DFA465_eofS);
	static final char[] DFA465_min = DFA.unpackEncodedStringToUnsignedChars(DFA465_minS);
	static final char[] DFA465_max = DFA.unpackEncodedStringToUnsignedChars(DFA465_maxS);
	static final short[] DFA465_accept = DFA.unpackEncodedString(DFA465_acceptS);
	static final short[] DFA465_special = DFA.unpackEncodedString(DFA465_specialS);
	static final short[][] DFA465_transition;

	static {
		int numStates = DFA465_transitionS.length;
		DFA465_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA465_transition[i] = DFA.unpackEncodedString(DFA465_transitionS[i]);
		}
	}

	protected class DFA465 extends DFA {

		public DFA465(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 465;
			this.eot = DFA465_eot;
			this.eof = DFA465_eof;
			this.min = DFA465_min;
			this.max = DFA465_max;
			this.accept = DFA465_accept;
			this.special = DFA465_special;
			this.transition = DFA465_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 1373:17: ( ( ( ws )? COMMA )=> ( ws )? COMMA ( ws )? cp_variable )*";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA465_1 = input.LA(1);
						 
						int index465_1 = input.index();
						input.rewind();
						s = -1;
						if ( (LA465_1==IDENT) ) {s = 3;}
						else if ( (LA465_1==COMMENT||LA465_1==NL||LA465_1==WS) ) {s = 1;}
						else if ( (LA465_1==COMMA) && (synpred52_Css3())) {s = 2;}
						 
						input.seek(index465_1);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA465_0 = input.LA(1);
						 
						int index465_0 = input.index();
						input.rewind();
						s = -1;
						if ( (LA465_0==COMMENT||LA465_0==NL||LA465_0==WS) ) {s = 1;}
						else if ( (LA465_0==COMMA) && (synpred52_Css3())) {s = 2;}
						 
						input.seek(index465_0);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 465, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA485_eotS =
		"\4\uffff";
	static final String DFA485_eofS =
		"\4\uffff";
	static final String DFA485_minS =
		"\2\25\2\uffff";
	static final String DFA485_maxS =
		"\2\u0098\2\uffff";
	static final String DFA485_acceptS =
		"\2\uffff\1\1\1\2";
	static final String DFA485_specialS =
		"\4\uffff}>";
	static final String[] DFA485_transitionS = {
			"\1\1\36\uffff\1\2\35\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"\1\1\36\uffff\1\2\35\uffff\1\1\57\uffff\1\3\25\uffff\1\1",
			"",
			""
	};

	static final short[] DFA485_eot = DFA.unpackEncodedString(DFA485_eotS);
	static final short[] DFA485_eof = DFA.unpackEncodedString(DFA485_eofS);
	static final char[] DFA485_min = DFA.unpackEncodedStringToUnsignedChars(DFA485_minS);
	static final char[] DFA485_max = DFA.unpackEncodedStringToUnsignedChars(DFA485_maxS);
	static final short[] DFA485_accept = DFA.unpackEncodedString(DFA485_acceptS);
	static final short[] DFA485_special = DFA.unpackEncodedString(DFA485_specialS);
	static final short[][] DFA485_transition;

	static {
		int numStates = DFA485_transitionS.length;
		DFA485_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA485_transition[i] = DFA.unpackEncodedString(DFA485_transitionS[i]);
		}
	}

	protected class DFA485 extends DFA {

		public DFA485(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 485;
			this.eot = DFA485_eot;
			this.eof = DFA485_eof;
			this.min = DFA485_min;
			this.max = DFA485_max;
			this.accept = DFA485_accept;
			this.special = DFA485_special;
			this.transition = DFA485_transition;
		}
		@Override
		public String getDescription() {
			return "412:22: ( ( ws )? IMPORTANT_SYM )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA492_eotS =
		"\6\uffff";
	static final String DFA492_eofS =
		"\6\uffff";
	static final String DFA492_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA492_maxS =
		"\1\u0088\1\u0098\1\uffff\1\u0098\2\uffff";
	static final String DFA492_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA492_specialS =
		"\6\uffff}>";
	static final String[] DFA492_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\10"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\45\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\3\4\12\uffff\2\4\2\uffff\2\4\3"+
			"\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff\1"+
			"\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA492_eot = DFA.unpackEncodedString(DFA492_eotS);
	static final short[] DFA492_eof = DFA.unpackEncodedString(DFA492_eofS);
	static final char[] DFA492_min = DFA.unpackEncodedStringToUnsignedChars(DFA492_minS);
	static final char[] DFA492_max = DFA.unpackEncodedStringToUnsignedChars(DFA492_maxS);
	static final short[] DFA492_accept = DFA.unpackEncodedString(DFA492_acceptS);
	static final short[] DFA492_special = DFA.unpackEncodedString(DFA492_specialS);
	static final short[][] DFA492_transition;

	static {
		int numStates = DFA492_transitionS.length;
		DFA492_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA492_transition[i] = DFA.unpackEncodedString(DFA492_transitionS[i]);
		}
	}

	protected class DFA492 extends DFA {

		public DFA492(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 492;
			this.eot = DFA492_eot;
			this.eof = DFA492_eof;
			this.min = DFA492_min;
			this.max = DFA492_max;
			this.accept = DFA492_accept;
			this.special = DFA492_special;
			this.transition = DFA492_transition;
		}
		@Override
		public String getDescription() {
			return "414:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA487_eotS =
		"\4\uffff";
	static final String DFA487_eofS =
		"\4\uffff";
	static final String DFA487_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA487_maxS =
		"\2\u0098\2\uffff";
	static final String DFA487_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA487_specialS =
		"\4\uffff}>";
	static final String[] DFA487_transitionS = {
			"\1\1\45\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\3"+
			"\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA487_eot = DFA.unpackEncodedString(DFA487_eotS);
	static final short[] DFA487_eof = DFA.unpackEncodedString(DFA487_eofS);
	static final char[] DFA487_min = DFA.unpackEncodedStringToUnsignedChars(DFA487_minS);
	static final char[] DFA487_max = DFA.unpackEncodedStringToUnsignedChars(DFA487_maxS);
	static final short[] DFA487_accept = DFA.unpackEncodedString(DFA487_acceptS);
	static final short[] DFA487_special = DFA.unpackEncodedString(DFA487_specialS);
	static final short[][] DFA487_transition;

	static {
		int numStates = DFA487_transitionS.length;
		DFA487_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA487_transition[i] = DFA.unpackEncodedString(DFA487_transitionS[i]);
		}
	}

	protected class DFA487 extends DFA {

		public DFA487(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 487;
			this.eot = DFA487_eot;
			this.eof = DFA487_eof;
			this.min = DFA487_min;
			this.max = DFA487_max;
			this.accept = DFA487_accept;
			this.special = DFA487_special;
			this.transition = DFA487_transition;
		}
		@Override
		public String getDescription() {
			return "414:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA511_eotS =
		"\6\uffff";
	static final String DFA511_eofS =
		"\6\uffff";
	static final String DFA511_minS =
		"\1\7\1\25\1\uffff\1\7\2\uffff";
	static final String DFA511_maxS =
		"\1\u0088\1\u0098\1\uffff\1\u0098\2\uffff";
	static final String DFA511_acceptS =
		"\2\uffff\1\3\1\uffff\1\1\1\2";
	static final String DFA511_specialS =
		"\6\uffff}>";
	static final String[] DFA511_transitionS = {
			"\1\2\13\uffff\1\2\11\uffff\3\2\12\uffff\2\2\2\uffff\2\2\3\uffff\1\2\10"+
			"\uffff\1\2\5\uffff\1\2\7\uffff\1\2\23\uffff\2\2\13\uffff\1\1\10\uffff"+
			"\1\2\17\uffff\1\2\3\uffff\1\2",
			"\1\3\45\uffff\1\4\26\uffff\1\3\105\uffff\1\3",
			"",
			"\1\4\13\uffff\1\4\1\uffff\1\3\7\uffff\3\4\12\uffff\2\4\2\uffff\2\4\3"+
			"\uffff\1\4\7\uffff\2\4\5\uffff\1\4\4\uffff\1\5\2\uffff\1\4\7\uffff\1"+
			"\3\13\uffff\2\4\24\uffff\1\4\17\uffff\1\4\3\uffff\1\4\17\uffff\1\3",
			"",
			""
	};

	static final short[] DFA511_eot = DFA.unpackEncodedString(DFA511_eotS);
	static final short[] DFA511_eof = DFA.unpackEncodedString(DFA511_eofS);
	static final char[] DFA511_min = DFA.unpackEncodedStringToUnsignedChars(DFA511_minS);
	static final char[] DFA511_max = DFA.unpackEncodedStringToUnsignedChars(DFA511_maxS);
	static final short[] DFA511_accept = DFA.unpackEncodedString(DFA511_acceptS);
	static final short[] DFA511_special = DFA.unpackEncodedString(DFA511_specialS);
	static final short[][] DFA511_transition;

	static {
		int numStates = DFA511_transitionS.length;
		DFA511_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA511_transition[i] = DFA.unpackEncodedString(DFA511_transitionS[i]);
		}
	}

	protected class DFA511 extends DFA {

		public DFA511(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 511;
			this.eot = DFA511_eot;
			this.eof = DFA511_eof;
			this.min = DFA511_min;
			this.max = DFA511_max;
			this.accept = DFA511_accept;
			this.special = DFA511_special;
			this.transition = DFA511_transition;
		}
		@Override
		public String getDescription() {
			return "736:8: ( ( SASS_AT_ROOT ( ws selectorsGroup )? ) | ( SASS_AT_ROOT ws LPAREN ( ws )? IDENT ( ws )? COLON ( ws )? IDENT ( ws )? RPAREN ) | selectorsGroup )";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA506_eotS =
		"\4\uffff";
	static final String DFA506_eofS =
		"\4\uffff";
	static final String DFA506_minS =
		"\1\25\1\7\2\uffff";
	static final String DFA506_maxS =
		"\2\u0098\2\uffff";
	static final String DFA506_acceptS =
		"\2\uffff\1\2\1\1";
	static final String DFA506_specialS =
		"\4\uffff}>";
	static final String[] DFA506_transitionS = {
			"\1\1\45\uffff\1\2\26\uffff\1\1\105\uffff\1\1",
			"\1\3\13\uffff\1\3\1\uffff\1\1\7\uffff\3\3\12\uffff\2\3\2\uffff\2\3\3"+
			"\uffff\1\3\7\uffff\1\2\1\3\5\uffff\1\3\7\uffff\1\3\7\uffff\1\1\13\uffff"+
			"\2\3\24\uffff\1\3\17\uffff\1\3\3\uffff\1\3\17\uffff\1\1",
			"",
			""
	};

	static final short[] DFA506_eot = DFA.unpackEncodedString(DFA506_eotS);
	static final short[] DFA506_eof = DFA.unpackEncodedString(DFA506_eofS);
	static final char[] DFA506_min = DFA.unpackEncodedStringToUnsignedChars(DFA506_minS);
	static final char[] DFA506_max = DFA.unpackEncodedStringToUnsignedChars(DFA506_maxS);
	static final short[] DFA506_accept = DFA.unpackEncodedString(DFA506_acceptS);
	static final short[] DFA506_special = DFA.unpackEncodedString(DFA506_specialS);
	static final short[][] DFA506_transition;

	static {
		int numStates = DFA506_transitionS.length;
		DFA506_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA506_transition[i] = DFA.unpackEncodedString(DFA506_transitionS[i]);
		}
	}

	protected class DFA506 extends DFA {

		public DFA506(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 506;
			this.eot = DFA506_eot;
			this.eof = DFA506_eof;
			this.min = DFA506_min;
			this.max = DFA506_max;
			this.accept = DFA506_accept;
			this.special = DFA506_special;
			this.transition = DFA506_transition;
		}
		@Override
		public String getDescription() {
			return "736:23: ( ws selectorsGroup )?";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA520_eotS =
		"\5\uffff";
	static final String DFA520_eofS =
		"\5\uffff";
	static final String DFA520_minS =
		"\2\5\3\uffff";
	static final String DFA520_maxS =
		"\2\u0098\3\uffff";
	static final String DFA520_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA520_specialS =
		"\5\uffff}>";
	static final String[] DFA520_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\2\1\1\1\uffff\1\3\6\uffff\1\3"+
			"\2\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff"+
			"\1\3\1\uffff\1\3\6\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1"+
			"\4\uffff\1\3\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff"+
			"\2\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff"+
			"\3\3\1\uffff\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff"+
			"\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\1\uffff\1\2\1\1\1\uffff\1\4\6\uffff\1\4"+
			"\2\uffff\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff"+
			"\1\4\1\uffff\1\4\6\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1"+
			"\4\uffff\1\4\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff"+
			"\2\4\2\uffff\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff"+
			"\3\4\1\uffff\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff"+
			"\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA520_eot = DFA.unpackEncodedString(DFA520_eotS);
	static final short[] DFA520_eof = DFA.unpackEncodedString(DFA520_eofS);
	static final char[] DFA520_min = DFA.unpackEncodedStringToUnsignedChars(DFA520_minS);
	static final char[] DFA520_max = DFA.unpackEncodedStringToUnsignedChars(DFA520_maxS);
	static final short[] DFA520_accept = DFA.unpackEncodedString(DFA520_acceptS);
	static final short[] DFA520_special = DFA.unpackEncodedString(DFA520_specialS);
	static final short[][] DFA520_transition;

	static {
		int numStates = DFA520_transitionS.length;
		DFA520_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA520_transition[i] = DFA.unpackEncodedString(DFA520_transitionS[i]);
		}
	}

	protected class DFA520 extends DFA {

		public DFA520(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 520;
			this.eot = DFA520_eot;
			this.eof = DFA520_eof;
			this.min = DFA520_min;
			this.max = DFA520_max;
			this.accept = DFA520_accept;
			this.special = DFA520_special;
			this.transition = DFA520_transition;
		}
		@Override
		public String getDescription() {
			return "973:15: ( ws | ( ( ws )? operator ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	static final String DFA525_eotS =
		"\5\uffff";
	static final String DFA525_eofS =
		"\5\uffff";
	static final String DFA525_minS =
		"\2\5\3\uffff";
	static final String DFA525_maxS =
		"\2\u0098\3\uffff";
	static final String DFA525_acceptS =
		"\2\uffff\1\2\1\3\1\1";
	static final String DFA525_specialS =
		"\5\uffff}>";
	static final String[] DFA525_transitionS = {
			"\3\3\2\uffff\5\3\3\uffff\1\3\2\uffff\1\1\1\uffff\1\3\6\uffff\1\3\2\uffff"+
			"\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\1\3\3\uffff\2\3\3\uffff\1\3\1\uffff"+
			"\1\3\6\uffff\5\3\1\uffff\2\3\5\uffff\3\3\5\uffff\1\3\1\1\4\uffff\1\3"+
			"\3\uffff\3\3\1\uffff\1\3\4\uffff\5\3\2\uffff\3\3\1\uffff\2\3\2\uffff"+
			"\1\3\1\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff\3\3\1\uffff"+
			"\1\2\1\uffff\1\3\2\uffff\7\3\2\uffff\2\3\2\uffff\1\3\1\uffff\1\3\1\1",
			"\3\4\2\uffff\5\4\3\uffff\1\4\2\uffff\1\1\1\uffff\1\4\6\uffff\1\4\2\uffff"+
			"\1\4\3\uffff\1\4\1\uffff\2\4\1\uffff\1\4\3\uffff\2\4\3\uffff\1\4\1\uffff"+
			"\1\4\6\uffff\5\4\1\uffff\2\4\5\uffff\3\4\5\uffff\1\4\1\1\4\uffff\1\4"+
			"\3\uffff\3\4\1\uffff\1\4\4\uffff\5\4\2\uffff\3\4\1\uffff\2\4\2\uffff"+
			"\1\4\1\uffff\1\4\1\uffff\1\4\1\uffff\3\4\1\uffff\1\4\1\uffff\3\4\1\uffff"+
			"\1\2\1\uffff\1\4\2\uffff\7\4\2\uffff\2\4\2\uffff\1\4\1\uffff\1\4\1\1",
			"",
			"",
			""
	};

	static final short[] DFA525_eot = DFA.unpackEncodedString(DFA525_eotS);
	static final short[] DFA525_eof = DFA.unpackEncodedString(DFA525_eofS);
	static final char[] DFA525_min = DFA.unpackEncodedStringToUnsignedChars(DFA525_minS);
	static final char[] DFA525_max = DFA.unpackEncodedStringToUnsignedChars(DFA525_maxS);
	static final short[] DFA525_accept = DFA.unpackEncodedString(DFA525_acceptS);
	static final short[] DFA525_special = DFA.unpackEncodedString(DFA525_specialS);
	static final short[][] DFA525_transition;

	static {
		int numStates = DFA525_transitionS.length;
		DFA525_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA525_transition[i] = DFA.unpackEncodedString(DFA525_transitionS[i]);
		}
	}

	protected class DFA525 extends DFA {

		public DFA525(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 525;
			this.eot = DFA525_eot;
			this.eof = DFA525_eof;
			this.min = DFA525_min;
			this.max = DFA525_max;
			this.accept = DFA525_accept;
			this.special = DFA525_special;
			this.transition = DFA525_transition;
		}
		@Override
		public String getDescription() {
			return "1059:21: ( ws | ( ( ws )? SOLIDUS ( ws )? ) |)";
		}
		public void error(NoViableAltException nvae) {
			dbg.recognitionException(nvae);
		}
	}

	public static final BitSet FOLLOW_ws_in_styleSheet99 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xEEF9B9C0C8020E04L,0x0000000000807D57L});
	public static final BitSet FOLLOW_charSet_in_styleSheet109 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xEEF9B9C0C8060E04L,0x0000000001807D57L});
	public static final BitSet FOLLOW_ws_in_styleSheet111 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xEEF9B9C0C8020E04L,0x0000000000807D57L});
	public static final BitSet FOLLOW_imports_in_styleSheet125 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEB9B9C0C8020E04L,0x0000000000807D57L});
	public static final BitSet FOLLOW_namespaces_in_styleSheet136 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEB9B9C0C8020E04L,0x0000000000807D57L});
	public static final BitSet FOLLOW_body_in_styleSheet147 = new BitSet(new long[]{0x0000000000000000L});
	public static final BitSet FOLLOW_EOF_in_styleSheet155 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_in_namespaces172 = new BitSet(new long[]{0x0000000000200002L,0x0000000000060000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_namespaces174 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
	public static final BitSet FOLLOW_NAMESPACE_SYM_in_namespace190 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001040020L});
	public static final BitSet FOLLOW_ws_in_namespace192 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespace196 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001040020L});
	public static final BitSet FOLLOW_ws_in_namespace198 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_resourceIdentifier_in_namespace203 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_namespace205 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_namespace208 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_namespacePrefixName221 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARSET_SYM_in_charSet255 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000020L});
	public static final BitSet FOLLOW_ws_in_charSet257 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_charSetValue_in_charSet260 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_charSet262 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_charSet265 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_charSetValue279 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_imports307 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_imports309 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_imports312 = new BitSet(new long[]{0x0020000000200002L,0x4040000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_imports314 = new BitSet(new long[]{0x0020000000000002L,0x4040000000000000L});
	public static final BitSet FOLLOW_sass_use_in_imports347 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_imports349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_imports352 = new BitSet(new long[]{0x0020000000200002L,0x4040000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_imports354 = new BitSet(new long[]{0x0020000000000002L,0x4040000000000000L});
	public static final BitSet FOLLOW_sass_forward_in_imports387 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_imports389 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_imports392 = new BitSet(new long[]{0x0020000000200002L,0x4040000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_imports394 = new BitSet(new long[]{0x0020000000000002L,0x4040000000000000L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem430 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001040020L});
	public static final BitSet FOLLOW_ws_in_importItem432 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem435 = new BitSet(new long[]{0xE028848000A47C42L,0xAEA9B9C008460A80L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_importItem445 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem448 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem481 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001040020L});
	public static final BitSet FOLLOW_ws_in_importItem483 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem486 = new BitSet(new long[]{0xE028848000B47C42L,0xAEA9B9C008460A80L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_importItem489 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_importItem492 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001040020L});
	public static final BitSet FOLLOW_ws_in_importItem494 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem497 = new BitSet(new long[]{0xE028848000B47C42L,0xAEA9B9C008460A80L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_importItem509 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem512 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_SYM_in_importItem536 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001040020L});
	public static final BitSet FOLLOW_ws_in_importItem538 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L,0x0000000000040020L});
	public static final BitSet FOLLOW_LPAREN_in_importItem542 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_less_import_types_in_importItem544 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_importItem546 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001040020L});
	public static final BitSet FOLLOW_ws_in_importItem548 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_resourceIdentifier_in_importItem553 = new BitSet(new long[]{0xE028848000A47C42L,0xAEA9B9C008460A80L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_importItem563 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQueryList_in_importItem566 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_USE_in_sass_use595 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use597 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_use599 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use602 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_sass_use_as_in_sass_use604 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use609 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_sass_use_with_in_sass_use611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as636 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_as638 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_as640 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_use_with663 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with665 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_sass_use_with668 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_sass_use_with670 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with673 = new BitSet(new long[]{0x0000000000300000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with677 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_use_with680 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_sass_use_with682 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_sass_use_with_declaration_in_sass_use_with685 = new BitSet(new long[]{0x0000000000300000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with690 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_use_with693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_use_with_declaration714 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration716 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_use_with_declaration719 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_use_with_declaration721 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_sass_use_with_declaration724 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FORWARD_in_sass_forward752 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward754 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040020L});
	public static final BitSet FOLLOW_resourceIdentifier_in_sass_forward756 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward760 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_sass_forward_hide_in_sass_forward764 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sass_forward_show_in_sass_forward769 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward777 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_sass_forward_as_in_sass_forward779 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward786 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_sass_forward_with_in_sass_forward788 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as813 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_as815 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_as817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_with840 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_sass_forward_with845 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with847 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with850 = new BitSet(new long[]{0x0000000000300000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with854 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_with857 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with859 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_sass_forward_with_declaration_in_sass_forward_with862 = new BitSet(new long[]{0x0000000000300000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with867 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_forward_with870 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_forward_with_declaration891 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration893 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_forward_with_declaration896 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_forward_with_declaration898 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_sass_forward_with_declaration901 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide924 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide926 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide928 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide931 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_hide934 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_hide936 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_hide939 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show964 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show966 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show968 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show971 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_forward_show974 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_forward_show976 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_forward_show979 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_MEDIA_SYM_in_media998 = new BitSet(new long[]{0xE028848000A47C40L,0xAEA9B9C008460A80L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_media1000 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQueryList_in_media1018 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_media1026 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_media1033 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEB9B9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_media1035 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEB9B9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToFollow_in_media1038 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEB9B9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_mediaBody_in_media1048 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_media1055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaBodyItem_in_mediaBody1089 = new BitSet(new long[]{0xF028CC80E0AC7CC2L,0xAEB9B9C0C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_mediaBody1099 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1102 = new BitSet(new long[]{0xF028CC80E0AC7CC2L,0xAEB9B9C0C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_mediaBody1106 = new BitSet(new long[]{0xF028CC80E08C7CC2L,0xAEB9B9C0C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1133 = new BitSet(new long[]{0xF028CC80E0AC7CC2L,0xAEB9B9C0C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_mediaBody1135 = new BitSet(new long[]{0xF028CC80E08C7CC2L,0xAEB9B9C0C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_sass_extend_in_mediaBody1154 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_mediaBody1157 = new BitSet(new long[]{0xF028CC80E08C7CC2L,0xAEB9B9C0C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_SEMI_in_mediaBody1162 = new BitSet(new long[]{0xF028CC80E08C7CC2L,0xAEB9B9C0C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_mediaBodyItem1236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1269 = new BitSet(new long[]{0x0010000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1272 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_mediaBodyItem1292 = new BitSet(new long[]{0x0010000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaBodyItem1295 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_mediaBodyItem1298 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1363 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_mediaBodyItem1375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_mediaBodyItem1385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_mediaBodyItem1395 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_mediaBodyItem1405 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_mediaBodyItem1415 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_mediaBodyItem1423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_mediaBodyItem1431 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_mediaBodyItem1439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_mediaBodyItem1447 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_mediaBodyItem1460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_mediaBodyItem1468 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1482 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1494 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_mediaQueryList1497 = new BitSet(new long[]{0xE028848000A47C40L,0xAEA9B9C008460A80L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_mediaQueryList1499 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQuery_in_mediaQueryList1502 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_mediaQueryOperator_in_mediaQuery1521 = new BitSet(new long[]{0x0008840000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1523 = new BitSet(new long[]{0x0008840000000000L});
	public static final BitSet FOLLOW_mediaType_in_mediaQuery1530 = new BitSet(new long[]{0x0008000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1541 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1544 = new BitSet(new long[]{0x0000800000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1546 = new BitSet(new long[]{0x0000800000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1549 = new BitSet(new long[]{0x0008000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1560 = new BitSet(new long[]{0x0008000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1571 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_key_and_in_mediaQuery1574 = new BitSet(new long[]{0x0000800000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaQuery1576 = new BitSet(new long[]{0x0000800000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_mediaExpression_in_mediaQuery1579 = new BitSet(new long[]{0x0008000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_cp_variable_in_mediaQuery1592 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_only_in_mediaQueryOperator1604 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_mediaQueryOperator1608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaType1620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaType1624 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaType1630 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_mediaExpression1655 = new BitSet(new long[]{0xE028848000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1657 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaFeature_in_mediaExpression1660 = new BitSet(new long[]{0x0000000000280000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_mediaFeatureValue_in_mediaExpression1662 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_mediaExpression1665 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_mediaExpression1668 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaExpression1685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1706 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_mediaFeatureValue1709 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_mediaFeatureValue1711 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_mediaFeatureValue1730 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_mediaFeatureValue1750 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_mediaFeature1770 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_mediaFeature1774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_mediaFeature1782 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_mediaFeature1786 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bodyItem_in_body1820 = new BitSet(new long[]{0xF028CC80E0AC7CC2L,0xAEB9B9C0C8060E04L,0x0000000001807D57L});
	public static final BitSet FOLLOW_ws_in_body1830 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_body1833 = new BitSet(new long[]{0xF028CC80E0AC7CC2L,0xAEB9B9C0C8060E04L,0x0000000001807D57L});
	public static final BitSet FOLLOW_ws_in_body1837 = new BitSet(new long[]{0xF028CC80E08C7CC2L,0xAEB9B9C0C8020E04L,0x0000000000807D57L});
	public static final BitSet FOLLOW_SEMI_in_body1864 = new BitSet(new long[]{0xF028CC80E0AC7CC2L,0xAEB9B9C0C8060E04L,0x0000000001807D57L});
	public static final BitSet FOLLOW_ws_in_body1866 = new BitSet(new long[]{0xF028CC80E08C7CC2L,0xAEB9B9C0C8020E04L,0x0000000000807D57L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_bodyItem1946 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_bodyItem1998 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_bodyItem2007 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_bodyItem2029 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_bodyItem2046 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_bodyItem2058 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_bodyItem2081 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_bodyItem2095 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_bodyItem2109 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_declaration_in_bodyItem2123 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SUPPORTS_SYM_in_supportsAtRule2143 = new BitSet(new long[]{0x0000000000200000L,0x0000000000440080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400080L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsAtRule2148 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2150 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_supportsAtRule2153 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEB9B9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_supportsAtRule2155 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEB9B9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToFollow_in_supportsAtRule2158 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEB9B9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_mediaBody_in_supportsAtRule2160 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_supportsAtRule2163 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_supportsCondition2176 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsCondition2185 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsCondition2188 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_supportsWithOperator_in_supportsCondition2190 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2218 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2221 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_supportsConjunction_in_supportsWithOperator2223 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2237 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsWithOperator2240 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_supportsDisjunction_in_supportsWithOperator2242 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_key_and_in_supportsConjunction2270 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsConjunction2272 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsConjunction2274 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_supportsDisjunction2301 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsDisjunction2303 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_supportsInParens_in_supportsDisjunction2305 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_supportsInParens2325 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C0C8460E84L,0x0000000001A07D53L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2327 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C0C8420E84L,0x0000000000A07D53L});
	public static final BitSet FOLLOW_supportsCondition_in_supportsInParens2331 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_supportsFeature_in_supportsInParens2335 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_supportsInParens2338 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_supportsInParens2341 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsDecl_in_supportsFeature2354 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_in_supportsDecl2367 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_media_in_at_rule2385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_page_in_at_rule2393 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_counterStyle_in_at_rule2401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fontFace_in_at_rule2409 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_supportsAtRule_in_at_rule2417 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_vendorAtRule_in_at_rule2425 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_moz_document_in_vendorAtRule2438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframes_in_vendorAtRule2442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_at_rule_in_vendorAtRule2446 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_atRuleId2456 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_atRuleId2460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_atRuleId2468 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_atRuleId2472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_IDENT_in_generic_at_rule2488 = new BitSet(new long[]{0xE828808000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C23L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule2490 = new BitSet(new long[]{0xE828808000847C40L,0xAEA9B9C008020A00L,0x0000000000807C23L});
	public static final BitSet FOLLOW_atRuleId_in_generic_at_rule2495 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_generic_at_rule2497 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_generic_at_rule2511 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_syncTo_RBRACE_in_generic_at_rule2522 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_generic_at_rule2532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MOZ_DOCUMENT_SYM_in_moz_document2543 = new BitSet(new long[]{0x0000000000200000L,0x0000000000047000L,0x0000000001040000L});
	public static final BitSet FOLLOW_ws_in_moz_document2545 = new BitSet(new long[]{0x0000000000000000L,0x0000000000007000L,0x0000000000040000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document2550 = new BitSet(new long[]{0x0800000000300000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_moz_document2552 = new BitSet(new long[]{0x0800000000100000L});
	public static final BitSet FOLLOW_COMMA_in_moz_document2558 = new BitSet(new long[]{0x0000000000200000L,0x0000000000047000L,0x0000000001040000L});
	public static final BitSet FOLLOW_ws_in_moz_document2560 = new BitSet(new long[]{0x0000000000000000L,0x0000000000007000L,0x0000000000040000L});
	public static final BitSet FOLLOW_moz_document_function_in_moz_document2563 = new BitSet(new long[]{0x0800000000300000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_moz_document2565 = new BitSet(new long[]{0x0800000000100000L});
	public static final BitSet FOLLOW_LBRACE_in_moz_document2572 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEB9B9C4C8060E04L,0x0000000001807D57L});
	public static final BitSet FOLLOW_ws_in_moz_document2574 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEB9B9C4C8020E04L,0x0000000000807D57L});
	public static final BitSet FOLLOW_body_in_moz_document2579 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_moz_document2584 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WEBKIT_KEYFRAMES_SYM_in_webkitKeyframes2621 = new BitSet(new long[]{0xE028808000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C23L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes2623 = new BitSet(new long[]{0xE028808000847C40L,0xAEA9B9C008020A00L,0x0000000000807C23L});
	public static final BitSet FOLLOW_atRuleId_in_webkitKeyframes2626 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes2628 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframes2632 = new BitSet(new long[]{0x0008000000200000L,0x0000100410040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes2634 = new BitSet(new long[]{0x0008000000000000L,0x0000100410000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_webkitKeyframes2641 = new BitSet(new long[]{0x0008000000200000L,0x0000100410040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframes2643 = new BitSet(new long[]{0x0008000000000000L,0x0000100410000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframes2650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_webkitKeyframesBlock2662 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock2664 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_webkitKeyframesBlock2668 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframesBlock2671 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToFollow_in_webkitKeyframesBlock2674 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_webkitKeyframesBlock2678 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_webkitKeyframesBlock2682 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_webkitKeyframesBlock2699 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_webkitKeyframesBlock2701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors2718 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors2724 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors2728 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors2734 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_webkitKeyframeSelectors2737 = new BitSet(new long[]{0x0008000000200000L,0x0000000010040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_webkitKeyframeSelectors2739 = new BitSet(new long[]{0x0008000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors2746 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_IDENT_in_webkitKeyframeSelectors2752 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_PERCENTAGE_in_webkitKeyframeSelectors2756 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_PAGE_SYM_in_page2780 = new BitSet(new long[]{0x0808000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_page2782 = new BitSet(new long[]{0x0808000000080000L});
	public static final BitSet FOLLOW_IDENT_in_page2787 = new BitSet(new long[]{0x0800000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_page2789 = new BitSet(new long[]{0x0800000000080000L});
	public static final BitSet FOLLOW_pseudoPage_in_page2796 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_page2798 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_page2811 = new BitSet(new long[]{0xE028848000A47CC0L,0xAEA9B9C408060E00L,0x0000000001A07C17L});
	public static final BitSet FOLLOW_ws_in_page2853 = new BitSet(new long[]{0xE028848000847CC0L,0xAEA9B9C008020E00L,0x0000000000A07C17L});
	public static final BitSet FOLLOW_SEMI_in_page2860 = new BitSet(new long[]{0xE028848000A47CC0L,0xAEA9B9C008060E00L,0x0000000001A07C13L});
	public static final BitSet FOLLOW_ws_in_page2862 = new BitSet(new long[]{0xE028848000847CC0L,0xAEA9B9C008020E00L,0x0000000000A07C13L});
	public static final BitSet FOLLOW_SEMI_in_page2869 = new BitSet(new long[]{0xE028848000A47CC0L,0xAEA9B9C008060E00L,0x0000000001A07C13L});
	public static final BitSet FOLLOW_ws_in_page2871 = new BitSet(new long[]{0xE028848000847CC0L,0xAEA9B9C008020E00L,0x0000000000A07C13L});
	public static final BitSet FOLLOW_propertyDeclaration_in_page2878 = new BitSet(new long[]{0xE028848000A47CC0L,0xAEA9B9C408060E00L,0x0000000001A07C17L});
	public static final BitSet FOLLOW_margin_in_page2881 = new BitSet(new long[]{0xE028848000A47CC0L,0xAEA9B9C408060E00L,0x0000000001A07C17L});
	public static final BitSet FOLLOW_SEMI_in_page2899 = new BitSet(new long[]{0x0000000000200000L,0x0000000400040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_page2914 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_page2925 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COUNTER_STYLE_SYM_in_counterStyle2942 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2944 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_counterStyle2947 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_counterStyle2949 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_counterStyle2960 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_counterStyle2962 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_counterStyle2965 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_counterStyle2969 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_counterStyle2980 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FONT_FACE_SYM_in_fontFace2997 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_fontFace2999 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_fontFace3010 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_fontFace3012 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_fontFace3015 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_fontFace3019 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_fontFace3030 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_margin_sym_in_margin3044 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_margin3046 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_margin3049 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_margin3051 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToDeclarationsRule_in_margin3054 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_margin3056 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_margin3059 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_pseudoPage3268 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_pseudoPage3270 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_property3354 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_property3364 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_property3372 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_property3380 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_property3388 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_property3398 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_name_in_sass_map3425 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map3427 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_map3429 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_sass_map3432 = new BitSet(new long[]{0xE028848000B47CC0L,0xAEA9BBC008860E00L,0x0000000001A07C23L});
	public static final BitSet FOLLOW_ws_in_sass_map3434 = new BitSet(new long[]{0xE028848000947CC0L,0xAEA9BBC008820E00L,0x0000000000A07C23L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_map3437 = new BitSet(new long[]{0xE028848000947CC0L,0xAEA9BBC008820E00L,0x0000000000A07C23L});
	public static final BitSet FOLLOW_sass_map_pairs_in_sass_map3456 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_map3463 = new BitSet(new long[]{0x0000000000200002L,0x0100400000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_map3467 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_sass_map3470 = new BitSet(new long[]{0x0000000000200002L,0x0100400000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_map3476 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_sass_map3479 = new BitSet(new long[]{0x0000000000200002L,0x0100400000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_cp_variable_in_sass_map_name3503 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_pair_in_sass_map_pairs3537 = new BitSet(new long[]{0xE028848000B47CC2L,0xAEA9B9C008860E00L,0x0000000001A07C23L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs3547 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs3550 = new BitSet(new long[]{0xE028848000B47CC2L,0xAEA9B9C008860E00L,0x0000000001A07C23L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs3554 = new BitSet(new long[]{0xE028848000947CC2L,0xAEA9B9C008820E00L,0x0000000000A07C23L});
	public static final BitSet FOLLOW_COMMA_in_sass_map_pairs3581 = new BitSet(new long[]{0xE028848000B47CC2L,0xAEA9B9C008860E00L,0x0000000001A07C23L});
	public static final BitSet FOLLOW_ws_in_sass_map_pairs3583 = new BitSet(new long[]{0xE028848000947CC2L,0xAEA9B9C008820E00L,0x0000000000A07C23L});
	public static final BitSet FOLLOW_NUMBER_in_sass_map_pair3619 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair3622 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000020L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair3625 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_STRING_in_sass_map_pair3628 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000020L});
	public static final BitSet FOLLOW_function_in_sass_map_pair3638 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_property_in_sass_map_pair3641 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_sass_map_in_sass_map_pair3643 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair3646 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_map_pair3649 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair3651 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_sass_map_pair3654 = new BitSet(new long[]{0x0010000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_map_pair3657 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_prio_in_sass_map_pair3660 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule3702 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_rule3705 = new BitSet(new long[]{0x1008CC00E0080080L,0x00100000C0000404L,0x0000000000000110L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule3707 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_rule3728 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_rule3730 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_rule3732 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_rule3734 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule3739 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_rule3743 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_rule3746 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_rule3748 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_rule3751 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_rule3753 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_rule3756 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_rule3774 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_rule3786 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_rule3793 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_rule3795 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToFollow_in_rule3798 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_rule3808 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_rule3815 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations3849 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C0C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_declarations3851 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C0C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declaration_in_declarations3857 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_declarations3862 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_declarations3866 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C0C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_declarations3868 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C0C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_ws_in_declarations3874 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C0C8020E04L,0x0000000000A07D53L});
	public static final BitSet FOLLOW_declaration_in_declarations3877 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_declarations3883 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_declarations3887 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_declarations3889 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_ws_in_declarations3895 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_declarations3907 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_declarations3909 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_declaration3938 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_declaration3951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_declaration3963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rule_in_declaration4026 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration4038 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_declaration4077 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_declaration4089 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration4102 = new BitSet(new long[]{0x0010000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_declaration4105 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration4108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_declaration4125 = new BitSet(new long[]{0x0010000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_declaration4128 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_declaration4131 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_at_rule_in_declaration4147 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_control_in_declaration4157 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_in_declaration4167 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_debug_in_declaration4177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_content_in_declaration4187 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_function_return_in_declaration4197 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_error_in_declaration4207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_importItem_in_declaration4217 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_declaration4225 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup4259 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup4262 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup4265 = new BitSet(new long[]{0x1008CC00E0280080L,0x00100000C0040404L,0x0000000001000110L});
	public static final BitSet FOLLOW_ws_in_selectorsGroup4267 = new BitSet(new long[]{0x1008CC00E0080080L,0x00100000C0000404L,0x0000000000000110L});
	public static final BitSet FOLLOW_selector_in_selectorsGroup4270 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_COMMA_in_selectorsGroup4277 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_combinator_in_selector4298 = new BitSet(new long[]{0x1008C400E0280080L,0x0010000040040404L,0x0000000001000010L});
	public static final BitSet FOLLOW_ws_in_selector4300 = new BitSet(new long[]{0x1008C400E0080080L,0x0010000040000404L,0x0000000000000010L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector4305 = new BitSet(new long[]{0x0000080000200002L,0x0000000080040000L,0x0000000001000100L});
	public static final BitSet FOLLOW_ws_in_selector4311 = new BitSet(new long[]{0x0000080000000000L,0x0000000080000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_combinator_in_selector4314 = new BitSet(new long[]{0x1008C400E0280080L,0x0010000040040404L,0x0000000001000010L});
	public static final BitSet FOLLOW_ws_in_selector4316 = new BitSet(new long[]{0x1008C400E0080080L,0x0010000040000404L,0x0000000000000010L});
	public static final BitSet FOLLOW_ws_in_selector4320 = new BitSet(new long[]{0x1008C400E0080080L,0x0010000040000404L,0x0000000000000010L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_selector4323 = new BitSet(new long[]{0x0000080000200002L,0x0000000080040000L,0x0000000001000100L});
	public static final BitSet FOLLOW_combinator_in_selector4338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence4390 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence4396 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence4410 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence4425 = new BitSet(new long[]{0x1000C000E0080000L,0x0010000000000004L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence4428 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence4433 = new BitSet(new long[]{0x0008800000000080L,0x0000000000000400L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence4438 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_simpleSelectorSequence4444 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_typeSelector_in_simpleSelectorSequence4458 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence4470 = new BitSet(new long[]{0x1000C000E0080000L,0x0010000000000004L});
	public static final BitSet FOLLOW_elementSubsequent_in_simpleSelectorSequence4473 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_simpleSelectorSequence4480 = new BitSet(new long[]{0x0008800000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_simpleSelectorSequence4482 = new BitSet(new long[]{0x1000C000E0280002L,0x0010000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_esPred4507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_esPred4511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_esPred4515 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_esPred4519 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLON_in_esPred4523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DCOLON_in_esPred4527 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_esPred4531 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_esPred4537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefix_in_typeSelector4579 = new BitSet(new long[]{0x0008040000000000L,0x0000000000000004L,0x0000000000000010L});
	public static final BitSet FOLLOW_elementName_in_typeSelector4583 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespacePrefixName_in_namespacePrefix4598 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_STAR_in_namespacePrefix4602 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_PIPE_in_namespacePrefix4606 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_extend_only_selector_in_elementSubsequent4638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent4652 = new BitSet(new long[]{0x0008800000000002L,0x0000000000800000L});
	public static final BitSet FOLLOW_IDENT_in_elementSubsequent4655 = new BitSet(new long[]{0x0008800000000002L,0x0000000000800000L});
	public static final BitSet FOLLOW_NUMBER_in_elementSubsequent4659 = new BitSet(new long[]{0x0008800000000002L,0x0000000000800000L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_elementSubsequent4665 = new BitSet(new long[]{0x0008800000000002L,0x0000000000800000L});
	public static final BitSet FOLLOW_LESS_AND_in_elementSubsequent4681 = new BitSet(new long[]{0x0008000000000080L,0x0000000000000400L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_elementSubsequent4683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssId_in_elementSubsequent4692 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cssClass_in_elementSubsequent4701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_slAttribute_in_elementSubsequent4713 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_elementSubsequent4725 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_cssId4749 = new BitSet(new long[]{0x0008800000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssId4754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_cssId4776 = new BitSet(new long[]{0x0008000000000080L,0x0000000000010400L});
	public static final BitSet FOLLOW_NAME_in_cssId4792 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssId4812 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cssClass4864 = new BitSet(new long[]{0x0008840000000080L,0x0000000000400400L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_cssClass4892 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_cssClass4910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cssClass4926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cssClass4942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_cssClass4958 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_cssClass4982 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_slAttribute5038 = new BitSet(new long[]{0x0008000000200000L,0x0000000040040000L,0x0000000001000010L});
	public static final BitSet FOLLOW_namespacePrefix_in_slAttribute5045 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute5048 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_slAttributeName_in_slAttribute5059 = new BitSet(new long[]{0x0040000410600200L,0x0000000802040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute5061 = new BitSet(new long[]{0x0040000410400200L,0x0000000802000000L});
	public static final BitSet FOLLOW_set_in_slAttribute5095 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000020L});
	public static final BitSet FOLLOW_ws_in_slAttribute5275 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_slAttributeValue_in_slAttribute5294 = new BitSet(new long[]{0x0000000000200000L,0x0000000800040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_slAttribute5312 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_RBRACKET_in_slAttribute5337 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_slAttributeName5353 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_pseudo5425 = new BitSet(new long[]{0x0008840000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_set_in_pseudo5488 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_pseudo5545 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo5548 = new BitSet(new long[]{0xF028C5A240A47CE0L,0xAEA9BBF0B8860E0DL,0x0000000001A67F33L});
	public static final BitSet FOLLOW_ws_in_pseudo5550 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9BBF0B8820E0DL,0x0000000000A67F33L});
	public static final BitSet FOLLOW_expression_in_pseudo5556 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_pseudo5558 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_STAR_in_pseudo5564 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo5569 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_pseudo5632 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_pseudo5654 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_pseudo5656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo5659 = new BitSet(new long[]{0x1008CC00E0280080L,0x00100200C0040404L,0x0000000001000110L});
	public static final BitSet FOLLOW_ws_in_pseudo5661 = new BitSet(new long[]{0x1008CC00E0080080L,0x00100200C0000404L,0x0000000000000110L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo5666 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_pseudo5668 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo5673 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo5699 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_pseudo5701 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo5704 = new BitSet(new long[]{0x1008CC00E0280080L,0x00100200C0040404L,0x0000000001000110L});
	public static final BitSet FOLLOW_ws_in_pseudo5706 = new BitSet(new long[]{0x1008CC00E0080080L,0x00100200C0000404L,0x0000000000000110L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo5711 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_pseudo5713 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo5718 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_pseudo5745 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_pseudo5747 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_pseudo5750 = new BitSet(new long[]{0x1008CC00E0280080L,0x00100200C0040404L,0x0000000001000110L});
	public static final BitSet FOLLOW_ws_in_pseudo5752 = new BitSet(new long[]{0x1008CC00E0080080L,0x00100200C0000404L,0x0000000000000110L});
	public static final BitSet FOLLOW_selectorsGroup_in_pseudo5755 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_pseudo5758 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration5794 = new BitSet(new long[]{0xE028848000847CC0L,0xAEA9B9C008020E00L,0x0000000000A07C03L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration5797 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration5799 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration5802 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration5804 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_propertyValue_in_propertyDeclaration5807 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STAR_in_propertyDeclaration5816 = new BitSet(new long[]{0xE028848000847CC0L,0xAEA9B9C008020E00L,0x0000000000A07C03L});
	public static final BitSet FOLLOW_property_in_propertyDeclaration5819 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration5821 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_propertyDeclaration5824 = new BitSet(new long[]{0xF028C5A240A47CE0L,0xAEA9B9F0B8860E0DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration5826 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_propertyValue_in_propertyDeclaration5829 = new BitSet(new long[]{0x0010000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_propertyDeclaration5832 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_prio_in_propertyDeclaration5835 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_propertyValue5875 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyValue_in_cp_propertyValue5883 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_propertyValue5905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_expressionPredicate5974 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_syncTo_SEMI6075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_prio6120 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_expression6137 = new BitSet(new long[]{0xF028C5A240B47CE2L,0xAEA9B9F0B8860E0DL,0x0000000001A67F2BL});
	public static final BitSet FOLLOW_ws_in_expression6169 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_ws_in_expression6174 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_operator_in_expression6177 = new BitSet(new long[]{0xF028C5A240A47CE0L,0xAEA9B9F0B8860E0DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_expression6179 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_term_in_expression6188 = new BitSet(new long[]{0xF028C5A240B47CE2L,0xAEA9B9F0B8860E0DL,0x0000000001A67F2BL});
	public static final BitSet FOLLOW_unaryOperator_in_term6213 = new BitSet(new long[]{0xF028C5A240A47CE0L,0xAEA9B9F038860A0DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_term6215 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F038820A0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_function_in_term6244 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_in_term6257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_term6271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACKET_in_term6284 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_WS_in_term6286 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term6289 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_WS_in_term6292 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_term6294 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_WS_in_term6298 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_RBRACKET_in_term6301 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_in_term6314 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URANGE_in_term6326 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_in_term6338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LENGTH_in_term6350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EMS_in_term6362 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REM_in_term6374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXS_in_term6386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANGLE_in_term6398 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_in_term6410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FREQ_in_term6422 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESOLUTION_in_term6434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DIMENSION_in_term6446 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_in_term6463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TILDE_in_term6475 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_term6477 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_JS_STRING_in_term6498 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GEN_in_term6513 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_URI_in_term6525 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hexColor_in_term6537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_term6551 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_term6565 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_term6579 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_term6593 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_term_symbol_in_term6607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PERCENTAGE_SYMBOL_in_cp_term_symbol6634 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_function6650 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_function6652 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_function6657 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9BBF0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_function6659 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9BBF0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_fnAttributes_in_function6686 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function6717 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_functionName6769 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_functionName6771 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName6775 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_functionName6778 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_functionName6780 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes6804 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_fnAttributes6807 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_COMMA_in_fnAttributes6811 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_SEMI_in_fnAttributes6817 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_fnAttributes6820 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_fnAttribute_in_fnAttributes6823 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_fnAttributes6827 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_fnAttribute6864 = new BitSet(new long[]{0x0000000000280000L,0x0000000002040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_fnAttribute6866 = new BitSet(new long[]{0x0000000000080000L,0x0000000002000000L});
	public static final BitSet FOLLOW_set_in_fnAttribute6869 = new BitSet(new long[]{0xF038C5A240A47CE0L,0xAEA9B9F0B8860E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_fnAttribute6875 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_fnAttributeValue_in_fnAttribute6878 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_fnAttribute6895 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fnAttribute6907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName6930 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_DOT_in_fnAttributeName6933 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_fnAttributeName6935 = new BitSet(new long[]{0x0000000080000002L});
	public static final BitSet FOLLOW_cp_variable_in_fnAttributeName6955 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue6978 = new BitSet(new long[]{0xF028C5A240A47CE2L,0xAEA9B9F0B8860E0DL,0x0000000001A67F2BL});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue7010 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue7015 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SOLIDUS_in_fnAttributeValue7018 = new BitSet(new long[]{0xF028C5A240A47CE0L,0xAEA9B9F0B8860E0DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_fnAttributeValue7020 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_term_in_fnAttributeValue7029 = new BitSet(new long[]{0xF028C5A240A47CE2L,0xAEA9B9F0B8860E0DL,0x0000000001A67F2BL});
	public static final BitSet FOLLOW_cp_math_expression_in_fnAttributeValue7050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_hexColor7064 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration7124 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration7126 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration7129 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration7131 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration7134 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_variable_declaration7156 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration7158 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_variable_declaration7161 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration7163 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_variable_declaration7166 = new BitSet(new long[]{0x0000000000200002L,0x0100400000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration7170 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_SASS_DEFAULT_in_cp_variable_declaration7173 = new BitSet(new long[]{0x0000000000200002L,0x0100400000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_variable_declaration7179 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_SASS_GLOBAL_in_cp_variable_declaration7182 = new BitSet(new long[]{0x0000000000200002L,0x0100400000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_cp_variable7222 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable7406 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_variable7410 = new BitSet(new long[]{0x0000000080000000L});
	public static final BitSet FOLLOW_DOT_in_cp_variable7412 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_SASS_VAR_in_cp_variable7414 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list7444 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list7463 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_cp_expression_list7466 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_expression_list7468 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_cp_expression_list7471 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_LBRACE_in_cp_expression7507 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_cp_expression7509 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression7512 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_cp_expression7514 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_expression7517 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression7533 = new BitSet(new long[]{0xF038DDA246A47CE2L,0xAEA9B9F0B8C60E9FL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_expression7557 = new BitSet(new long[]{0x0008180006000000L,0x0000000000000012L});
	public static final BitSet FOLLOW_cp_expression_operator_in_cp_expression7560 = new BitSet(new long[]{0xF038C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_expression7562 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression7566 = new BitSet(new long[]{0xF038DDA246A47CE2L,0xAEA9B9F0B8C60E9FL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_expression7585 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_atom_in_cp_expression7588 = new BitSet(new long[]{0xF038DDA246A47CE2L,0xAEA9B9F0B8C60E9FL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression7606 = new BitSet(new long[]{0xE028848000B47CC0L,0xAEA9BBC008860E00L,0x0000000001A07C23L});
	public static final BitSet FOLLOW_ws_in_cp_expression7608 = new BitSet(new long[]{0xE028848000947CC0L,0xAEA9BBC008820E00L,0x0000000000A07C23L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_expression7611 = new BitSet(new long[]{0xE028848000947CC0L,0xAEA9BBC008820E00L,0x0000000000A07C23L});
	public static final BitSet FOLLOW_sass_map_pairs_in_cp_expression7613 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression7616 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_or_in_cp_expression_operator7637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_key_and_in_cp_expression_operator7641 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_EQ_in_cp_expression_operator7646 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CP_NOT_EQ_in_cp_expression_operator7650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_in_cp_expression_operator7654 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_OR_EQ_in_cp_expression_operator7658 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_in_cp_expression_operator7662 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GREATER_OR_EQ_in_cp_expression_operator7666 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_in_cp_expression_atom7692 = new BitSet(new long[]{0xF038C5A240A47CE0L,0xAEA9B9F0B8860E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom7694 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_expression_atom7725 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_cp_expression_atom7741 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9BBF0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom7743 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9BBF0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_list_in_cp_expression_atom7747 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_expression_atom7749 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_expression_atom7754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions7786 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expressions7793 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expressions7795 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression7829 = new BitSet(new long[]{0x0000000000200002L,0x0000000080040400L,0x0000000001000018L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression7871 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000400L,0x0000000000000018L});
	public static final BitSet FOLLOW_set_in_cp_math_expression7874 = new BitSet(new long[]{0xF038C5A240A47CE0L,0xAEA9B9F0B8860E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression7884 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_math_expression_atom_in_cp_math_expression7887 = new BitSet(new long[]{0x0000000000200002L,0x0000000080040400L,0x0000000001000018L});
	public static final BitSet FOLLOW_term_in_cp_math_expression_atom7920 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_cp_math_expression_atom7928 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unaryOperator_in_cp_math_expression_atom7939 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7941 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_cp_math_expression_atom7947 = new BitSet(new long[]{0xF038C5A240A47CE0L,0xAEA9B9F0B8860E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7949 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_math_expression_in_cp_math_expression_atom7952 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_math_expression_atom7954 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_math_expression_atom7957 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_declaration7997 = new BitSet(new long[]{0x0808000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_declaration8004 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration8006 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_declaration8011 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration8014 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration8017 = new BitSet(new long[]{0xE028008001A47C40L,0xAEA9BBC008060A20L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration8019 = new BitSet(new long[]{0xE028008001847C40L,0xAEA9BBC008020A20L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration8022 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration8025 = new BitSet(new long[]{0x0808000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration8030 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_less_mixin_guarded_in_cp_mixin_declaration8033 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_cp_mixin_declaration8057 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration8059 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_declaration8061 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration8064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_declaration8067 = new BitSet(new long[]{0xE028008001A47C40L,0xAEA9BBC008060A20L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration8069 = new BitSet(new long[]{0xE028008001847C40L,0xAEA9BBC008020A20L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_args_list_in_cp_mixin_declaration8072 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_declaration8075 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_declaration8089 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_declaration8092 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call8128 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call8130 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call8134 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call8138 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call8142 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8158 = new BitSet(new long[]{0x0000080000000000L,0x0000000080000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_combinator_in_cp_mixin_call8161 = new BitSet(new long[]{0x0000400080200040L,0x0000000000040004L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8163 = new BitSet(new long[]{0x0000400080000040L,0x0000000000000004L});
	public static final BitSet FOLLOW_DOT_in_cp_mixin_call8167 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call8169 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_HASH_in_cp_mixin_call8173 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_AT_IDENT_in_cp_mixin_call8177 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_LESS_AND_in_cp_mixin_call8181 = new BitSet(new long[]{0x0000080020280002L,0x0000000080040080L,0x0000000001000100L});
	public static final BitSet FOLLOW_pseudo_in_cp_mixin_call8191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8203 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call8206 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9BBF0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8208 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9BBF0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call8211 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call8214 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_INCLUDE_in_cp_mixin_call8239 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8241 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_cp_mixin_name_in_cp_mixin_call8243 = new BitSet(new long[]{0x0800000000200002L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8246 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_cp_mixin_call8249 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9BBF0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8251 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9BBF0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_mixin_call_args_in_cp_mixin_call8254 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cp_mixin_call8257 = new BitSet(new long[]{0x0800000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call8262 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_cp_mixin_block_in_cp_mixin_call8265 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_cp_mixin_block8294 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4D8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block8296 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4D8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToFollow_in_cp_mixin_block8299 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4D8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_cp_mixin_block8310 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_webkitKeyframesBlock_in_cp_mixin_block8325 = new BitSet(new long[]{0x0008000000200000L,0x0000100410040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_block8327 = new BitSet(new long[]{0x0008000000000000L,0x0000100410000000L});
	public static final BitSet FOLLOW_RBRACE_in_cp_mixin_block8339 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_mixin_name8360 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args8391 = new BitSet(new long[]{0x0000000001100002L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_set_in_cp_mixin_call_args8395 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args8403 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_mixin_call_arg_in_cp_mixin_call_args8406 = new BitSet(new long[]{0x0000000001100002L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_CP_DOTS_in_cp_mixin_call_args8412 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_args8414 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_cp_mixin_call_args8419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_mixin_call_arg8451 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg8453 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_cp_mixin_call_arg8456 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg8458 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg8461 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_cp_expression_in_cp_mixin_call_arg8473 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_mixin_call_arg8481 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list8528 = new BitSet(new long[]{0x0000000001100002L,0x0000000000000020L,0x0000000000000004L});
	public static final BitSet FOLLOW_set_in_cp_args_list8532 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_cp_args_list8542 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_arg_in_cp_args_list8545 = new BitSet(new long[]{0x0000000001100002L,0x0000000000000020L,0x0000000000000004L});
	public static final BitSet FOLLOW_set_in_cp_args_list8552 = new BitSet(new long[]{0x0000000001200002L,0x0000000000040020L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list8560 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_set_in_cp_args_list8568 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list8576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_cp_args_list8593 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_args_list8601 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_cp_arg8624 = new BitSet(new long[]{0x0000000000280002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg8626 = new BitSet(new long[]{0x0000000000080002L});
	public static final BitSet FOLLOW_COLON_in_cp_arg8631 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_cp_arg8633 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_cp_arg8636 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_cp_arg8638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_cp_arg8651 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_when_in_less_mixin_guarded8674 = new BitSet(new long[]{0x0000000000200000L,0x0000000000440080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded8676 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400080L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded8679 = new BitSet(new long[]{0x0008000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded8682 = new BitSet(new long[]{0x0008000000100000L});
	public static final BitSet FOLLOW_COMMA_in_less_mixin_guarded8686 = new BitSet(new long[]{0x0000000000200000L,0x0000000000440080L,0x0000000001000000L});
	public static final BitSet FOLLOW_key_and_in_less_mixin_guarded8690 = new BitSet(new long[]{0x0000000000200000L,0x0000000000440080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_mixin_guarded8693 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400080L});
	public static final BitSet FOLLOW_less_condition_in_less_mixin_guarded8696 = new BitSet(new long[]{0x0008000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_NOT_in_less_condition8722 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_condition8724 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_less_condition8733 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_less_condition8735 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_variable_in_less_condition8762 = new BitSet(new long[]{0x0000180000200000L,0x0000020002040012L,0x0000000001000000L});
	public static final BitSet FOLLOW_less_function_in_condition_in_less_condition8766 = new BitSet(new long[]{0x0000180000200000L,0x0000020002040012L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_condition8769 = new BitSet(new long[]{0x0000180000000000L,0x0000020002000012L});
	public static final BitSet FOLLOW_less_condition_operator_in_less_condition8773 = new BitSet(new long[]{0xF038C5A240A47CE0L,0xAEA9B9F0B8860E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_less_condition8775 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_math_expression_in_less_condition8778 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_condition8796 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_fn_name_in_less_function_in_condition8818 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition8820 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_less_function_in_condition8823 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition8825 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_variable_in_less_function_in_condition8828 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_function_in_condition8830 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_less_function_in_condition8833 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_fn_name8855 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_less_selector_interpolation_in_less_selector_interpolation_exp8918 = new BitSet(new long[]{0x0008000040000082L,0x0000000000000401L});
	public static final BitSet FOLLOW_less_selector_interpolation_exp_in_less_selector_interpolation_exp8921 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SIGN_in_less_selector_interpolation8964 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_less_selector_interpolation8966 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation8968 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_less_selector_interpolation8971 = new BitSet(new long[]{0x0000000000200000L,0x0000000400040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_less_selector_interpolation8973 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_less_selector_interpolation8976 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_interpolation_expression_var_in_sass_selector_interpolation_exp9003 = new BitSet(new long[]{0x0008800040000002L,0x0000000000000401L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_selector_interpolation_exp9006 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_SYMBOL_in_sass_interpolation_expression_var9053 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_interpolation_expression_var9055 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var9057 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_sass_interpolation_expression_var9060 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_WS_in_sass_interpolation_expression_var9062 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_interpolation_expression_var9065 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_sass_nested_properties9105 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties9107 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_sass_nested_properties9110 = new BitSet(new long[]{0xF828C5A240A47CE0L,0xAEA9B9F0B8860E0DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties9112 = new BitSet(new long[]{0xF828C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_propertyValue_in_sass_nested_properties9116 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties9118 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_nested_properties9123 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_sass_nested_properties9125 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_syncToFollow_in_sass_nested_properties9128 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_sass_nested_properties9130 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_nested_properties9133 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_in_sass_extend9154 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend9156 = new BitSet(new long[]{0x1008C400E0080080L,0x0010000040000404L,0x0000000000000010L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend9158 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend9161 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_extend9164 = new BitSet(new long[]{0x1008C400E0280080L,0x0010000040040404L,0x0000000001000010L});
	public static final BitSet FOLLOW_ws_in_sass_extend9166 = new BitSet(new long[]{0x1008C400E0080080L,0x0010000040000404L,0x0000000000000010L});
	public static final BitSet FOLLOW_simpleSelectorSequence_in_sass_extend9169 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_extend9174 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SASS_OPTIONAL_in_sass_extend9176 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EXTEND_ONLY_SELECTOR_in_sass_extend_only_selector9199 = new BitSet(new long[]{0x0008800000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_sass_selector_interpolation_exp_in_sass_extend_only_selector9201 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_sass_debug9223 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_debug9233 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_sass_debug9235 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ERROR_in_sass_error9256 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_error9258 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_STRING_in_sass_error9260 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_if_in_sass_control9281 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_for_in_sass_control9285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_each_in_sass_control9289 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_while_in_sass_control9293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_IF_in_sass_if9314 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_if9316 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_if9319 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_if9321 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_if9324 = new BitSet(new long[]{0x0000000000200002L,0x0003000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_if9327 = new BitSet(new long[]{0x0000000000000000L,0x0003000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_if9330 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else9353 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_else9355 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else9358 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_ELSE_in_sass_else9372 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_else9374 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_else9379 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_SASS_ELSEIF_in_sass_else9386 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_else9389 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_else9392 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_else9394 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_else9397 = new BitSet(new long[]{0x0000000000200002L,0x0003000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_else9400 = new BitSet(new long[]{0x0000000000000000L,0x0003000000000000L});
	public static final BitSet FOLLOW_sass_else_in_sass_else9403 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_sass_control_expression9426 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FOR_in_sass_for9447 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_for9449 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_variable_in_sass_for9451 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_for9453 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for9457 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_for9461 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for9463 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_for9465 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_for9469 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_for9473 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8820E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_math_expression_in_sass_for9475 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_for9477 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_for9480 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_EACH_in_sass_each9501 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_each9503 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_sass_each_variables_in_sass_each9505 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_each9507 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_sass_each9511 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_each9515 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_list_in_sass_each9518 = new BitSet(new long[]{0xF838C5A240B47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_each9521 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each9524 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_sass_each9528 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_each9534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables9555 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables9567 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_sass_each_variables9570 = new BitSet(new long[]{0xE028008000A47C40L,0xAEA9B9C008060A00L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_sass_each_variables9572 = new BitSet(new long[]{0xE028008000847C40L,0xAEA9B9C008020A00L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_variable_in_sass_each_variables9575 = new BitSet(new long[]{0x0000000000300002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_SASS_WHILE_in_sass_while9600 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_while9602 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_sass_control_expression_in_sass_while9604 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_while9606 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_sass_control_block_in_sass_while9609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LBRACE_in_sass_control_block9630 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_sass_control_block9632 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_sass_control_block9635 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_control_block9638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_FUNCTION_in_sass_function_declaration9680 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration9682 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_sass_function_name_in_sass_function_declaration9684 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration9686 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_sass_function_declaration9689 = new BitSet(new long[]{0xE028008001A47C40L,0xAEA9BBC008060A20L,0x0000000001807C03L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration9691 = new BitSet(new long[]{0xE028008001847C40L,0xAEA9BBC008020A20L,0x0000000000807C03L});
	public static final BitSet FOLLOW_cp_args_list_in_sass_function_declaration9694 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sass_function_declaration9697 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration9699 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_sass_function_declaration9702 = new BitSet(new long[]{0xF028CC80E0AC7CC0L,0xAEBDB9C4C8060E04L,0x0000000001A07D57L});
	public static final BitSet FOLLOW_ws_in_sass_function_declaration9704 = new BitSet(new long[]{0xF028CC80E08C7CC0L,0xAEBDB9C4C8020E04L,0x0000000000A07D57L});
	public static final BitSet FOLLOW_declarations_in_sass_function_declaration9707 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_RBRACE_in_sass_function_declaration9710 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_sass_function_name9731 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_RETURN_in_sass_function_return9752 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_sass_function_return9754 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_sass_function_return9756 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_CONTENT_in_sass_content9777 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_import_types9796 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_less_when9819 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_and9838 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_or9856 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IDENT_in_key_only9874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred1_Css3439 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred1_Css3442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred2_Css3503 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred2_Css3506 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred3_Css3557 = new BitSet(new long[]{0xE028848000847C40L,0xAEA9B9C008420A80L,0x0000000000807C03L});
	public static final BitSet FOLLOW_mediaQueryList_in_synpred3_Css3560 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred4_Css31093 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_synpred4_Css31096 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred5_Css31194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred5_Css31201 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred5_Css31203 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_HASH_in_synpred5_Css31208 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred5_Css31211 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_synpred5_Css31214 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000000FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred5_Css31222 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000000FFFFFFBL});
	public static final BitSet FOLLOW_LBRACE_in_synpred5_Css31232 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred6_Css31250 = new BitSet(new long[]{0x0010000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31253 = new BitSet(new long[]{0x0010000000000000L});
	public static final BitSet FOLLOW_IMPORTANT_SYM_in_synpred6_Css31256 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_synpred6_Css31260 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_synpred6_Css31263 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred7_Css31286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31311 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31314 = new BitSet(new long[]{0x1008CC00E0080080L,0x00100000C0000404L,0x0000000000000110L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31316 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred8_Css31325 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31327 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_synpred8_Css31329 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31331 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31334 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31336 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred8_Css31339 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31341 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred8_Css31344 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31346 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred8_Css31349 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred8_Css31354 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred8_Css31357 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred8_Css31360 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred9_Css31372 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred10_Css31487 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred10_Css31490 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred11_Css31534 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_key_and_in_synpred11_Css31537 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred12_Css31564 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_key_and_in_synpred12_Css31567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_synpred13_Css31649 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HASH_in_synpred14_Css31678 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred15_Css31824 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_synpred15_Css31827 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_MIXIN_in_synpred16_Css31902 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_synpred16_Css31909 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred16_Css31911 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_HASH_in_synpred16_Css31916 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred16_Css31919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_synpred16_Css31922 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000000FFFFFFFL});
	public static final BitSet FOLLOW_RPAREN_in_synpred16_Css31930 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFBFFFFFFFFL,0x000000000FFFFFFBL});
	public static final BitSet FOLLOW_LBRACE_in_synpred16_Css31942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred17_Css31968 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000004L});
	public static final BitSet FOLLOW_ws_in_synpred17_Css31970 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SEMI_in_synpred17_Css31973 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred18_Css31992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_in_synpred19_Css32020 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred19_Css32022 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred19_Css32025 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred20_Css32042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred21_Css33541 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred21_Css33544 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_in_synpred22_Css33635 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_variable_declaration_in_synpred23_Css33935 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_map_in_synpred24_Css33947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sass_nested_properties_in_synpred25_Css33960 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred26_Css33974 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33977 = new BitSet(new long[]{0x1008CC00E0080080L,0x00100000C0000404L,0x0000000000000110L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred26_Css33979 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_SASS_AT_ROOT_in_synpred26_Css33988 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_synpred26_Css33992 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33994 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred26_Css33997 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css33999 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred26_Css34002 = new BitSet(new long[]{0x0008000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css34004 = new BitSet(new long[]{0x0008000000000000L});
	public static final BitSet FOLLOW_IDENT_in_synpred26_Css34007 = new BitSet(new long[]{0x0000000000200000L,0x0000020000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css34009 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred26_Css34012 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_selectorsGroup_in_synpred26_Css34017 = new BitSet(new long[]{0x0800000000200000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred26_Css34020 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_LBRACE_in_synpred26_Css34023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_propertyDeclaration_in_synpred27_Css34035 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_in_synpred28_Css34052 = new BitSet(new long[]{0x0000000000280000L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred28_Css34054 = new BitSet(new long[]{0x0000000000080000L});
	public static final BitSet FOLLOW_COLON_in_synpred28_Css34057 = new BitSet(new long[]{0xF7FFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0x000000000FFFFFFFL});
	public static final BitSet FOLLOW_set_in_synpred28_Css34069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_declaration_in_synpred29_Css34086 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred30_Css34098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_mixin_call_in_synpred31_Css34119 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred32_Css34417 = new BitSet(new long[]{0x1000C000A0080000L,0x0010000000000004L});
	public static final BitSet FOLLOW_esPred_in_synpred32_Css34420 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeSelector_in_synpred33_Css34455 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred34_Css34462 = new BitSet(new long[]{0x1000C000A0080000L,0x0010000000000004L});
	public static final BitSet FOLLOW_esPred_in_synpred34_Css34465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PIPE_in_synpred35_Css34576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36144 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36149 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_operator_in_synpred36_Css36152 = new BitSet(new long[]{0xF028C5A240A47CE0L,0xAEA9B9F0B8860E0DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_synpred36_Css36154 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_term_in_synpred36_Css36163 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionName_in_synpred37_Css36236 = new BitSet(new long[]{0x0000000000200000L,0x0000000000040080L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred37_Css36238 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_synpred37_Css36241 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fnAttributeName_in_synpred38_Css36851 = new BitSet(new long[]{0x0000000000280000L,0x0000000002040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred38_Css36853 = new BitSet(new long[]{0x0000000000080000L,0x0000000002000000L});
	public static final BitSet FOLLOW_set_in_synpred38_Css36856 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_in_synpred39_Css36891 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css36985 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css36990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SOLIDUS_in_synpred40_Css36993 = new BitSet(new long[]{0xF028C5A240A47CE0L,0xAEA9B9F0B8860E0DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_synpred40_Css36995 = new BitSet(new long[]{0xF028C5A240847CE0L,0xAEA9B9F0B8820E0DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_term_in_synpred40_Css37004 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred42_Css37452 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred42_Css37455 = new BitSet(new long[]{0xF838C5A240A47CE0L,0xAEA9B9F0B8C60E8DL,0x0000000001A67F23L});
	public static final BitSet FOLLOW_ws_in_synpred42_Css37457 = new BitSet(new long[]{0xF838C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_in_synpred42_Css37460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred43_Css37527 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred44_Css37550 = new BitSet(new long[]{0x0008180006000000L,0x0000000000000012L});
	public static final BitSet FOLLOW_cp_expression_operator_in_synpred44_Css37553 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred45_Css37579 = new BitSet(new long[]{0xF038C5A240847CE0L,0xAEA9B9F0B8C20E8DL,0x0000000000A67F23L});
	public static final BitSet FOLLOW_cp_expression_atom_in_synpred45_Css37582 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cp_math_expression_in_synpred46_Css37722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred47_Css37855 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000400L,0x0000000000000018L});
	public static final BitSet FOLLOW_set_in_synpred47_Css37858 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred48_Css38147 = new BitSet(new long[]{0x0000080000000000L,0x0000000080000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_combinator_in_synpred48_Css38150 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L,0x0000000001000000L});
	public static final BitSet FOLLOW_ws_in_synpred48_Css38152 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pseudo_in_synpred49_Css38188 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred50_Css38196 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LPAREN_in_synpred50_Css38199 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_webkitKeyframeSelectors_in_synpred51_Css38315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ws_in_synpred52_Css39560 = new BitSet(new long[]{0x0000000000100000L});
	public static final BitSet FOLLOW_COMMA_in_synpred52_Css39563 = new BitSet(new long[]{0x0000000000000002L});
}
