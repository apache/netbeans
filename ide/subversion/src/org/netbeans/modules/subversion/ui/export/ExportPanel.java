/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.netbeans.modules.subversion.ui.export;

/**
 *
 * @author  Petr Kuzel
 */
public class ExportPanel extends javax.swing.JPanel {

    /** Creates new form WorkdirPanel */
    public ExportPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setName(org.openide.util.NbBundle.getMessage(ExportPanel.class, "CTL_ExportForm_Name")); // NOI18N

        exportFromTextField.setEditable(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ExportPanel.class, "LBL_Folder")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ExportPanel.class, "LBL_FolderTo")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(browseToFolderButton, org.openide.util.NbBundle.getMessage(ExportPanel.class, "CTL_BrowseTo")); // NOI18N
        browseToFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseToFolderButtonActionPerformed(evt);
            }
        });

        invalidValuesLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/netbeans/modules/subversion/resources/icons/info.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(invalidValuesLabel, "Error");

        org.openide.awt.Mnemonics.setLocalizedText(scanCheckBox, "&Scan for NetBeans projects after export");
        scanCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scanCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                        .addComponent(copyFromRemoteLabel)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(exportToTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseToFolderButton)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exportFromTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(invalidValuesLabel)
                        .addContainerGap(505, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(exportFromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(browseToFolderButton)
                            .addComponent(exportToTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scanCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invalidValuesLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(copyFromRemoteLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        exportFromTextField.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ExportPanel.class, "ACSN_ExportForm_fromLocalPath")); // NOI18N
        exportFromTextField.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ExportPanel.class, "ACSD_ExportForm_fromLocalPath")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void browseToFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseToFolderButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browseToFolderButtonActionPerformed

    private void scanCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scanCheckBoxActionPerformed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    final javax.swing.JButton browseToFolderButton = new javax.swing.JButton();
    private javax.swing.ButtonGroup buttonGroup1;
    final javax.swing.JLabel copyFromRemoteLabel = new javax.swing.JLabel();
    final javax.swing.JTextField exportFromTextField = new javax.swing.JTextField();
    final javax.swing.JTextField exportToTextField = new javax.swing.JTextField();
    final javax.swing.JLabel invalidValuesLabel = new javax.swing.JLabel();
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    final javax.swing.JCheckBox scanCheckBox = new javax.swing.JCheckBox();
    // End of variables declaration//GEN-END:variables
    
}
