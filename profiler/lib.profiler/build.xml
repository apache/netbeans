<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project basedir="." default="build" name="profiler/lib.profiler">
    <description>Builds, tests, and runs the project org.netbeans.lib.profiler</description>
    <import file="../../nbbuild/templates/projectized.xml"/>

    <property name="profiler.cluster" value="./release"/>
    <property name="header.dir" value="${basedir}/native/build"/>
    <target name="-process.release.files">
        <!-- CDDL licensed binaries, from the Oracle days -->
        <unzip src="external/profiler-external-binaries-8.2.zip" 
               overwrite="false"
               dest="${profiler.cluster}"/>
        <!-- AL2 licensed binaries, build from ASF code (overwrites CDDL binaries) -->
        <unzip src="external/profiler-external-binaries-ASF-5273a10f9471d5cf60ed894dc26ec0e59e71cc24.zip"
               overwrite="true"
               dest="${profiler.cluster}"/>
    </target>

  <!-- Compile the JFluid engine system library, that depends on JDK version - so there are two libraries -->
  <!-- Compile the engine system library -->
    <target name="compile-system" depends="init">
        <mkdir dir="${build15.classes.dir}"/>
        <fail message="javac.source of lib.profiler classes should be as low as possible!">
            <condition>
                <not>
                    <or>
                        <equals arg1="${javac.source}" arg2="1.5"/>
                        <equals arg1="${javac.source}" arg2="1.7"/>
                    </or>
                </not>
            </condition>
        </fail>
        <javac srcdir="${src15.dir}" destdir="${build15.classes.dir}" debug="${build.compiler.debug}" debuglevel="${build.compiler.debuglevel}" encoding="UTF-8"
                deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="${javac.source}" target="${javac.target}" includeantruntime="false">
            <include name="org/netbeans/lib/profiler/server/system/**"/>
            <compilerarg line="${javac.compilerargs}"/>
            <compilerarg line="-h &quot;${header.dir}&quot;"/>
        </javac>
        <mkdir dir="${buildcvm.classes.dir}"/>
        <javac  srcdir="${srccvm.dir}" destdir="${buildcvm.classes.dir}" deprecation="${build.compiler.deprecation}"
             debug="${build.compiler.debug}" source="${javac.source}" target="${javac.target}" includeantruntime="false" optimize="${build.compiler.optimize}" >
             <include name="org/netbeans/lib/profiler/server/system/**"/>
             <compilerarg line="${javac.compilerargs}"/>
        </javac>
        <mkdir dir="${build.classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="${build.compiler.debug}" debuglevel="${build.compiler.debuglevel}" encoding="UTF-8"
                classpath="${build15.classes.dir}" deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="${javac.source}" target="${javac.target}" includeantruntime="false">
            <include name="org/netbeans/lib/profiler/server/**"/>
            <include name="org/netbeans/lib/profiler/global/**"/>
            <include name="org/netbeans/lib/profiler/wireprotocol/**"/>
            <compilerarg line="${javac.compilerargs}"/>
            <compilerarg line="-h &quot;${header.dir}&quot;"/>
        </javac>
    </target>

    <target name="post-compile" depends="projectized-common.compile">
        <javac srcdir="${src15.dir}" destdir="${build15.classes.dir}" debug="${build.compiler.debug}" debuglevel="${build.compiler.debuglevel}" encoding="UTF-8"
                classpath="${build.classes.dir}" deprecation="${build.compiler.deprecation}" optimize="${build.compiler.optimize}" source="${javac.source}" target="${javac.target}" includeantruntime="false">
            <compilerarg line="${javac.compilerargs}"/>
        </javac>
    </target>

    <target name="compile" depends="init,compile-system, projectized-common.compile,post-compile"/>

    <target name="jar" depends="init,compile,jar-prep">
        <!-- Client side -->
        <jarwithmoduleattributes jarfile="${cluster}/${module.jar}" compress="${build.package.compress}" index="${build.package.index}" manifest="${manifest.mf}" stamp="${cluster}/.lastModified">
            <fileset dir="${build.classes.dir}">
              <exclude name="org/netbeans/lib/profiler/server/**"/>
            </fileset>
        </jarwithmoduleattributes>
        
       <!-- Server side -->
       <mkdir dir="${cluster}/lib"/>
       <nb-ext-jar destfile="${cluster}/${jfluid.server.jar}"
         basedir="${build.classes.dir}"
         includes="org/netbeans/lib/profiler/server/** org/netbeans/lib/profiler/global/** org/netbeans/lib/profiler/wireprotocol/**"
         compress="false">
       </nb-ext-jar>
       <nb-ext-jar destfile="${cluster}/${jfluid.server.15.jar}"
         manifest="${src15.dir}/manifest.mf"
         basedir="${build15.classes.dir}"
         compress="false">
       </nb-ext-jar>
       <nb-ext-jar destfile="${cluster}/${jfluid.server.cvm.jar}"
         manifest="${srccvm.dir}/manifest.mf"
         basedir="${buildcvm.classes.dir}"
         compress="false">
       </nb-ext-jar>
    </target>

    <target name="release" depends="projectized-common.release">
        <fixcrlf eol="crlf" srcdir="${cluster}/lib/deployed" includes="**/*.map"/>
    </target>

    <target name="netbeans-extra">
       <ant dir="release/remote-pack-defs" target="profiler-server-all" inheritall="false">
           <property name="cluster" location="${cluster}"/>
           <property name="dest.dir" location="${build.dir}"/>
       </ant>
       <mkdir dir="${cluster}/lib/deployed"/>
       <copy todir="${cluster}/lib/deployed">
           <fileset dir="${profiler.cluster}/lib/deployed"/>
       </copy>
    </target>

    <target name="clean" depends="projectized-common.clean">
       <delete dir="remote-packs/build"/>
    </target>

</project>
