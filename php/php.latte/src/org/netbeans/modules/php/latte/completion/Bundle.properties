# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

#####< Documentation of latte macros, helpers and keywords >#####

MACRO_link=<p>Generates a link.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
Here is a link: {link Presenter:action $id}\n\
Here is clickable &lt;a href="{link Presenter:action $id}"&gt;link&lt;/a&gt;.\n\
or just use &lt;a n:href="Presenter:action $id"&gt;n:tag&lt;/a&gt;.\
</code></pre>

MACRO_plink=<p>Generates a to presenter link.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
Here is a link: {plink Presenter:action $id}\n\
Here is clickable &lt;a href="{link Presenter:action $id}"&gt;link&lt;/a&gt;.\
</code></pre>

MACRO_continueIf=<p>Conditional jump to the next iteration.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{foreach $rows as $row}\n\
\    {continueIf $row->parent == NULL}\n\
\    ...\n\
{/foreach}\n\
</code></pre>

MACRO_breakIf=<p>Conditional loop break.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{foreach $rows as $row}\n\
\    {breakIf $row->parent == NULL}\n\
\    ...\n\
{/foreach}\n\
</code></pre>

MACRO_if=<p>Conditions behave exactly the same way as their PHP counterparts.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{if $stock}\n\
\    In stock\n\
{elseif $onWay}\n\
\    On the way\n\
{else}\n\
\    Not available\n\
{/if}\n\
</code></pre>

MACRO_else=<p>Conditions behave exactly the same way as their PHP counterparts.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{if $stock}\n\
\    In stock\n\
{elseif $onWay}\n\
\    On the way\n\
{else}\n\
\    Not available\n\
{/if}\n\
</code></pre>

MACRO_elseif=<p>Conditions behave exactly the same way as their PHP counterparts.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{if $stock}\n\
\    In stock\n\
{elseif $onWay}\n\
\    On the way\n\
{else}\n\
\    Not available\n\
{/if}\n\
</code></pre>

MACRO_ifset=<p>It checks variable existence and it corresponds to the <code>if (isset($var))</code> PHP code.</p>\
<p>Macro can check for block existence as well.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{ifset $foo}\n\
\    ...\n\
{/ifset}\n\
</code></pre>\
<p>Existence of a block can by tested with:</p>\
<pre><code>\n\
{ifset #block}\
</code></pre>

MACRO_elseifset=<p>It checks variable existence and it corresponds to the <code>elseif (isset($var))</code> PHP code.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{if true}\n\
\    ...\n\
{elseifset $foo}\n\
\    ...\n\
{/ifset}\n\
</code></pre>

MACRO_ifCurrent=<p>Macro helps to determine that the destination is the same as the current page.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
&lt;ul class="menu"&gt;\n\
    &lt;li {ifCurrent Default:default}class="current"{/ifCurrent}&gt;&lt;a href="{link Default:default}"&gt;...&lt;/a&gt;&lt;/li&gt;\n\
    &lt;li {ifCurrent Default:*}class="current"{/ifCurrent}&gt;&lt;a href="{link Default:default}"&gt;...&lt;/a&gt;&lt;/li&gt;\n\
&lt;/ul&gt;\n\
</code></pre>

MACRO_for=<p>It behaves exactly the same as their PHP counterparts.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{for $i = 0; $i < 10; $i++}\n\
\    <span>Item #{$i}</span>\n\
{/for}\
</code></pre>

MACRO_foreach=<p>It behaves exactly the same as their PHP counterparts.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{foreach $result as $row}\n\
\    <span>{$row->title}</span>\n\
{/foreach}\
</code></pre>

MACRO_while=<p>It behaves exactly the same as their PHP counterparts.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{while $row = $result->fetch()}\n\
\    <span>{$row->title}</span>\n\
{/while}\
</code></pre>

MACRO_include=<p>It includes files or blocks to current template.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<p>Files:</p>\
<pre><code>\n\
{include 'basket.latte'}\n\
{include 'menu.latte', level => 3, data => $menu}\n\
</code></pre>\
<p>Blocks:</p>\
<pre><code>\n\
{include #sidebar}\n\
{include #sidebar, id => 123, name => $value}\n\
{include #$block$name}\n\
</code></pre>

MACRO_extends=<p>It's an alias for <code>{layout}</code>. Specifies a layout file.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{extends '@layout.latte'}\
</code></pre>

MACRO_layout=<p>Specifies a layout file.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{layout '@layout.latte'}\
</code></pre>

MACRO_control=<p>Prints a component.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{control cartControl}\n\
{control cartControl:small}\n\
{control cartControl:small, $maxItems}\n\
</code></pre>

MACRO_cache=<p>Caches a template section.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{cache $id, expire => '+20 minutes', tags => [tag1, tag2]}\n\
\    ...\n\
{/cache}\n\
\n\
{cache $id, if => !$form->isSubmitted()}\n\
\    {$form}\n\
{/cache}\n\
</code></pre>

MACRO_snippet=<p>Marks a template snippet that can be sent by AJAX.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{snippet header}\n\
\    &lt;h1&gt;Hello .... &lt;/h1&gt;\n\
{/snippet}\n\
</code></pre>

MACRO_block=<p>Block definition and immediate print out.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{block #sidebar}\n\
\    &lt;h3&gt;Menu&lt;/h3&gt;\n\
\    ...\n\
{/block}\n\
</code></pre>

MACRO_define=<p>Block definition for future use.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{define #sidebar}\n\
\    &lt;h3&gt;Menu&lt;/h3&gt;\n\
\    ...\n\
{/define}\n\
</code></pre>

MACRO_includeblock=<p>Loads blocks from external template.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{includeblock 'file.latte'}\n\
</code></pre>

MACRO_contentType=<p>Switches the escaping mode and sends HTTP header.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{contentType application/xml}\n\
&lt;?xml version="1.0"?&gt;\n\
&lt;rss version="2.0"&gt;\n\
\    ...\n\
&lt;/rss&gt;\n\
</code></pre>

MACRO_status=<p>Sends HTTP status code.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{status 500}\n\
</code></pre>

MACRO_capture=<p>Captures the output to a variable.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{capture $var}\n\
\    Hello World\n\
{/capture}\n\
\n\
Captured: {$var}\n\
</code></pre>

MACRO_default=<p>Default value when variable isn't declared.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{default $lang = 'cs'}\n\
</code></pre>

MACRO_var=<p>Declares variables directly in the template.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{var $name = 'John Smith'}\n\
{var $age = 27}\n\
or\n\
{var $name = 'John Smith', $age = 27}\n\
</code></pre>

MACRO_dump=<p>Dumps variables to the Debugger Bar.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{dump $name} {* inspects the $name variable *}\n\
\n\
{dump} {* inspects all the defined variables *}\n\
</code></pre>

MACRO_syntax=<p>Switches the syntax at runtime.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{syntax asp}\n\
\    &lt;%$foo%&gt;\n\
&lt;%/syntax%&gt;\n\
</code></pre>

MACRO_use=<p>Loads new user-defined macros</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{use Class}\n\
</code></pre>

MACRO_form=<p>Prints a form element.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{form myForm}\n\
&lt;table&gt;\n\
&lt;tr n:foreach="$form-&gt;controls as $name => $field"&gt;\n\
\    &lt;th&gt;{label $name /}&lt;th&gt;\n\
\    &lt;td&gt;{input $name}&lt;/td&gt;\n\
&lt;/tr&gt;\n\
&lt;/table&gt;\n\
{/form}\n\
</code></pre>

MACRO_label=<p>Prints a form input label.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{form myForm}\n\
&lt;table&gt;\n\
&lt;tr n:foreach="$form-&gt;controls as $name => $field"&gt;\n\
\    &lt;th&gt;{label $name /}&lt;th&gt;\n\
\    &lt;td&gt;{input $name}&lt;/td&gt;\n\
&lt;/tr&gt;\n\
&lt;/table&gt;\n\
{/form}\n\
</code></pre>

MACRO_input=<p>Prints a form input element.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{form myForm}\n\
&lt;table&gt;\n\
&lt;tr n:foreach="$form-&gt;controls as $name => $field"&gt;\n\
\    &lt;th&gt;{label $name /}&lt;th&gt;\n\
\    &lt;td&gt;{input $name}&lt;/td&gt;\n\
&lt;/tr&gt;\n\
&lt;/table&gt;\n\
{/form}\n\
</code></pre>

MACRO_debugbreak=<p>Sets breakpoint to the code.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{debugbreak} {* breaks the program *}\n\
\n\
{debugbreak $counter == 1}  {* breaks the program if the condition is met *}\n\
</code></pre>

MACRO_l=<p>Prints <code>{</code> character.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{l}some text{r}\n\
</code></pre>

MACRO_r=<p>Prints <code>}</code> character.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{l}some text{r}\n\
</code></pre>

MACRO_first=<p>Prints if first iteration.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{foreach $rows as $row}\n\
\    {first}&lt;table&gt;{/first}\n\
\n\
\    &lt;tr&gt;\n\
\        &lt;td&gt;{$row->name}&lt;/td&gt;\n\
\    &lt;/tr&gt;\n\
\n\
\    {last}&lt;/table&gt;{/last}\n\
{/foreach}\n\
</code></pre>

MACRO_last=<p>Prints if last iteration.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{foreach $rows as $row}\n\
\    {first}&lt;table&gt;{/first}\n\
\n\
\    &lt;tr&gt;\n\
\        &lt;td&gt;{$row->name}&lt;/td&gt;\n\
\    &lt;/tr&gt;\n\
\n\
\    {last}&lt;/table&gt;{/last}\n\
{/foreach}\n\
</code></pre>

MACRO_sep=<p>Separator.</p>\
<p style="font-weight: bold; font-size: 1.1em">Example</p>\
<pre><code>\n\
{foreach $items as $item} {$item} {sep}, {/sep} {/foreach}\
</code></pre>

#####< / Documentation of latte macros, helpers and keywords >#####