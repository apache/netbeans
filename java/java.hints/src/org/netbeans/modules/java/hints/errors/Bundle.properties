# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


#
# This file contains localized strings used in this package.  The typical
# NetBeans pattern is to use one bundle per-package, called Bundle.properties;
# the openide class NbBundle supports this usage.
#
# Typically, fetch a resource as follows:
# NbBundle.getMessage (MyClass.class, "SOME_Key");
#
# Don't bother caching strings or worse, static references to resource bundles -
# this may seem like its faster, but it wastes memory and slows things down
# in the long run.
#


Add_semicolon=Add semicolon

Add_cast_to_X=Cast {0} to {1}

Add_throws_clause_for_X=Add throws clause for {0}

Add_import_for_X=Add import for {0}
Use_FQN_for_X=Use {0}
Use_FQN_for_All_X=Use {0} for all {1} in source
Implement_all_abstract_methods=Implement all abstract methods

MSG_CreateField=Create field {0} on {1}
MSG_CreateMethod=Create method {0} on {1}
MSG_CreateLocalVariable=Create local variable {0}
MSG_CreateParameter=Create parameter {0}


MSG_CreateGetter=Create getter
MSG_CreateSetter=Create setter
MSG_CreateGetterAndSetter=Create getter and setter

MSG_Implement=Implement missing methods

MSG_RenameConstant=Rename to {0}

MSG_DeclareIn=Declare in {0}

MSG_GoToOverriding=Go to overriding method ...
MSG_GettingOverriding=Getting overriding methods
MSG_OverridingFound={0} overriding method(s) found
MSG_OverridingNotFound=No overriding methods found


MSG_ImplementAbstractMethod=Implement method in ...
MSG_GettingClassesWhereImplement=Getting subclasses
MSG_NoClassesWhereImplementFound=All known subclasses already implement this method
MSG_ClassesWhereImplementFound={0} subclass(es) found

MSG_Cancel=Cancel

MSG_ChangeVariablesType=Change type of {0} to {1}
MSG_ChangeVariablesTypeDisplayName=Change Type Fix
MSG_ChangeVariablesTypeDescription=This hint changes the type of a variable to the type of initializer expression.

#{0}: new class simple name
#{1}: target package name 
#{2}: kind:
#     0: class
#     1: interface
#     2: enum
#     3: annotation type
#{3}: project location (sources / tests)
FIX_CreateClassInPackage=Create {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" in package {1} ({3})
#{0}: new class simple name
#{1}: target package name 
#{2}: kind:
#     0: class
#     1: interface
#     2: enum
#     3: annotation type
#{3}: project location (sources / tests)
FIX_CreateClassAndCtorInPackage=Create {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" with constructor "{0}({3})" in package {1} ({4})

#{0}: new class simple name
#{1}: target class name
#{2}: kind:
#     0: class
#     1: interface
#     2: enum
#     3: annotation type
FIX_CreateInnerClass=Create {2,choice,0#class|1#interface|2#enum|3#annotation type} "{0}" in {1}

LBL_Remove_Useless_Cast_Fix=Remove Useless Cast Fix
DSC_Remove_Useless_Cast_Fix=Remove Useless Cast Fix
LBL_FIX_Remove_redundant_cast=Remove redundant cast

LBL_Suppress_Waning=Suppress Warnings Fix
DSC_Suppress_Waning=Suppress Warnings Fix

LBL_Add_Cast=Add Cast Fix
DSC_Add_Cast=Add Cast Fix
#{0}: treeName
#{1}: type
LBL_FIX_Add_Cast=Cast {0} to {1}

LBL_Impl_Abstract_Methods=Implement All Abstract Methods Fix
DSC_Impl_Abstract_Methods=Add Cast Fix
#{0}: treeName
#{1}: type
LBL_FIX_Impl_Abstract_Methods=Implement all abstract methods
#{0}: name of the class
LBL_FIX_Make_Class_Abstract=Make class {0} abstract


LBL_Create_Field=Create Field Fix
DSC_Create_Field=Create Field Fix
LBL_ChangeMethodParameters=Change Method Parameters Fix
DSC_ChangeMethodParameters=Change Method Parameters Fix
#{0}: field name
#{1}: class name
LBL_FIX_Create_Field=Create field "{0}" in {1}
LBL_FIX_Create_Enum_Constant=Create enum constant "{0}" in {1}
LBL_FIX_Create_Constructor=Create constructor "{0}" in {1}
LBL_FIX_Create_Method=Create method "{0}" in {1}
LBL_FIX_Create_Annotation_Element=Create annotation element "{0}" in {1}
#{0}: parameter name
LBL_FIX_Create_Parameter=Create parameter "{0}"
#{0}: variable name
LBL_FIX_Create_Local_Variable=Create local variable "{0}"
#{0}: variable name
LBL_FIX_Create_Resource=Create try-with-resource resource "{0}"

#NotInitializedVariable
LBL_NotInitializedVariable=Use of uninitialized variable
LBL_NotInitializedVariable_fix=Initialize variable {0}

LBL_SurroundStatementWithTryCatch=Surround Statement with try-catch
LBL_SurroundBlockWithTryCatch=Surround Block with try-catch
FIX_AddThrowsClause=Add throws clause for {0}
DN_AddThrowsClauseAndSurround=Add Throws Clause and Surround With try-catch Fixes
DESC_AddThrowsClauseAndSurround=Add Throws Clause and Surround With try-catch Fixes
LBL_AddCatchClauses={0,choice,1#Add catch Clause|1<Add catch Clause}
LocalVariableFixCustomizer.inPlace.text=&Create Local Variable In Place
SurroundWithTryCatchLog.jLabel1.text=Logging statement to use (in order):
SurroundWithTryCatchLog.exceptions.text=Use &org.openide.util.Exceptions.printStackTrace
SurroundWithTryCatchLog.logger.text=Use &java.util.logging.Logger
SurroundWithTryCatchLog.printStackTrace.text=Use &Exception.printStackTrace
DESC_ErrorFixesFakeHintSURROUND_WITH_TRY_CATCH=Settings for the Surround with try-catch error fix
DN_ErrorFixesFakeHintSURROUND_WITH_TRY_CATCH=Surround with try-catch
DESC_ErrorFixesFakeHintCREATE_LOCAL_VARIABLE=Settings for the Create Local Variable error fix
DN_ErrorFixesFakeHintCREATE_LOCAL_VARIABLE=Create Local Variable
DESC_ErrorFixesFakeHintCREATE_FINAL_FIELD_CTOR=Settings for Create Field Fix
DN_ErrorFixesFakeHintCREATE_FINAL_FIELD_CTOR=Create Field
DESC_ErrorFixesFakeHintIMPORT_CLASS=Settings for Import Class Fix
DN_ErrorFixesFakeHintIMPORT_CLASS=Import Class

ERR_CannotApplyGuarded=Cannot apply fix in a guarded block
# 0 - name of conflicting method
WARN_FoundConflictingMethods1=Could not implement method `{0}'', a conflicting method exists
# 1 - number of conflicting methods
WARN_FoundConflictingMethodsMany=Could not implement some {0} methods conflicting methods exist

ACSN_Final_Checkbox=FinalCheckbox
FinalFieldsFromCtorCustomiser.finalCehckBox.AccessibleContext.accessibleDescription=Create Field Fix creates final fields checkbox
FinalFieldsFromCtorCustomiser.finalCheckBox.text=<html>Create <code>final</code> fields from inside constructor body</html>

ERR_ReadOnlyTargetFile=Target file ({0}) is read-only, cannot perform requested change.
DN_VarArgsCast=Resolve inexact varargs type warning
FIX_VarArgsCast=Cast {0} to {1}
SurroundWithTryCatchLog.rethrowRuntime.text=Use throw new RuntimeException(...)
SurroundWithTryCatchLog.rethrow.text=Use throw ...
DN_ChangeMethodReturnType=Change Method Return Type
FIX_ChangeMethodReturnType=Change method return type to {0}
DN_MissingReturnStatement=Handling of Missing Return Statement compiler error
FIX_AddReturnStatement=Add return statement

FIX_AddConstructor=Add Constructor - {0}
DN_AddConstructor=Add Constructor

# {0} - the display name of the element whose access should be upgraded to public
FIX_AccessError_PUBLIC=Make {0} public
# {0} - the display name of the element whose access should be upgraded to protected
FIX_AccessError_PROTECTED=Make {0} protected
# {0} - the display name of the element whose access should be upgraded to package private
FIX_AccessError_PACKAGE_PRIVATE=Make {0} package private
ImportClassCustomizer.organizeImports.text=Format and sort imports
FIX_VarCompDeclaration=Split compound declaration
FIX_DifferentCaseKinds=Convert to rule switch case
FIX_EnablePreviewFeature=Enable Preview Feature
