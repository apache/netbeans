#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# 

# whether to build native components or not; 'true'/'false'
# * normally a product does not have any native components, thus 
#   ${build.native} should be 'false' in most of the cases
build.native=false

# whether to build the netbeans part of the project or not; 'true'/'false'
build.nbproject=true

nbproject.dist.file.name=${product.uid},logic.jar

# whether to build engine or not; 'true'/'false'
build.engine=true

# whether to repackage the installation data or not; 'true'/'false'/'default'
# * if set to 'false' the data will be taken as it is (i.e. will be considered 
#   as already packaged)
# * if set to 'true' the data will be downloaded and packaged 
# * if set to 'default' packaged data will be taken if it's available, 
#   otherwise raw data will be downloaded and packaged
package.data=default

# whether the packaged data should be released (copied) to the local packaged
# data repository; 'true'/'false'
release.packaged.data=true

# various properties controlling the engine's build process
engine.dir=${common.dir}/../engine
engine.work.dir=${work.dir}/.engine
engine.dist.dir=${dist.dir}/.engine
engine.dist.file.name=engine.jar

# path to the distributive file of the engine; it will be used as the classpath 
# for building the product's netbeans project
# * if the ${build.engine} has been set to 'false', make sure that 
#   ${engine.dist.file} points to a precompiled engine
engine.dist.file=${engine.dist.dir}/${engine.dist.file.name}

downloads.cache.dir=${packaged.data.dir}/.raw

# various paths and file names that will be used for packaging the 
# product
package.dir=${work.dir}/package

package.descriptor.path=registry.xml

product.path=products/${product.uid}/${product.version}/${product.platforms}
product.logic.path=${product.path}/logic
product.data.path=${product.path}/data
product.icon.path=${product.path}/icon.png

product.icon.uri=resource:${product.icon.path}

product.dist.file.name=${product.uid},${product.version},${product.platforms}.jar

# name of the product's configuration logic jar with index ${i}
product.logic.file.name=logic,${i}.jar
product.data.file.name=data,${i}.jar

# list of the locally cached pre-packaged data files
# * the length of the list equals to ${product.data.length}
# * ${packaged.data.dir} is the path to the local packaged data repository and
#   is environment specific; it is expected to be passed in via the environment
#   properties
product.packaged.data.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar
product.packaged.data.properties.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar.properties

# product icon and the localizing bundle, which is expected to contain
# display names and descriptions for all locales, supported by the product
# * these are file paths as opposed to uris for configuration logic and
#   installation data
product.icon=${cvs.dir}/data/icon.png
product.bundle=${cvs.dir}/data/Bundle
