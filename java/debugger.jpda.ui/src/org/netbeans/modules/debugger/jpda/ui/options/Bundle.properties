# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

LBL_JavaDebugger=Java Debugger
HINT_JavaDebugger=Options for Java Debugger
KW_JavaDebugger=debug,Java Debugger Options,Debug Console Options,Debug Step Options,Debug Formatter Options

CategoryPanelGeneral.stopOnExceptionsCheckBox.text=Stop on uncaught &exceptions
CategoryPanelGeneral.applyCodeChangesCheckBox.text=&Apply code changes after save (in "Compile on Save" mode only)
CategoryPanelGeneral.breakpointsSuspendLabel.text=New &breakpoints suspend
CategoryPanelGeneral.breakpointsSuspendCB.allThreads=all threads
CategoryPanelGeneral.breakpointsSuspendCB.breakpointThread=breakpoint thread
CategoryPanelGeneral.breakpointsSuspendCB.noThread=no thread (logging)
CategoryPanelGeneral.stepsResumeLabel.text=&Steps resume
CategoryPanelGeneral.stepsResumeCB.allThreads=all threads
CategoryPanelGeneral.stepsResumeCB.currentThread=current thread only
CategoryPanelGeneral.openDebuggerConsoleCheckBox.text=Open Debugger &Console for debugging session
CategoryPanelGeneral.reuseTabsCheckBox.text=&Reuse Editor when displaying source code

CategoryPanelGeneral.kw1=uncaught exceptions
CategoryPanelGeneral.kw2=Apply code changes
CategoryPanelGeneral.kw3=breakpoints suspend
CategoryPanelGeneral.kw4=resume
CategoryPanelGeneral.kw5=Debugger Console
CategoryPanelGeneral.kw6=Reuse Editor

CategoryPanelStepFilters.useStepFiltersCheckBox.text=&Do not step into
CategoryPanelStepFilters.filterSyntheticCheckBox.text=&synthetic methods
CategoryPanelStepFilters.filterStaticInitCheckBox.text=static initia&lizers
CategoryPanelStepFilters.filterConstructorsCheckBox.text=&constructors
CategoryPanelStepFilters.filterClassesLabel.text=classes &matching:
CategoryPanelStepFilters.stepThroughFiltersCheckBox.text=Step through the &filters to reach unfiltered code
CategoryPanelStepFilters.filterAddButton.text=&Add...
CategoryPanelStepFilters.filterRemoveButton.text=&Remove
CategoryPanelStepFilters.filtersCheckAllButton.text=C&heck All
CategoryPanelStepFilters.filtersUncheckAllButton.text=U&ncheck All

CategoryPanelStepFilters.kw1=step
CategoryPanelStepFilters.kw2=step into
CategoryPanelStepFilters.kw3=synthetic

CategoryPanelFormatters.formattersAddButton.text=&Add...
CategoryPanelFormatters.formattersRemoveButton.text=&Remove
CategoryPanelFormatters.formattersRemoveButton.tooltip=Default formatters can not be removed. Deselect them instead.
CategoryPanelFormatters.copyButton.text=&Copy
CategoryPanelFormatters.editButton.text=&Edit...
CategoryPanelFormatters.editButton.tooltip=Default formatters can not be edited. Use Copy to make modifications.
CategoryPanelFormatters.formattersMoveUpButton.text=Move &Up
CategoryPanelFormatters.formattersMoveDownButton.text=Move &Down
CategoryPanelFormatters.formatterNameLabel.text=Formatter Details
CategoryPanelFormatters.formatterClassTypesLabel.text=C&lass Types:
CategoryPanelFormatters.formatValueLabel.text=&Value formatted as a result of code snippet:
CategoryPanelFormatters.formatChildrenLabel.text=C&hildren displayed if this evaluates to true:
CategoryPanelFormatters.formatChildrenLabelNoTestCode.text=C&hildren displayed as a result of code snippet:
CategoryPanelFormatters.formatChildrenLabelNoTestVars.text=C&hildren displayed as a list of variables:
CategoryPanelFormatters.formatChildrenListTable.Name=Name
CategoryPanelFormatters.formatChildrenListTable.Value=Value
CategoryPanelFormatters.addDLG.nameLabel=Name:
CategoryPanelFormatters.addDLG.title=Add Variable Formatter
TTL_AddFormatter=Add Variable Formatter
TTL_EditFormatter=Edit Variable Formatter

CategoryPanelFormatters.kw1=Formatter
CategoryPanelFormatters.kw2=Variable Formatter

JavaDebuggerPanel.categoriesLabel.text=Cate&gories:
JavaDebuggerPanel.categoryRadioButtonGeneral.text=General
JavaDebuggerPanel.categoryRadioButtonStepFilters.text=Step Filters
JavaDebuggerPanel.categoryRadioButtonFormatters.text=Variable Formatters
VariableFormatterEditPanel.nameLabel.text=Formatter &Name:
VariableFormatterEditPanel.nameTextField.text=
VariableFormatterEditPanel.classTypesLabel.text=&Class types:
VariableFormatterEditPanel.classTypesTextField.text=
VariableFormatterEditPanel.subtypesCheckBox.text=including &subtypes
VariableFormatterEditPanel.valueFormatCheckBox.text=&Value formatted as a result of code snippet:
VariableFormatterEditPanel.childrenFormatCheckBox.text=C&hildren displayed as:
VariableFormatterEditPanel.childrenCodeRadioButton.text=result of c&ode snippet:
VariableFormatterEditPanel.childrenVariablesRadioButton.text=&list of variables:
VariableFormatterEditPanel.addVarButton.text=&Add
VariableFormatterEditPanel.removeVarButton.text=&Remove
VariableFormatterEditPanel.moveUpVarButton.text=Move &Up
VariableFormatterEditPanel.moveDownVarButton.text=Move &Down
VariableFormatterEditPanel.testChildrenCheckBox.text=&Test expression if variable can be expanded:
VariableFormatterEditPanel.testChildrenCheckBox.tooltip=No children if expression evaluates to false.
MSG_EmptyFormatterName=A formatter name needs to be provided.
MSG_EmptyClassName=A class name needs to be provided.
MSG_InvalidClassNameAtPos=Invalid class name at position {0}.
MSG_ExistingFormatterName=Formatter of this name already exists.
MSG_NoFormatSelected=Either Value, Children or both need to be formatted.
CategoryPanelFormatters.subtypesLabel.text=(including subtypes)
CategoryPanelFormatters.childrenCodeLabel.text=Children displayed as a result of c&ode snippet:
CategoryPanelFormatters.childrenVarsLabel.text=Children displayed as &list of variables:
CategoryPanelFormatters.testChildrenTextField.text=
CategoryPanelFormatters.formattersMoveButtons.tooltip=Allows to change order - first applicable formatter from the top of the list is used.
VariableFormatterEditPanel.classTypesLabel.tooltip=Comma-separated list of fully qualified class names, whose instances are formatted.
CategoryPanelStepFilters.filterClassesLabel.a11y.name=Matching Classes
CategoryPanelStepFilters.filterClassesLabel.a11y.description=Do not step into classes matching items in this list.
CategoryPanelFormatters.formattersList.a11y.name=Formatters List
CategoryPanelFormatters.formattersList.a11y.description=List of variable formatters.
VariableFormatterEditPanel.childrenVariablesTable.a11y.name=List of Variables
VariableFormatterEditPanel.childrenVariablesTable.a11y.description=Children displayed as this list of variables.
Categories_description=Options categories
CategoryPanelGeneral.stopOnExceptionsCheckBox.AccessibleContext.accessibleDescription=Debugger will suspend execution when an uncaught exception is thrown.
CategoryPanelGeneral.applyCodeChangesCheckBox.AccessibleContext.accessibleDescription=When Compile on Save is on, apply code changes on save.
CategoryPanelGeneral.breakpointsSuspendLabel.AccessibleContext.accessibleDescription=Specify which threads a breakpoint will suspend.
CategoryPanelGeneral.stepsResumeLabel.AccessibleContext.accessibleDescription=Specify which threads steps resume.
CategoryPanelGeneral.openDebuggerConsoleCheckBox.AccessibleContext.accessibleDescription=Whether to open the debugger console when debugger session is started.
CategoryPanelGeneral.reuseTabsCheckBox.AccessibleContext.accessibleDescription=Whether the editor tab should be reused when debugger opens source files.
CategoryPanelStepFilters.useStepFiltersCheckBox.AccessibleContext.accessibleDescription=Select below where the debugger should not step into.
CategoryPanelStepFilters.filterSyntheticCheckBox.AccessibleContext.accessibleDescription=Do not step into synthetic methods.
CategoryPanelStepFilters.filterStaticInitCheckBox.AccessibleContext.accessibleDescription=Do not step into static initializers.
CategoryPanelStepFilters.filterConstructorsCheckBox.AccessibleContext.accessibleDescription=Do not step into constructors.
CategoryPanelStepFilters.filterClassesLabel.AccessibleContext.accessibleDescription=Do not step into classes matching patterns in the table below.
CategoryPanelStepFilters.stepThroughFiltersCheckBox.AccessibleContext.accessibleDescription=Whether to silently step through the filters to reach potentially unfiltered code.
CategoryPanelStepFilters.filterAddButton.AccessibleContext.accessibleDescription=Add a new classes matching filter into the table.
CategoryPanelStepFilters.filterRemoveButton.AccessibleContext.accessibleDescription=Remove the selected classes matching filter from the table.
CategoryPanelStepFilters.filtersCheckAllButton.AccessibleContext.accessibleDescription=Select all classes matching filters in the table.
CategoryPanelStepFilters.filtersUncheckAllButton.AccessibleContext.accessibleDescription=Deselect all classes matching filters in the table.
VariableFormatterEditPanel.nameLabel.AccessibleContext.accessibleDescription=Display name of the formatter.
VariableFormatterEditPanel.classTypesLabel.AccessibleContext.accessibleDescription=Class types to format.
VariableFormatterEditPanel.subtypesCheckBox.AccessibleContext.accessibleDescription=Whether to format also subtypes of the provided class type.
VariableFormatterEditPanel.valueFormatCheckBox.AccessibleContext.accessibleDescription=Provide an expression to format the value.
VariableFormatterEditPanel.childrenFormatCheckBox.AccessibleContext.accessibleDescription=Choose how to format children below.
VariableFormatterEditPanel.childrenCodeRadioButton.AccessibleContext.accessibleDescription=Children are formatted as a result of code snippet provided below.
VariableFormatterEditPanel.childrenVariablesRadioButton.AccessibleContext.accessibleDescription=Children are formatted as a list of variables described in the table below.
VariableFormatterEditPanel.addVarButton.AccessibleContext.accessibleDescription=Add a new variable into the list of variables that format children.
VariableFormatterEditPanel.removeVarButton.AccessibleContext.accessibleDescription=Remove selected variable from the list of variables that format children.
VariableFormatterEditPanel.moveUpVarButton.AccessibleContext.accessibleDescription=Move up a selected variable.
VariableFormatterEditPanel.moveDownVarButton.AccessibleContext.accessibleDescription=Move down a selected variable.
CategoryPanelFormatters.formattersAddButton.AccessibleContext.accessibleDescription=Add a new variable formatter into the list.
CategoryPanelFormatters.copyButton.AccessibleContext.accessibleDescription=Copy the selected variable formatter.
CategoryPanelFormatters.editButton.AccessibleContext.accessibleDescription=Edit the selected variable formatter.
CategoryPanelFormatters.formattersRemoveButton.AccessibleContext.accessibleDescription=Remove the selected variable formatter from the list.
CategoryPanelFormatters.formatterClassTypesLabel.AccessibleContext.accessibleDescription=The class types that are formatted by the selected formatter.
CategoryPanelFormatters.subtypesLabel.AccessibleContext.accessibleDescription=Whether subtypes are also formatted.
CategoryPanelFormatters.formatValueLabel.AccessibleContext.accessibleDescription=Value is formatted as a result of code below.
CategoryPanelFormatters.formatChildrenLabel.AccessibleContext.accessibleDescription=Children are displayed if the condition is true.
CategoryPanelFormatters.childrenCodeLabel.AccessibleContext.accessibleDescription=Children are formatted as a result of code below.
CategoryPanelFormatters.childrenVarsLabel.AccessibleContext.accessibleDescription=Children are formatted as a list of variables in the table below.
