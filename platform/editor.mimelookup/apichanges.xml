<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<?xml-stylesheet type="text/xml" href="../../nbbuild/javadoctools/apichanges.xsl"?>
<!DOCTYPE apichanges PUBLIC "-//NetBeans//DTD API changes list 1.0//EN" "../../nbbuild/javadoctools/apichanges.dtd">

<!--

INFO FOR PEOPLE ADDING CHANGES:

Check the DTD (apichanges.dtd) for details on the syntax. You do not
need to regenerate the HTML, as this is part of Javadoc generation; just
change the XML. Rough syntax of a change (several parts optional):

<change>
    <api name="compiler"/>
    <summary>Some brief description here, can use <b>XHTML</b></summary>
    <version major="1" minor="99"/>
    <date day="13" month="6" year="2001"/>
    <author login="jrhacker"/>
    <compatibility addition="yes"/>
    <description>
        The main description of the change here.
        Again can use full <b>XHTML</b> as needed.
    </description>
    <class package="org.openide.compiler" name="DoWhatIWantCompiler"/>
    <issue number="14309"/>
</change>

Also permitted elements: <package>, <branch>. <version> is API spec
version, recommended for all new changes. <compatibility> should say
if things were added/modified/deprecated/etc. and give all information
related to upgrading old code. List affected top-level classes and
link to issue numbers if applicable. See the DTD for more details.

Changes need not be in any particular order, they are sorted in various
ways by the stylesheet anyway.

Dates are assumed to mean "on the trunk". If you *also* make the same
change on a stabilization branch, use the <branch> tag to indicate this
and explain why the change was made on a branch in the <description>.

Please only change this file on the trunk! Rather: you can change it
on branches if you want, but these changes will be ignored; only the
trunk version of this file is important.

Deprecations do not count as incompatible, assuming that code using the
deprecated calls continues to see their documented behavior. But do
specify deprecation="yes" in <compatibility>.

This file is not a replacement for Javadoc: it is intended to list changes,
not describe the complete current behavior, for which ordinary documentation
is the proper place.

-->

<apichanges>

    <!-- First, a list of API names you may use: -->
    <apidefs>
        <apidef name="MimeLookupAPI">MimeLookup API</apidef>
        <!-- etc. -->
    </apidefs>

    <!-- ACTUAL CHANGES BEGIN HERE: -->

    <changes>
        <change id="MimePath.inherited">
            <summary>Access to parent MIME type and all included paths</summary>
            <version major="1" minor="31"/>
            <date day="27" month="2" year="2013"/>
            <author login="sdedic"/>
            <compatibility binary="compatible" source="compatible" semantic="compatible" addition="no" deletion="no" modification="no" deprecation="yes"/>
            <description>
                <p>
                    <code>getIncludedPaths</code> can be now used to compute all MimePaths that should
                    be considered for the content. In the past, reflection was used to access this functionality.
                </p>
                <p>
                    <code>getInheritedType</code> provides generalized or parent MIME type for the content, 
                    which allows to search settings (services) fallbacks.
                </p>
            </description>
            <class package="org.netbeans.api.editor.mimelookup" name="MimePath"/>
            <issue number="226122"/>
        </change>
        <change id="Class2LayerFolder.deprecated">
            <summary>Class2LayerFolder Deprecated and not used</summary>
            <version major="1" minor="20"/>
            <date day="4" month="10" year="2010"/>
            <author login="jlahoda"/>
            <compatibility binary="compatible" source="compatible" semantic="incompatible" addition="no" deletion="no" modification="no" deprecation="yes"/>
            <description>
                <code>Class2LayerFolder</code> has been deprecated and is ignored.
            </description>
            <issue number="190606"/>
        </change>

        <change id="MimeLookupRegistration">
            <summary>@MimeLocation, @MimeRegistration and @MimeRegistrations added</summary>
            <version major="1" minor="19"/>
            <date day="4" month="10" year="2010"/>
            <author login="jlahoda"/>
            <compatibility binary="compatible" source="compatible" semantic="compatible" addition="yes" deletion="no" modification="no" />
            <description>
                Added <code>@MimeLocation</code>, <code>@MimeRegistration</code> and <code>@MimeRegistrations</code>
                that allow to register services to the MimeLookup.
            </description>
            <issue number="190606"/>
        </change>

        <change id="MimeLookup.getLookup-mimePath-as-String-added">
            <summary>MimeLookup.getLookup(String mimePath) method added</summary>
            <version major="1" minor="8"/>
            <date day="18" month="9" year="2007"/>
            <author login="mmetelka"/>
            <compatibility binary="compatible" source="compatible" semantic="compatible" addition="yes" deletion="no" modification="no" />
            <description>
                <code>MimeLookup.getLookup(String mimePath)</code> converts
                the (usually held) string mimePath to the <code>MimePath</code>
                object automatically.
            </description>
        </change>

        <change id="MimePath.validate.added">
            <summary>MimePath.validate methods added</summary>
            <version major="1" minor="7"/>
            <date day="28" month="6" year="2007"/>
            <author login="vstejskal"/>
            <compatibility binary="compatible" source="compatible" semantic="compatible" addition="yes" deletion="no" modification="yes" />
            <description>
                The <code>validate(CharSequence path)</code> and 
                <code>validate(CharSequence type, CharSequence subtype)</code> methods
                were added to the <code>MimePath</code> class to allow validating
                mime paths and mime type components.
            </description>
        </change>

    </changes>

    <!-- Now the surrounding HTML text and document structure: -->

    <htmlcontents>
<!-- Generated from apichanges.xml -->
    <head>
      <title>Change History for the Editor Library 2 API</title>
      <link rel="stylesheet" href="prose.css" type="text/css"/>
    </head>
    <body>

<p class="overviewlink"><a href="overview-summary.html">Overview</a></p>

<h1>Introduction</h1>

<p>This document lists changes made to the <a href="overview-summary.html">Editor Library 2 API</a>.</p>

<!-- The actual lists of changes, as summaries and details: -->
      <hr/>
      <standard-changelists module-code-name="org.netbeans.modules.editor.lib2/1"/>

      <hr/><p>@FOOTER@</p>

    </body>
  </htmlcontents>

</apichanges>
