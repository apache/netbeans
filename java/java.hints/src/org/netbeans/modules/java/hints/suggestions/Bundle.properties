# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

DN_org.netbeans.modules.java.hints.suggestions.Tiny.flipEquals=Flip .equals
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.flipEquals=Allows to flip .equals parameter and call site
ERR_flipEquals=Flip .equals
FIX_flipEquals=Flip .equals
DN_org.netbeans.modules.java.hints.suggestions.Tiny.convertToDifferentBase=Convert integer constant to different base
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.convertToDifferentBase=Convert integer constant to different base
ERR_convertToDifferentBase=Convert the integer constant to different radix
FIX_convertToDifferentBase_16=Convert to hexadecimal constant
FIX_convertToDifferentBase_10=Convert to decimal constant
FIX_convertToDifferentBase_8=Convert to octal constant
FIX_convertToDifferentBase_2=Convert to binary constant

DN_org.netbeans.modules.java.hints.suggestions.ExpandEnhancedForLoop=Expand Enhanced For Loop
DESC_org.netbeans.modules.java.hints.suggestions.ExpandEnhancedForLoop=Expand Enhanced For Loop
ERR_ExpandEhancedForLoop=Convert to for (Iterator....) {}
FIX_ExpandEhancedForLoop=Convert to for (Iterator....) {}

DN_org.netbeans.modules.java.hints.suggestions.Tiny.splitDeclaration=Split Declaration
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.splitDeclaration=Splits declaration with initializer to a declaration and assignment
FIX_splitDeclaration=Split into declaration and assignment
ERR_splitDeclaration=May split declaration into a declaration and assignment

DN_org.netbeans.modules.java.hints.suggestions.CreateSubclass=Create Subclass
DESC_org.netbeans.modules.java.hints.suggestions.CreateSubclass=Create Subclass
ERR_CreateSubclass=Create Subclass
FIX_CreateSubclass=Create Subclass
ERR_ImplementAbstractClass=Implement Abstract Class
FIX_ImplementAbstractClass=Implement Abstract Class
ERR_ImplementInterface=Implement Interface
FIX_ImplementInterface=Implement Interface
LBL_ClassName=Class Name:
LBL_PackageName=Package Name:
ERR_IncompatibleSupertype=Selected class {0} has an incompatible supertype

DN_org.netbeans.modules.java.hints.suggestions.Tiny.fillSwitch=Fill Missing Cases to Switch
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.fillSwitch=Adds missing cases to switch statement. \
The default clause template should be one Java statement, occurrences of $expression will be replaced \
with the expression over which the switch statement works.
ERR_Tiny.fillSwitchDefault=the default clause is missing
ERR_Tiny.fillSwitchCasesAndDefault=case clauses are missing for some enum constants, as is the default clause
ERR_Tiny.fillSwitchCases=case clauses are missing for some enum constants
FIX_Tiny.fillSwitchDefault=Add missing default clause
FIX_Tiny.fillSwitchCasesAndDefault=Add missing case clauses and the default clause
FIX_Tiny.fillSwitchCases=Add missing case clauses
FillSwitchCustomizer.defaultTemplate.text=
FillSwitchCustomizer.generateDefault.text=Generate default clause, if missing
FillSwitchCustomizer.jLabel1.text=Template:
FillSwitchCustomizer.jLabel1.AccessibleContext.accessibleDescription=Default clause template
DN_org.netbeans.modules.java.hints.suggestions.Tiny.inlineRedundantVar=Inline Redundant Variable
DESC_org.netbeans.modules.java.hints.suggestions.Tiny.inlineRedundantVar=Allows users to inline redundant local variables.
ERR_Tiny.inlineRedundantVar=Local variable {0} is redundant
FIX_Tiny.inlineRedundantVar=Inline redundant variable {0}

DESC_TooStrongCast=Reports type casts, which are too strict and casting to a more general type would be sufficient for \
    the actual expression. Sometimes, an instance is casted to a specific subtype, but methods \
    invoked or fields used from the casted instance are actually defined by some supertype. In that case \
    cast to too specific type introduces an unnecessary coupling to the code and limits its extensibility. \
    <p/>\
    This inspection will suggest to use the most general type which would satisfy the expression's needs. 

DN_ConvertIfToSwitch=Replace chain of ifs with switch
DESC_ConvertIfToSwitch=Sometimes <i>if</i> statements are chained and form a series of == comparisons against constants. \
    Such situation is more readable if written using <i>switch</i>< statement. This hint suggests the change \
    if the number of <i>if</i>s exceeds a threshold.

OPT_ConvertIfToSwitch_Threshold=Minimum branch count
DESC_ConvertIfToSwitch_Threshold=The hint will appear only when if-else statement chain contains at least this number of branches

OPT_ConvertIfToSwitch_EmptyDefault=Generate empty default
DESC_ConvertIfToSwitch_EmptyDefault=If checked, the hint will generate an empty default even if no final `else'' was present

HINT_ConvertIfToSwitch=Replace chain of ifs with switch

ConstantNameOptions.jLabel1.text=Match pattern:
ConstantNameOptions.namePattern.text=
ConstantNameOptions.immutableCheck.text=Check only immutable types
ConstantNameOptions.jLabel3.text=Length min:
ConstantNameOptions.jLabel4.text=max:

DN_ConstantNameHint=Constant naming conventions
DESC_ConstantNameHint=Checks that constant names follow the prescribed naming conventions. \
    A constant is field which is <b>static</b> and <b>final</b>. The naming convention is \
    defined using a regular expression, minimum and maximum length of the identifier. If a \
    length is set to 0, the constraint does not apply at all. Set the match expression to empty \
    string to disable regular expression matches. \
    <p/>\
    If <i>Check only immutable types</i> is checked, only primitives and immutable values are \
    checked. Immutable values include <b>null</b>, zero-sized arrays (of any type), enumeration values \
    and certan predefined JDK classes, such as <b>java.awt.Color</b> and the like.\
    <p/>\
    You may extend the list of types treated as immutable values with your own classes.

DN_ConvertVarLambdaParameters=Convert Lambda Parameter Type to 'var' Type
DESC_ConvertVarLambdaParameters=Convert lambda explicit or implicit parameter type to 'var' type. \
    The hint will be disable for mixed or error parameter type.
FIX_ConvertVarLambdaParameters=Use var parameter types
ERR_ConvertVarLambdaParameters=Use var parameter types