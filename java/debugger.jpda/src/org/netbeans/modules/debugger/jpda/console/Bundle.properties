# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


CTL_DebuggerConsole_Title = Debugger Console
CTL_ProcessOutput_Title = Process Output

#DebuggerOutput
CTL_Attaching_socket=Attaching to {0}:{1}
CTL_Attaching_shmem=Attaching to {0}
CTL_Attaching_pid=Attaching to {0}
# Used for an unknown transport method:
CTL_Attaching=Attaching...
CTL_Listening_shmem=Listening on {0}
CTL_Listening_socket=Listening on {0}
CTL_Launching=Launching: {0}

CTL_Connection_refused=Connection refused.
CTL_Unknown_host=Unknown host.

CTL_Step_Into=Step Into
CTL_Step_Over=Step Over
CTL_Step_Out=Step Out
CTL_Continue=Continue
CTL_Pause=Pause

CTL_Debugger_running=User program running
CTL_Debugger_paused=User program paused
CTL_Debugger_stopped=User program stopped
CTL_Debugger_finished=User program finished
CTL_Thread_stopped_no_line=Thread {0} stopped at {1}.{2}.
CTL_Thread_stopped_no_line_no_source=Thread {0} stopped.
CTL_Thread_stopped=Thread {0} stopped at {1}:{3}.
CTL_Thread_stopped_no_source=Thread {0} stopped at {1}:{3} - unavailable source file.
CTL_Thread_stopped_no_source_no_line=Thread {0} stopped at {1}.{2} - unavailable source file.
CTL_Thread_stopped_no_info=Thread {0} stopped at {1}:{3} - compiled without debug info.
CTL_Thread_stopped_no_info_no_line=Thread {0} stopped at {1}.{2} - compiled without debug info.
CTL_Thread_stopped_before_op=Thread {0} stopped before call to ''{4}()'' at {1}:{3}.
CTL_Thread_stopped_after_op=Thread {0} stopped after return from ''{4}()'' at {1}:{3}.
