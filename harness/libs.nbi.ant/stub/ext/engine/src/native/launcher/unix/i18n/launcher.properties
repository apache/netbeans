# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
nlu.jvm.notfoundmessage=Java SE Development Kit (JDK) was not found on this computer\nJDK 7 is required for installing {product-name}. Make sure that the JDK is properly installed and run installer again.\nYou can specify valid JDK location using {0} installer argument.\n\nTo download the JDK, visit http://www.oracle.com/technetwork/java/javase/downloads/index.html
nlu.jvm.usererror=Java Runtime Environment (JRE) was not found at the specified location {0}
nlu.jvm.uncompatible=Unsupported JVM version at {0}.\nTry to specify another JVM location using parameter {1}
nlu.freespace=There is not enough free disk space to extract installation data\n{0} MB of free disk space is required in a temporary folder.\nClean up the disk space and run installer again. You can specify a temporary folder with sufficient disk space using {1} installer argument
nlu.integrity=\nInstaller file {0} seems to be corrupted
nlu.missing.external.resource=Can`t run {product-name} Installer.\nAn external file with necessary data is required but missing:\n{0}
nlu.cannot.create.tmpdir=Cannot create temporary directory {0}
nlu.cannot.extract.bundled.jvm=Cannot extract bundled JVM
nlu.cannot.unpack.jvm.file=Cannot unpack file {0}
nlu.error.verify.bundled.jvm=Cannot verify bundled JVM, try to search JVM on the system

nlu.running=Running the installer wizard...
nlu.starting=Configuring the installer...
nlu.extracting=Extracting installation data...
nlu.prepare.jvm=Preparing bundled JVM ...
nlu.jvm.search=Searching for JVM on the system...

nlu.msg.usage=\nUsage:
nlu.arg.javahome=\t{0}\t<dir>\tUsing java from <dir> for running application
nlu.arg.verbose=\t{0}\t\tUse verbose output
nlu.arg.output=\t{0}\t<out>\tRedirect all output to file <out>
nlu.arg.disable.space.check=\t{0}\t\tDisable free space check
nlu.arg.extract=\t{0}\t[dir]\tExtract all bundled data to <dir>.\n\t\t\t\tIf <dir> is not specified then extract to the current directory
nlu.arg.tempdir=\t{0}\t<dir>\tUse <dir> for extracting temporary data
nlu.arg.cpa=\t{0} <cp>\tAppend classpath with <cp>
nlu.arg.cpp=\t{0} <cp>\tPrepend classpath with <cp>
nlu.arg.locale=\t{0}\t<locale>\tOverride default locale with specified <locale>
nlu.arg.silent=\t{0}\t\tRun installer silently
nlu.arg.help=\t{0}\t\tShow this help


nlu.java.application.name.macosx={product-name} Installer
