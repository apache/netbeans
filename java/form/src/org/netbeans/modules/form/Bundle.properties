# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# message shown when something wrong with guarded blocks
MSG_ERR_GuardesBlocks=The form seems to be corrupted. The GUI builder\nis not able to find the sections with the generated code.\nThe special comments that denote the start and the end\nof these sections were removed or modified.\n\nThe form will be opened in read-only mode.\n\nSee http://wiki.netbeans.org/FormGuardedBlockError\nfor additional information.
MSG_ERR_GuardesBlocksTitle=Error while parsing form java source file

# display name of the Form Settings in Options
CTL_FormSettings=GUI Builder

# name provided from the top-level component, which does not have a variable name to return
CTL_FormTopContainerName=Form

# display name of the Form Loader
PROP_FormLoader_Name=Form Objects

# display name of Non-Visual Components Node
CTL_NonVisualComponents=Other Components

# formatting of the form multiview title
FMT_FormTitleWithContainerName={0} [{1}]

MSG_NonEditableTemplate=Template {0} is not editable.

# Control Panel -> Form Objects Property Names
PROP_LISTENER_GENERATION_STYLE=Listener Generation Style
HINT_LISTENER_GENERATION_STYLE=The style of generating code of event listeners
PROP_LAYOUT_CODE_TARGET=Layout Generation Style
HINT_LAYOUT_CODE_TARGET=The type of code generated for advanced layout features (requiring Java 6 or a special library).
PROP_AUTO_RESOURCE=Automatic Resource Management
HINT_AUTO_RESOURCE_GLOBAL=The automatic internationalization mode for newly created forms.
HINT_AUTO_RESOURCE_LOCAL=Select Internationalization to generate String property values \
in a resource bundle. Select All Resources to generate string, icon, color, and \
font values in a resource bundle. Select Resources + Injection to generate \
runtime resource injection code for resources instead of property setters. Select Off to have all \
property values generated directly in the Java file.
PROP_AUTO_I18N=Automatic Internationalization
HINT_AUTO_I18N=If turned on, all string properties in the form are automatically internationalized. \
If turned off, all automatically internationalized properties are changed back to hard-coded strings.
PROP_AUTO_SET_COMPONENT_NAME=Set Component Names
HINT_AUTO_SET_COMPONENT_NAME=If selected, the 'name' property of all components is set to the variable name automatically
HINT_SELECTION_BORDER_COLOR=The color of the border that marks components as selected.
HINT_GUIDING_LINE_COLOR=The color of the guiding line.
PROP_VARIABLES_MODIFIER=Variables Modifier
HINT_VARIABLES_MODIFIER=The access modifier of variables generated for components on the form.
HINT_FOLD_GENERATED_CODE=If selected, the generated code is folded.
PROP_LAYOUT_COMPONENT_HORIZONTAL_SIZE=Horizontal Size
HINT_LAYOUT_COMPONENT_HORIZONTAL_SIZE=Preferred horizontal size of the component in the layout.
PROP_LAYOUT_COMPONENT_VERTICAL_SIZE=Vertical Size
HINT_LAYOUT_COMPONENT_VERTICAL_SIZE=Preferred vertical size of the component in the layout.
PROP_LAYOUT_COMPONENT_HORIZONTAL_RESIZABLE=Horizontal Resizable
HINT_LAYOUT_COMPONENT_HORIZONTAL_RESIZABLE=Determines whether the component is horizontally resizable.
PROP_LAYOUT_COMPONENT_VERTICAL_RESIZABLE=Vertical Resizable
HINT_LAYOUT_COMPONENT_VERTICAL_RESIZABLE=Determines whether the component is vertically resizable.
HINT_ASSISTANT_SHOWN=If selected, the assistant is shown in the designer.
PROP_GENERATE_FQN=Generate Full Classnames
HINT_GENERATE_FQN=If selected then fully qualified names of classes are generated.

# form toolbar
CTL_SelectionButtonHint=Selection Mode
CTL_ConnectionButtonHint=Connection Mode
CTL_BeansButtonHint=Add Mode

CTL_PaletteButton_MenuItem=Show Add Button

ACSD_SelectionMode=If selected, the Form Editor is in \"Selection Mode\" - you may select components on the form.
ACSD_ConnectionMode=If selected, the Form Editor is in \"Connection Mode\" - you may connect components with a wizard.
ACSD_AddMode=If selected, the Form Editor is in \"Add Mode\" - you may add the selected bean to the form.

# HandleLayer
ACSN_HandleLayer=Visual form designer
ACSD_HandleLayer=Use Navigator for keyboard-only navigation

# displayed text of not set value (for "write only" properties)
CTL_ValueNotSet=<Not Set>

# value type displayed as tooltip in property sheet for properties without description
# {0} = property value type name
HINT_PropertyType=({0})

# value type displayed as tooltip in property sheet for properties having some description
# {0} = property value type name
# {1} = the original short description of the property
HINT_PropertyTypeWithDescription=({0})  {1}

# RADComponent PropertySets
CTL_PropertiesTab=Properties
CTL_PropertiesTabHint=Common properties of the JavaBeans component
CTL_AlternatePropertiesTab=Common
CTL_Properties2Tab=Other Properties
CTL_Properties2TabHint=Other properties of the JavaBeans component
CTL_AlternateProperties2Tab=Advanced
CTL_BindingTab=Binding
CTL_BindingTab0=Preferred
CTL_BindingTabHint0=Preferred binding properties
CTL_BindingTab1=Observable
CTL_BindingTabHint1=Properties that fire property changes.
CTL_BindingTab2=Non-observable
CTL_BindingTabHint2=These properties don't fire property changes and therefore will not work in read/write bindings.
CTL_EventsTab=Events
CTL_EventsTabHint=Events of the JavaBean
CTL_SyntheticTab=Code Generation
CTL_SyntheticTabHint=Properties that control the Java code generated for the JavaBeans component
CTL_SyntheticTab_Short=Code
CTL_LayoutTab=Layout
CTL_LayoutTabHint=Layout constraints properties

CTL_SetAction=Set Action...

# property set for root form's node
CTL_ResourceTab=Resources and Internationalization
CTL_ResourceTabHint=Properties that control automatic resource and internationalization management of the form

# Accessibility support
CTL_AccessibilityTab=Accessibility
CTL_AccessibilityTabHint=Properties of AccessibleContext of the component
PROP_AccessibleName=Accessible Name
PROP_AccessibleDescription=Accessible Description
PROP_AccessibleParent=Accessible Parent
MSG_CyclicAccessibleContext=the labelFor property can not be set to component itself

# names of PasteType for copy/paste and cut/paste operations
CTL_CopyPaste=Copy
CTL_CutPaste=Move

# hint for ButtonGroupProperty
HINT_ButtonGroup=Group of buttons in which this button belongs

ERR_COMPONENT_NAME_ALREADY_IN_USE=Two components in the same form cannot have the same name.
ERR_INVALID_COMPONENT_NAME=The name of a component must be a valid Java variable name.

# user entered value that passed through Property Editor, but failed in setter method of the property
MSG_ERR_WRITING_TO_PROPERTY=Failed to write the value to the property \"{0}\".

# formatting of a status line text shown during the opening of the form
# {0} = name of the form data object
FMT_PreparingForm=Preparing form to open: {0}
FMT_OpeningForm=Loading form: {0}
LBL_FormLoading=Loading ...

# error notifications shown when some errors/warnings occur during form loading
FMT_ERR_PersistenceManagerInstantiation=Cannot instantiate persistence manager:\n {0}

# warning message when a form was loaded with errors (not all data loaded)
MSG_FormLoadedWithErrors=Errors occurred in loading the form data. It is not recommended to use this form\n\
in editable mode now - data that could not be loaded would be lost after saving the form.\n\
Please go through the reported errors, try to fix them if possible, and open the form again.\n\
If you choose to open the form as View Only you may see which beans are missing.
CTL_ViewOnly=&View Only
CTL_AllowEditing=Allow &Editing
CTL_LB_InvalidComponent=invalid

# title of the warning message above
CTL_FormLoadedWithErrors=Warning - Form Loaded With Errors

# message when there's no PersistenceManager registered for loading forms
MSG_ERR_NoPersistenceManager=Internal error: there is no persistence manager registered.\n\
The form cannot be opened.

# message when no registered PersistenceManager is capable of loading the form
MSG_ERR_NotRecognizedForm=The form file format is not recognized. The form cannot be opened.

# message when some errors occurred in accessing the form file
MSG_ERR_LoadingErrors=Some errors occurred when trying to load the form file.\n\
The form cannot be opened.

# message when the form file contains invalid XML
MSG_ERR_InvalidXML=The form file does not contain valid XML. The form cannot be opened.

# message when the form file does not contain expected main element
# do not translate "Form"
MSG_ERR_MissingMainElement=Invalid format: main \"Form\" element not found in the form file.\nThe form cannot be opened.

# formatting of message when the for is of unsupported version
# {0} = version number
FMT_ERR_UnsupportedVersion=Unsupported form file version: {0}.\nThe form cannot be opened.

# formatting of warning message printed to console when a substitute form type is used
# {0} name of the opening form
# {1} name of the class used as the fallback form type alternative
# {2} name of the class that could not be used
FMT_FormTypeWarning=Opening form {0} as {1}.\n\      Could not use \
the declared superclass: {2}

# formatting of warning message printed to console when form type in form file
# is not compatible with superclass declared in the java file
# {0} name of the opening form
FMT_IncompatibleFormTypeWarning=[WARNING] Form {0} has an incompatible superclass declared in its Java file.

# formatting of message when the form cannot be based on given class
# {0} = the invalid base class name
FMT_ERR_InvalidBaseClass=Cannot determine form type ({0}).\n\
Please make sure the class is a JavaBeans component.\nThe form cannot be opened.

# message when the base class of the form cannot be determined
MSG_ERR_CannotDetermineBaseClass=Cannot determine the form type (the base class \
of the form cannot be loaded).\nThe form cannot be opened.

# message when there's a class name of component missing
MSG_ERR_MissingClass=Invalid format: missing class name.\nThe component cannot be loaded.

# formatting of message when a component class cannot be loaded (during form opening)
# {0} = name of the class that cannot be loaded
FMT_ERR_CannotLoadClass=Cannot load component class:  {0}\nThis usually happens when the class is not compiled or not part of the project libraries.

# formatting of message when an unknown element is found in form file
# {0} = name of the unknown element
FMT_ERR_UnknownElement=Found unknown component element: {0}

# formatting of message when a component instance cannot be created
# {0} = name of the class which cannot be instantiated
FMT_ERR_CannotCreateInstance=Cannot create instance of {0}.\n\
The component cannot be loaded.

# message when initialization of visual layout of loaded container failed
MSG_ERR_LayoutInitFailed=Failed to initialize layout of this container.

# message when no layout support found for a container
MSG_ERR_NoLayoutSupportFound=No layout support was found.\n\
Layout information for this container cannot be loaded.

# message when there's a property name missing in form file
MSG_ERR_MissingPropertyName=Invalid format: missing property {0} attribute.\n\
The property cannot be loaded.

# message when a specified property is unknown
MSG_ERR_UnknownProperty=No such property exists in the component.

# formatting of message when a property type class cannot be loaded
# {0} = name of the class that cannot be loaded
FMT_ERR_CannotLoadClass2=Cannot load property type class {0}.\nThe property cannot be loaded.

# message when the stored property type is not compatible with the property
MSG_ERR_IncompatiblePropertyType=Invalid format: the stored property type is incompatible.\n\
The property cannot be loaded.

# message when there's a property type missing in form file
MSG_ERR_MissingPropertyType=Invalid format: missing property type attribute.\n\
The property cannot be loaded.

# formatting of message when a property editor class cannot be loaded
# {0} = name of the class that cannot be loaded
FMT_ERR_CannotLoadClass3=Cannot load property editor class {0}.\nThe property cannot be loaded.

# formatting of message when a property editor instance cannot be created
# {0} = name of the class which cannot be instantiated
FMT_ERR_CannotCreateInstance2=Cannot create instance of property editor {0}.\n\
The property cannot be loaded.

# formatting of message when a string cannot be decoded as a primitive value
# {0} = decoded string
# {1) = target primitive type
FMT_ERR_CannotDecodePrimitive=Cannot decode \"{0}\" as {1}.\nThe property cannot be loaded.

# message when some error in reading property value occurs
MSG_ERR_CannotReadPropertyValue=Cannot read the property value.

# message when a property value is missing in the form file
MSG_ERR_MissingPropertyValue=Invalid format: the property value is missing.

# message when a loaded value cannot be set to property
MSG_ERR_CannotSetLoadedValue=Cannot set the loaded value to the property.

# formatting of message when trying to save to read only form file
# {0} = name of the form file
FMT_ERR_SaveToReadOnly=Internal error: tried to save to read-only file {0}.

# formatting of message when the form file for saving could not be locked
# {0} = name of the form file
FMT_ERR_CannotLockFormFile=Internal error: cannot obtain lock on file {0}.

# formatting of message when could not write the form file
# {0} = name of the form file
FMT_ERR_CannotWrtiteToFile=Cannot write to file {0}

# formatting of message when a value cannot be got from property to be saved
# {0} = name of the property
FMT_ERR_CannotGetPropertyValue=Cannot get the value of the \"{0}\" property.\n\
The property cannot be saved.

# formatting of message when a property value cannot be saved
# {0} = name of the property
FMT_ERR_CannotSaveProperty=Cannot save the value of the \"{0}\" property.

# formatting of message when a property value cannot be saved
# {0} = class name of property editor
FMT_ERR_CannotSaveProperty2=Cannot save property value using the {0} property editor.

# formatting of message when a property value cannot be saved
# {0} = value type class name
FMT_ERR_CannotSaveProperty3=Cannot save property value of type {0}.

# formats for description labels of various loading errors
FMT_ERR_LoadingComponent=Error in loading component: {0}
FMT_ERR_LoadingComponentProperty=Error in loading component property: {0}
FMT_ERR_LoadingLayout=Error in loading layout: {0}
FMT_ERR_LoadingLayoutProperty=Error in loading container layout property: {0}
FMT_ERR_LoadingLayoutConstraints=Error in loading layout constraints: {0}
FMT_ERR_LoadingLayoutConstraintsProperty=Error in loading layout constraint property: {0}

# string used for layout when building a location description of location in
# the tree, e.g. [JFrame]->container1->[layout]->property1
CTL_PathLayout=[layout]

# string used for layout when building a location description of location in
# the tree, e.g. [JFrame]->component1->[layout constraints]->property1
CTL_PathLayoutConstraints=[layout constraints]

# string used as chain link when building a location description in the tree,
# e.g. [JFrame]->container1->component1
CTL_PathLink=->

# formatting of Error message when a layout initialization fails
# {0} = layout class name
FMT_ERR_LayoutInit=Failed to initialize layout {0}.\nThe layout cannot be set.

# formatting of error message when no LayoutSupport is found for layout
# {0} = layout class name
FMT_ERR_LayoutNotFound=No support class found for layout {0}.\nThe layout cannot be set.

# message when initialization of visual layout of loaded container failed
MSG_ERR_LayoutInitFailed2=Initialization of the container layout support failed.\n\
Just limited basic support will be used.

# message shows restriction of usage of Borders
MSG_BorderNotApplicable=Cannot apply border. Borders can be used only with Swing JComponent subclasses.

# message shows restriction of usage of In-place text editing
MSG_ComponentNotShown=In-place text editing is available only for the shown components.

# formatting of error message when class of component added to form from palette
# cannot be loaded
# {0} = name of the class that cannot be loaded
# {1} = expected source of the component
FMT_ERR_CannotLoadClass4=Cannot load component class {0} from {1}.
MSG_ERR_CannotLoadClassReason1=The class could not be found. Note the class must be compiled \
and must be part of the sources or dependencies of the project where the target GUI form belongs to.
MSG_ERR_CannotLoadClassReason2=The class itself was found, but there was a problem initializing it, \
e.g. due to an exception in static initializer, or failure in loading an additional class needed by the \
component class. Check the attached exception.
CTL_ClassLoadingErrorTitle=Class Loading Error

# component instantiation error message
# {0} = name of the class that cannot be instantiated
FMT_ERR_CannotInstantiate1=Cannot instantiate {0} as a JavaBeans component.\n\
A usual cause of this error is that the class is abstract or does not have a \
public constructor with no parameters.
FMT_ERR_CannotInstantiate2=Failed to create an instance of {0} class.\n\
The class itself was loaded, but instantiating failed.\n\
This typically happens due to an exception in constructor/initializer code, or failure in \
loading an additional class needed by the component. Check the attached exception.
CTL_InstantiationErrorTitle=Component Instantiation Error

CTL_ShowExceptions=S&how Exceptions
CTL_HideExceptions=&Hide Exceptions
CTL_ShowHideExceptionsHint=Show/hide details about the exceptions that caused the failure.

# component instantiation error during copying
MSG_ERR_CannotCopyInstance=The bean instance of the component cannot be copied.

# message when trying to add (or copy) form class object to the same form
MSG_ERR_CannotAddForm=A form cannot be added to itself.

# {0} name of the class that cannot be added to selected container
FMT_CannotAdd=Cannot add {0} to this container.

# message when opening a form using Swing Application Framework
MSG_ERR_SwingAppEncountered=NetBeans support of Swing Application Framework has been discontinued.\n\
Please, use NetBeans 7.0 if you want to use this framework.

# Component Inspector
CTL_InspectorNavigatorCaption=Design
ACS_ComponentTree=Component tree
ACSD_ComponentTree=N/A
HINT_ComponentInspector=Component Inspector

# formatting of component node display name
# {0} = name of the component (typically variable name)
# {1} = short name of component class (without package)
FMT_ComponentNodeName={0} [{1}]

# formatting of component node display name for a component without a name
# {0} = short name of component class (without package)
FMT_UnnamedComponentNodeName=[{0}]

# formatting of form root node display name
# {0} = name of the form (class name)
FMT_FormNodeName=Form {0}

# formatting of a message that is displayed in the status line during setting layout
# {0} = class name of the layout
# {1} = displayName of the container to set the layout on
#FMT_MSG_SetLayout=Set {0} on {1}.

# formatting of a message that is displayed in the status line during setting layout
# when the layout cannot be set
# {0} = displayName of the container it is not possible to set the layout on
#FMT_MSG_CannotSetLayout=Cannot set layout on {0}.

# formatting of a message that is displayed in the status line during setting border
# {0} = class name of the border
# {1} = displayName of the component to set the border on
#FMT_MSG_SetBorder=Set {0} on {1}.

# formatting of a message that is displayed in the status line during setting border
# {0} = displayName of the component, the border cannot be set on
#FMT_MSG_CannotSetBorder=Cannot set border on {0}.

# formatting of a message that is displayed in the status line during adding
# a new component to a container
# {1} = short class name (without package) of the component to add
# {2} = display name of the container to add the component to
#FMT_MSG_AddComponent=Add {0} to {1}.

# formatting of a message that is displayed in the status line during adding
# a new component to "Other Components"
# {0} = short class name (without package) of the component to add
#FMT_MSG_AddToOthers=Add {0} to Other Components.

FMT_MSG_AddingComponent=Adding {0}

# form designer resizing
# {0} = current designer width
# {1} = current designer height
FMT_HINT_DesignerResizing=[{0}, {1}] To change the designer size, drag or doubleclick the border.
FMT_HINT_DesignerSize=[{0}, {1}]
CTL_SetDesignerSize_Title=Set Form Designer Size
CTL_SetDesignerSize_Label=&New Size (width, height):

# Events
MSG_CannotAttach=Cannot attach to the event handler.\n\
\tThe event handler is already used for an event of another type.
MSG_CannotRename=Cannot rename to an existing event handler.\n\
\tTo reattach, first remove the current handler and then attach to the existing one.

# The string event property value name when no event handler is attached to the event
CTL_NoEvent=<none>
FMT_MSG_HandlersFor=Handlers for {0}
FMT_MSG_InvalidJavaIdentifier={0} is not a Java identifier.
FMT_MSG_EmptyString=Empty string

# Code Generation
# A code generated into a new event handler method
# PARTIAL do not translate TODO
MSG_EventHandlerBody=// TODO add your handling code here:\n

CTL_LISTENER_ANONYMOUS_CLASSES=Anonymous Inner Classes
CTL_LISTENER_CEDL_INNERCLASS=One Inner Class
CTL_LISTENER_CEDL_MAINCLASS=Main Class

CTL_LAYOUT_CODE_AUTO=Automatic
CTL_LAYOUT_CODE_JDK6=Standard Java 6 code
CTL_LAYOUT_CODE_LIBRARY=Swing Layout Extensions Library

CTL_AUTO_RESOURCE_DEFAULT=Default
CTL_AUTO_RESOURCE_ON=On
CTL_AUTO_RESOURCE_OFF=Off

CTL_AUTO_NAMING_DEFAULT=Default
CTL_AUTO_NAMING_ON=On
CTL_AUTO_NAMING_OFF=Off

CTL_AUTO_OFF=Off
CTL_AUTO_I18N=Internationalization
CTL_AUTO_RESOURCING=All Resources
CTL_AUTO_INJECTION=All Resources + Injection

PROP_FORM_BUNDLE=Properties Bundle File
HINT_FORM_BUNDLE=Resource name of the properties bundle (e.g. my/pkg/Bundle)
MSG_InvalidBundleFileName=Invalid bundle file name.

PROP_DESIGN_LOCALE=Design Locale
HINT_DESIGN_LOCALE=Specific localization used or modified in the designer

# Comments generated around generated variables declarations
MSG_VariablesBegin=// Variables declaration - do not modify
MSG_VariablesEnd=// End of variables declaration
MSG_EventDispatchCodeComment=// Code for dispatching events from components to event handlers.\n
MSG_GeneratedCode=Generated Code
MSG_WrongLocalVariableSettingComment=\n// WARNING: Variable {0} should not be declared as local in initComponents() as long as \n \
// Forms property '''Listener Generation Style''' is set to '''Main Class''' or '''One Inner Class'''.\n \
// Check the values set in the components' '''Use Local Variable''' and \n \
// Forms '''Local Variables''' and '''Listener Generation Style''' properties.\n

VALUE_codeGen_generate=Generate Code
VALUE_codeGen_serialize=Serialize

MSG_JC_BeanClass=Bean Class 
MSG_JC_BeanClassDesc=The bean class for this component.
MSG_JC_VariableName=Variable Name
MSG_JC_VariableDesc=The name of the global variable generated for this component.
MSG_JC_TypeParameters=Type Parameters
MSG_JC_TypeParametersDesc=Type parameters string (if the type of this variable uses generics).
MSG_JC_VariableModifiers=Variable Modifiers
MSG_JC_VariableModifiersDesc=The modifiers of the variable generated for this component.
MSG_JC_CodeGeneration=Code Generation
MSG_JC_CodeGenerationDesc=Type of code generation for this component.
MSG_JC_PreCreationCode=Pre-Creation Code
MSG_JC_PreCreationCodeDesc=Code included before creation of this component.
MSG_JC_PostCreationCode=Post-Creation Code
MSG_JC_PostCreationCodeDesc=Code included after creation of this component.
MSG_JC_PreInitCode=Pre-Init Code
MSG_JC_PreInitCodeDesc=Code included before standard bean properties of this component are set.
MSG_JC_PostInitCode=Post-Init Code
MSG_JC_PostInitCodeDesc=Code included after all standard bean properties of this component are set.
MSG_JC_PostListenersCode=Post-Listeners Code
MSG_JC_PostListenersCodeDesc=Code included after all bean properties are set and listeners registered.
MSG_JC_PreAddCode=Pre-Adding Code
MSG_JC_PreAddCodeDesc=Code included before this component is added to the parent container.
MSG_JC_PostAddCode=Post-Adding Code
MSG_JC_PostAddCodeDesc=Code included after this component is added to the parent container.
MSG_JC_PrePopulationCode=Pre-Population Code
MSG_JC_PrePopulationCodeDesc=Code included before sub-components are added to this container.
MSG_JC_PostPopulationCode=Post-Population Code
MSG_JC_PostPopulationCodeDesc=Code included after sub-components are added to this container.
MSG_JC_AfterAllSetCode=After-All-Set Code
MSG_JC_AfterAllSetCodeDesc=Code included after the component is completely set up.
MSG_JC_PreDeclaration=Pre-Declaration Code
MSG_JC_PreDeclarationDesc=Code included before declaration of the variable.
MSG_JC_PostDeclaration=Post-Declaration Code
MSG_JC_PostDeclarationDesc=Code included after declaration of the variable.
MSG_JC_SerializeTo=Serialize To
MSG_JC_SerializeToDesc=The file into which this component is serialized.
MSG_JC_CustomCreationCode=Custom Creation Code
MSG_JC_CustomCreationCodeDesc=Custom code for creation (instantiation) of this component.
MSG_JC_UseLocalVar=Use Local Variable
MSG_JC_UseLocalVarDesc=If True, the variable is declared as local in initComponents().

HINT_VARIABLES_LOCAL=If selected, variables for components are generated as local in initComponents().
PROP_VARIABLES_LOCAL=Local Variables

HINT_GENERATE_MNEMONICS=You can define mnemonics of labels and buttons by using the '&' \
character inside the text property instead of setting the text and \
mnemonics properties separately. This allows precise mnemonics \
definition and easy internationalization. However, this feature \
requires the org.openide.awt.Mnemonics class, so you should turn it on \
only if you develop forms to be run within NetBeans IDE.
HINT_GENERATE_MNEMONICS2=If True, the "text" property of buttons and labels is generated using org.openide.awt.Mnemonics
PROP_GENERATE_MNEMONICS=Generate Mnemonics Code

# ParametersPicker, PropertyPicker, MethodPicker
# {0} = required type (short class name)
CTL_FMT_CW_SelectMethod=Select Method ({0})
# {0} = required type (short class name)
CTL_FMT_CW_SelectProperty=Select Property ({0})

CTL_CW_Component=&Component:
ACSD_CTL_CW_Component=N/A
CTL_CW_NotSet=<not set>
CTL_CW_Code=<code>
CTL_CW_GetParametersFrom=Get Parameter From:
CTL_CW_Value=&Value:
ACSD_CTL_CW_Value=N/A
CTL_CW_Bean=Bea&n:
ACSD_CTL_CW_Bean=N/A
CTL_CW_Property=&Property:
ACSD_CTL_CW_Property=N/A
CTL_CW_NoProperty=<No Property Selected>
CTL_CW_Method=Me&thod Call:
CTL_CW_MethodCall=Method Call
ACSD_CTL_CW_Method=N/A
CTL_CW_NoMethod=<No Method Selected>
CTL_CW_UserCode=U&ser Code:
ACSD_CTL_CW_UserCode=N/A
CTL_CW_SelectBean=<Select Bean>
CTL_CW_MethodList=&Methods
ACSD_CTL_CW_MethodList=N/A
CTL_CW_PropertyList=&Properties
ACSD_CTL_CW_PropertyList=N/A
ACSD_ParametersPicker=N/A
ACSD_PropertyPicker=N/A
ACSD_MethodPicker=N/A

ACSD_CTL_CW_ValueField=N/A
ACSD_CTL_CW_BeanCombo=N/A
ACSD_CTL_CW_PropertyLabel=N/A
ACSD_CTL_CW_MethodLabel=N/A
ACSD_CTL_CW_UserCodeArea=N/A

ACSD_CTL_CW_PropertyButton=N/AreportErrors
ACSD_CTL_CW_MethodButton=N/A

#ParametersPicker - nothing was entered
ERR_NothingEntered=No valid value was entered.

# RADConnectionPropertyEditor - display name
CTL_FormConnection_DisplayName=Value from existing component
CTL_CustomCode_DisplayName=Custom code
ACSN_CustomCode_EditorPane=Custom code editor pane

# text displayed when connection is not valid (e.g. component removed)
CTL_CONNECTION_INVALID=<Invalid Connection>

# Formatting of display value for connection to property
# {0} = name of the component to obtain the property from
# {1} = name of the property
FMT_PROPERTY_CONN=<{0}.{1}>

# Formatting of display value for connection to bean
# {0} = name of the component to obtain the property from
FMT_BEAN_CONN=<{0}>

# Formatting of display value for connection to property
# {0} = name of the component to call the method on
# {1} = name of the method
FMT_METHOD_CONN=<{0}.{1}>

# Formatting of display value for connection to value
# {0} = the value string
FMT_VALUE_CONN=<Value: {0}>

# display value for connection to custom code
CTL_CODE_CONN=<User Code>

# property value of array type is displayed as Array of ...<br> 
CTL_ArrayOf=Array of

# default names of adding MenuItems during menu editing.
CTL_DefaultFileMenu=File
CTL_DefaultEditMenu=Edit

#ComponentChooserEditor
CTL_NoComponent=<none>
CTL_DefaultComponent=<default>
CTL_InvalidReference=<Invalid Reference>
CTL_ComponentChooserEditor_DisplayName=Component chooser

#ButtonGroupPropertyEditor
CTL_ButtonGroupPropertyEditor_DisplayName=Button group chooser

#AccessibleParentEditor
CTL_AccessibleParentEditor_DisplayName=Accessible Parent Editor

#EventCustomEditor
CTL_EE_ADD=&Add...
CTL_EE_REMOVE=&Remove
CTL_EE_RENAME=Re&name...
CTL_EE_RENAME_CAPTION=Rename Handler
CTL_EE_RENAME_LABEL=&New name for handler:
CTL_EE_NOT_IDENTIFIER=The handler name is not a valid Java identifier.
CTL_EE_ALREADY_EXIST=Event handler of this name is already included.
CTL_EE_ADD_CAPTION=Add Handler
CTL_EE_ADD_LABEL=&New Handler Name:
CTL_EE_Handlers=Han&dlers
ACSD_CTL_EE_Handlers=N/A
ACSD_CTL_EE_ADD=N/A
ACSD_CTL_EE_REMOVE=N/A
ACSD_CTL_EE_RENAME=N/A
ACSD_EventCustomEditor=N/A

MSG_FormSizePolicy=Form Size Policy
HINT_FormSizePolicy=Sets the policy for the generation of resize code.
MSG_FormSize=Form Size
HINT_FormSize=Sets the initial size of the form.
MSG_FormPosition=Form Position
HINT_FormPosition=Sets the screen position where the form opens.
MSG_GeneratePosition=Generate Position
HINT_GeneratePosition=If True, generates code that positions the form as specified by the Form Position property.
MSG_GenerateSize=Generate Size
HINT_GenerateSize=If True, generates code that sets the size of the form as specified by the Form Size property.
MSG_GenerateCenter=Generate Center
HINT_GenerateCenter=If True, generates code that positions the form at the center of the screen.
MSG_DesignerSize=Designer Size
HINT_DesignerSize=The size of the active form designer area.

# names of property values for Size Policy property
VALUE_sizepolicy_pack=Generate pack()
VALUE_sizepolicy_full=Generate Resize Code
VALUE_sizepolicy_none=No Resize Code

#Layout Size Property Editor
VALUE_SizeNotExplicitelyDefined=Default

#Form Custom Editor
CTL_PropertyEditorDoesNot=Custom editing of this property is not supported.
CTL_DefaultEditor_DisplayName=Default editor
# {0} = description of selected custom editor
ACSD_FormCustomEditor=Editing property {0}

# Selecting editing mode for the property
# {0} = component name (name of the variable)
# {1} = name of the property being set
# Example:
# Set jButton1's text property using:
FMT_EditingModeLabel1=<html>Set <b>{0}</b>''s <b>{1}</b> property using:
# simplified version - if the edited property is not a bean property
# {0} = name of the property being set
FMT_EditingModeLabel2=<html>Set <b>{0}</b> property using:
EditingMode_Hint=Choose the manner for specifying the property value
ACSD_EditingMode=N/A

# Tooltips of aligning buttons in form designer
CTL_AlignAction_l=Align left in column
CTL_AlignAction_r=Align right in column
CTL_AlignAction_u=Align top in row
CTL_AlignAction_d=Align bottom in row
CTL_AlignAction_ch=Center horizontally
CTL_AlignAction_cv=Center vertically
CTL_ResizeButton_h=Change horizontal resizability
CTL_ResizeButton_v=Change vertical resizability

# MetaComponentCreator
FMT_CreatorTableTitle=Title
FMT_CreatorComboBoxItem=Item
FMT_CreatorListItem=Item

ChangeVariableNameAction=Change Variable Name ...
NAME_CustomizeTableAction=Table Contents ...

#FormEditorCustomizer (Tools | Options > Java > GUI Builder)
KW_FormOptions=GUI Builder,Swing Component Options,GUI Internationalization,Form Options
Form_Editor=GUI Builder
Form_Editor_Tooltip=GUI Builder Options
Fold=F&old Generated Code
Assistant=&Show Assistant
Public_Modifier=public
Default_Modifier=<default>
Protected_Modifier=protected
Private_Modifier=private
Anonymous=Anonymous Inner Classes
InnerClass=One Inner Class
MainClass=Main Class
Generate_Components=Generate Components as:
Generate_Components_Hint=Determines whether fields or local variables should be generated for components.
Generate_Locals=&Local Variables in initComponents() Method
Generate_Locals_ACSD=N/A
Generate_Fields=&Fields in the Form Class
Generate_Fields_ACSD=N/A
Variable_Modifier=Variables &Modifier:
Layout_Style=La&yout Generation Style:
Component_Names=Set Component &Names:
Listener_Style=Listener &Generation Style:
Auto_I18n=&Automatic Internationalization:
Selection_Border_Color=Selection &Border Color:
Guiding_Line_Color=Guiding Line &Color:
Generate_FQN=Generate Fully &Qualified Names of Classes
Grid_Size=G&rid Size:
HINT_GRID_SIZE=The grid size used when designing forms with AbsoluteLayout or null layout.
Paint_Layout=&Visualize Additional Layout Information
Paint_Layout_Hint=For the Free Design mode determines whether to paint additional layout structures (anchors, alignment, gaps).
# A note at the bottom of the GUI Builder options panel.
# Keep the <html>, <b> and </b> tags, only translate the text in between.
Code_Settings_Hint=<html><b>Note:</b> The settings related to code generation are set to newly created GUI forms. For existing forms edit their root node properties.

MSG_Paiting_Exception=The following exception has been thrown during painting of the form. \
Use the Navigator window to fix or remove the problematic component.

MSG_DefaultPackageBean=A component class from the default package cannot be used outside of the default package.

TITLE_UserQuestion=Question

# code customization

# subst messages used as comments in editor in code customizer window
CustomCode-SubstSub=Code of sub-components - not shown here
CustomCode-SubstLayout=Layout setup code - not shown here
CustomCode-SubstSubAndLayout=Code of sub-components and layout - not shown here
CustomCode-SubstAdding=Code adding the component to the parent container - not shown here
CustomCode-SubstNoValue=property value not set

# used with CTL_GuardCombo_Default in a combo box
CustomCode-Creation=custom creation
CustomCode-Creation_Hint=Custom creation (instantiation) code is used for this component
CustomCode-Property=custom property
CustomCode-Property_Hint=Custom code is used for the value of this property
# parameter {0} is name of the property setter; the result is e.g. pre-setText
CustomCode-PreProperty_Format=pre-{0}
CustomCode-PreProperty_Hint=Code included before setting the property value
CustomCode-PostProperty_Format=post-{0}
CustomCode-PostProperty_Hint=Code included after setting the property value

CustomCode-AfterAllSet=after-all-set
CustomCode-PreCreation=pre-creation
CustomCode-PostCreation=post-create
CustomCode-PreInit=pre-init
CustomCode-PostInit=post-init
CustomCode-PreAdding=pre-adding
CustomCode-PostAdding=post-adding
CustomCode-PrePopulation=pre-population
CustomCode-PostPopulation=post-population
CustomCode-PostListeners=post-listeners
CustomCode-PreDeclaration=pre-declaration
CustomCode-PostDeclaration=post-declaration

# Code Customizer dialog
TITLE_CodeCustomizer=Code Customizer
CustomCodeView.accessibleDescription=A dialog for editing a custom (user) code for selected components
CTL_RenameTitle=Rename Component
CTL_RenameLabel=New Name
CTL_ApplyChangesLabel=In order to rename the component, the changes in the code need to be applied first.\n\
Do you want to proceed?
CTL_ApplyChangesTitle=Apply Changes
CustomCodeView.renameButton.text=&Rename...
CustomCodeView.renameButton.toolTipText=Rename the component's variable
CustomCodeView.selectComponentLabel.text=&Component:
CustomCodeView.componentCombo.toolTipText=Select component to customize the code for.
CustomCodeView.initCodeLabel.text=&Initialization code
CustomCodeView.declarationCodeLabel.text=Variable &declaration code
CustomCodeView.variableScopeLabel.text=&Variable:
CustomCodeView.variableAccessLabel.text=&Access:
CTL_GuardCombo_Default=default code
CTL_GuardCombo_Default_Hint=Default code is generated. You can switch to custom code using this combo box.
CTL_VariableCombo_Local=local
CTL_VariableCombo_Field=field
CTL_AccessCombo_package_private=<default>
CustomCodeView.finalCheckBox.accessibleDescription=N/A
CustomCodeView.staticCheckBox.accessibleDescription=N/A
CustomCodeView.transientCheckBox.accessibleDescription=N/A
CustomCodeView.volatileCheckBox.accessibleDescription=N/A

MSG_BindingCustomizer_ACSD=N/A
MSG_BindingCustomizer_Bind=<html>Bind property <b>{1}</b> ({2}) to:
MSG_BindingCustomizer_Source=Binding &Source\:
MSG_BindingCustomizer_Source_ACSD=N/A
MSG_BindingCustomizer_Expression=Binding &Expression\:
MSG_BindingCustomizer_Expression_ACSD=N/A
MSG_BindingCustomizer_DisplayExpression=&Display Expression\:
MSG_BindingCustomizer_DisplayExpression_ACSD=N/A
MSG_BindingCustomizer_OK=OK
MSG_BindingCustomizer_Cancel=Cancel
MSG_BindingCustomizer_Binding=Bind {0}.{1}
MSG_BindingCustomizer_None=<not bound>
MSG_Binding_SelectSubbindings=Choose source attributes you would like to appear in the table as columns.
MSG_BindingCustomizer_SelectAll=Select All
MSG_BindingCustomizer_DeselectAll=Deselect All
MSG_BindingCustomizer_Up=Up
MSG_BindingCustomizer_Down=Down
MSG_BindingCustomizer_BindingTab=Binding
MSG_BindingCustomizer_AdvancedTab=Advanced
MSG_BindingCustomizer_UpdateProperties=<html><b>Update Properties
MSG_BindingCustomizer_Update=Specify how the target and source are updated
MSG_BindingCustomizer_UpdateMode=Update &Mode\:
MSG_BindingCustomizer_UpdateMode_ACSD=N/A
MSG_BindingCustomizer_UpdateMode1=Always sync (read/write)
MSG_BindingCustomizer_UpdateMode2=Only read from source (read-only)
MSG_BindingCustomizer_UpdateMode3=Read from source once (read once)
MSG_BindingCustomizer_UpdateWhen=Update Source &When\:
MSG_BindingCustomizer_UpdateWhen_ACSD=N/A
MSG_BindingCustomizer_UpdateWhen1=Enter is pressed or focus is lost
MSG_BindingCustomizer_UpdateWhen2=Focus leaves
MSG_BindingCustomizer_UpdateWhen3=While typing
MSG_BindingCustomizer_IgnoreAdjusting=Ignore Adjusting
MSG_BindingCustomizer_SpecialValues=<html><b>Alternate Values
MSG_BindingCustomizer_DisplayValues=Use these values if the binding source value is null or incomplete
MSG_BindingCustomizer_NullValue=N&ull Source Value\:
MSG_BindingCustomizer_NullValue_ACSD=N/A
MSG_BindingCustomizer_IncompletePathValue=Un&readable Source Value\:
MSG_BindingCustomizer_IncompletePathValue_ACSD=N/A
MSG_BindingCustomizer_Conversion=<html><b>Type Conversion
MSG_BindingCustomizer_Validation=<html><b>Validation
MSG_BindingCustomizer_Validator=&Validator\:
MSG_BindingCustomizer_Validator_ACSD=N/A
MSG_BindingCustomizer_Converter=&Converter\:
MSG_BindingCustomizer_Converter_ACSD=N/A
MSG_BindingCustomizer_ValidationTxt=Validate changes using:
MSG_BindingCustomizer_ConversionTxt=Convert from the source to target using:
MSG_BindingCustomizer_ImportData=&Import Data to Form...
MSG_BindingCustomizer_ImportData_ACSD=N/A
MSG_BindingCustomizer_NullExpression=<use the binding source>
MSG_BindingCustomizer_NullDisplayExpression=<use element.toString()>
MSG_BindingCustomizer_Identification=<html><b>Identification
MSG_BindingCustomizer_Name=&Name\:
MSG_BindingCustomizer_Name_ACSD=N/A
MSG_BindingCustomizer_Please_Wait=Please Wait
MSG_BindingCustomizer_Importing=Importing ...
MSG_Binding_NullProperty=Null Value
MSG_Binding_IncompletePathProperty=Incomplete Path Value
MSG_Binding_Converter=Converter
MSG_Binding_Validator=Validator
MSG_Binding_Name=Name

#ListSelector
MSG_ListSelector_Available=&Available
MSG_ListSelector_Available_ACSN=Available Items
MSG_ListSelector_Available_ACSD=N/A
MSG_ListSelector_Selected=Se&lected
MSG_ListSelector_Selected_ACSN=Selected Items
MSG_ListSelector_Selected_ACSD=N/A
MSG_ListSelector_Up=&Up
MSG_ListSelector_Up_ACSD=N/A
MSG_ListSelector_Down=&Down
MSG_ListSelector_Down_ACSD=N/A
MSG_ListSelector_Add=>
MSG_ListSelector_Add_ACSD=N/A
MSG_ListSelector_AddAll=>>
MSG_ListSelector_AddAll_ACSD=N/A
MSG_ListSelector_Remove=<
MSG_ListSelector_Remove_ACSD=N/A
MSG_ListSelector_RemoveAll=<<
MSG_ListSelector_RemoveAll_ACSD=N/A

# Form Connection custom property editor
ConnectionCustomEditor.jLabel1.text=Get Value From\:
ConnectionCustomEditor.beanRadio.text=&Component\:
ConnectionCustomEditor.propertyRadio.text=&Property\:
ConnectionCustomEditor.methodRadio.text=&Method Call\:
ConnectionCustomEditor.propertyDetailsButton.text=...
ConnectionCustomEditor.methodDetailsButton.text=...

ConnectionCustomEditor.beanRadio.accessibleDescription=N/A
ConnectionCustomEditor.propertyRadio.accessibleDescription=N/A
ConnectionCustomEditor.methodRadio.accessibleDescription=N/A
ConnectionCustomEditor.beansCombo.accessibleDescription=N/A
ConnectionCustomEditor.propertyField.accessibleDescription=N/A
ConnectionCustomEditor.methodField.accessibleDescription=N/A
ConnectionCustomEditor.propertyDetailsButton.accessibleDescription=N/A
ConnectionCustomEditor.methodDetailsButton.accessibleDescription=N/A
ConnectionCustomEditor.beanCombo.accessibleDescription=N/A

CodeCustomEditor.codeLabel=Property Code:

# dialog asking about format version upgrade
TITLE_FormatUpgrade=GUI Form Format Upgrade
MSG_UpgradeQuestion=This GUI form comes from a previous version of the NetBeans IDE, but now \
needs to be upgraded to use the latest format version. After the upgrade you will need \
NetBeans IDE 7.4 (or newer) to open the form - it will no longer open in the older IDE versions.\n\n\
Do you want to continue to upgrade the form, or cancel (undo) the last change?
CTL_UpgradeOption=Upgrade
CTL_CancelOption=Cancel

# Null item display name for EnumEditor combobox
CTL_NullText=null

# Options export
Form.Options.Export.displayName=GUI Builder

# SwingAppLibDownloader
swingapp.searching_handle=Searching for \"swing-app-framework\" library on NetBeans plugin portal...
swingapp.resolve_title=Resolve \"swing-app-framework\" Reference Problem
swingapp.networkproblem_header=Unable to connect to the NetBeans plugin portal
swingapp.networkproblem_message=Check your proxy settings or try again later. \
The server may be unavailable at the moment. \
You may also want to make sure that your firewall is not blocking network traffic. \n\n\
If you have the missing \"swing-app-framework\" library, you can resolve the reference \
problem manually using Library Manager.
swingapp.proxy_button=&Proxy Settings...
swingapp.library_button=&Library Manager...
swingapp.tryagain_button=Try &Again
swingapp.nodownload_header=\"swing-app-framework\" library has not been downloaded
swingapp.nodownload_message=You can try to download \"swing-app-framework\" library again, or \n\n\
if you have the missing \"swing-app-framework\" library, you can resolve the reference \
problem manually using Library Manager.
swingapp.active_handle=Activating Swing Application Framework library
